<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE omdoc PUBLIC "-//OMDoc//DTD OMDoc V1.2//EN" "http://www.tzi.de/~hiben/omdoc/dtd/omdoc.dtd">
<omdoc xml:id="dodatek">
  <theory xml:id="Ident">
    <presentation for="Ident">
      <use format="Hets">[Ident,,0]</use>
    </presentation>
    <symbol role="sort" name="Ident4"/>
    <presentation for="Ident4">
      <use format="Hets">[Ident]</use>
    </presentation>
    <symbol name="in_data" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Ident" name="Ident4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="in_data">
      <use format="Hets">[in_data]</use>
    </presentation>
    <symbol name="out_data" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Ident" name="Ident4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="out_data">
      <use format="Hets">[out_data]</use>
    </presentation>
  </theory>
  <theory xml:id="simpleNum">
    <presentation for="simpleNum">
      <use format="Hets">[simpleNum,,0]</use>
    </presentation>
    <symbol role="sort" name="Num5"/>
    <presentation for="Num5">
      <use format="Hets">[Num]</use>
    </presentation>
    <adt>
      <sortdef name="Num5" type="free">
        <constructor name="N016"/>
        <constructor name="s6">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="simpleNum" name="Num5"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
      </sortdef>
    </adt>
    <symbol name="N015" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="simpleNum" name="Num5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N015">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="s4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="simpleNum" name="Num5"/>
            <OMS cd="simpleNum" name="Num5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="s4">
      <use format="Hets">[s]</use>
    </presentation>
    <axiom name="ga_disjoint_0_s">
      <CMP>
  free type Num ::= 0 | s( Num );
  free type Num ::= 0 | s( Num );
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="simpleNum" name="Num5"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMS cd="simpleNum" name="N015"/>
                <OMA>
                  <OMS cd="simpleNum" name="s4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="simpleNum" name="Num5"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_0_s">
      <use format="Hets">ga_disjoint_0_s</use>
    </presentation>
    <axiom name="ga_injective_s">
      <CMP>
  free type Num ::= 0 | s( Num );
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="simpleNum" name="Num5"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="simpleNum" name="Num5"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="simpleNum" name="s4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="simpleNum" name="Num5"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="simpleNum" name="s4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="simpleNum" name="Num5"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="simpleNum" name="Num5"/>
                  </OMATP>
                  <OMV name="X1"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="simpleNum" name="Num5"/>
                  </OMATP>
                  <OMV name="Y1"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective_s">
      <use format="Hets">ga_injective_s</use>
    </presentation>
  </theory>
  <theory xml:id="Syntax">
    <presentation for="Syntax">
      <use format="Hets">[Syntax,,0]</use>
    </presentation>
    <symbol role="sort" name="Prog"/>
    <presentation for="Prog">
      <use format="Hets">[Prog]</use>
    </presentation>
    <symbol role="sort" name="NumExp3"/>
    <presentation for="NumExp3">
      <use format="Hets">[NumExp]</use>
    </presentation>
    <symbol role="sort" name="Instr2"/>
    <presentation for="Instr2">
      <use format="Hets">[Instr]</use>
    </presentation>
    <symbol role="sort" name="Ident5"/>
    <presentation for="Ident5">
      <use format="Hets">[Ident]</use>
    </presentation>
    <symbol role="sort" name="BoolExp2"/>
    <presentation for="BoolExp2">
      <use format="Hets">[BoolExp]</use>
    </presentation>
    <adt>
      <sortdef name="BoolExp2" type="free">
        <constructor name="isZero32">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="Syntax" name="NumExp3"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
      </sortdef>
    </adt>
    <adt>
      <sortdef name="Instr2" type="free">
        <constructor name="compose15">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="Syntax" name="Instr2"/>
              </OMOBJ>
            </type>
          </argument>
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="Syntax" name="Instr2"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="empty21"/>
        <constructor name="if_then_else8">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="Syntax" name="BoolExp2"/>
              </OMOBJ>
            </type>
          </argument>
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="Syntax" name="Instr2"/>
              </OMOBJ>
            </type>
          </argument>
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="Syntax" name="Instr2"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="set21">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="Syntax" name="Ident5"/>
              </OMOBJ>
            </type>
          </argument>
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="Syntax" name="NumExp3"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="while8">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="Syntax" name="BoolExp2"/>
              </OMOBJ>
            </type>
          </argument>
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="Syntax" name="Instr2"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
      </sortdef>
    </adt>
    <adt>
      <sortdef name="NumExp3" type="free">
        <constructor name="N016"/>
        <constructor name="N115"/>
        <constructor name="__Plus__15">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="Syntax" name="NumExp3"/>
              </OMOBJ>
            </type>
          </argument>
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="Syntax" name="NumExp3"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="variable13">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="Syntax" name="Ident5"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
      </sortdef>
    </adt>
    <adt>
      <sortdef name="Prog" type="free">
        <constructor name="program14">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="Syntax" name="Instr2"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
      </sortdef>
    </adt>
    <symbol name="N04" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Syntax" name="NumExp3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N04">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N14" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Syntax" name="NumExp3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N14">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="__Plus__4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Syntax" name="NumExp3"/>
            <OMS cd="Syntax" name="NumExp3"/>
            <OMS cd="Syntax" name="NumExp3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__4">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="compose2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Syntax" name="Instr2"/>
            <OMS cd="Syntax" name="Instr2"/>
            <OMS cd="Syntax" name="Instr2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="compose2">
      <use format="Hets">[compose]</use>
    </presentation>
    <symbol name="empty6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Syntax" name="Instr2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="empty6">
      <use format="Hets">[empty]</use>
    </presentation>
    <symbol name="if_then_else2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Syntax" name="BoolExp2"/>
            <OMS cd="Syntax" name="Instr2"/>
            <OMS cd="Syntax" name="Instr2"/>
            <OMS cd="Syntax" name="Instr2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="if_then_else2">
      <use format="Hets">[if_then_else]</use>
    </presentation>
    <symbol name="isZero24" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Syntax" name="NumExp3"/>
            <OMS cd="Syntax" name="BoolExp2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero24">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="program" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Syntax" name="Instr2"/>
            <OMS cd="Syntax" name="Prog"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="program">
      <use format="Hets">[program]</use>
    </presentation>
    <symbol name="set6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Syntax" name="Ident5"/>
            <OMS cd="Syntax" name="NumExp3"/>
            <OMS cd="Syntax" name="Instr2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="set6">
      <use format="Hets">[set]</use>
    </presentation>
    <symbol name="variable3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Syntax" name="Ident5"/>
            <OMS cd="Syntax" name="NumExp3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="variable3">
      <use format="Hets">[variable]</use>
    </presentation>
    <symbol name="while2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Syntax" name="BoolExp2"/>
            <OMS cd="Syntax" name="Instr2"/>
            <OMS cd="Syntax" name="Instr2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="while2">
      <use format="Hets">[while]</use>
    </presentation>
    <axiom name="ga_disjoint_0_11">
      <CMP>
  free type NumExp ::= 0 | 1 | __+__(NumExp; NumExp) | variable( Ident );
  free type NumExp ::= 0 | 1 | __+__(NumExp; NumExp) | variable( Ident );
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMS cd="Syntax" name="N04"/>
              <OMS cd="Syntax" name="N14"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_0_11">
      <use format="Hets">ga_disjoint_0_1</use>
    </presentation>
    <axiom name="ga_disjoint_0___Plus__1">
      <CMP>
  free type NumExp ::= 0 | 1 | __+__(NumExp; NumExp) | variable( Ident );
  free type NumExp ::= 0 | 1 | __+__(NumExp; NumExp) | variable( Ident );
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="NumExp3"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="NumExp3"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMS cd="Syntax" name="N04"/>
                <OMA>
                  <OMS cd="Syntax" name="__Plus__4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_0___Plus__1">
      <use format="Hets">ga_disjoint_0___+__</use>
    </presentation>
    <axiom name="ga_disjoint_0_variable1">
      <CMP>
  free type NumExp ::= 0 | 1 | __+__(NumExp; NumExp) | variable( Ident );
  free type NumExp ::= 0 | 1 | __+__(NumExp; NumExp) | variable( Ident );
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Ident5"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMS cd="Syntax" name="N04"/>
                <OMA>
                  <OMS cd="Syntax" name="variable3"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Ident5"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_0_variable1">
      <use format="Hets">ga_disjoint_0_variable</use>
    </presentation>
    <axiom name="ga_disjoint_1___Plus__1">
      <CMP>
  free type NumExp ::= 0 | 1 | __+__(NumExp; NumExp) | variable( Ident );
  free type NumExp ::= 0 | 1 | __+__(NumExp; NumExp) | variable( Ident );
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="NumExp3"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="NumExp3"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMS cd="Syntax" name="N14"/>
                <OMA>
                  <OMS cd="Syntax" name="__Plus__4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_1___Plus__1">
      <use format="Hets">ga_disjoint_1___+__</use>
    </presentation>
    <axiom name="ga_disjoint_1_variable1">
      <CMP>
  free type NumExp ::= 0 | 1 | __+__(NumExp; NumExp) | variable( Ident );
  free type NumExp ::= 0 | 1 | __+__(NumExp; NumExp) | variable( Ident );
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Ident5"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMS cd="Syntax" name="N14"/>
                <OMA>
                  <OMS cd="Syntax" name="variable3"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Ident5"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_1_variable1">
      <use format="Hets">ga_disjoint_1_variable</use>
    </presentation>
    <axiom name="ga_disjoint___Plus___variable1">
      <CMP>
  free type NumExp ::= 0 | 1 | __+__(NumExp; NumExp) | variable( Ident );
  free type NumExp ::= 0 | 1 | __+__(NumExp; NumExp) | variable( Ident );
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="NumExp3"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="NumExp3"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Ident5"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Syntax" name="__Plus__4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Syntax" name="variable3"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Ident5"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint___Plus___variable1">
      <use format="Hets">ga_disjoint___+___variable</use>
    </presentation>
    <axiom name="ga_disjoint_compose_if_then_else1">
      <CMP>
  free type Instr ::= empty | compose(Instr; Instr) |
  				if_then_else( BoolExp; Instr; Instr );
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="BoolExp2"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="Y3"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Syntax" name="compose2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Syntax" name="if_then_else2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="BoolExp2"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="Y3"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_compose_if_then_else1">
      <use format="Hets">ga_disjoint_compose_if_then_else</use>
    </presentation>
    <axiom name="ga_disjoint_compose_set1">
      <CMP>
  free type Instr ::= empty | compose(Instr; Instr) |
  				set( Ident; NumExp ) |
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Ident5"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="NumExp3"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Syntax" name="compose2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Syntax" name="set6"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Ident5"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_compose_set1">
      <use format="Hets">ga_disjoint_compose_set</use>
    </presentation>
    <axiom name="ga_disjoint_compose_while1">
      <CMP>
  free type Instr ::= empty | compose(Instr; Instr) |
  				while( BoolExp; Instr ) |
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="BoolExp2"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Syntax" name="compose2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Syntax" name="while2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="BoolExp2"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_compose_while1">
      <use format="Hets">ga_disjoint_compose_while</use>
    </presentation>
    <axiom name="ga_disjoint_empty_compose1">
      <CMP>
  free type Instr ::= empty | compose(Instr; Instr) |
  free type Instr ::= empty | compose(Instr; Instr) |
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMS cd="Syntax" name="empty6"/>
                <OMA>
                  <OMS cd="Syntax" name="compose2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_empty_compose1">
      <use format="Hets">ga_disjoint_empty_compose</use>
    </presentation>
    <axiom name="ga_disjoint_empty_if_then_else1">
      <CMP>
  free type Instr ::= empty | compose(Instr; Instr) |
  				if_then_else( BoolExp; Instr; Instr );
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="BoolExp2"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="Y3"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMS cd="Syntax" name="empty6"/>
                <OMA>
                  <OMS cd="Syntax" name="if_then_else2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="BoolExp2"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="Y3"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_empty_if_then_else1">
      <use format="Hets">ga_disjoint_empty_if_then_else</use>
    </presentation>
    <axiom name="ga_disjoint_empty_set1">
      <CMP>
  free type Instr ::= empty | compose(Instr; Instr) |
  				set( Ident; NumExp ) |
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Ident5"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="NumExp3"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMS cd="Syntax" name="empty6"/>
                <OMA>
                  <OMS cd="Syntax" name="set6"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Ident5"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_empty_set1">
      <use format="Hets">ga_disjoint_empty_set</use>
    </presentation>
    <axiom name="ga_disjoint_empty_while1">
      <CMP>
  free type Instr ::= empty | compose(Instr; Instr) |
  				while( BoolExp; Instr ) |
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="BoolExp2"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMS cd="Syntax" name="empty6"/>
                <OMA>
                  <OMS cd="Syntax" name="while2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="BoolExp2"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_empty_while1">
      <use format="Hets">ga_disjoint_empty_while</use>
    </presentation>
    <axiom name="ga_disjoint_set_if_then_else1">
      <CMP>
  				set( Ident; NumExp ) |
  				if_then_else( BoolExp; Instr; Instr );
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Ident5"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="NumExp3"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="BoolExp2"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="Y3"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Syntax" name="set6"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Ident5"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Syntax" name="if_then_else2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="BoolExp2"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="Y3"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_set_if_then_else1">
      <use format="Hets">ga_disjoint_set_if_then_else</use>
    </presentation>
    <axiom name="ga_disjoint_set_while1">
      <CMP>
  				set( Ident; NumExp ) |
  				while( BoolExp; Instr ) |
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Ident5"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="NumExp3"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="BoolExp2"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Syntax" name="set6"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Ident5"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Syntax" name="while2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="BoolExp2"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_set_while1">
      <use format="Hets">ga_disjoint_set_while</use>
    </presentation>
    <axiom name="ga_disjoint_while_if_then_else1">
      <CMP>
  				while( BoolExp; Instr ) |
  				if_then_else( BoolExp; Instr; Instr );
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="BoolExp2"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="BoolExp2"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="Y3"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Syntax" name="while2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="BoolExp2"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Syntax" name="if_then_else2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="BoolExp2"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="Y3"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_while_if_then_else1">
      <use format="Hets">ga_disjoint_while_if_then_else</use>
    </presentation>
    <axiom name="ga_injective___Plus__1">
      <CMP>
  free type NumExp ::= 0 | 1 | __+__(NumExp; NumExp) | variable( Ident );
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="NumExp3"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="NumExp3"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="NumExp3"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="NumExp3"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Syntax" name="__Plus__4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Syntax" name="__Plus__4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective___Plus__1">
      <use format="Hets">ga_injective___+__</use>
    </presentation>
    <axiom name="ga_injective_compose1">
      <CMP>
  free type Instr ::= empty | compose(Instr; Instr) |
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Syntax" name="compose2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Syntax" name="compose2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective_compose1">
      <use format="Hets">ga_injective_compose</use>
    </presentation>
    <axiom name="ga_injective_if_then_else1">
      <CMP>
  				if_then_else( BoolExp; Instr; Instr );
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="BoolExp2"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="X3"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="BoolExp2"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="Y3"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Syntax" name="if_then_else2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="BoolExp2"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="X3"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Syntax" name="if_then_else2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="BoolExp2"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="Y3"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="BoolExp2"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="BoolExp2"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="X3"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="Y3"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective_if_then_else1">
      <use format="Hets">ga_injective_if_then_else</use>
    </presentation>
    <axiom name="ga_injective_isZero1">
      <CMP>
  free type BoolExp ::= isZero( NumExp);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="NumExp3"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="NumExp3"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Syntax" name="isZero24"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Syntax" name="isZero24"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Syntax" name="NumExp3"/>
                  </OMATP>
                  <OMV name="X1"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Syntax" name="NumExp3"/>
                  </OMATP>
                  <OMV name="Y1"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective_isZero1">
      <use format="Hets">ga_injective_isZero</use>
    </presentation>
    <axiom name="ga_injective_program">
      <CMP>
  free type Prog ::= program( Instr );
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Syntax" name="program"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Syntax" name="program"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Syntax" name="Instr2"/>
                  </OMATP>
                  <OMV name="X1"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Syntax" name="Instr2"/>
                  </OMATP>
                  <OMV name="Y1"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective_program">
      <use format="Hets">ga_injective_program</use>
    </presentation>
    <axiom name="ga_injective_set1">
      <CMP>
  				set( Ident; NumExp ) |
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Ident5"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="NumExp3"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Ident5"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="NumExp3"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Syntax" name="set6"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Ident5"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Syntax" name="set6"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Ident5"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Ident5"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Ident5"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective_set1">
      <use format="Hets">ga_injective_set</use>
    </presentation>
    <axiom name="ga_injective_variable1">
      <CMP>
  free type NumExp ::= 0 | 1 | __+__(NumExp; NumExp) | variable( Ident );
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Ident5"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Ident5"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Syntax" name="variable3"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Ident5"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Syntax" name="variable3"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Ident5"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Syntax" name="Ident5"/>
                  </OMATP>
                  <OMV name="X1"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Syntax" name="Ident5"/>
                  </OMATP>
                  <OMV name="Y1"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective_variable1">
      <use format="Hets">ga_injective_variable</use>
    </presentation>
    <axiom name="ga_injective_while1">
      <CMP>
  				while( BoolExp; Instr ) |
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="BoolExp2"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="BoolExp2"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Syntax" name="while2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="BoolExp2"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Syntax" name="while2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="BoolExp2"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="BoolExp2"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="BoolExp2"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective_while1">
      <use format="Hets">ga_injective_while</use>
    </presentation>
  </theory>
  <theory xml:id="Interpreter_E4">
    <presentation for="Interpreter_E4">
      <use format="Hets">[Interpreter,E,4]</use>
    </presentation>
    <imports from="#Ident"/>
    <imports from="#Syntax"/>
    <imports from="#simpleNum"/>
    <symbol role="sort" name="Num4"/>
    <presentation for="Num4">
      <use format="Hets">[Num]</use>
    </presentation>
    <symbol name="in_data7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Syntax" name="Ident5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="in_data7">
      <use format="Hets">[in_data]</use>
    </presentation>
    <symbol name="out_data7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Syntax" name="Ident5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="out_data7">
      <use format="Hets">[out_data]</use>
    </presentation>
    <symbol name="s3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Interpreter_E4" name="Num4"/>
            <OMS cd="Interpreter_E4" name="Num4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="s3">
      <use format="Hets">[s]</use>
    </presentation>
  </theory>
  <private for="Interpreter_E4">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Syntax" Type:"GlobalDef" Origin:"DGUnion"
From:"Ident" Type:"GlobalDef" Origin:"DGUnion"
From:"simpleNum" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="Interpreter_E3">
    <presentation for="Interpreter_E3">
      <use format="Hets">[Interpreter,E,3]</use>
    </presentation>
    <imports from="#Interpreter_E4"/>
    <symbol name="Meaning3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Syntax" name="Prog"/>
            <OMS cd="Interpreter_E4" name="Num4"/>
            <OMS cd="Interpreter_E4" name="Num4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="Meaning3">
      <use format="Hets">[Meaning]</use>
    </presentation>
  </theory>
  <private for="Interpreter_E3">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Interpreter_E4" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Interpreter_E2">
    <presentation for="Interpreter_E2">
      <use format="Hets">[Interpreter,E,2]</use>
    </presentation>
    <imports from="#Interpreter_E3"/>
    <symbol role="sort" name="Env24"/>
    <presentation for="Env24">
      <use format="Hets">[Env]</use>
    </presentation>
    <adt>
      <sortdef name="Env24" type="free">
        <constructor name="cons4">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="Syntax" name="Ident5"/>
              </OMOBJ>
            </type>
          </argument>
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="Interpreter_E4" name="Num4"/>
              </OMOBJ>
            </type>
          </argument>
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="Interpreter_E2" name="Env24"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="nil4"/>
      </sortdef>
    </adt>
    <symbol name="M13" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Syntax" name="BoolExp2"/>
            <OMS cd="Interpreter_E2" name="Env24"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M13">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="M32" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Syntax" name="NumExp3"/>
            <OMS cd="Interpreter_E2" name="Env24"/>
            <OMS cd="Interpreter_E4" name="Num4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M32">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="cons3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Syntax" name="Ident5"/>
            <OMS cd="Interpreter_E4" name="Num4"/>
            <OMS cd="Interpreter_E2" name="Env24"/>
            <OMS cd="Interpreter_E2" name="Env24"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="cons3">
      <use format="Hets">[cons]</use>
    </presentation>
    <symbol name="find23" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Syntax" name="Ident5"/>
            <OMS cd="Interpreter_E2" name="Env24"/>
            <OMS cd="Interpreter_E4" name="Num4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="find23">
      <use format="Hets">[find]</use>
    </presentation>
    <symbol name="nil3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Interpreter_E2" name="Env24"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="nil3">
      <use format="Hets">[nil]</use>
    </presentation>
    <axiom name="Ax10">
      <CMP>
        axioms
          M(0,E) = 0;
          M(1,E) = s(0);
          M(nE+nE&#39;,E) =  M(nE,E) + M(nE&#39;,E);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E2" name="Env24"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Interpreter_E2" name="M32"/>
                <OMS cd="Syntax" name="N14"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Interpreter_E2" name="Env24"/>
                  </OMATP>
                  <OMV name="E"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Interpreter_E4" name="s3"/>
                <OMS cd="Syntax" name="N04"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax10">
      <use format="Hets">Ax10</use>
    </presentation>
    <axiom name="Ax111">
      <CMP>
        axioms
          M(0,E) = 0;
          M(1,E) = s(0);
          M(nE+nE&#39;,E) =  M(nE,E) + M(nE&#39;,E);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E2" name="Env24"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="NumExp3"/>
                </OMATP>
                <OMV name="nE"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="NumExp3"/>
                </OMATP>
                <OMV name="nE&#39;"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Interpreter_E2" name="M32"/>
                <OMA>
                  <OMS cd="Syntax" name="__Plus__4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="nE"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="nE&#39;"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Interpreter_E2" name="Env24"/>
                  </OMATP>
                  <OMV name="E"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Syntax" name="__Plus__4"/>
                <OMA>
                  <OMS cd="Interpreter_E2" name="M32"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="nE"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E2" name="Env24"/>
                    </OMATP>
                    <OMV name="E"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Interpreter_E2" name="M32"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="nE&#39;"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E2" name="Env24"/>
                    </OMATP>
                    <OMV name="E"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax111">
      <use format="Hets">Ax11</use>
    </presentation>
    <axiom name="Ax121">
      <CMP>
        axioms
          M(0,E) = 0;
          M(1,E) = s(0);
          M(nE+nE&#39;,E) =  M(nE,E) + M(nE&#39;,E);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E2" name="Env24"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Ident5"/>
                </OMATP>
                <OMV name="id"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Interpreter_E2" name="M32"/>
                <OMA>
                  <OMS cd="Syntax" name="variable3"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Ident5"/>
                    </OMATP>
                    <OMV name="id"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Interpreter_E2" name="Env24"/>
                  </OMATP>
                  <OMV name="E"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Interpreter_E2" name="find23"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Syntax" name="Ident5"/>
                  </OMATP>
                  <OMV name="id"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Interpreter_E2" name="Env24"/>
                  </OMATP>
                  <OMV name="E"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax121">
      <use format="Hets">Ax12</use>
    </presentation>
    <axiom name="Ax131">
      <CMP>
        axioms
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E2" name="Env24"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="NumExp3"/>
                </OMATP>
                <OMV name="nE"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Interpreter_E2" name="M13"/>
                <OMA>
                  <OMS cd="Syntax" name="isZero24"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="nE"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Interpreter_E2" name="Env24"/>
                  </OMATP>
                  <OMV name="E"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Interpreter_E2" name="M32"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="nE"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E2" name="Env24"/>
                    </OMATP>
                    <OMV name="E"/>
                  </OMATTR>
                </OMA>
                <OMS cd="Syntax" name="N04"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax131">
      <use format="Hets">Ax13</use>
    </presentation>
    <axiom name="Ax41">
      <CMP>
          1 = s(0);
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMS cd="Syntax" name="N14"/>
            <OMA>
              <OMS cd="Interpreter_E4" name="s3"/>
              <OMS cd="Syntax" name="N04"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax41">
      <use format="Hets">Ax4</use>
    </presentation>
    <axiom name="Ax51">
      <CMP>
        axioms
          1 = s(0);
          0+n = n;
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E4" name="Num4"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Syntax" name="__Plus__4"/>
                <OMS cd="Syntax" name="N04"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Interpreter_E4" name="Num4"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E4" name="Num4"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax51">
      <use format="Hets">Ax5</use>
    </presentation>
    <axiom name="Ax61">
      <CMP>
        axioms
          1 = s(0);
          0+n = n;
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E4" name="Num4"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E4" name="Num4"/>
                </OMATP>
                <OMV name="n&#39;"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Syntax" name="__Plus__4"/>
                <OMA>
                  <OMS cd="Interpreter_E4" name="s3"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E4" name="Num4"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Interpreter_E4" name="Num4"/>
                  </OMATP>
                  <OMV name="n&#39;"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Interpreter_E4" name="s3"/>
                <OMA>
                  <OMS cd="Syntax" name="__Plus__4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E4" name="Num4"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E4" name="Num4"/>
                    </OMATP>
                    <OMV name="n&#39;"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax61">
      <use format="Hets">Ax6</use>
    </presentation>
    <axiom name="Ax71">
      <CMP>
        axioms
          find(id,cons(id,n,E)) = n;
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E2" name="Env24"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Ident5"/>
                </OMATP>
                <OMV name="id"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E4" name="Num4"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Interpreter_E2" name="find23"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Syntax" name="Ident5"/>
                  </OMATP>
                  <OMV name="id"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Interpreter_E2" name="cons3"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Ident5"/>
                    </OMATP>
                    <OMV name="id"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E4" name="Num4"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E2" name="Env24"/>
                    </OMATP>
                    <OMV name="E"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E4" name="Num4"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax71">
      <use format="Hets">Ax7</use>
    </presentation>
    <axiom name="Ax8">
      <CMP>
        axioms
          find(id,cons(id,n,E)) = n;
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E2" name="Env24"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Ident5"/>
                </OMATP>
                <OMV name="id"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Ident5"/>
                </OMATP>
                <OMV name="id&#39;"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E4" name="Num4"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Ident5"/>
                    </OMATP>
                    <OMV name="id"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Ident5"/>
                    </OMATP>
                    <OMV name="id&#39;"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Interpreter_E2" name="find23"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Ident5"/>
                    </OMATP>
                    <OMV name="id"/>
                  </OMATTR>
                  <OMA>
                    <OMS cd="Interpreter_E2" name="cons3"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Syntax" name="Ident5"/>
                      </OMATP>
                      <OMV name="id&#39;"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Interpreter_E4" name="Num4"/>
                      </OMATP>
                      <OMV name="n"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Interpreter_E2" name="Env24"/>
                      </OMATP>
                      <OMV name="E"/>
                    </OMATTR>
                  </OMA>
                </OMA>
                <OMA>
                  <OMS cd="Interpreter_E2" name="find23"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Ident5"/>
                    </OMATP>
                    <OMV name="id"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E2" name="Env24"/>
                    </OMATP>
                    <OMV name="E"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMS cd="casl" name="false"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax8">
      <use format="Hets">Ax8</use>
    </presentation>
    <axiom name="Ax9">
      <CMP>
        axioms
          M(0,E) = 0;
          M(1,E) = s(0);
          M(nE+nE&#39;,E) =  M(nE,E) + M(nE&#39;,E);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E2" name="Env24"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Interpreter_E2" name="M32"/>
                <OMS cd="Syntax" name="N04"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Interpreter_E2" name="Env24"/>
                  </OMATP>
                  <OMV name="E"/>
                </OMATTR>
              </OMA>
              <OMS cd="Syntax" name="N04"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax9">
      <use format="Hets">Ax9</use>
    </presentation>
    <axiom name="ga_disjoint_nil_cons">
      <CMP>
        free type Env ::= nil | cons(Ident; Num; Env);
        free type Env ::= nil | cons(Ident; Num; Env);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Ident5"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E4" name="Num4"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E2" name="Env24"/>
                </OMATP>
                <OMV name="Y3"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMS cd="Interpreter_E2" name="nil3"/>
                <OMA>
                  <OMS cd="Interpreter_E2" name="cons3"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Ident5"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E4" name="Num4"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E2" name="Env24"/>
                    </OMATP>
                    <OMV name="Y3"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_nil_cons">
      <use format="Hets">ga_disjoint_nil_cons</use>
    </presentation>
    <axiom name="ga_injective_cons">
      <CMP>
        free type Env ::= nil | cons(Ident; Num; Env);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Ident5"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E4" name="Num4"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E2" name="Env24"/>
                </OMATP>
                <OMV name="X3"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Ident5"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E4" name="Num4"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E2" name="Env24"/>
                </OMATP>
                <OMV name="Y3"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Interpreter_E2" name="cons3"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Ident5"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E4" name="Num4"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E2" name="Env24"/>
                    </OMATP>
                    <OMV name="X3"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Interpreter_E2" name="cons3"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Ident5"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E4" name="Num4"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E2" name="Env24"/>
                    </OMATP>
                    <OMV name="Y3"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Ident5"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Ident5"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E4" name="Num4"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E4" name="Num4"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E2" name="Env24"/>
                    </OMATP>
                    <OMV name="X3"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E2" name="Env24"/>
                    </OMATP>
                    <OMV name="Y3"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective_cons">
      <use format="Hets">ga_injective_cons</use>
    </presentation>
  </theory>
  <private for="Interpreter_E2">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Interpreter_E3" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Interpreter_E21">
    <presentation for="Interpreter_E21">
      <use format="Hets">[Interpreter,E,2]</use>
    </presentation>
    <imports from="#Interpreter_E2"/>
    <axiom name="Ax15">
      <CMP>
            axioms
              M(empty,E) = E;
              M(compose(I,I&#39;),E) = M(I&#39;,M(I,E));
              M(set(id,nE),E) = cons(id,M(nE,E),E);
              M(if_then_else(bE,I,I&#39;),E) = M(I,E) if M(bE,E);
              M(if_then_else(bE,I,I&#39;),E) = M(I&#39;,E) if not M(bE,E);
              M(while(bE,I),E) = M(while(bE,I),M(I,E)) if M(bE,E);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E2" name="Env24"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Interpreter_E2" name="M32"/>
                <OMS cd="Syntax" name="empty6"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Interpreter_E2" name="Env24"/>
                  </OMATP>
                  <OMV name="E"/>
                </OMATTR>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E2" name="Env24"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax15">
      <use format="Hets">Ax1</use>
    </presentation>
    <axiom name="Ax23">
      <CMP>
            axioms
              M(empty,E) = E;
              M(compose(I,I&#39;),E) = M(I&#39;,M(I,E));
              M(set(id,nE),E) = cons(id,M(nE,E),E);
              M(if_then_else(bE,I,I&#39;),E) = M(I,E) if M(bE,E);
              M(if_then_else(bE,I,I&#39;),E) = M(I&#39;,E) if not M(bE,E);
              M(while(bE,I),E) = M(while(bE,I),M(I,E)) if M(bE,E);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E2" name="Env24"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="I"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="I&#39;"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Interpreter_E2" name="M32"/>
                <OMA>
                  <OMS cd="Syntax" name="compose2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="I"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="I&#39;"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Interpreter_E2" name="Env24"/>
                  </OMATP>
                  <OMV name="E"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Interpreter_E2" name="M32"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Syntax" name="Instr2"/>
                  </OMATP>
                  <OMV name="I&#39;"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Interpreter_E2" name="M32"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="I"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E2" name="Env24"/>
                    </OMATP>
                    <OMV name="E"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax23">
      <use format="Hets">Ax2</use>
    </presentation>
    <axiom name="Ax31">
      <CMP>
            axioms
              M(empty,E) = E;
              M(compose(I,I&#39;),E) = M(I&#39;,M(I,E));
              M(set(id,nE),E) = cons(id,M(nE,E),E);
              M(if_then_else(bE,I,I&#39;),E) = M(I,E) if M(bE,E);
              M(if_then_else(bE,I,I&#39;),E) = M(I&#39;,E) if not M(bE,E);
              M(while(bE,I),E) = M(while(bE,I),M(I,E)) if M(bE,E);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E2" name="Env24"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Ident5"/>
                </OMATP>
                <OMV name="id"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="NumExp3"/>
                </OMATP>
                <OMV name="nE"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Interpreter_E2" name="M32"/>
                <OMA>
                  <OMS cd="Syntax" name="set6"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Ident5"/>
                    </OMATP>
                    <OMV name="id"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="nE"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Interpreter_E2" name="Env24"/>
                  </OMATP>
                  <OMV name="E"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Interpreter_E2" name="cons3"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Syntax" name="Ident5"/>
                  </OMATP>
                  <OMV name="id"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Interpreter_E2" name="M32"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="NumExp3"/>
                    </OMATP>
                    <OMV name="nE"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E2" name="Env24"/>
                    </OMATP>
                    <OMV name="E"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Interpreter_E2" name="Env24"/>
                  </OMATP>
                  <OMV name="E"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax31">
      <use format="Hets">Ax3</use>
    </presentation>
    <axiom name="Ax42">
      <CMP>
            axioms
              M(empty,E) = E;
              M(compose(I,I&#39;),E) = M(I&#39;,M(I,E));
              M(set(id,nE),E) = cons(id,M(nE,E),E);
              M(if_then_else(bE,I,I&#39;),E) = M(I,E) if M(bE,E);
              M(if_then_else(bE,I,I&#39;),E) = M(I&#39;,E) if not M(bE,E);
              M(while(bE,I),E) = M(while(bE,I),M(I,E)) if M(bE,E);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E2" name="Env24"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="I"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="I&#39;"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="BoolExp2"/>
                </OMATP>
                <OMV name="bE"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Interpreter_E2" name="M13"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Syntax" name="BoolExp2"/>
                  </OMATP>
                  <OMV name="bE"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Interpreter_E2" name="Env24"/>
                  </OMATP>
                  <OMV name="E"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Interpreter_E2" name="M32"/>
                  <OMA>
                    <OMS cd="Syntax" name="if_then_else2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Syntax" name="BoolExp2"/>
                      </OMATP>
                      <OMV name="bE"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Syntax" name="Instr2"/>
                      </OMATP>
                      <OMV name="I"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Syntax" name="Instr2"/>
                      </OMATP>
                      <OMV name="I&#39;"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E2" name="Env24"/>
                    </OMATP>
                    <OMV name="E"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Interpreter_E2" name="M32"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="I"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E2" name="Env24"/>
                    </OMATP>
                    <OMV name="E"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMS cd="casl" name="false"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax42">
      <use format="Hets">Ax4</use>
    </presentation>
    <axiom name="Ax52">
      <CMP>
            axioms
              M(empty,E) = E;
              M(compose(I,I&#39;),E) = M(I&#39;,M(I,E));
              M(set(id,nE),E) = cons(id,M(nE,E),E);
              M(if_then_else(bE,I,I&#39;),E) = M(I,E) if M(bE,E);
              M(if_then_else(bE,I,I&#39;),E) = M(I&#39;,E) if not M(bE,E);
              M(while(bE,I),E) = M(while(bE,I),M(I,E)) if M(bE,E);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E2" name="Env24"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="I"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="I&#39;"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="BoolExp2"/>
                </OMATP>
                <OMV name="bE"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Interpreter_E2" name="M13"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="BoolExp2"/>
                    </OMATP>
                    <OMV name="bE"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E2" name="Env24"/>
                    </OMATP>
                    <OMV name="E"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Interpreter_E2" name="M32"/>
                  <OMA>
                    <OMS cd="Syntax" name="if_then_else2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Syntax" name="BoolExp2"/>
                      </OMATP>
                      <OMV name="bE"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Syntax" name="Instr2"/>
                      </OMATP>
                      <OMV name="I"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Syntax" name="Instr2"/>
                      </OMATP>
                      <OMV name="I&#39;"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E2" name="Env24"/>
                    </OMATP>
                    <OMV name="E"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Interpreter_E2" name="M32"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="Instr2"/>
                    </OMATP>
                    <OMV name="I&#39;"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E2" name="Env24"/>
                    </OMATP>
                    <OMV name="E"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMS cd="casl" name="false"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax52">
      <use format="Hets">Ax5</use>
    </presentation>
    <axiom name="Ax62">
      <CMP>
            axioms
              M(empty,E) = E;
              M(compose(I,I&#39;),E) = M(I&#39;,M(I,E));
              M(set(id,nE),E) = cons(id,M(nE,E),E);
              M(if_then_else(bE,I,I&#39;),E) = M(I,E) if M(bE,E);
              M(if_then_else(bE,I,I&#39;),E) = M(I&#39;,E) if not M(bE,E);
              M(while(bE,I),E) = M(while(bE,I),M(I,E)) if M(bE,E);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E2" name="Env24"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="I"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="BoolExp2"/>
                </OMATP>
                <OMV name="bE"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Interpreter_E2" name="M13"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Syntax" name="BoolExp2"/>
                  </OMATP>
                  <OMV name="bE"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Interpreter_E2" name="Env24"/>
                  </OMATP>
                  <OMV name="E"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Interpreter_E2" name="M32"/>
                  <OMA>
                    <OMS cd="Syntax" name="while2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Syntax" name="BoolExp2"/>
                      </OMATP>
                      <OMV name="bE"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Syntax" name="Instr2"/>
                      </OMATP>
                      <OMV name="I"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E2" name="Env24"/>
                    </OMATP>
                    <OMV name="E"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Interpreter_E2" name="M32"/>
                  <OMA>
                    <OMS cd="Syntax" name="while2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Syntax" name="BoolExp2"/>
                      </OMATP>
                      <OMV name="bE"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Syntax" name="Instr2"/>
                      </OMATP>
                      <OMV name="I"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="Interpreter_E2" name="M32"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Syntax" name="Instr2"/>
                      </OMATP>
                      <OMV name="I"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Interpreter_E2" name="Env24"/>
                      </OMATP>
                      <OMV name="E"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
              <OMS cd="casl" name="false"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax62">
      <use format="Hets">Ax6</use>
    </presentation>
    <axiom name="Ax72">
      <CMP>
            axioms
              M(empty,E) = E;
              M(compose(I,I&#39;),E) = M(I&#39;,M(I,E));
              M(set(id,nE),E) = cons(id,M(nE,E),E);
              M(if_then_else(bE,I,I&#39;),E) = M(I,E) if M(bE,E);
              M(if_then_else(bE,I,I&#39;),E) = M(I&#39;,E) if not M(bE,E);
              M(while(bE,I),E) = M(while(bE,I),M(I,E)) if M(bE,E);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E2" name="Env24"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="Instr2"/>
                </OMATP>
                <OMV name="I"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Syntax" name="BoolExp2"/>
                </OMATP>
                <OMV name="bE"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Interpreter_E2" name="M13"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Syntax" name="BoolExp2"/>
                    </OMATP>
                    <OMV name="bE"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E2" name="Env24"/>
                    </OMATP>
                    <OMV name="E"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Interpreter_E2" name="M32"/>
                  <OMA>
                    <OMS cd="Syntax" name="while2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Syntax" name="BoolExp2"/>
                      </OMATP>
                      <OMV name="bE"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Syntax" name="Instr2"/>
                      </OMATP>
                      <OMV name="I"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E2" name="Env24"/>
                    </OMATP>
                    <OMV name="E"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Interpreter_E2" name="Env24"/>
                  </OMATP>
                  <OMV name="E"/>
                </OMATTR>
              </OMA>
              <OMS cd="casl" name="false"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax72">
      <use format="Hets">Ax7</use>
    </presentation>
  </theory>
  <private for="Interpreter_E21">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Interpreter_E2" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Interpreter_E1">
    <presentation for="Interpreter_E1">
      <use format="Hets">[Interpreter,E,1]</use>
    </presentation>
    <symbol role="sort" name="Prog14"/>
    <presentation for="Prog14">
      <use format="Hets">[Prog]</use>
    </presentation>
    <symbol role="sort" name="NumExp12"/>
    <presentation for="NumExp12">
      <use format="Hets">[NumExp]</use>
    </presentation>
    <symbol role="sort" name="Num3"/>
    <presentation for="Num3">
      <use format="Hets">[Num]</use>
    </presentation>
    <symbol role="sort" name="Instr14"/>
    <presentation for="Instr14">
      <use format="Hets">[Instr]</use>
    </presentation>
    <symbol role="sort" name="Ident18"/>
    <presentation for="Ident18">
      <use format="Hets">[Ident]</use>
    </presentation>
    <symbol role="sort" name="Env23"/>
    <presentation for="Env23">
      <use format="Hets">[Env]</use>
    </presentation>
    <symbol role="sort" name="BoolExp9"/>
    <presentation for="BoolExp9">
      <use format="Hets">[BoolExp]</use>
    </presentation>
    <symbol name="M12" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Interpreter_E1" name="BoolExp9"/>
            <OMS cd="Interpreter_E1" name="Env23"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M12">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="N014" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Interpreter_E1" name="Num3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N014">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N014" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Interpreter_E1" name="NumExp12"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N014">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N114" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Interpreter_E1" name="Num3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N114">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="N114" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Interpreter_E1" name="NumExp12"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N114">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="M31" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Interpreter_E1" name="NumExp12"/>
            <OMS cd="Interpreter_E1" name="Env23"/>
            <OMS cd="Interpreter_E1" name="Num3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M31">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="M31" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Interpreter_E1" name="Instr14"/>
            <OMS cd="Interpreter_E1" name="Env23"/>
            <OMS cd="Interpreter_E1" name="Env23"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M31">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="Meaning2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Interpreter_E1" name="Prog14"/>
            <OMS cd="Interpreter_E1" name="Num3"/>
            <OMS cd="Interpreter_E1" name="Num3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="Meaning2">
      <use format="Hets">[Meaning]</use>
    </presentation>
    <symbol name="__Plus__14" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Interpreter_E1" name="Num3"/>
            <OMS cd="Interpreter_E1" name="Num3"/>
            <OMS cd="Interpreter_E1" name="Num3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__14">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__Plus__14" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Interpreter_E1" name="NumExp12"/>
            <OMS cd="Interpreter_E1" name="NumExp12"/>
            <OMS cd="Interpreter_E1" name="NumExp12"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__14">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="compose14" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Interpreter_E1" name="Instr14"/>
            <OMS cd="Interpreter_E1" name="Instr14"/>
            <OMS cd="Interpreter_E1" name="Instr14"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="compose14">
      <use format="Hets">[compose]</use>
    </presentation>
    <symbol name="cons2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Interpreter_E1" name="Ident18"/>
            <OMS cd="Interpreter_E1" name="Num3"/>
            <OMS cd="Interpreter_E1" name="Env23"/>
            <OMS cd="Interpreter_E1" name="Env23"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="cons2">
      <use format="Hets">[cons]</use>
    </presentation>
    <symbol name="empty20" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Interpreter_E1" name="Instr14"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="empty20">
      <use format="Hets">[empty]</use>
    </presentation>
    <symbol name="find22" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Interpreter_E1" name="Ident18"/>
            <OMS cd="Interpreter_E1" name="Env23"/>
            <OMS cd="Interpreter_E1" name="Num3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="find22">
      <use format="Hets">[find]</use>
    </presentation>
    <symbol name="if_then_else7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Interpreter_E1" name="BoolExp9"/>
            <OMS cd="Interpreter_E1" name="Instr14"/>
            <OMS cd="Interpreter_E1" name="Instr14"/>
            <OMS cd="Interpreter_E1" name="Instr14"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="if_then_else7">
      <use format="Hets">[if_then_else]</use>
    </presentation>
    <symbol name="in_data6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Interpreter_E1" name="Ident18"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="in_data6">
      <use format="Hets">[in_data]</use>
    </presentation>
    <symbol name="isZero31" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Interpreter_E1" name="NumExp12"/>
            <OMS cd="Interpreter_E1" name="BoolExp9"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero31">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="nil2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Interpreter_E1" name="Env23"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="nil2">
      <use format="Hets">[nil]</use>
    </presentation>
    <symbol name="out_data6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Interpreter_E1" name="Ident18"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="out_data6">
      <use format="Hets">[out_data]</use>
    </presentation>
    <symbol name="program13" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Interpreter_E1" name="Instr14"/>
            <OMS cd="Interpreter_E1" name="Prog14"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="program13">
      <use format="Hets">[program]</use>
    </presentation>
    <symbol name="s2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Interpreter_E1" name="Num3"/>
            <OMS cd="Interpreter_E1" name="Num3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="s2">
      <use format="Hets">[s]</use>
    </presentation>
    <symbol name="set20" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Interpreter_E1" name="Ident18"/>
            <OMS cd="Interpreter_E1" name="NumExp12"/>
            <OMS cd="Interpreter_E1" name="Instr14"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="set20">
      <use format="Hets">[set]</use>
    </presentation>
    <symbol name="variable12" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Interpreter_E1" name="Ident18"/>
            <OMS cd="Interpreter_E1" name="NumExp12"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="variable12">
      <use format="Hets">[variable]</use>
    </presentation>
    <symbol name="while7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Interpreter_E1" name="BoolExp9"/>
            <OMS cd="Interpreter_E1" name="Instr14"/>
            <OMS cd="Interpreter_E1" name="Instr14"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="while7">
      <use format="Hets">[while]</use>
    </presentation>
  </theory>
  <private for="Interpreter_E1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Interpreter_E21" Type:"FreeDef EmptyNode" Origin:"DGFree"
]]></data>
  </private>
  <theory xml:id="Interpreter">
    <presentation for="Interpreter">
      <use format="Hets">[Interpreter,,0]</use>
    </presentation>
    <imports from="#Interpreter_E1"/>
    <axiom name="Ax14">
      <CMP>
        axioms
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E1" name="Instr14"/>
                </OMATP>
                <OMV name="I"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Interpreter_E1" name="Num3"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Interpreter_E1" name="Meaning2"/>
                <OMA>
                  <OMS cd="Interpreter_E1" name="program13"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E1" name="Instr14"/>
                    </OMATP>
                    <OMV name="I"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Interpreter_E1" name="Num3"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Interpreter_E1" name="find22"/>
                <OMS cd="Interpreter_E1" name="out_data6"/>
                <OMA>
                  <OMS cd="Interpreter_E1" name="M31"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Interpreter_E1" name="Instr14"/>
                    </OMATP>
                    <OMV name="I"/>
                  </OMATTR>
                  <OMA>
                    <OMS cd="Interpreter_E1" name="cons2"/>
                    <OMS cd="Interpreter_E1" name="in_data6"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Interpreter_E1" name="Num3"/>
                      </OMATP>
                      <OMV name="n"/>
                    </OMATTR>
                    <OMS cd="Interpreter_E1" name="nil2"/>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax14">
      <use format="Hets">Ax1</use>
    </presentation>
  </theory>
  <private for="Interpreter">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Interpreter_E1" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="TotalOrder">
    <presentation for="TotalOrder">
      <use format="Hets">[TotalOrder,,0]</use>
    </presentation>
    <symbol role="sort" name="Elem5"/>
    <presentation for="Elem5">
      <use format="Hets">[Elem]</use>
    </presentation>
    <symbol name="__Lower__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="TotalOrder" name="Elem5"/>
            <OMS cd="TotalOrder" name="Elem5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Lower__">
      <use format="Hets">[__,&#60;,__]</use>
    </presentation>
    <axiom name="Ax19">
      <CMP>
  axioms
    e &#60; e;
    e &#60; e&#39; /\ e&#39; &#60; e&#39;&#39; =&#62; e &#60; e&#39;&#39;;
    e &#60; e&#39; \/ e&#39; &#60; e;
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TotalOrder" name="Elem5"/>
                </OMATP>
                <OMV name="e"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="predication"/>
              <OMS cd="TotalOrder" name="__Lower__"/>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TotalOrder" name="Elem5"/>
                </OMATP>
                <OMV name="e"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TotalOrder" name="Elem5"/>
                </OMATP>
                <OMV name="e"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax19">
      <use format="Hets">Ax1</use>
    </presentation>
    <axiom name="Ax27">
      <CMP>
  axioms
    e &#60; e;
    e &#60; e&#39; /\ e&#39; &#60; e&#39;&#39; =&#62; e &#60; e&#39;&#39;;
    e &#60; e&#39; \/ e&#39; &#60; e;
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TotalOrder" name="Elem5"/>
                </OMATP>
                <OMV name="e"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TotalOrder" name="Elem5"/>
                </OMATP>
                <OMV name="e&#39;"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TotalOrder" name="Elem5"/>
                </OMATP>
                <OMV name="e&#39;&#39;"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="TotalOrder" name="__Lower__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="TotalOrder" name="Elem5"/>
                    </OMATP>
                    <OMV name="e"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="TotalOrder" name="Elem5"/>
                    </OMATP>
                    <OMV name="e&#39;"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="TotalOrder" name="__Lower__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="TotalOrder" name="Elem5"/>
                    </OMATP>
                    <OMV name="e&#39;"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="TotalOrder" name="Elem5"/>
                    </OMATP>
                    <OMV name="e&#39;&#39;"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="TotalOrder" name="__Lower__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TotalOrder" name="Elem5"/>
                  </OMATP>
                  <OMV name="e"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TotalOrder" name="Elem5"/>
                  </OMATP>
                  <OMV name="e&#39;&#39;"/>
                </OMATTR>
              </OMA>
              <OMS cd="casl" name="true"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax27">
      <use format="Hets">Ax2</use>
    </presentation>
    <axiom name="Ax35">
      <CMP>
  axioms
    e &#60; e;
    e &#60; e&#39; /\ e&#39; &#60; e&#39;&#39; =&#62; e &#60; e&#39;&#39;;
    e &#60; e&#39; \/ e&#39; &#60; e;
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TotalOrder" name="Elem5"/>
                </OMATP>
                <OMV name="e"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TotalOrder" name="Elem5"/>
                </OMATP>
                <OMV name="e&#39;"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="disjunction"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="TotalOrder" name="__Lower__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TotalOrder" name="Elem5"/>
                  </OMATP>
                  <OMV name="e"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TotalOrder" name="Elem5"/>
                  </OMATP>
                  <OMV name="e&#39;"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="TotalOrder" name="__Lower__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TotalOrder" name="Elem5"/>
                  </OMATP>
                  <OMV name="e&#39;"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TotalOrder" name="Elem5"/>
                  </OMATP>
                  <OMV name="e"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax35">
      <use format="Hets">Ax3</use>
    </presentation>
    <axiom name="Ax44">
      <CMP>
  axioms
    e &#60; e;
    e &#60; e&#39; /\ e&#39; &#60; e&#39;&#39; =&#62; e &#60; e&#39;&#39;;
    e &#60; e&#39; \/ e&#39; &#60; e;
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TotalOrder" name="Elem5"/>
                </OMATP>
                <OMV name="e"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TotalOrder" name="Elem5"/>
                </OMATP>
                <OMV name="e&#39;"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="TotalOrder" name="__Lower__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="TotalOrder" name="Elem5"/>
                    </OMATP>
                    <OMV name="e"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="TotalOrder" name="Elem5"/>
                    </OMATP>
                    <OMV name="e&#39;"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="TotalOrder" name="__Lower__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="TotalOrder" name="Elem5"/>
                    </OMATP>
                    <OMV name="e&#39;"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="TotalOrder" name="Elem5"/>
                    </OMATP>
                    <OMV name="e"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TotalOrder" name="Elem5"/>
                  </OMATP>
                  <OMV name="e"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TotalOrder" name="Elem5"/>
                  </OMATP>
                  <OMV name="e&#39;"/>
                </OMATTR>
              </OMA>
              <OMS cd="casl" name="true"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax44">
      <use format="Hets">Ax4</use>
    </presentation>
  </theory>
  <theory xml:id="OrderedIdent_U1">
    <presentation for="OrderedIdent_U1">
      <use format="Hets">[OrderedIdent,U,1]</use>
    </presentation>
    <imports from="#TotalOrder">
      <morphism hiding="Elem __&#60;__">
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder" name="Elem5"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="OrderedIdent_U1" name="Ident19"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <symbol role="sort" name="Ident19"/>
    <presentation for="Ident19">
      <use format="Hets">[Ident]</use>
    </presentation>
  </theory>
  <private for="OrderedIdent_U1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"TotalOrder" Type:"GlobalDef" Origin:"DGTranslation"
]]></data>
  </private>
  <theory xml:id="OrderedIdent">
    <presentation for="OrderedIdent">
      <use format="Hets">[OrderedIdent,,0]</use>
    </presentation>
    <imports from="#Ident"/>
    <imports from="#OrderedIdent_U1"/>
    <symbol name="__Lower__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Ident" name="Ident4"/>
            <OMS cd="Ident" name="Ident4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Lower__2">
      <use format="Hets">[__,&#60;,__]</use>
    </presentation>
  </theory>
  <private for="OrderedIdent">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Ident" Type:"GlobalDef" Origin:"DGUnion"
From:"OrderedIdent_U1" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="OrderedIdentInterpreter">
    <presentation for="OrderedIdentInterpreter">
      <use format="Hets">[OrderedIdentInterpreter,,0]</use>
    </presentation>
    <imports from="#Interpreter"/>
    <imports from="#OrderedIdent"/>
    <symbol name="__Lower__3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Interpreter_E1" name="Ident18"/>
            <OMS cd="Interpreter_E1" name="Ident18"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Lower__3">
      <use format="Hets">[__,&#60;,__]</use>
    </presentation>
  </theory>
  <private for="OrderedIdentInterpreter">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Interpreter" Type:"GlobalDef" Origin:"DGUnion"
From:"OrderedIdent" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="Num_E2">
    <presentation for="Num_E2">
      <use format="Hets">[Num,E,2]</use>
    </presentation>
    <symbol role="sort" name="NumSQuote"/>
    <presentation for="NumSQuote">
      <use format="Hets">[Num&#39;]</use>
    </presentation>
    <symbol name="isZero" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Num_E2" name="NumSQuote"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="N0" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Num_E2" name="NumSQuote"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N0">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Num_E2" name="NumSQuote"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N1">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="__Plus__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Num_E2" name="NumSQuote"/>
            <OMS cd="Num_E2" name="NumSQuote"/>
            <OMS cd="Num_E2" name="NumSQuote"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__">
      <use format="Hets">[__,+,__]</use>
    </presentation>
  </theory>
  <theory xml:id="Num_E1">
    <presentation for="Num_E1">
      <use format="Hets">[Num,E,1]</use>
    </presentation>
    <imports from="#Num_E2"/>
    <symbol name="OK" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Num_E2" name="NumSQuote"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="OK">
      <use format="Hets">[OK]</use>
    </presentation>
    <axiom name="Ax18">
      <CMP>
        OK(0);
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Num_E1" name="OK"/>
            <OMS cd="Num_E2" name="N0"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax18">
      <use format="Hets">Ax1</use>
    </presentation>
    <axiom name="Ax26">
      <CMP>
        OK(1);
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Num_E1" name="OK"/>
            <OMS cd="Num_E2" name="N1"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax26">
      <use format="Hets">Ax2</use>
    </presentation>
    <axiom name="Ax34">
      <CMP>
      axioms
        OK(0);
        OK(1);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Num_E2" name="NumSQuote"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Num_E2" name="NumSQuote"/>
                </OMATP>
                <OMV name="n&#39;"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Num_E1" name="OK"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Num_E2" name="NumSQuote"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Num_E1" name="OK"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Num_E2" name="NumSQuote"/>
                    </OMATP>
                    <OMV name="n&#39;"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Num_E1" name="OK"/>
                <OMA>
                  <OMS cd="Num_E2" name="__Plus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Num_E2" name="NumSQuote"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Num_E2" name="NumSQuote"/>
                    </OMATP>
                    <OMV name="n&#39;"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMS cd="casl" name="true"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax34">
      <use format="Hets">Ax3</use>
    </presentation>
  </theory>
  <private for="Num_E1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Num_E2" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Num">
    <presentation for="Num">
      <use format="Hets">[Num,,0]</use>
    </presentation>
    <imports from="#Num_E1"/>
    <axiom name="Ax17">
      <CMP>
       axioms
         OK(n) =&#62; 0+n=n;
         OK(n)/\ OK(n&#39;) =&#62; (n+1)+n&#39; = (n+n&#39;)+1;
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Num_E2" name="NumSQuote"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Num_E1" name="OK"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Num_E2" name="NumSQuote"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Num_E2" name="__Plus__"/>
                  <OMS cd="Num_E2" name="N0"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Num_E2" name="NumSQuote"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Num_E2" name="NumSQuote"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
              <OMS cd="casl" name="true"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax17">
      <use format="Hets">Ax1</use>
    </presentation>
    <axiom name="Ax25">
      <CMP>
       axioms
         OK(n) =&#62; 0+n=n;
         OK(n)/\ OK(n&#39;) =&#62; (n+1)+n&#39; = (n+n&#39;)+1;
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Num_E2" name="NumSQuote"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Num_E2" name="NumSQuote"/>
                </OMATP>
                <OMV name="n&#39;"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Num_E1" name="OK"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Num_E2" name="NumSQuote"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Num_E1" name="OK"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Num_E2" name="NumSQuote"/>
                    </OMATP>
                    <OMV name="n&#39;"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Num_E2" name="__Plus__"/>
                  <OMA>
                    <OMS cd="Num_E2" name="__Plus__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Num_E2" name="NumSQuote"/>
                      </OMATP>
                      <OMV name="n"/>
                    </OMATTR>
                    <OMS cd="Num_E2" name="N1"/>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Num_E2" name="NumSQuote"/>
                    </OMATP>
                    <OMV name="n&#39;"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Num_E2" name="__Plus__"/>
                  <OMA>
                    <OMS cd="Num_E2" name="__Plus__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Num_E2" name="NumSQuote"/>
                      </OMATP>
                      <OMV name="n"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Num_E2" name="NumSQuote"/>
                      </OMATP>
                      <OMV name="n&#39;"/>
                    </OMATTR>
                  </OMA>
                  <OMS cd="Num_E2" name="N1"/>
                </OMA>
              </OMA>
              <OMS cd="casl" name="true"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax25">
      <use format="Hets">Ax2</use>
    </presentation>
    <axiom name="Ax33">
      <CMP>
       axioms
         OK(n) =&#62; 0+n=n;
         OK(n)/\ OK(n&#39;) =&#62; (n+1)+n&#39; = (n+n&#39;)+1;
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Num_E2" name="NumSQuote"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Num_E1" name="OK"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Num_E2" name="NumSQuote"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="equivalence"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Num_E2" name="isZero"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Num_E2" name="NumSQuote"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Num_E2" name="NumSQuote"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                  <OMS cd="Num_E2" name="N0"/>
                </OMA>
              </OMA>
              <OMS cd="casl" name="true"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax33">
      <use format="Hets">Ax3</use>
    </presentation>
  </theory>
  <private for="Num">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Num_E1" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="simpleNumAndNum_E1">
    <presentation for="simpleNumAndNum_E1">
      <use format="Hets">[simpleNumAndNum,E,1]</use>
    </presentation>
    <imports from="#Num"/>
    <imports from="#simpleNum"/>
    <symbol role="sort" name="Num6"/>
    <presentation for="Num6">
      <use format="Hets">[Num]</use>
    </presentation>
    <symbol name="s5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="simpleNumAndNum_E1" name="Num6"/>
            <OMS cd="simpleNumAndNum_E1" name="Num6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="s5">
      <use format="Hets">[s]</use>
    </presentation>
  </theory>
  <private for="simpleNumAndNum_E1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Num" Type:"GlobalDef" Origin:"DGUnion"
From:"simpleNum" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="simpleNumAndNum">
    <presentation for="simpleNumAndNum">
      <use format="Hets">[simpleNumAndNum,,0]</use>
    </presentation>
    <imports from="#simpleNumAndNum_E1"/>
    <symbol name="inject" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="simpleNumAndNum_E1" name="Num6"/>
            <OMS cd="Num_E2" name="NumSQuote"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="inject">
      <use format="Hets">[inject]</use>
    </presentation>
    <symbol name="project" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Num_E2" name="NumSQuote"/>
            <OMS cd="simpleNumAndNum_E1" name="Num6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="project">
      <use format="Hets">[project]</use>
    </presentation>
    <axiom name="Ax110">
      <CMP>
      inject(0) = 0;
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMA>
              <OMS cd="simpleNumAndNum" name="inject"/>
              <OMS cd="Num_E2" name="N0"/>
            </OMA>
            <OMS cd="Num_E2" name="N0"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax110">
      <use format="Hets">Ax1</use>
    </presentation>
    <axiom name="Ax28">
      <CMP>
    axioms
      inject(0) = 0;
      inject(s(n0)) = inject(n0) + 1;
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="simpleNumAndNum_E1" name="Num6"/>
                </OMATP>
                <OMV name="n0"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="simpleNumAndNum" name="inject"/>
                <OMA>
                  <OMS cd="simpleNumAndNum_E1" name="s5"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="simpleNumAndNum_E1" name="Num6"/>
                    </OMATP>
                    <OMV name="n0"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Num_E2" name="__Plus__"/>
                <OMA>
                  <OMS cd="simpleNumAndNum" name="inject"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="simpleNumAndNum_E1" name="Num6"/>
                    </OMATP>
                    <OMV name="n0"/>
                  </OMATTR>
                </OMA>
                <OMS cd="Num_E2" name="N1"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax28">
      <use format="Hets">Ax2</use>
    </presentation>
    <axiom name="Ax36">
      <CMP>
    axioms
      inject(0) = 0;
      inject(s(n0)) = inject(n0) + 1;
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="simpleNumAndNum_E1" name="Num6"/>
                </OMATP>
                <OMV name="n0"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="simpleNumAndNum" name="project"/>
                <OMA>
                  <OMS cd="simpleNumAndNum" name="inject"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="simpleNumAndNum_E1" name="Num6"/>
                    </OMATP>
                    <OMV name="n0"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="simpleNumAndNum_E1" name="Num6"/>
                </OMATP>
                <OMV name="n0"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax36">
      <use format="Hets">Ax3</use>
    </presentation>
  </theory>
  <private for="simpleNumAndNum">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"simpleNumAndNum_E1" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="IdentTotalOrder">
    <presentation for="IdentTotalOrder">
      <use format="Hets">[IdentTotalOrder,,0]</use>
    </presentation>
    <imports from="#TotalOrder">
      <morphism hiding="Elem __&#60;__">
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder" name="Elem5"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="IdentTotalOrder" name="Ident17"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <symbol role="sort" name="Ident17"/>
    <presentation for="Ident17">
      <use format="Hets">[Ident]</use>
    </presentation>
  </theory>
  <private for="IdentTotalOrder">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"TotalOrder" Type:"GlobalDef" Origin:"DGTranslation"
]]></data>
  </private>
  <theory xml:id="Elem1">
    <presentation for="Elem1">
      <use format="Hets">[Elem1,,0]</use>
    </presentation>
    <symbol role="sort" name="Elem"/>
    <presentation for="Elem">
      <use format="Hets">[Elem]</use>
    </presentation>
    <symbol name="anything" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Elem1" name="Elem"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="anything">
      <use format="Hets">[anything]</use>
    </presentation>
  </theory>
  <theory xml:id="Env_1E1">
    <presentation for="Env_1E1">
      <use format="Hets">[Env,1E,1]</use>
    </presentation>
    <symbol role="sort" name="Ident16"/>
    <presentation for="Ident16">
      <use format="Hets">[Ident]</use>
    </presentation>
    <symbol role="sort" name="Env21"/>
    <presentation for="Env21">
      <use format="Hets">[Env]</use>
    </presentation>
    <symbol role="sort" name="Elem4"/>
    <presentation for="Elem4">
      <use format="Hets">[Elem]</use>
    </presentation>
    <symbol name="empty19" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Env_1E1" name="Env21"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="empty19">
      <use format="Hets">[empty]</use>
    </presentation>
    <symbol name="find20" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Env_1E1" name="Ident16"/>
            <OMS cd="Env_1E1" name="Env21"/>
            <OMS cd="Env_1E1" name="Elem4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="find20">
      <use format="Hets">[find]</use>
    </presentation>
    <symbol name="set19" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Env_1E1" name="Ident16"/>
            <OMS cd="Env_1E1" name="Elem4"/>
            <OMS cd="Env_1E1" name="Env21"/>
            <OMS cd="Env_1E1" name="Env21"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="set19">
      <use format="Hets">[set]</use>
    </presentation>
  </theory>
  <theory xml:id="Env_1L">
    <presentation for="Env_1L">
      <use format="Hets">[Env,1L,0]</use>
    </presentation>
    <imports from="#Env_1E1"/>
    <symbol name="OK20" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Env_1E1" name="Env21"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="OK20">
      <use format="Hets">[OK]</use>
    </presentation>
    <axiom name="Ax11">
      <CMP>
          OK(empty);
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Env_1L" name="OK20"/>
            <OMS cd="Env_1E1" name="empty19"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax11">
      <use format="Hets">Ax1</use>
    </presentation>
    <axiom name="Ax21">
      <CMP>
        axioms
          OK(empty);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Env_1E1" name="Env21"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Env_1E1" name="Elem4"/>
                </OMATP>
                <OMV name="e"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Env_1E1" name="Ident16"/>
                </OMATP>
                <OMV name="id"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Env_1L" name="OK20"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Env_1E1" name="Env21"/>
                  </OMATP>
                  <OMV name="E"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Env_1L" name="OK20"/>
                <OMA>
                  <OMS cd="Env_1E1" name="set19"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Env_1E1" name="Ident16"/>
                    </OMATP>
                    <OMV name="id"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Env_1E1" name="Elem4"/>
                    </OMATP>
                    <OMV name="e"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Env_1E1" name="Env21"/>
                    </OMATP>
                    <OMV name="E"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMS cd="casl" name="true"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax21">
      <use format="Hets">Ax2</use>
    </presentation>
  </theory>
  <private for="Env_1L">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Env_1E1" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Env_2">
    <presentation for="Env_2">
      <use format="Hets">[Env,,2]</use>
    </presentation>
    <imports from="#Env_1L"/>
    <axiom name="Ax1">
      <CMP>
        axioms
          OK(E) =&#62; find(id, set(id,e,E)) = e;
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Env_1E1" name="Env21"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Env_1E1" name="Elem4"/>
                </OMATP>
                <OMV name="e"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Env_1E1" name="Ident16"/>
                </OMATP>
                <OMV name="id"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Env_1L" name="OK20"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Env_1E1" name="Env21"/>
                  </OMATP>
                  <OMV name="E"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Env_1E1" name="find20"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Env_1E1" name="Ident16"/>
                    </OMATP>
                    <OMV name="id"/>
                  </OMATTR>
                  <OMA>
                    <OMS cd="Env_1E1" name="set19"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Env_1E1" name="Ident16"/>
                      </OMATP>
                      <OMV name="id"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Env_1E1" name="Elem4"/>
                      </OMATP>
                      <OMV name="e"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Env_1E1" name="Env21"/>
                      </OMATP>
                      <OMV name="E"/>
                    </OMATTR>
                  </OMA>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Env_1E1" name="Elem4"/>
                  </OMATP>
                  <OMV name="e"/>
                </OMATTR>
              </OMA>
              <OMS cd="casl" name="true"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax1">
      <use format="Hets">Ax1</use>
    </presentation>
    <axiom name="Ax2">
      <CMP>
        axioms
          OK(E) =&#62; find(id, set(id,e,E)) = e;
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Env_1E1" name="Env21"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Env_1E1" name="Elem4"/>
                </OMATP>
                <OMV name="e"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Env_1E1" name="Ident16"/>
                </OMATP>
                <OMV name="id"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Env_1E1" name="Ident16"/>
                </OMATP>
                <OMV name="id&#39;"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Env_1L" name="OK20"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Env_1E1" name="Env21"/>
                  </OMATP>
                  <OMV name="E"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="implication"/>
                <OMA>
                  <OMS cd="casl" name="neg"/>
                  <OMA>
                    <OMS cd="casl" name="strong-equation"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Env_1E1" name="Ident16"/>
                      </OMATP>
                      <OMV name="id"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Env_1E1" name="Ident16"/>
                      </OMATP>
                      <OMV name="id&#39;"/>
                    </OMATTR>
                  </OMA>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMA>
                    <OMS cd="Env_1E1" name="find20"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Env_1E1" name="Ident16"/>
                      </OMATP>
                      <OMV name="id"/>
                    </OMATTR>
                    <OMA>
                      <OMS cd="Env_1E1" name="set19"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Env_1E1" name="Ident16"/>
                        </OMATP>
                        <OMV name="id&#39;"/>
                      </OMATTR>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Env_1E1" name="Elem4"/>
                        </OMATP>
                        <OMV name="e"/>
                      </OMATTR>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Env_1E1" name="Env21"/>
                        </OMATP>
                        <OMV name="E"/>
                      </OMATTR>
                    </OMA>
                  </OMA>
                  <OMA>
                    <OMS cd="Env_1E1" name="find20"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Env_1E1" name="Ident16"/>
                      </OMATP>
                      <OMV name="id"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Env_1E1" name="Env21"/>
                      </OMATP>
                      <OMV name="E"/>
                    </OMATTR>
                  </OMA>
                </OMA>
                <OMS cd="casl" name="false"/>
              </OMA>
              <OMS cd="casl" name="true"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax2">
      <use format="Hets">Ax2</use>
    </presentation>
  </theory>
  <private for="Env_2">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Env_1L" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Env_1">
    <presentation for="Env_1">
      <use format="Hets">[Env,,1]</use>
    </presentation>
    <symbol role="sort" name="Ident15"/>
    <presentation for="Ident15">
      <use format="Hets">[Ident]</use>
    </presentation>
    <symbol role="sort" name="Env20"/>
    <presentation for="Env20">
      <use format="Hets">[Env]</use>
    </presentation>
    <symbol role="sort" name="Elem3"/>
    <presentation for="Elem3">
      <use format="Hets">[Elem]</use>
    </presentation>
    <symbol name="empty18" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Env_1" name="Env20"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="empty18">
      <use format="Hets">[empty]</use>
    </presentation>
    <symbol name="find19" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Env_1" name="Ident15"/>
            <OMS cd="Env_1" name="Env20"/>
            <OMS cd="Env_1" name="Elem3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="find19">
      <use format="Hets">[find]</use>
    </presentation>
    <symbol name="set18" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Env_1" name="Ident15"/>
            <OMS cd="Env_1" name="Elem3"/>
            <OMS cd="Env_1" name="Env20"/>
            <OMS cd="Env_1" name="Env20"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="set18">
      <use format="Hets">[set]</use>
    </presentation>
  </theory>
  <private for="Env_1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Env_2" Type:"HidingDef" Origin:"DGLocal"
]]></data>
  </private>
  <theory xml:id="Env_T">
    <presentation for="Env_T">
      <use format="Hets">[Env,T,0]</use>
    </presentation>
    <symbol role="sort" name="Ident1"/>
    <presentation for="Ident1">
      <use format="Hets">[Ident]</use>
    </presentation>
    <symbol role="sort" name="Env1"/>
    <presentation for="Env1">
      <use format="Hets">[Env]</use>
    </presentation>
    <symbol role="sort" name="Elem2"/>
    <presentation for="Elem2">
      <use format="Hets">[Elem]</use>
    </presentation>
    <symbol name="empty" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Env_T" name="Env1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="empty">
      <use format="Hets">[empty]</use>
    </presentation>
    <symbol name="find" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Env_T" name="Ident1"/>
            <OMS cd="Env_T" name="Env1"/>
            <OMS cd="Env_T" name="Elem2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="find">
      <use format="Hets">[find]</use>
    </presentation>
    <symbol name="set" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Env_T" name="Ident1"/>
            <OMS cd="Env_T" name="Elem2"/>
            <OMS cd="Env_T" name="Env1"/>
            <OMS cd="Env_T" name="Env1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="set">
      <use format="Hets">[set]</use>
    </presentation>
  </theory>
  <private for="Env_T">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Env_1" Type:"HidingDef" Origin:"DGRevealing"
]]></data>
  </private>
  <theory xml:id="Env">
    <presentation for="Env">
      <use format="Hets">[Env,,0]</use>
    </presentation>
    <imports from="#Env_T">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="Env_T" name="empty"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Env" name="empty"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Env_T" name="find"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Env" name="find"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Env_T" name="set"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Env" name="set"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
  </theory>
  <private for="Env">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Env_T" Type:"GlobalDef" Origin:"DGRevealTranslation"
]]></data>
  </private>
  <theory xml:id="IdentTotalOrderEnvWithAnything">
    <presentation for="IdentTotalOrderEnvWithAnything">
      <use format="Hets">[IdentTotalOrderEnvWithAnything,,0]</use>
    </presentation>
    <imports from="#Elem1"/>
    <imports from="#Env"/>
    <imports from="#IdentTotalOrder"/>
    <symbol name="__Lower__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Env_T" name="Ident1"/>
            <OMS cd="Env_T" name="Ident1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Lower__1">
      <use format="Hets">[__,&#60;,__]</use>
    </presentation>
    <symbol name="anything1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Env_T" name="Elem2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="anything1">
      <use format="Hets">[anything]</use>
    </presentation>
  </theory>
  <private for="IdentTotalOrderEnvWithAnything">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Env" Type:"GlobalDef" Origin:"DGUnion"
From:"IdentTotalOrder" Type:"GlobalDef" Origin:"DGUnion"
From:"Elem1" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="EnvSQuote">
    <presentation for="EnvSQuote">
      <use format="Hets">[Env&#39;,,0]</use>
    </presentation>
    <imports from="#Env">
      <morphism hiding="Elem find set">
        <requation>
          <OMOBJ>
            <OMS cd="Env" name="Elem2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="EnvSQuote" name="NumSQuote1"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <symbol role="sort" name="NumSQuote1"/>
    <presentation for="NumSQuote1">
      <use format="Hets">[Num&#39;]</use>
    </presentation>
  </theory>
  <private for="EnvSQuote">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Env" Type:"GlobalDef" Origin:"DGTranslation"
]]></data>
  </private>
  <theory xml:id="ExtInterpreter">
    <presentation for="ExtInterpreter">
      <use format="Hets">[ExtInterpreter,,0]</use>
    </presentation>
    <imports from="#EnvSQuote"/>
    <imports from="#Interpreter"/>
    <imports from="#Num"/>
    <symbol role="sort" name="Prog13"/>
    <presentation for="Prog13">
      <use format="Hets">[Prog]</use>
    </presentation>
    <symbol role="sort" name="NumExp11"/>
    <presentation for="NumExp11">
      <use format="Hets">[NumExp]</use>
    </presentation>
    <symbol role="sort" name="Num2"/>
    <presentation for="Num2">
      <use format="Hets">[Num]</use>
    </presentation>
    <symbol role="sort" name="Instr13"/>
    <presentation for="Instr13">
      <use format="Hets">[Instr]</use>
    </presentation>
    <symbol role="sort" name="BoolExp8"/>
    <presentation for="BoolExp8">
      <use format="Hets">[BoolExp]</use>
    </presentation>
    <symbol name="M10" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="ExtInterpreter" name="BoolExp8"/>
            <OMS cd="Env_T" name="Env1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M10">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="OK21" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="EnvSQuote" name="NumSQuote1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="OK21">
      <use format="Hets">[OK]</use>
    </presentation>
    <symbol name="isZero20" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="EnvSQuote" name="NumSQuote1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero20">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="N013" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtInterpreter" name="Num2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N013">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N013" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="EnvSQuote" name="NumSQuote1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N013">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N013" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtInterpreter" name="NumExp11"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N013">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N113" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtInterpreter" name="Num2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N113">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="N113" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="EnvSQuote" name="NumSQuote1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N113">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="N113" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtInterpreter" name="NumExp11"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N113">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="M29" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtInterpreter" name="NumExp11"/>
            <OMS cd="Env_T" name="Env1"/>
            <OMS cd="ExtInterpreter" name="Num2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M29">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="M29" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtInterpreter" name="Instr13"/>
            <OMS cd="Env_T" name="Env1"/>
            <OMS cd="Env_T" name="Env1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M29">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="Meaning1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtInterpreter" name="Prog13"/>
            <OMS cd="ExtInterpreter" name="Num2"/>
            <OMS cd="ExtInterpreter" name="Num2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="Meaning1">
      <use format="Hets">[Meaning]</use>
    </presentation>
    <symbol name="__Plus__13" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtInterpreter" name="Num2"/>
            <OMS cd="ExtInterpreter" name="Num2"/>
            <OMS cd="ExtInterpreter" name="Num2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__13">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__Plus__13" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="EnvSQuote" name="NumSQuote1"/>
            <OMS cd="EnvSQuote" name="NumSQuote1"/>
            <OMS cd="EnvSQuote" name="NumSQuote1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__13">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__Plus__13" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtInterpreter" name="NumExp11"/>
            <OMS cd="ExtInterpreter" name="NumExp11"/>
            <OMS cd="ExtInterpreter" name="NumExp11"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__13">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="compose13" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtInterpreter" name="Instr13"/>
            <OMS cd="ExtInterpreter" name="Instr13"/>
            <OMS cd="ExtInterpreter" name="Instr13"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="compose13">
      <use format="Hets">[compose]</use>
    </presentation>
    <symbol name="cons1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Env_T" name="Ident1"/>
            <OMS cd="ExtInterpreter" name="Num2"/>
            <OMS cd="Env_T" name="Env1"/>
            <OMS cd="Env_T" name="Env1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="cons1">
      <use format="Hets">[cons]</use>
    </presentation>
    <symbol name="if_then_else6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtInterpreter" name="BoolExp8"/>
            <OMS cd="ExtInterpreter" name="Instr13"/>
            <OMS cd="ExtInterpreter" name="Instr13"/>
            <OMS cd="ExtInterpreter" name="Instr13"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="if_then_else6">
      <use format="Hets">[if_then_else]</use>
    </presentation>
    <symbol name="in_data5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Env_T" name="Ident1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="in_data5">
      <use format="Hets">[in_data]</use>
    </presentation>
    <symbol name="isZero30" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtInterpreter" name="NumExp11"/>
            <OMS cd="ExtInterpreter" name="BoolExp8"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero30">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="nil1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Env_T" name="Env1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="nil1">
      <use format="Hets">[nil]</use>
    </presentation>
    <symbol name="out_data5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Env_T" name="Ident1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="out_data5">
      <use format="Hets">[out_data]</use>
    </presentation>
    <symbol name="program12" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtInterpreter" name="Instr13"/>
            <OMS cd="ExtInterpreter" name="Prog13"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="program12">
      <use format="Hets">[program]</use>
    </presentation>
    <symbol name="s1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtInterpreter" name="Num2"/>
            <OMS cd="ExtInterpreter" name="Num2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="s1">
      <use format="Hets">[s]</use>
    </presentation>
    <symbol name="variable11" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Env_T" name="Ident1"/>
            <OMS cd="ExtInterpreter" name="NumExp11"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="variable11">
      <use format="Hets">[variable]</use>
    </presentation>
    <symbol name="while6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtInterpreter" name="BoolExp8"/>
            <OMS cd="ExtInterpreter" name="Instr13"/>
            <OMS cd="ExtInterpreter" name="Instr13"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="while6">
      <use format="Hets">[while]</use>
    </presentation>
  </theory>
  <private for="ExtInterpreter">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"EnvSQuote" Type:"GlobalDef" Origin:"DGUnion"
From:"Num" Type:"GlobalDef" Origin:"DGUnion"
From:"Interpreter" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="NExpSyntax">
    <presentation for="NExpSyntax">
      <use format="Hets">[NExpSyntax,,0]</use>
    </presentation>
    <symbol role="sort" name="NumExp"/>
    <presentation for="NumExp">
      <use format="Hets">[NumExp]</use>
    </presentation>
    <symbol role="sort" name="Ident2"/>
    <presentation for="Ident2">
      <use format="Hets">[Ident]</use>
    </presentation>
    <adt>
      <sortdef name="NumExp" type="free">
        <constructor name="N016"/>
        <constructor name="N115"/>
        <constructor name="__Plus__15">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="NExpSyntax" name="NumExp"/>
              </OMOBJ>
            </type>
          </argument>
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="NExpSyntax" name="NumExp"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="variable13">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="NExpSyntax" name="Ident2"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
      </sortdef>
    </adt>
    <symbol name="N01" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="NumExp"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N01">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N11" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="NumExp"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N11">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="__Plus__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="NumExp"/>
            <OMS cd="NExpSyntax" name="NumExp"/>
            <OMS cd="NExpSyntax" name="NumExp"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__1">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="variable" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="Ident2"/>
            <OMS cd="NExpSyntax" name="NumExp"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="variable">
      <use format="Hets">[variable]</use>
    </presentation>
    <axiom name="ga_disjoint_0_1">
      <CMP>
  free type NumExp ::= 0 | 1 | __+__(NumExp; NumExp) | variable( Ident );
  free type NumExp ::= 0 | 1 | __+__(NumExp; NumExp) | variable( Ident );
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMS cd="NExpSyntax" name="N01"/>
              <OMS cd="NExpSyntax" name="N11"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_0_1">
      <use format="Hets">ga_disjoint_0_1</use>
    </presentation>
    <axiom name="ga_disjoint_0___Plus__">
      <CMP>
  free type NumExp ::= 0 | 1 | __+__(NumExp; NumExp) | variable( Ident );
  free type NumExp ::= 0 | 1 | __+__(NumExp; NumExp) | variable( Ident );
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="NumExp"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="NumExp"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMS cd="NExpSyntax" name="N01"/>
                <OMA>
                  <OMS cd="NExpSyntax" name="__Plus__1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="NumExp"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="NumExp"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_0___Plus__">
      <use format="Hets">ga_disjoint_0___+__</use>
    </presentation>
    <axiom name="ga_disjoint_0_variable">
      <CMP>
  free type NumExp ::= 0 | 1 | __+__(NumExp; NumExp) | variable( Ident );
  free type NumExp ::= 0 | 1 | __+__(NumExp; NumExp) | variable( Ident );
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="Ident2"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMS cd="NExpSyntax" name="N01"/>
                <OMA>
                  <OMS cd="NExpSyntax" name="variable"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="Ident2"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_0_variable">
      <use format="Hets">ga_disjoint_0_variable</use>
    </presentation>
    <axiom name="ga_disjoint_1___Plus__">
      <CMP>
  free type NumExp ::= 0 | 1 | __+__(NumExp; NumExp) | variable( Ident );
  free type NumExp ::= 0 | 1 | __+__(NumExp; NumExp) | variable( Ident );
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="NumExp"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="NumExp"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMS cd="NExpSyntax" name="N11"/>
                <OMA>
                  <OMS cd="NExpSyntax" name="__Plus__1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="NumExp"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="NumExp"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_1___Plus__">
      <use format="Hets">ga_disjoint_1___+__</use>
    </presentation>
    <axiom name="ga_disjoint_1_variable">
      <CMP>
  free type NumExp ::= 0 | 1 | __+__(NumExp; NumExp) | variable( Ident );
  free type NumExp ::= 0 | 1 | __+__(NumExp; NumExp) | variable( Ident );
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="Ident2"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMS cd="NExpSyntax" name="N11"/>
                <OMA>
                  <OMS cd="NExpSyntax" name="variable"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="Ident2"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_1_variable">
      <use format="Hets">ga_disjoint_1_variable</use>
    </presentation>
    <axiom name="ga_disjoint___Plus___variable">
      <CMP>
  free type NumExp ::= 0 | 1 | __+__(NumExp; NumExp) | variable( Ident );
  free type NumExp ::= 0 | 1 | __+__(NumExp; NumExp) | variable( Ident );
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="NumExp"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="NumExp"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="Ident2"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="NExpSyntax" name="__Plus__1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="NumExp"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="NumExp"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="NExpSyntax" name="variable"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="Ident2"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint___Plus___variable">
      <use format="Hets">ga_disjoint___+___variable</use>
    </presentation>
    <axiom name="ga_injective___Plus__">
      <CMP>
  free type NumExp ::= 0 | 1 | __+__(NumExp; NumExp) | variable( Ident );
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="NumExp"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="NumExp"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="NumExp"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="NumExp"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="NExpSyntax" name="__Plus__1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="NumExp"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="NumExp"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="NExpSyntax" name="__Plus__1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="NumExp"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="NumExp"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="NumExp"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="NumExp"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="NumExp"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="NumExp"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective___Plus__">
      <use format="Hets">ga_injective___+__</use>
    </presentation>
    <axiom name="ga_injective_variable">
      <CMP>
  free type NumExp ::= 0 | 1 | __+__(NumExp; NumExp) | variable( Ident );
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="Ident2"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="Ident2"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="NExpSyntax" name="variable"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="Ident2"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="NExpSyntax" name="variable"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="Ident2"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="NExpSyntax" name="Ident2"/>
                  </OMATP>
                  <OMV name="X1"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="NExpSyntax" name="Ident2"/>
                  </OMATP>
                  <OMV name="Y1"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective_variable">
      <use format="Hets">ga_injective_variable</use>
    </presentation>
  </theory>
  <theory xml:id="NExpSemantics_E1">
    <presentation for="NExpSemantics_E1">
      <use format="Hets">[NExpSemantics,E,1]</use>
    </presentation>
    <imports from="#EnvSQuote"/>
    <imports from="#NExpSyntax"/>
    <imports from="#Num"/>
    <symbol role="sort" name="NumExp1"/>
    <presentation for="NumExp1">
      <use format="Hets">[NumExp]</use>
    </presentation>
    <symbol name="OK2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="EnvSQuote" name="NumSQuote1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="OK2">
      <use format="Hets">[OK]</use>
    </presentation>
    <symbol name="isZero2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="EnvSQuote" name="NumSQuote1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero2">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="N02" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="EnvSQuote" name="NumSQuote1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N02">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N02" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSemantics_E1" name="NumExp1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N02">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N12" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="EnvSQuote" name="NumSQuote1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N12">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="N12" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSemantics_E1" name="NumExp1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N12">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="__Plus__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="EnvSQuote" name="NumSQuote1"/>
            <OMS cd="EnvSQuote" name="NumSQuote1"/>
            <OMS cd="EnvSQuote" name="NumSQuote1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__2">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__Plus__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSemantics_E1" name="NumExp1"/>
            <OMS cd="NExpSemantics_E1" name="NumExp1"/>
            <OMS cd="NExpSemantics_E1" name="NumExp1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__2">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="variable1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Env_T" name="Ident1"/>
            <OMS cd="NExpSemantics_E1" name="NumExp1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="variable1">
      <use format="Hets">[variable]</use>
    </presentation>
  </theory>
  <private for="NExpSemantics_E1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"EnvSQuote" Type:"GlobalDef" Origin:"DGUnion"
From:"Num" Type:"GlobalDef" Origin:"DGUnion"
From:"NExpSyntax" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="NExpSemantics">
    <presentation for="NExpSemantics">
      <use format="Hets">[NExpSemantics,,0]</use>
    </presentation>
    <imports from="#NExpSemantics_E1"/>
    <symbol name="M14" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSemantics_E1" name="NumExp1"/>
            <OMS cd="Env_T" name="Env1"/>
            <OMS cd="EnvSQuote" name="NumSQuote1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M14">
      <use format="Hets">[M]</use>
    </presentation>
    <axiom name="Ax16">
      <CMP>
    axioms
      M(0,E) = 0;
      M(1,E) = 1;
      M(nE+nE&#39;,E) = M(nE,E) + M(nE&#39;,E);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Env_T" name="Env1"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="NExpSemantics" name="M14"/>
                <OMS cd="NExpSemantics_E1" name="N02"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Env_T" name="Env1"/>
                  </OMATP>
                  <OMV name="E"/>
                </OMATTR>
              </OMA>
              <OMS cd="NExpSemantics_E1" name="N02"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax16">
      <use format="Hets">Ax1</use>
    </presentation>
    <axiom name="Ax24">
      <CMP>
    axioms
      M(0,E) = 0;
      M(1,E) = 1;
      M(nE+nE&#39;,E) = M(nE,E) + M(nE&#39;,E);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Env_T" name="Env1"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="NExpSemantics" name="M14"/>
                <OMS cd="NExpSemantics_E1" name="N12"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Env_T" name="Env1"/>
                  </OMATP>
                  <OMV name="E"/>
                </OMATTR>
              </OMA>
              <OMS cd="NExpSemantics_E1" name="N12"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax24">
      <use format="Hets">Ax2</use>
    </presentation>
    <axiom name="Ax32">
      <CMP>
    axioms
      M(0,E) = 0;
      M(1,E) = 1;
      M(nE+nE&#39;,E) = M(nE,E) + M(nE&#39;,E);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Env_T" name="Env1"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSemantics_E1" name="NumExp1"/>
                </OMATP>
                <OMV name="nE"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSemantics_E1" name="NumExp1"/>
                </OMATP>
                <OMV name="nE&#39;"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="NExpSemantics" name="M14"/>
                <OMA>
                  <OMS cd="NExpSemantics_E1" name="__Plus__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSemantics_E1" name="NumExp1"/>
                    </OMATP>
                    <OMV name="nE"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSemantics_E1" name="NumExp1"/>
                    </OMATP>
                    <OMV name="nE&#39;"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Env_T" name="Env1"/>
                  </OMATP>
                  <OMV name="E"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="NExpSemantics_E1" name="__Plus__2"/>
                <OMA>
                  <OMS cd="NExpSemantics" name="M14"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSemantics_E1" name="NumExp1"/>
                    </OMATP>
                    <OMV name="nE"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Env_T" name="Env1"/>
                    </OMATP>
                    <OMV name="E"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="NExpSemantics" name="M14"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSemantics_E1" name="NumExp1"/>
                    </OMATP>
                    <OMV name="nE&#39;"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Env_T" name="Env1"/>
                    </OMATP>
                    <OMV name="E"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax32">
      <use format="Hets">Ax3</use>
    </presentation>
    <axiom name="Ax43">
      <CMP>
    axioms
      M(0,E) = 0;
      M(1,E) = 1;
      M(nE+nE&#39;,E) = M(nE,E) + M(nE&#39;,E);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Env_T" name="Env1"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Env_T" name="Ident1"/>
                </OMATP>
                <OMV name="id"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="NExpSemantics" name="M14"/>
                <OMA>
                  <OMS cd="NExpSemantics_E1" name="variable1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Env_T" name="Ident1"/>
                    </OMATP>
                    <OMV name="id"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Env_T" name="Env1"/>
                  </OMATP>
                  <OMV name="E"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Env_T" name="find"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Env_T" name="Ident1"/>
                  </OMATP>
                  <OMV name="id"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Env_T" name="Env1"/>
                  </OMATP>
                  <OMV name="E"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax43">
      <use format="Hets">Ax4</use>
    </presentation>
  </theory>
  <private for="NExpSemantics">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"NExpSemantics_E1" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="ExpSyntax">
    <presentation for="ExpSyntax">
      <use format="Hets">[ExpSyntax,,0]</use>
    </presentation>
    <imports from="#NExpSyntax"/>
    <symbol role="sort" name="BoolExp"/>
    <presentation for="BoolExp">
      <use format="Hets">[BoolExp]</use>
    </presentation>
    <adt>
      <sortdef name="BoolExp" type="free">
        <constructor name="isZero32">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="NExpSyntax" name="NumExp"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
      </sortdef>
    </adt>
    <symbol name="isZero22" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="NumExp"/>
            <OMS cd="ExpSyntax" name="BoolExp"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero22">
      <use format="Hets">[isZero]</use>
    </presentation>
    <axiom name="ga_injective_isZero">
      <CMP>
    free type BoolExp ::= isZero( NumExp);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="NumExp"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="NumExp"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="ExpSyntax" name="isZero22"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="NumExp"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="ExpSyntax" name="isZero22"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="NumExp"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="NExpSyntax" name="NumExp"/>
                  </OMATP>
                  <OMV name="X1"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="NExpSyntax" name="NumExp"/>
                  </OMATP>
                  <OMV name="Y1"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective_isZero">
      <use format="Hets">ga_injective_isZero</use>
    </presentation>
  </theory>
  <private for="ExpSyntax">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"NExpSyntax" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="ExpSemantics_E1">
    <presentation for="ExpSemantics_E1">
      <use format="Hets">[ExpSemantics,E,1]</use>
    </presentation>
    <imports from="#ExpSyntax"/>
    <imports from="#NExpSemantics"/>
    <symbol role="sort" name="NumSQuote4"/>
    <presentation for="NumSQuote4">
      <use format="Hets">[Num&#39;]</use>
    </presentation>
    <symbol role="sort" name="Env4"/>
    <presentation for="Env4">
      <use format="Hets">[Env]</use>
    </presentation>
    <symbol name="OK4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="ExpSemantics_E1" name="NumSQuote4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="OK4">
      <use format="Hets">[OK]</use>
    </presentation>
    <symbol name="isZero4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="ExpSemantics_E1" name="NumSQuote4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero4">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="M16" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="NumExp"/>
            <OMS cd="ExpSemantics_E1" name="Env4"/>
            <OMS cd="ExpSemantics_E1" name="NumSQuote4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M16">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="empty3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExpSemantics_E1" name="Env4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="empty3">
      <use format="Hets">[empty]</use>
    </presentation>
    <symbol name="find3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="Ident2"/>
            <OMS cd="ExpSemantics_E1" name="Env4"/>
            <OMS cd="ExpSemantics_E1" name="NumSQuote4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="find3">
      <use format="Hets">[find]</use>
    </presentation>
    <symbol name="set3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="Ident2"/>
            <OMS cd="ExpSemantics_E1" name="NumSQuote4"/>
            <OMS cd="ExpSemantics_E1" name="Env4"/>
            <OMS cd="ExpSemantics_E1" name="Env4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="set3">
      <use format="Hets">[set]</use>
    </presentation>
  </theory>
  <private for="ExpSemantics_E1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"ExpSyntax" Type:"GlobalDef" Origin:"DGUnion"
From:"NExpSemantics" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="ExpSemantics">
    <presentation for="ExpSemantics">
      <use format="Hets">[ExpSemantics,,0]</use>
    </presentation>
    <imports from="#ExpSemantics_E1"/>
    <symbol name="M" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="ExpSyntax" name="BoolExp"/>
            <OMS cd="ExpSemantics_E1" name="Env4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M">
      <use format="Hets">[M]</use>
    </presentation>
    <axiom name="Ax12">
      <CMP>
    axioms
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="ExpSemantics_E1" name="Env4"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="NumExp"/>
                </OMATP>
                <OMV name="nE"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="ExpSemantics" name="M"/>
                <OMA>
                  <OMS cd="ExpSyntax" name="isZero22"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="NumExp"/>
                    </OMATP>
                    <OMV name="nE"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="ExpSemantics_E1" name="Env4"/>
                  </OMATP>
                  <OMV name="E"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="ExpSemantics_E1" name="isZero4"/>
                <OMA>
                  <OMS cd="ExpSemantics_E1" name="M16"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="NumExp"/>
                    </OMATP>
                    <OMV name="nE"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="ExpSemantics_E1" name="Env4"/>
                    </OMATP>
                    <OMV name="E"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax12">
      <use format="Hets">Ax1</use>
    </presentation>
  </theory>
  <private for="ExpSemantics">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"ExpSemantics_E1" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="InstrSyntax">
    <presentation for="InstrSyntax">
      <use format="Hets">[InstrSyntax,,0]</use>
    </presentation>
    <imports from="#ExpSyntax"/>
    <symbol role="sort" name="Instr"/>
    <presentation for="Instr">
      <use format="Hets">[Instr]</use>
    </presentation>
    <adt>
      <sortdef name="Instr" type="free">
        <constructor name="compose15">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="InstrSyntax" name="Instr"/>
              </OMOBJ>
            </type>
          </argument>
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="InstrSyntax" name="Instr"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="empty21"/>
        <constructor name="if_then_else8">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="ExpSyntax" name="BoolExp"/>
              </OMOBJ>
            </type>
          </argument>
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="InstrSyntax" name="Instr"/>
              </OMOBJ>
            </type>
          </argument>
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="InstrSyntax" name="Instr"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="set21">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="NExpSyntax" name="Ident2"/>
              </OMOBJ>
            </type>
          </argument>
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="NExpSyntax" name="NumExp"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="while8">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="ExpSyntax" name="BoolExp"/>
              </OMOBJ>
            </type>
          </argument>
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="InstrSyntax" name="Instr"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
      </sortdef>
    </adt>
    <symbol name="compose" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="InstrSyntax" name="Instr"/>
            <OMS cd="InstrSyntax" name="Instr"/>
            <OMS cd="InstrSyntax" name="Instr"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="compose">
      <use format="Hets">[compose]</use>
    </presentation>
    <symbol name="empty4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="InstrSyntax" name="Instr"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="empty4">
      <use format="Hets">[empty]</use>
    </presentation>
    <symbol name="if_then_else" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExpSyntax" name="BoolExp"/>
            <OMS cd="InstrSyntax" name="Instr"/>
            <OMS cd="InstrSyntax" name="Instr"/>
            <OMS cd="InstrSyntax" name="Instr"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="if_then_else">
      <use format="Hets">[if_then_else]</use>
    </presentation>
    <symbol name="set4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="Ident2"/>
            <OMS cd="NExpSyntax" name="NumExp"/>
            <OMS cd="InstrSyntax" name="Instr"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="set4">
      <use format="Hets">[set]</use>
    </presentation>
    <symbol name="while" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExpSyntax" name="BoolExp"/>
            <OMS cd="InstrSyntax" name="Instr"/>
            <OMS cd="InstrSyntax" name="Instr"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="while">
      <use format="Hets">[while]</use>
    </presentation>
    <axiom name="ga_disjoint_compose_if_then_else">
      <CMP>
    free type Instr ::= empty | compose(Instr; Instr) |
  				if_then_else( BoolExp; Instr; Instr );
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="ExpSyntax" name="BoolExp"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="Y3"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="InstrSyntax" name="compose"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="InstrSyntax" name="if_then_else"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="ExpSyntax" name="BoolExp"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="Y3"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_compose_if_then_else">
      <use format="Hets">ga_disjoint_compose_if_then_else</use>
    </presentation>
    <axiom name="ga_disjoint_compose_set">
      <CMP>
    free type Instr ::= empty | compose(Instr; Instr) |
  				set( Ident; NumExp ) |
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="Ident2"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="NumExp"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="InstrSyntax" name="compose"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="InstrSyntax" name="set4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="Ident2"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="NumExp"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_compose_set">
      <use format="Hets">ga_disjoint_compose_set</use>
    </presentation>
    <axiom name="ga_disjoint_compose_while">
      <CMP>
    free type Instr ::= empty | compose(Instr; Instr) |
  				while( BoolExp; Instr ) |
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="ExpSyntax" name="BoolExp"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="InstrSyntax" name="compose"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="InstrSyntax" name="while"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="ExpSyntax" name="BoolExp"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_compose_while">
      <use format="Hets">ga_disjoint_compose_while</use>
    </presentation>
    <axiom name="ga_disjoint_empty_compose">
      <CMP>
    free type Instr ::= empty | compose(Instr; Instr) |
    free type Instr ::= empty | compose(Instr; Instr) |
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMS cd="InstrSyntax" name="empty4"/>
                <OMA>
                  <OMS cd="InstrSyntax" name="compose"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_empty_compose">
      <use format="Hets">ga_disjoint_empty_compose</use>
    </presentation>
    <axiom name="ga_disjoint_empty_if_then_else">
      <CMP>
    free type Instr ::= empty | compose(Instr; Instr) |
  				if_then_else( BoolExp; Instr; Instr );
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="ExpSyntax" name="BoolExp"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="Y3"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMS cd="InstrSyntax" name="empty4"/>
                <OMA>
                  <OMS cd="InstrSyntax" name="if_then_else"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="ExpSyntax" name="BoolExp"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="Y3"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_empty_if_then_else">
      <use format="Hets">ga_disjoint_empty_if_then_else</use>
    </presentation>
    <axiom name="ga_disjoint_empty_set">
      <CMP>
    free type Instr ::= empty | compose(Instr; Instr) |
  				set( Ident; NumExp ) |
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="Ident2"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="NumExp"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMS cd="InstrSyntax" name="empty4"/>
                <OMA>
                  <OMS cd="InstrSyntax" name="set4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="Ident2"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="NumExp"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_empty_set">
      <use format="Hets">ga_disjoint_empty_set</use>
    </presentation>
    <axiom name="ga_disjoint_empty_while">
      <CMP>
    free type Instr ::= empty | compose(Instr; Instr) |
  				while( BoolExp; Instr ) |
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="ExpSyntax" name="BoolExp"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMS cd="InstrSyntax" name="empty4"/>
                <OMA>
                  <OMS cd="InstrSyntax" name="while"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="ExpSyntax" name="BoolExp"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_empty_while">
      <use format="Hets">ga_disjoint_empty_while</use>
    </presentation>
    <axiom name="ga_disjoint_set_if_then_else">
      <CMP>
  				set( Ident; NumExp ) |
  				if_then_else( BoolExp; Instr; Instr );
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="Ident2"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="NumExp"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="ExpSyntax" name="BoolExp"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="Y3"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="InstrSyntax" name="set4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="Ident2"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="NumExp"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="InstrSyntax" name="if_then_else"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="ExpSyntax" name="BoolExp"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="Y3"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_set_if_then_else">
      <use format="Hets">ga_disjoint_set_if_then_else</use>
    </presentation>
    <axiom name="ga_disjoint_set_while">
      <CMP>
  				set( Ident; NumExp ) |
  				while( BoolExp; Instr ) |
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="Ident2"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="NumExp"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="ExpSyntax" name="BoolExp"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="InstrSyntax" name="set4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="Ident2"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="NumExp"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="InstrSyntax" name="while"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="ExpSyntax" name="BoolExp"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_set_while">
      <use format="Hets">ga_disjoint_set_while</use>
    </presentation>
    <axiom name="ga_disjoint_while_if_then_else">
      <CMP>
  				while( BoolExp; Instr ) |
  				if_then_else( BoolExp; Instr; Instr );
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="ExpSyntax" name="BoolExp"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="ExpSyntax" name="BoolExp"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="Y3"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="InstrSyntax" name="while"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="ExpSyntax" name="BoolExp"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="InstrSyntax" name="if_then_else"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="ExpSyntax" name="BoolExp"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="Y3"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_while_if_then_else">
      <use format="Hets">ga_disjoint_while_if_then_else</use>
    </presentation>
    <axiom name="ga_injective_compose">
      <CMP>
    free type Instr ::= empty | compose(Instr; Instr) |
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="InstrSyntax" name="compose"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="InstrSyntax" name="compose"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective_compose">
      <use format="Hets">ga_injective_compose</use>
    </presentation>
    <axiom name="ga_injective_if_then_else">
      <CMP>
  				if_then_else( BoolExp; Instr; Instr );
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="ExpSyntax" name="BoolExp"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="X3"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="ExpSyntax" name="BoolExp"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="Y3"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="InstrSyntax" name="if_then_else"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="ExpSyntax" name="BoolExp"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="X3"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="InstrSyntax" name="if_then_else"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="ExpSyntax" name="BoolExp"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="Y3"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="ExpSyntax" name="BoolExp"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="ExpSyntax" name="BoolExp"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="X3"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="Y3"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective_if_then_else">
      <use format="Hets">ga_injective_if_then_else</use>
    </presentation>
    <axiom name="ga_injective_set">
      <CMP>
  				set( Ident; NumExp ) |
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="Ident2"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="NumExp"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="Ident2"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="NumExp"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="InstrSyntax" name="set4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="Ident2"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="NumExp"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="InstrSyntax" name="set4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="Ident2"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="NumExp"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="Ident2"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="Ident2"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="NumExp"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="NumExp"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective_set">
      <use format="Hets">ga_injective_set</use>
    </presentation>
    <axiom name="ga_injective_while">
      <CMP>
  				while( BoolExp; Instr ) |
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="ExpSyntax" name="BoolExp"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="ExpSyntax" name="BoolExp"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="InstrSyntax" name="while"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="ExpSyntax" name="BoolExp"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="InstrSyntax" name="while"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="ExpSyntax" name="BoolExp"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="ExpSyntax" name="BoolExp"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="ExpSyntax" name="BoolExp"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective_while">
      <use format="Hets">ga_injective_while</use>
    </presentation>
  </theory>
  <private for="InstrSyntax">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"ExpSyntax" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="InstrSemantics_E1">
    <presentation for="InstrSemantics_E1">
      <use format="Hets">[InstrSemantics,E,1]</use>
    </presentation>
    <imports from="#ExpSemantics"/>
    <imports from="#InstrSyntax"/>
    <symbol role="sort" name="NumSQuote21"/>
    <presentation for="NumSQuote21">
      <use format="Hets">[Num&#39;]</use>
    </presentation>
    <symbol role="sort" name="Env22"/>
    <presentation for="Env22">
      <use format="Hets">[Env]</use>
    </presentation>
    <symbol name="M11" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="ExpSyntax" name="BoolExp"/>
            <OMS cd="InstrSemantics_E1" name="Env22"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M11">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="OK22" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="InstrSemantics_E1" name="NumSQuote21"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="OK22">
      <use format="Hets">[OK]</use>
    </presentation>
    <symbol name="isZero21" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="InstrSemantics_E1" name="NumSQuote21"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero21">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="M30" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="NumExp"/>
            <OMS cd="InstrSemantics_E1" name="Env22"/>
            <OMS cd="InstrSemantics_E1" name="NumSQuote21"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M30">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="find21" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="Ident2"/>
            <OMS cd="InstrSemantics_E1" name="Env22"/>
            <OMS cd="InstrSemantics_E1" name="NumSQuote21"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="find21">
      <use format="Hets">[find]</use>
    </presentation>
  </theory>
  <private for="InstrSemantics_E1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"InstrSyntax" Type:"GlobalDef" Origin:"DGUnion"
From:"ExpSemantics" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="InstrSemantics_1">
    <presentation for="InstrSemantics_1">
      <use format="Hets">[InstrSemantics,,1]</use>
    </presentation>
    <imports from="#InstrSemantics_E1"/>
    <axiom name="Ax13">
      <CMP>
      axioms
        M(empty,E) = E;
        M(compose(I,I&#39;),E) = M(I&#39;,M(I,E));
        M(set(id,nE),E) = set(id,M(nE,E),E);
        M(if_then_else(bE,I,I&#39;),E) = M(I,E) if M(bE,E);
        M(if_then_else(bE,I,I&#39;),E) = M(I&#39;,E) if not M(bE,E);
        M(while(bE,I),E) = M(while(bE,I),M(I,E)) if M(bE,E);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSemantics_E1" name="Env22"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="InstrSemantics_E1" name="M30"/>
                <OMS cd="InstrSyntax" name="empty4"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="InstrSemantics_E1" name="Env22"/>
                  </OMATP>
                  <OMV name="E"/>
                </OMATTR>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSemantics_E1" name="Env22"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax13">
      <use format="Hets">Ax1</use>
    </presentation>
    <axiom name="Ax22">
      <CMP>
      axioms
        M(empty,E) = E;
        M(compose(I,I&#39;),E) = M(I&#39;,M(I,E));
        M(set(id,nE),E) = set(id,M(nE,E),E);
        M(if_then_else(bE,I,I&#39;),E) = M(I,E) if M(bE,E);
        M(if_then_else(bE,I,I&#39;),E) = M(I&#39;,E) if not M(bE,E);
        M(while(bE,I),E) = M(while(bE,I),M(I,E)) if M(bE,E);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSemantics_E1" name="Env22"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="I"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="I&#39;"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="InstrSemantics_E1" name="M30"/>
                <OMA>
                  <OMS cd="InstrSyntax" name="compose"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="I"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="I&#39;"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="InstrSemantics_E1" name="Env22"/>
                  </OMATP>
                  <OMV name="E"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="InstrSemantics_E1" name="M30"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="InstrSyntax" name="Instr"/>
                  </OMATP>
                  <OMV name="I&#39;"/>
                </OMATTR>
                <OMA>
                  <OMS cd="InstrSemantics_E1" name="M30"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="I"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSemantics_E1" name="Env22"/>
                    </OMATP>
                    <OMV name="E"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax22">
      <use format="Hets">Ax2</use>
    </presentation>
    <axiom name="Ax3">
      <CMP>
      axioms
        M(empty,E) = E;
        M(compose(I,I&#39;),E) = M(I&#39;,M(I,E));
        M(set(id,nE),E) = set(id,M(nE,E),E);
        M(if_then_else(bE,I,I&#39;),E) = M(I,E) if M(bE,E);
        M(if_then_else(bE,I,I&#39;),E) = M(I&#39;,E) if not M(bE,E);
        M(while(bE,I),E) = M(while(bE,I),M(I,E)) if M(bE,E);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSemantics_E1" name="Env22"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="Ident2"/>
                </OMATP>
                <OMV name="id"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NExpSyntax" name="NumExp"/>
                </OMATP>
                <OMV name="nE"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="InstrSemantics_E1" name="M30"/>
                <OMA>
                  <OMS cd="InstrSyntax" name="set4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="Ident2"/>
                    </OMATP>
                    <OMV name="id"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="NumExp"/>
                    </OMATP>
                    <OMV name="nE"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="InstrSemantics_E1" name="Env22"/>
                  </OMATP>
                  <OMV name="E"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="InstrSyntax" name="set4"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="NExpSyntax" name="Ident2"/>
                  </OMATP>
                  <OMV name="id"/>
                </OMATTR>
                <OMA>
                  <OMS cd="InstrSemantics_E1" name="M30"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NExpSyntax" name="NumExp"/>
                    </OMATP>
                    <OMV name="nE"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSemantics_E1" name="Env22"/>
                    </OMATP>
                    <OMV name="E"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="InstrSemantics_E1" name="Env22"/>
                  </OMATP>
                  <OMV name="E"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax3">
      <use format="Hets">Ax3</use>
    </presentation>
    <axiom name="Ax4">
      <CMP>
      axioms
        M(empty,E) = E;
        M(compose(I,I&#39;),E) = M(I&#39;,M(I,E));
        M(set(id,nE),E) = set(id,M(nE,E),E);
        M(if_then_else(bE,I,I&#39;),E) = M(I,E) if M(bE,E);
        M(if_then_else(bE,I,I&#39;),E) = M(I&#39;,E) if not M(bE,E);
        M(while(bE,I),E) = M(while(bE,I),M(I,E)) if M(bE,E);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSemantics_E1" name="Env22"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="I"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="I&#39;"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="ExpSyntax" name="BoolExp"/>
                </OMATP>
                <OMV name="bE"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="InstrSemantics_E1" name="M11"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="ExpSyntax" name="BoolExp"/>
                  </OMATP>
                  <OMV name="bE"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="InstrSemantics_E1" name="Env22"/>
                  </OMATP>
                  <OMV name="E"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="InstrSemantics_E1" name="M30"/>
                  <OMA>
                    <OMS cd="InstrSyntax" name="if_then_else"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="ExpSyntax" name="BoolExp"/>
                      </OMATP>
                      <OMV name="bE"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="InstrSyntax" name="Instr"/>
                      </OMATP>
                      <OMV name="I"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="InstrSyntax" name="Instr"/>
                      </OMATP>
                      <OMV name="I&#39;"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSemantics_E1" name="Env22"/>
                    </OMATP>
                    <OMV name="E"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="InstrSemantics_E1" name="M30"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="I"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSemantics_E1" name="Env22"/>
                    </OMATP>
                    <OMV name="E"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMS cd="casl" name="false"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax4">
      <use format="Hets">Ax4</use>
    </presentation>
    <axiom name="Ax5">
      <CMP>
      axioms
        M(empty,E) = E;
        M(compose(I,I&#39;),E) = M(I&#39;,M(I,E));
        M(set(id,nE),E) = set(id,M(nE,E),E);
        M(if_then_else(bE,I,I&#39;),E) = M(I,E) if M(bE,E);
        M(if_then_else(bE,I,I&#39;),E) = M(I&#39;,E) if not M(bE,E);
        M(while(bE,I),E) = M(while(bE,I),M(I,E)) if M(bE,E);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSemantics_E1" name="Env22"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="I"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="I&#39;"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="ExpSyntax" name="BoolExp"/>
                </OMATP>
                <OMV name="bE"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="InstrSemantics_E1" name="M11"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="ExpSyntax" name="BoolExp"/>
                    </OMATP>
                    <OMV name="bE"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSemantics_E1" name="Env22"/>
                    </OMATP>
                    <OMV name="E"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="InstrSemantics_E1" name="M30"/>
                  <OMA>
                    <OMS cd="InstrSyntax" name="if_then_else"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="ExpSyntax" name="BoolExp"/>
                      </OMATP>
                      <OMV name="bE"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="InstrSyntax" name="Instr"/>
                      </OMATP>
                      <OMV name="I"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="InstrSyntax" name="Instr"/>
                      </OMATP>
                      <OMV name="I&#39;"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSemantics_E1" name="Env22"/>
                    </OMATP>
                    <OMV name="E"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="InstrSemantics_E1" name="M30"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSyntax" name="Instr"/>
                    </OMATP>
                    <OMV name="I&#39;"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSemantics_E1" name="Env22"/>
                    </OMATP>
                    <OMV name="E"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMS cd="casl" name="false"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax5">
      <use format="Hets">Ax5</use>
    </presentation>
    <axiom name="Ax6">
      <CMP>
      axioms
        M(empty,E) = E;
        M(compose(I,I&#39;),E) = M(I&#39;,M(I,E));
        M(set(id,nE),E) = set(id,M(nE,E),E);
        M(if_then_else(bE,I,I&#39;),E) = M(I,E) if M(bE,E);
        M(if_then_else(bE,I,I&#39;),E) = M(I&#39;,E) if not M(bE,E);
        M(while(bE,I),E) = M(while(bE,I),M(I,E)) if M(bE,E);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSemantics_E1" name="Env22"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="I"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="ExpSyntax" name="BoolExp"/>
                </OMATP>
                <OMV name="bE"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="InstrSemantics_E1" name="M11"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="ExpSyntax" name="BoolExp"/>
                  </OMATP>
                  <OMV name="bE"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="InstrSemantics_E1" name="Env22"/>
                  </OMATP>
                  <OMV name="E"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="InstrSemantics_E1" name="M30"/>
                  <OMA>
                    <OMS cd="InstrSyntax" name="while"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="ExpSyntax" name="BoolExp"/>
                      </OMATP>
                      <OMV name="bE"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="InstrSyntax" name="Instr"/>
                      </OMATP>
                      <OMV name="I"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSemantics_E1" name="Env22"/>
                    </OMATP>
                    <OMV name="E"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="InstrSemantics_E1" name="M30"/>
                  <OMA>
                    <OMS cd="InstrSyntax" name="while"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="ExpSyntax" name="BoolExp"/>
                      </OMATP>
                      <OMV name="bE"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="InstrSyntax" name="Instr"/>
                      </OMATP>
                      <OMV name="I"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="InstrSemantics_E1" name="M30"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="InstrSyntax" name="Instr"/>
                      </OMATP>
                      <OMV name="I"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="InstrSemantics_E1" name="Env22"/>
                      </OMATP>
                      <OMV name="E"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
              <OMS cd="casl" name="false"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax6">
      <use format="Hets">Ax6</use>
    </presentation>
    <axiom name="Ax7">
      <CMP>
      axioms
        M(empty,E) = E;
        M(compose(I,I&#39;),E) = M(I&#39;,M(I,E));
        M(set(id,nE),E) = set(id,M(nE,E),E);
        M(if_then_else(bE,I,I&#39;),E) = M(I,E) if M(bE,E);
        M(if_then_else(bE,I,I&#39;),E) = M(I&#39;,E) if not M(bE,E);
        M(while(bE,I),E) = M(while(bE,I),M(I,E)) if M(bE,E);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSemantics_E1" name="Env22"/>
                </OMATP>
                <OMV name="E"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="InstrSyntax" name="Instr"/>
                </OMATP>
                <OMV name="I"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="ExpSyntax" name="BoolExp"/>
                </OMATP>
                <OMV name="bE"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="InstrSemantics_E1" name="M11"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="ExpSyntax" name="BoolExp"/>
                    </OMATP>
                    <OMV name="bE"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSemantics_E1" name="Env22"/>
                    </OMATP>
                    <OMV name="E"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="InstrSemantics_E1" name="M30"/>
                  <OMA>
                    <OMS cd="InstrSyntax" name="while"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="ExpSyntax" name="BoolExp"/>
                      </OMATP>
                      <OMV name="bE"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="InstrSyntax" name="Instr"/>
                      </OMATP>
                      <OMV name="I"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="InstrSemantics_E1" name="Env22"/>
                    </OMATP>
                    <OMV name="E"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="InstrSemantics_E1" name="Env22"/>
                  </OMATP>
                  <OMV name="E"/>
                </OMATTR>
              </OMA>
              <OMS cd="casl" name="false"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax7">
      <use format="Hets">Ax7</use>
    </presentation>
  </theory>
  <private for="InstrSemantics_1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"InstrSemantics_E1" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="InstrSemantics">
    <presentation for="InstrSemantics">
      <use format="Hets">[InstrSemantics,,0]</use>
    </presentation>
    <symbol role="sort" name="NumExp2"/>
    <presentation for="NumExp2">
      <use format="Hets">[NumExp]</use>
    </presentation>
    <symbol role="sort" name="NumSQuote6"/>
    <presentation for="NumSQuote6">
      <use format="Hets">[Num&#39;]</use>
    </presentation>
    <symbol role="sort" name="Instr1"/>
    <presentation for="Instr1">
      <use format="Hets">[Instr]</use>
    </presentation>
    <symbol role="sort" name="Ident3"/>
    <presentation for="Ident3">
      <use format="Hets">[Ident]</use>
    </presentation>
    <symbol role="sort" name="Env6"/>
    <presentation for="Env6">
      <use format="Hets">[Env]</use>
    </presentation>
    <symbol role="sort" name="BoolExp1"/>
    <presentation for="BoolExp1">
      <use format="Hets">[BoolExp]</use>
    </presentation>
    <symbol name="M2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="InstrSemantics" name="BoolExp1"/>
            <OMS cd="InstrSemantics" name="Env6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M2">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="OK6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="InstrSemantics" name="NumSQuote6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="OK6">
      <use format="Hets">[OK]</use>
    </presentation>
    <symbol name="isZero6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="InstrSemantics" name="NumSQuote6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero6">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="N03" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="InstrSemantics" name="NumSQuote6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N03">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N03" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="InstrSemantics" name="NumExp2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N03">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N13" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="InstrSemantics" name="NumSQuote6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N13">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="N13" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="InstrSemantics" name="NumExp2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N13">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="M18" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="InstrSemantics" name="NumExp2"/>
            <OMS cd="InstrSemantics" name="Env6"/>
            <OMS cd="InstrSemantics" name="NumSQuote6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M18">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="M18" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="InstrSemantics" name="Instr1"/>
            <OMS cd="InstrSemantics" name="Env6"/>
            <OMS cd="InstrSemantics" name="Env6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M18">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="__Plus__3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="InstrSemantics" name="NumSQuote6"/>
            <OMS cd="InstrSemantics" name="NumSQuote6"/>
            <OMS cd="InstrSemantics" name="NumSQuote6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__3">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__Plus__3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="InstrSemantics" name="NumExp2"/>
            <OMS cd="InstrSemantics" name="NumExp2"/>
            <OMS cd="InstrSemantics" name="NumExp2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__3">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="compose1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="InstrSemantics" name="Instr1"/>
            <OMS cd="InstrSemantics" name="Instr1"/>
            <OMS cd="InstrSemantics" name="Instr1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="compose1">
      <use format="Hets">[compose]</use>
    </presentation>
    <symbol name="empty5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="InstrSemantics" name="Env6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="empty5">
      <use format="Hets">[empty]</use>
    </presentation>
    <symbol name="empty5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="InstrSemantics" name="Instr1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="empty5">
      <use format="Hets">[empty]</use>
    </presentation>
    <symbol name="find5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="InstrSemantics" name="Ident3"/>
            <OMS cd="InstrSemantics" name="Env6"/>
            <OMS cd="InstrSemantics" name="NumSQuote6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="find5">
      <use format="Hets">[find]</use>
    </presentation>
    <symbol name="if_then_else1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="InstrSemantics" name="BoolExp1"/>
            <OMS cd="InstrSemantics" name="Instr1"/>
            <OMS cd="InstrSemantics" name="Instr1"/>
            <OMS cd="InstrSemantics" name="Instr1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="if_then_else1">
      <use format="Hets">[if_then_else]</use>
    </presentation>
    <symbol name="isZero23" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="InstrSemantics" name="NumExp2"/>
            <OMS cd="InstrSemantics" name="BoolExp1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero23">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="set5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="InstrSemantics" name="Ident3"/>
            <OMS cd="InstrSemantics" name="NumSQuote6"/>
            <OMS cd="InstrSemantics" name="Env6"/>
            <OMS cd="InstrSemantics" name="Env6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="set5">
      <use format="Hets">[set]</use>
    </presentation>
    <symbol name="set5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="InstrSemantics" name="Ident3"/>
            <OMS cd="InstrSemantics" name="NumExp2"/>
            <OMS cd="InstrSemantics" name="Instr1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="set5">
      <use format="Hets">[set]</use>
    </presentation>
    <symbol name="variable2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="InstrSemantics" name="Ident3"/>
            <OMS cd="InstrSemantics" name="NumExp2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="variable2">
      <use format="Hets">[variable]</use>
    </presentation>
    <symbol name="while1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="InstrSemantics" name="BoolExp1"/>
            <OMS cd="InstrSemantics" name="Instr1"/>
            <OMS cd="InstrSemantics" name="Instr1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="while1">
      <use format="Hets">[while]</use>
    </presentation>
  </theory>
  <private for="InstrSemantics">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"InstrSemantics_1" Type:"FreeDef EmptyNode" Origin:"DGFree"
]]></data>
  </private>
  <theory xml:id="AnonNode_">
    <presentation for="AnonNode_">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#Num"/>
  </theory>
  <private for="AnonNode_">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Num" Type:"GlobalDef" Origin:"DGSpecInst Num"
]]></data>
  </private>
  <theory xml:id="AnonNode_1">
    <presentation for="AnonNode_1">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#EnvSQuote"/>
  </theory>
  <private for="AnonNode_1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"EnvSQuote" Type:"GlobalDef" Origin:"DGSpecInst Env'"
]]></data>
  </private>
  <theory xml:id="AnonNode_2">
    <presentation for="AnonNode_2">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#NExpSyntax"/>
  </theory>
  <private for="AnonNode_2">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"NExpSyntax" Type:"GlobalDef" Origin:"DGSpecInst NExpSyntax"
]]></data>
  </private>
  <theory xml:id="AnonNode_3">
    <presentation for="AnonNode_3">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_"/>
    <imports from="#AnonNode_1"/>
    <imports from="#AnonNode_2"/>
    <symbol role="sort" name="NumSQuote2"/>
    <presentation for="NumSQuote2">
      <use format="Hets">[Num&#39;]</use>
    </presentation>
    <symbol role="sort" name="Env2"/>
    <presentation for="Env2">
      <use format="Hets">[Env]</use>
    </presentation>
    <symbol name="OK1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_3" name="NumSQuote2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="OK1">
      <use format="Hets">[OK]</use>
    </presentation>
    <symbol name="isZero1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_3" name="NumSQuote2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero1">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="empty1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_3" name="Env2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="empty1">
      <use format="Hets">[empty]</use>
    </presentation>
    <symbol name="find1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="Ident2"/>
            <OMS cd="AnonNode_3" name="Env2"/>
            <OMS cd="AnonNode_3" name="NumSQuote2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="find1">
      <use format="Hets">[find]</use>
    </presentation>
    <symbol name="set1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="Ident2"/>
            <OMS cd="AnonNode_3" name="NumSQuote2"/>
            <OMS cd="AnonNode_3" name="Env2"/>
            <OMS cd="AnonNode_3" name="Env2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="set1">
      <use format="Hets">[set]</use>
    </presentation>
  </theory>
  <private for="AnonNode_3">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_2" Type:"GlobalDef" Origin:"DGFormalParams"
From:"AnonNode_1" Type:"GlobalDef" Origin:"DGFormalParams"
From:"AnonNode_" Type:"GlobalDef" Origin:"DGFormalParams"
]]></data>
  </private>
  <theory xml:id="AnonNode_4">
    <presentation for="AnonNode_4">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_3"/>
    <imports from="#NExpSemantics"/>
  </theory>
  <private for="AnonNode_4">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"NExpSemantics" Type:"GlobalDef" Origin:"DGSpecInst NExpSemantics"
From:"AnonNode_3" Type:"GlobalDef" Origin:"DGSpecInst NExpSemantics"
]]></data>
  </private>
  <theory xml:id="AnonNode_5">
    <presentation for="AnonNode_5">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_4"/>
  </theory>
  <private for="AnonNode_5">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_4" Type:"GlobalDef" Origin:"DGImports"
]]></data>
  </private>
  <theory xml:id="AnonNode_6">
    <presentation for="AnonNode_6">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#NExpSemantics"/>
  </theory>
  <private for="AnonNode_6">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"NExpSemantics" Type:"GlobalDef" Origin:"DGSpecInst NExpSemantics"
]]></data>
  </private>
  <theory xml:id="AnonNode_7">
    <presentation for="AnonNode_7">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#ExpSyntax"/>
  </theory>
  <private for="AnonNode_7">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"ExpSyntax" Type:"GlobalDef" Origin:"DGSpecInst ExpSyntax"
]]></data>
  </private>
  <theory xml:id="AnonNode_8">
    <presentation for="AnonNode_8">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_6"/>
    <imports from="#AnonNode_7"/>
    <symbol role="sort" name="NumSQuote3"/>
    <presentation for="NumSQuote3">
      <use format="Hets">[Num&#39;]</use>
    </presentation>
    <symbol role="sort" name="Env3"/>
    <presentation for="Env3">
      <use format="Hets">[Env]</use>
    </presentation>
    <symbol name="OK3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_8" name="NumSQuote3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="OK3">
      <use format="Hets">[OK]</use>
    </presentation>
    <symbol name="isZero3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_8" name="NumSQuote3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero3">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="M15" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="NumExp"/>
            <OMS cd="AnonNode_8" name="Env3"/>
            <OMS cd="AnonNode_8" name="NumSQuote3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M15">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="empty2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_8" name="Env3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="empty2">
      <use format="Hets">[empty]</use>
    </presentation>
    <symbol name="find2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="Ident2"/>
            <OMS cd="AnonNode_8" name="Env3"/>
            <OMS cd="AnonNode_8" name="NumSQuote3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="find2">
      <use format="Hets">[find]</use>
    </presentation>
    <symbol name="set2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="Ident2"/>
            <OMS cd="AnonNode_8" name="NumSQuote3"/>
            <OMS cd="AnonNode_8" name="Env3"/>
            <OMS cd="AnonNode_8" name="Env3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="set2">
      <use format="Hets">[set]</use>
    </presentation>
  </theory>
  <private for="AnonNode_8">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_7" Type:"GlobalDef" Origin:"DGFormalParams"
From:"AnonNode_6" Type:"GlobalDef" Origin:"DGFormalParams"
]]></data>
  </private>
  <theory xml:id="AnonNode_9">
    <presentation for="AnonNode_9">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_8"/>
    <imports from="#ExpSemantics"/>
  </theory>
  <private for="AnonNode_9">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"ExpSemantics" Type:"GlobalDef" Origin:"DGSpecInst ExpSemantics"
From:"AnonNode_8" Type:"GlobalDef" Origin:"DGSpecInst ExpSemantics"
]]></data>
  </private>
  <theory xml:id="AnonNode_10">
    <presentation for="AnonNode_10">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_9"/>
  </theory>
  <private for="AnonNode_10">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_9" Type:"GlobalDef" Origin:"DGImports"
]]></data>
  </private>
  <theory xml:id="AnonNode_11">
    <presentation for="AnonNode_11">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#ExpSemantics"/>
  </theory>
  <private for="AnonNode_11">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"ExpSemantics" Type:"GlobalDef" Origin:"DGSpecInst ExpSemantics"
]]></data>
  </private>
  <theory xml:id="AnonNode_12">
    <presentation for="AnonNode_12">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#InstrSyntax"/>
  </theory>
  <private for="AnonNode_12">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"InstrSyntax" Type:"GlobalDef" Origin:"DGSpecInst InstrSyntax"
]]></data>
  </private>
  <theory xml:id="AnonNode_13">
    <presentation for="AnonNode_13">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_11"/>
    <imports from="#AnonNode_12"/>
    <symbol role="sort" name="NumSQuote5"/>
    <presentation for="NumSQuote5">
      <use format="Hets">[Num&#39;]</use>
    </presentation>
    <symbol role="sort" name="Env5"/>
    <presentation for="Env5">
      <use format="Hets">[Env]</use>
    </presentation>
    <symbol name="M1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="ExpSyntax" name="BoolExp"/>
            <OMS cd="AnonNode_13" name="Env5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M1">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="OK5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_13" name="NumSQuote5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="OK5">
      <use format="Hets">[OK]</use>
    </presentation>
    <symbol name="isZero5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_13" name="NumSQuote5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero5">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="M17" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="NumExp"/>
            <OMS cd="AnonNode_13" name="Env5"/>
            <OMS cd="AnonNode_13" name="NumSQuote5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M17">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="find4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="Ident2"/>
            <OMS cd="AnonNode_13" name="Env5"/>
            <OMS cd="AnonNode_13" name="NumSQuote5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="find4">
      <use format="Hets">[find]</use>
    </presentation>
  </theory>
  <private for="AnonNode_13">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_12" Type:"GlobalDef" Origin:"DGFormalParams"
From:"AnonNode_11" Type:"GlobalDef" Origin:"DGFormalParams"
]]></data>
  </private>
  <theory xml:id="AnonNode_14">
    <presentation for="AnonNode_14">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_13"/>
    <imports from="#InstrSemantics"/>
  </theory>
  <private for="AnonNode_14">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"InstrSemantics" Type:"GlobalDef" Origin:"DGSpecInst InstrSemantics"
From:"AnonNode_13" Type:"GlobalDef" Origin:"DGSpecInst InstrSemantics"
]]></data>
  </private>
  <theory xml:id="AnonNode_15">
    <presentation for="AnonNode_15">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_14"/>
  </theory>
  <private for="AnonNode_15">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_14" Type:"GlobalDef" Origin:"DGImports"
]]></data>
  </private>
  <theory xml:id="AnonNode_16">
    <presentation for="AnonNode_16">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#InstrSemantics"/>
  </theory>
  <private for="AnonNode_16">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"InstrSemantics" Type:"GlobalDef" Origin:"DGSpecInst InstrSemantics"
]]></data>
  </private>
  <theory xml:id="AnonNode_17">
    <presentation for="AnonNode_17">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#Ident"/>
  </theory>
  <private for="AnonNode_17">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Ident" Type:"GlobalDef" Origin:"DGSpecInst Ident"
]]></data>
  </private>
  <theory xml:id="AnonNode_18">
    <presentation for="AnonNode_18">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#Syntax"/>
  </theory>
  <private for="AnonNode_18">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Syntax" Type:"GlobalDef" Origin:"DGSpecInst Syntax"
]]></data>
  </private>
  <theory xml:id="AnonNode_19">
    <presentation for="AnonNode_19">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_16"/>
    <imports from="#AnonNode_17"/>
    <imports from="#AnonNode_18"/>
    <symbol role="sort" name="NumSQuote7"/>
    <presentation for="NumSQuote7">
      <use format="Hets">[Num&#39;]</use>
    </presentation>
    <symbol role="sort" name="Env7"/>
    <presentation for="Env7">
      <use format="Hets">[Env]</use>
    </presentation>
    <symbol name="M3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Syntax" name="BoolExp2"/>
            <OMS cd="AnonNode_19" name="Env7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M3">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="OK7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_19" name="NumSQuote7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="OK7">
      <use format="Hets">[OK]</use>
    </presentation>
    <symbol name="isZero7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_19" name="NumSQuote7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero7">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="M19" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Syntax" name="NumExp3"/>
            <OMS cd="AnonNode_19" name="Env7"/>
            <OMS cd="AnonNode_19" name="NumSQuote7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M19">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="M19" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Syntax" name="Instr2"/>
            <OMS cd="AnonNode_19" name="Env7"/>
            <OMS cd="AnonNode_19" name="Env7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M19">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="find6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Syntax" name="Ident5"/>
            <OMS cd="AnonNode_19" name="Env7"/>
            <OMS cd="AnonNode_19" name="NumSQuote7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="find6">
      <use format="Hets">[find]</use>
    </presentation>
    <symbol name="in_data1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Syntax" name="Ident5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="in_data1">
      <use format="Hets">[in_data]</use>
    </presentation>
    <symbol name="out_data1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Syntax" name="Ident5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="out_data1">
      <use format="Hets">[out_data]</use>
    </presentation>
  </theory>
  <private for="AnonNode_19">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_18" Type:"GlobalDef" Origin:"DGFormalParams"
From:"AnonNode_17" Type:"GlobalDef" Origin:"DGFormalParams"
From:"AnonNode_16" Type:"GlobalDef" Origin:"DGFormalParams"
]]></data>
  </private>
  <theory xml:id="AnonNode_20">
    <presentation for="AnonNode_20">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_19"/>
    <imports from="#ExtInterpreter"/>
    <symbol role="sort" name="Num1"/>
    <presentation for="Num1">
      <use format="Hets">[Num]</use>
    </presentation>
    <symbol name="Meaning" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Syntax" name="Prog"/>
            <OMS cd="AnonNode_20" name="Num1"/>
            <OMS cd="AnonNode_20" name="Num1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="Meaning">
      <use format="Hets">[Meaning]</use>
    </presentation>
    <symbol name="cons" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Syntax" name="Ident5"/>
            <OMS cd="AnonNode_20" name="Num1"/>
            <OMS cd="AnonNode_19" name="Env7"/>
            <OMS cd="AnonNode_19" name="Env7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="cons">
      <use format="Hets">[cons]</use>
    </presentation>
    <symbol name="nil" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_19" name="Env7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="nil">
      <use format="Hets">[nil]</use>
    </presentation>
    <symbol name="s" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_20" name="Num1"/>
            <OMS cd="AnonNode_20" name="Num1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="s">
      <use format="Hets">[s]</use>
    </presentation>
  </theory>
  <private for="AnonNode_20">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_19" Type:"GlobalDef" Origin:"DGSpecInst ExtInterpreter"
From:"ExtInterpreter" Type:"GlobalDef" Origin:"DGSpecInst ExtInterpreter"
]]></data>
  </private>
  <theory xml:id="AnonNode_21">
    <presentation for="AnonNode_21">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_20"/>
  </theory>
  <private for="AnonNode_21">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_20" Type:"GlobalDef" Origin:"DGImports"
]]></data>
  </private>
  <theory xml:id="AnonNode_22">
    <presentation for="AnonNode_22">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_58"/>
    <imports from="#Ident"/>
  </theory>
  <private for="AnonNode_22">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_58" Type:"GlobalDef" Origin:"DGFormalParams"
From:"Ident" Type:"GlobalDef" Origin:"DGSpecInst Ident"
]]></data>
  </private>
  <theory xml:id="AnonNode_23">
    <presentation for="AnonNode_23">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_32"/>
    <imports from="#Num"/>
  </theory>
  <private for="AnonNode_23">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_32" Type:"GlobalDef" Origin:"DGFormalParams"
From:"Num" Type:"GlobalDef" Origin:"DGSpecInst Num"
]]></data>
  </private>
  <theory xml:id="AnonNode_24">
    <presentation for="AnonNode_24">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_33"/>
    <imports from="#EnvSQuote"/>
  </theory>
  <private for="AnonNode_24">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_33" Type:"GlobalDef" Origin:"DGFormalParams"
From:"EnvSQuote" Type:"GlobalDef" Origin:"DGSpecInst Env'"
]]></data>
  </private>
  <theory xml:id="AnonNode_25">
    <presentation for="AnonNode_25">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_29"/>
    <imports from="#AnonNode_38"/>
    <imports from="#AnonNode_46"/>
    <imports from="#AnonNode_59"/>
    <imports from="#Syntax"/>
  </theory>
  <private for="AnonNode_25">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_59" Type:"GlobalDef" Origin:"DGFormalParams"
From:"AnonNode_46" Type:"GlobalDef" Origin:"DGHiding"
From:"AnonNode_38" Type:"GlobalDef" Origin:"DGHiding"
From:"AnonNode_29" Type:"GlobalDef" Origin:"DGHiding"
From:"Syntax" Type:"GlobalDef" Origin:"DGSpecInst Syntax"
]]></data>
  </private>
  <theory xml:id="AnonNode_26">
    <presentation for="AnonNode_26">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_"/>
    <imports from="#AnonNode_1"/>
    <imports from="#AnonNode_2"/>
    <symbol role="sort" name="NumSQuote10"/>
    <presentation for="NumSQuote10">
      <use format="Hets">[Num&#39;]</use>
    </presentation>
    <symbol role="sort" name="Env9"/>
    <presentation for="Env9">
      <use format="Hets">[Env]</use>
    </presentation>
    <symbol name="OK9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_26" name="NumSQuote10"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="OK9">
      <use format="Hets">[OK]</use>
    </presentation>
    <symbol name="isZero9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_26" name="NumSQuote10"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero9">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="empty9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_26" name="Env9"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="empty9">
      <use format="Hets">[empty]</use>
    </presentation>
    <symbol name="find8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="Ident2"/>
            <OMS cd="AnonNode_26" name="Env9"/>
            <OMS cd="AnonNode_26" name="NumSQuote10"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="find8">
      <use format="Hets">[find]</use>
    </presentation>
    <symbol name="set9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="Ident2"/>
            <OMS cd="AnonNode_26" name="NumSQuote10"/>
            <OMS cd="AnonNode_26" name="Env9"/>
            <OMS cd="AnonNode_26" name="Env9"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="set9">
      <use format="Hets">[set]</use>
    </presentation>
  </theory>
  <private for="AnonNode_26">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_2" Type:"GlobalDef" Origin:"DGFormalParams"
From:"AnonNode_1" Type:"GlobalDef" Origin:"DGFormalParams"
From:"AnonNode_" Type:"GlobalDef" Origin:"DGFormalParams"
]]></data>
  </private>
  <theory xml:id="AnonNode_27">
    <presentation for="AnonNode_27">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_"/>
  </theory>
  <private for="AnonNode_27">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_" Type:"GlobalDef" Origin:"DGFitSpec"
]]></data>
  </private>
  <theory xml:id="AnonNode_28">
    <presentation for="AnonNode_28">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_1"/>
  </theory>
  <private for="AnonNode_28">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_1" Type:"GlobalDef" Origin:"DGFitSpec"
]]></data>
  </private>
  <theory xml:id="AnonNode_29">
    <presentation for="AnonNode_29">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_34"/>
    <symbol role="sort" name="Prog2"/>
    <presentation for="Prog2">
      <use format="Hets">[Prog]</use>
    </presentation>
    <symbol role="sort" name="Instr4"/>
    <presentation for="Instr4">
      <use format="Hets">[Instr]</use>
    </presentation>
    <symbol name="compose4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_29" name="Instr4"/>
            <OMS cd="AnonNode_29" name="Instr4"/>
            <OMS cd="AnonNode_29" name="Instr4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="compose4">
      <use format="Hets">[compose]</use>
    </presentation>
    <symbol name="empty10" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_29" name="Instr4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="empty10">
      <use format="Hets">[empty]</use>
    </presentation>
    <symbol name="program2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_29" name="Instr4"/>
            <OMS cd="AnonNode_29" name="Prog2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="program2">
      <use format="Hets">[program]</use>
    </presentation>
    <symbol name="set10" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_34" name="Ident9"/>
            <OMS cd="AnonNode_34" name="NumExp5"/>
            <OMS cd="AnonNode_29" name="Instr4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="set10">
      <use format="Hets">[set]</use>
    </presentation>
  </theory>
  <private for="AnonNode_29">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_34" Type:"GlobalDef" Origin:"DGFormalParams"
]]></data>
  </private>
  <theory xml:id="AnonNode_30">
    <presentation for="AnonNode_30">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_2"/>
    <symbol role="sort" name="Prog3"/>
    <presentation for="Prog3">
      <use format="Hets">[Prog]</use>
    </presentation>
    <symbol role="sort" name="Instr5"/>
    <presentation for="Instr5">
      <use format="Hets">[Instr]</use>
    </presentation>
    <symbol name="compose5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_30" name="Instr5"/>
            <OMS cd="AnonNode_30" name="Instr5"/>
            <OMS cd="AnonNode_30" name="Instr5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="compose5">
      <use format="Hets">[compose]</use>
    </presentation>
    <symbol name="empty11" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_30" name="Instr5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="empty11">
      <use format="Hets">[empty]</use>
    </presentation>
    <symbol name="program3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_30" name="Instr5"/>
            <OMS cd="AnonNode_30" name="Prog3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="program3">
      <use format="Hets">[program]</use>
    </presentation>
    <symbol name="set11" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="Ident2"/>
            <OMS cd="NExpSyntax" name="NumExp"/>
            <OMS cd="AnonNode_30" name="Instr5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="set11">
      <use format="Hets">[set]</use>
    </presentation>
  </theory>
  <private for="AnonNode_30">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_2" Type:"GlobalDef" Origin:"DGFitSpec"
]]></data>
  </private>
  <theory xml:id="AnonNode_31">
    <presentation for="AnonNode_31">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_27"/>
    <imports from="#AnonNode_28"/>
    <imports from="#AnonNode_30"/>
    <symbol role="sort" name="NumSQuote11"/>
    <presentation for="NumSQuote11">
      <use format="Hets">[Num&#39;]</use>
    </presentation>
    <symbol role="sort" name="Env10"/>
    <presentation for="Env10">
      <use format="Hets">[Env]</use>
    </presentation>
    <symbol name="OK10" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_31" name="NumSQuote11"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="OK10">
      <use format="Hets">[OK]</use>
    </presentation>
    <symbol name="isZero10" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_31" name="NumSQuote11"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero10">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="find9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="Ident2"/>
            <OMS cd="AnonNode_31" name="Env10"/>
            <OMS cd="AnonNode_31" name="NumSQuote11"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="find9">
      <use format="Hets">[find]</use>
    </presentation>
  </theory>
  <private for="AnonNode_31">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_30" Type:"GlobalDef" Origin:"DGFitSpec"
From:"AnonNode_28" Type:"GlobalDef" Origin:"DGFitSpec"
From:"AnonNode_27" Type:"GlobalDef" Origin:"DGFitSpec"
]]></data>
  </private>
  <theory xml:id="AnonNode_32">
    <presentation for="AnonNode_32">
      <use format="Hets">[,,0]</use>
    </presentation>
    <symbol role="sort" name="NumSQuote8"/>
    <presentation for="NumSQuote8">
      <use format="Hets">[Num&#39;]</use>
    </presentation>
    <symbol name="OK8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_32" name="NumSQuote8"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="OK8">
      <use format="Hets">[OK]</use>
    </presentation>
    <symbol name="isZero8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_32" name="NumSQuote8"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero8">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="N05" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_32" name="NumSQuote8"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N05">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N15" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_32" name="NumSQuote8"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N15">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="__Plus__5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_32" name="NumSQuote8"/>
            <OMS cd="AnonNode_32" name="NumSQuote8"/>
            <OMS cd="AnonNode_32" name="NumSQuote8"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__5">
      <use format="Hets">[__,+,__]</use>
    </presentation>
  </theory>
  <theory xml:id="AnonNode_33">
    <presentation for="AnonNode_33">
      <use format="Hets">[,,0]</use>
    </presentation>
    <symbol role="sort" name="NumSQuote9"/>
    <presentation for="NumSQuote9">
      <use format="Hets">[Num&#39;]</use>
    </presentation>
    <symbol role="sort" name="Ident7"/>
    <presentation for="Ident7">
      <use format="Hets">[Ident]</use>
    </presentation>
    <symbol role="sort" name="Env8"/>
    <presentation for="Env8">
      <use format="Hets">[Env]</use>
    </presentation>
    <symbol name="empty7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_33" name="Env8"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="empty7">
      <use format="Hets">[empty]</use>
    </presentation>
    <symbol name="find7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_33" name="Ident7"/>
            <OMS cd="AnonNode_33" name="Env8"/>
            <OMS cd="AnonNode_33" name="NumSQuote9"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="find7">
      <use format="Hets">[find]</use>
    </presentation>
    <symbol name="set7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_33" name="Ident7"/>
            <OMS cd="AnonNode_33" name="NumSQuote9"/>
            <OMS cd="AnonNode_33" name="Env8"/>
            <OMS cd="AnonNode_33" name="Env8"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="set7">
      <use format="Hets">[set]</use>
    </presentation>
  </theory>
  <theory xml:id="AnonNode_34">
    <presentation for="AnonNode_34">
      <use format="Hets">[,,0]</use>
    </presentation>
    <symbol role="sort" name="NumExp5"/>
    <presentation for="NumExp5">
      <use format="Hets">[NumExp]</use>
    </presentation>
    <symbol role="sort" name="Ident9"/>
    <presentation for="Ident9">
      <use format="Hets">[Ident]</use>
    </presentation>
    <symbol name="N07" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_34" name="NumExp5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N07">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N17" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_34" name="NumExp5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N17">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="__Plus__7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_34" name="NumExp5"/>
            <OMS cd="AnonNode_34" name="NumExp5"/>
            <OMS cd="AnonNode_34" name="NumExp5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__7">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="variable5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_34" name="Ident9"/>
            <OMS cd="AnonNode_34" name="NumExp5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="variable5">
      <use format="Hets">[variable]</use>
    </presentation>
  </theory>
  <theory xml:id="AnonNode_35">
    <presentation for="AnonNode_35">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_41"/>
    <imports from="#AnonNode_5">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_5" name="N02"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_35" name="N08"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_5" name="N12"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_35" name="N18"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_5" name="OK"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_35" name="OK11"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_5" name="__Plus__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_35" name="__Plus__8"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_5" name="empty"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_35" name="empty12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_5" name="find"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_35" name="find10"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_5" name="isZero"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_35" name="isZero11"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_5" name="set"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_35" name="set12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_5" name="variable1"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_35" name="variable6"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <symbol role="sort" name="Prog4"/>
    <presentation for="Prog4">
      <use format="Hets">[Prog]</use>
    </presentation>
    <symbol role="sort" name="Instr6"/>
    <presentation for="Instr6">
      <use format="Hets">[Instr]</use>
    </presentation>
    <symbol name="compose6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_35" name="Instr6"/>
            <OMS cd="AnonNode_35" name="Instr6"/>
            <OMS cd="AnonNode_35" name="Instr6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="compose6">
      <use format="Hets">[compose]</use>
    </presentation>
    <symbol name="program4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_35" name="Instr6"/>
            <OMS cd="AnonNode_35" name="Prog4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="program4">
      <use format="Hets">[program]</use>
    </presentation>
  </theory>
  <private for="AnonNode_35">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_41" Type:"GlobalDef" Origin:"DGFormalParams"
From:"AnonNode_5" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="AnonNode_36">
    <presentation for="AnonNode_36">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_6"/>
    <imports from="#AnonNode_7"/>
    <symbol role="sort" name="NumSQuote13"/>
    <presentation for="NumSQuote13">
      <use format="Hets">[Num&#39;]</use>
    </presentation>
    <symbol role="sort" name="Env12"/>
    <presentation for="Env12">
      <use format="Hets">[Env]</use>
    </presentation>
    <symbol name="OK12" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_36" name="NumSQuote13"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="OK12">
      <use format="Hets">[OK]</use>
    </presentation>
    <symbol name="isZero12" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_36" name="NumSQuote13"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero12">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="M21" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="NumExp"/>
            <OMS cd="AnonNode_36" name="Env12"/>
            <OMS cd="AnonNode_36" name="NumSQuote13"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M21">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="empty13" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_36" name="Env12"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="empty13">
      <use format="Hets">[empty]</use>
    </presentation>
    <symbol name="find11" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="Ident2"/>
            <OMS cd="AnonNode_36" name="Env12"/>
            <OMS cd="AnonNode_36" name="NumSQuote13"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="find11">
      <use format="Hets">[find]</use>
    </presentation>
    <symbol name="set13" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="Ident2"/>
            <OMS cd="AnonNode_36" name="NumSQuote13"/>
            <OMS cd="AnonNode_36" name="Env12"/>
            <OMS cd="AnonNode_36" name="Env12"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="set13">
      <use format="Hets">[set]</use>
    </presentation>
  </theory>
  <private for="AnonNode_36">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_7" Type:"GlobalDef" Origin:"DGFormalParams"
From:"AnonNode_6" Type:"GlobalDef" Origin:"DGFormalParams"
]]></data>
  </private>
  <theory xml:id="AnonNode_37">
    <presentation for="AnonNode_37">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_6"/>
    <symbol role="sort" name="Prog5"/>
    <presentation for="Prog5">
      <use format="Hets">[Prog]</use>
    </presentation>
    <symbol role="sort" name="Instr7"/>
    <presentation for="Instr7">
      <use format="Hets">[Instr]</use>
    </presentation>
    <symbol name="compose7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_37" name="Instr7"/>
            <OMS cd="AnonNode_37" name="Instr7"/>
            <OMS cd="AnonNode_37" name="Instr7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="compose7">
      <use format="Hets">[compose]</use>
    </presentation>
    <symbol name="program5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_37" name="Instr7"/>
            <OMS cd="AnonNode_37" name="Prog5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="program5">
      <use format="Hets">[program]</use>
    </presentation>
  </theory>
  <private for="AnonNode_37">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_6" Type:"GlobalDef" Origin:"DGFitSpec"
]]></data>
  </private>
  <theory xml:id="AnonNode_38">
    <presentation for="AnonNode_38">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_42"/>
    <symbol role="sort" name="Prog6"/>
    <presentation for="Prog6">
      <use format="Hets">[Prog]</use>
    </presentation>
  </theory>
  <private for="AnonNode_38">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_42" Type:"GlobalDef" Origin:"DGFormalParams"
]]></data>
  </private>
  <theory xml:id="AnonNode_39">
    <presentation for="AnonNode_39">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_7"/>
    <symbol role="sort" name="Prog7"/>
    <presentation for="Prog7">
      <use format="Hets">[Prog]</use>
    </presentation>
  </theory>
  <private for="AnonNode_39">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_7" Type:"GlobalDef" Origin:"DGFitSpec"
]]></data>
  </private>
  <theory xml:id="AnonNode_40">
    <presentation for="AnonNode_40">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_37"/>
    <imports from="#AnonNode_39"/>
    <symbol role="sort" name="NumSQuote14"/>
    <presentation for="NumSQuote14">
      <use format="Hets">[Num&#39;]</use>
    </presentation>
    <symbol role="sort" name="Instr8"/>
    <presentation for="Instr8">
      <use format="Hets">[Instr]</use>
    </presentation>
    <symbol role="sort" name="Env13"/>
    <presentation for="Env13">
      <use format="Hets">[Env]</use>
    </presentation>
    <symbol name="OK13" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_40" name="NumSQuote14"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="OK13">
      <use format="Hets">[OK]</use>
    </presentation>
    <symbol name="isZero13" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_40" name="NumSQuote14"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero13">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="M22" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="NumExp"/>
            <OMS cd="AnonNode_40" name="Env13"/>
            <OMS cd="AnonNode_40" name="NumSQuote14"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M22">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="compose8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_40" name="Instr8"/>
            <OMS cd="AnonNode_40" name="Instr8"/>
            <OMS cd="AnonNode_40" name="Instr8"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="compose8">
      <use format="Hets">[compose]</use>
    </presentation>
    <symbol name="empty14" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_40" name="Env13"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="empty14">
      <use format="Hets">[empty]</use>
    </presentation>
    <symbol name="empty14" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_40" name="Instr8"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="empty14">
      <use format="Hets">[empty]</use>
    </presentation>
    <symbol name="find12" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="Ident2"/>
            <OMS cd="AnonNode_40" name="Env13"/>
            <OMS cd="AnonNode_40" name="NumSQuote14"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="find12">
      <use format="Hets">[find]</use>
    </presentation>
    <symbol name="program6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_40" name="Instr8"/>
            <OMS cd="AnonNode_39" name="Prog7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="program6">
      <use format="Hets">[program]</use>
    </presentation>
    <symbol name="set14" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="Ident2"/>
            <OMS cd="AnonNode_40" name="NumSQuote14"/>
            <OMS cd="AnonNode_40" name="Env13"/>
            <OMS cd="AnonNode_40" name="Env13"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="set14">
      <use format="Hets">[set]</use>
    </presentation>
    <symbol name="set14" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="Ident2"/>
            <OMS cd="NExpSyntax" name="NumExp"/>
            <OMS cd="AnonNode_40" name="Instr8"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="set14">
      <use format="Hets">[set]</use>
    </presentation>
  </theory>
  <private for="AnonNode_40">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_39" Type:"GlobalDef" Origin:"DGFitSpec"
From:"AnonNode_37" Type:"GlobalDef" Origin:"DGFitSpec"
]]></data>
  </private>
  <theory xml:id="AnonNode_41">
    <presentation for="AnonNode_41">
      <use format="Hets">[,,0]</use>
    </presentation>
    <symbol role="sort" name="NumExp6"/>
    <presentation for="NumExp6">
      <use format="Hets">[NumExp]</use>
    </presentation>
    <symbol role="sort" name="NumSQuote12"/>
    <presentation for="NumSQuote12">
      <use format="Hets">[Num&#39;]</use>
    </presentation>
    <symbol role="sort" name="Ident10"/>
    <presentation for="Ident10">
      <use format="Hets">[Ident]</use>
    </presentation>
    <symbol role="sort" name="Env11"/>
    <presentation for="Env11">
      <use format="Hets">[Env]</use>
    </presentation>
    <symbol name="OK11" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_41" name="NumSQuote12"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="OK11">
      <use format="Hets">[OK]</use>
    </presentation>
    <symbol name="isZero11" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_41" name="NumSQuote12"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero11">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="N08" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_41" name="NumSQuote12"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N08">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N08" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_41" name="NumExp6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N08">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N18" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_41" name="NumSQuote12"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N18">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="N18" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_41" name="NumExp6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N18">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="M20" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_41" name="NumExp6"/>
            <OMS cd="AnonNode_41" name="Env11"/>
            <OMS cd="AnonNode_41" name="NumSQuote12"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M20">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="__Plus__8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_41" name="NumSQuote12"/>
            <OMS cd="AnonNode_41" name="NumSQuote12"/>
            <OMS cd="AnonNode_41" name="NumSQuote12"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__8">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__Plus__8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_41" name="NumExp6"/>
            <OMS cd="AnonNode_41" name="NumExp6"/>
            <OMS cd="AnonNode_41" name="NumExp6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__8">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="empty12" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_41" name="Env11"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="empty12">
      <use format="Hets">[empty]</use>
    </presentation>
    <symbol name="find10" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_41" name="Ident10"/>
            <OMS cd="AnonNode_41" name="Env11"/>
            <OMS cd="AnonNode_41" name="NumSQuote12"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="find10">
      <use format="Hets">[find]</use>
    </presentation>
    <symbol name="set12" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_41" name="Ident10"/>
            <OMS cd="AnonNode_41" name="NumSQuote12"/>
            <OMS cd="AnonNode_41" name="Env11"/>
            <OMS cd="AnonNode_41" name="Env11"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="set12">
      <use format="Hets">[set]</use>
    </presentation>
    <symbol name="variable6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_41" name="Ident10"/>
            <OMS cd="AnonNode_41" name="NumExp6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="variable6">
      <use format="Hets">[variable]</use>
    </presentation>
  </theory>
  <theory xml:id="AnonNode_42">
    <presentation for="AnonNode_42">
      <use format="Hets">[,,0]</use>
    </presentation>
    <symbol role="sort" name="NumExp7"/>
    <presentation for="NumExp7">
      <use format="Hets">[NumExp]</use>
    </presentation>
    <symbol role="sort" name="Ident11"/>
    <presentation for="Ident11">
      <use format="Hets">[Ident]</use>
    </presentation>
    <symbol role="sort" name="BoolExp4"/>
    <presentation for="BoolExp4">
      <use format="Hets">[BoolExp]</use>
    </presentation>
    <symbol name="N09" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_42" name="NumExp7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N09">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N19" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_42" name="NumExp7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N19">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="__Plus__9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_42" name="NumExp7"/>
            <OMS cd="AnonNode_42" name="NumExp7"/>
            <OMS cd="AnonNode_42" name="NumExp7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__9">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="isZero26" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_42" name="NumExp7"/>
            <OMS cd="AnonNode_42" name="BoolExp4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero26">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="variable7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_42" name="Ident11"/>
            <OMS cd="AnonNode_42" name="NumExp7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="variable7">
      <use format="Hets">[variable]</use>
    </presentation>
  </theory>
  <theory xml:id="AnonNode_43">
    <presentation for="AnonNode_43">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_10">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_10" name="M16"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_43" name="M23"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_10" name="N01"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_43" name="N010"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_10" name="N11"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_43" name="N110"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_10" name="OK"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_43" name="OK14"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_10" name="__Plus__1"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_43" name="__Plus__10"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_10" name="empty3"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_43" name="empty15"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_10" name="find3"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_43" name="find13"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_10" name="isZero"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_43" name="isZero14"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_10" name="isZero22"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_43" name="isZero27"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_10" name="set3"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_43" name="set15"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_10" name="variable"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_43" name="variable8"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <imports from="#AnonNode_49"/>
    <symbol role="sort" name="Prog8"/>
    <presentation for="Prog8">
      <use format="Hets">[Prog]</use>
    </presentation>
    <symbol role="sort" name="Instr9"/>
    <presentation for="Instr9">
      <use format="Hets">[Instr]</use>
    </presentation>
    <symbol name="compose9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_43" name="Instr9"/>
            <OMS cd="AnonNode_43" name="Instr9"/>
            <OMS cd="AnonNode_43" name="Instr9"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="compose9">
      <use format="Hets">[compose]</use>
    </presentation>
    <symbol name="program7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_43" name="Instr9"/>
            <OMS cd="AnonNode_43" name="Prog8"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="program7">
      <use format="Hets">[program]</use>
    </presentation>
  </theory>
  <private for="AnonNode_43">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_49" Type:"GlobalDef" Origin:"DGFormalParams"
From:"AnonNode_10" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="AnonNode_44">
    <presentation for="AnonNode_44">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_11"/>
    <imports from="#AnonNode_12"/>
    <symbol role="sort" name="NumSQuote16"/>
    <presentation for="NumSQuote16">
      <use format="Hets">[Num&#39;]</use>
    </presentation>
    <symbol role="sort" name="Env15"/>
    <presentation for="Env15">
      <use format="Hets">[Env]</use>
    </presentation>
    <symbol name="M5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="ExpSyntax" name="BoolExp"/>
            <OMS cd="AnonNode_44" name="Env15"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M5">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="OK15" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_44" name="NumSQuote16"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="OK15">
      <use format="Hets">[OK]</use>
    </presentation>
    <symbol name="isZero15" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_44" name="NumSQuote16"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero15">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="M24" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="NumExp"/>
            <OMS cd="AnonNode_44" name="Env15"/>
            <OMS cd="AnonNode_44" name="NumSQuote16"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M24">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="find14" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="Ident2"/>
            <OMS cd="AnonNode_44" name="Env15"/>
            <OMS cd="AnonNode_44" name="NumSQuote16"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="find14">
      <use format="Hets">[find]</use>
    </presentation>
  </theory>
  <private for="AnonNode_44">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_12" Type:"GlobalDef" Origin:"DGFormalParams"
From:"AnonNode_11" Type:"GlobalDef" Origin:"DGFormalParams"
]]></data>
  </private>
  <theory xml:id="AnonNode_45">
    <presentation for="AnonNode_45">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_11"/>
    <symbol role="sort" name="Prog9"/>
    <presentation for="Prog9">
      <use format="Hets">[Prog]</use>
    </presentation>
    <symbol role="sort" name="Instr10"/>
    <presentation for="Instr10">
      <use format="Hets">[Instr]</use>
    </presentation>
    <symbol name="compose10" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_45" name="Instr10"/>
            <OMS cd="AnonNode_45" name="Instr10"/>
            <OMS cd="AnonNode_45" name="Instr10"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="compose10">
      <use format="Hets">[compose]</use>
    </presentation>
    <symbol name="program8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_45" name="Instr10"/>
            <OMS cd="AnonNode_45" name="Prog9"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="program8">
      <use format="Hets">[program]</use>
    </presentation>
  </theory>
  <private for="AnonNode_45">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_11" Type:"GlobalDef" Origin:"DGFitSpec"
]]></data>
  </private>
  <theory xml:id="AnonNode_46">
    <presentation for="AnonNode_46">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_50"/>
  </theory>
  <private for="AnonNode_46">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_50" Type:"GlobalDef" Origin:"DGFormalParams"
]]></data>
  </private>
  <theory xml:id="AnonNode_47">
    <presentation for="AnonNode_47">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_12"/>
  </theory>
  <private for="AnonNode_47">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_12" Type:"GlobalDef" Origin:"DGFitSpec"
]]></data>
  </private>
  <theory xml:id="AnonNode_48">
    <presentation for="AnonNode_48">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_45"/>
    <imports from="#AnonNode_47"/>
    <symbol role="sort" name="Prog10"/>
    <presentation for="Prog10">
      <use format="Hets">[Prog]</use>
    </presentation>
    <symbol role="sort" name="NumSQuote17"/>
    <presentation for="NumSQuote17">
      <use format="Hets">[Num&#39;]</use>
    </presentation>
    <symbol role="sort" name="Env16"/>
    <presentation for="Env16">
      <use format="Hets">[Env]</use>
    </presentation>
    <symbol name="M6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="ExpSyntax" name="BoolExp"/>
            <OMS cd="AnonNode_48" name="Env16"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M6">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="OK16" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_48" name="NumSQuote17"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="OK16">
      <use format="Hets">[OK]</use>
    </presentation>
    <symbol name="isZero16" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_48" name="NumSQuote17"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero16">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="M25" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="NumExp"/>
            <OMS cd="AnonNode_48" name="Env16"/>
            <OMS cd="AnonNode_48" name="NumSQuote17"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M25">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="find15" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NExpSyntax" name="Ident2"/>
            <OMS cd="AnonNode_48" name="Env16"/>
            <OMS cd="AnonNode_48" name="NumSQuote17"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="find15">
      <use format="Hets">[find]</use>
    </presentation>
    <symbol name="program9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="InstrSyntax" name="Instr"/>
            <OMS cd="AnonNode_48" name="Prog10"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="program9">
      <use format="Hets">[program]</use>
    </presentation>
  </theory>
  <private for="AnonNode_48">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_47" Type:"GlobalDef" Origin:"DGFitSpec"
From:"AnonNode_45" Type:"GlobalDef" Origin:"DGFitSpec"
]]></data>
  </private>
  <theory xml:id="AnonNode_49">
    <presentation for="AnonNode_49">
      <use format="Hets">[,,0]</use>
    </presentation>
    <symbol role="sort" name="NumExp8"/>
    <presentation for="NumExp8">
      <use format="Hets">[NumExp]</use>
    </presentation>
    <symbol role="sort" name="NumSQuote15"/>
    <presentation for="NumSQuote15">
      <use format="Hets">[Num&#39;]</use>
    </presentation>
    <symbol role="sort" name="Ident12"/>
    <presentation for="Ident12">
      <use format="Hets">[Ident]</use>
    </presentation>
    <symbol role="sort" name="Env14"/>
    <presentation for="Env14">
      <use format="Hets">[Env]</use>
    </presentation>
    <symbol role="sort" name="BoolExp5"/>
    <presentation for="BoolExp5">
      <use format="Hets">[BoolExp]</use>
    </presentation>
    <symbol name="M4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_49" name="BoolExp5"/>
            <OMS cd="AnonNode_49" name="Env14"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M4">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="OK14" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_49" name="NumSQuote15"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="OK14">
      <use format="Hets">[OK]</use>
    </presentation>
    <symbol name="isZero14" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_49" name="NumSQuote15"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero14">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="N010" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_49" name="NumSQuote15"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N010">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N010" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_49" name="NumExp8"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N010">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N110" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_49" name="NumSQuote15"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N110">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="N110" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_49" name="NumExp8"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N110">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="M23" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_49" name="NumExp8"/>
            <OMS cd="AnonNode_49" name="Env14"/>
            <OMS cd="AnonNode_49" name="NumSQuote15"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M23">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="__Plus__10" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_49" name="NumSQuote15"/>
            <OMS cd="AnonNode_49" name="NumSQuote15"/>
            <OMS cd="AnonNode_49" name="NumSQuote15"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__10">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__Plus__10" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_49" name="NumExp8"/>
            <OMS cd="AnonNode_49" name="NumExp8"/>
            <OMS cd="AnonNode_49" name="NumExp8"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__10">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="empty15" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_49" name="Env14"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="empty15">
      <use format="Hets">[empty]</use>
    </presentation>
    <symbol name="find13" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_49" name="Ident12"/>
            <OMS cd="AnonNode_49" name="Env14"/>
            <OMS cd="AnonNode_49" name="NumSQuote15"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="find13">
      <use format="Hets">[find]</use>
    </presentation>
    <symbol name="isZero27" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_49" name="NumExp8"/>
            <OMS cd="AnonNode_49" name="BoolExp5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero27">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="set15" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_49" name="Ident12"/>
            <OMS cd="AnonNode_49" name="NumSQuote15"/>
            <OMS cd="AnonNode_49" name="Env14"/>
            <OMS cd="AnonNode_49" name="Env14"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="set15">
      <use format="Hets">[set]</use>
    </presentation>
    <symbol name="variable8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_49" name="Ident12"/>
            <OMS cd="AnonNode_49" name="NumExp8"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="variable8">
      <use format="Hets">[variable]</use>
    </presentation>
  </theory>
  <theory xml:id="AnonNode_50">
    <presentation for="AnonNode_50">
      <use format="Hets">[,,0]</use>
    </presentation>
    <symbol role="sort" name="NumExp9"/>
    <presentation for="NumExp9">
      <use format="Hets">[NumExp]</use>
    </presentation>
    <symbol role="sort" name="Instr11"/>
    <presentation for="Instr11">
      <use format="Hets">[Instr]</use>
    </presentation>
    <symbol role="sort" name="Ident13"/>
    <presentation for="Ident13">
      <use format="Hets">[Ident]</use>
    </presentation>
    <symbol role="sort" name="BoolExp6"/>
    <presentation for="BoolExp6">
      <use format="Hets">[BoolExp]</use>
    </presentation>
    <symbol name="N011" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_50" name="NumExp9"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N011">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N111" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_50" name="NumExp9"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N111">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="__Plus__11" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_50" name="NumExp9"/>
            <OMS cd="AnonNode_50" name="NumExp9"/>
            <OMS cd="AnonNode_50" name="NumExp9"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__11">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="compose11" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_50" name="Instr11"/>
            <OMS cd="AnonNode_50" name="Instr11"/>
            <OMS cd="AnonNode_50" name="Instr11"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="compose11">
      <use format="Hets">[compose]</use>
    </presentation>
    <symbol name="empty16" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_50" name="Instr11"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="empty16">
      <use format="Hets">[empty]</use>
    </presentation>
    <symbol name="if_then_else4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_50" name="BoolExp6"/>
            <OMS cd="AnonNode_50" name="Instr11"/>
            <OMS cd="AnonNode_50" name="Instr11"/>
            <OMS cd="AnonNode_50" name="Instr11"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="if_then_else4">
      <use format="Hets">[if_then_else]</use>
    </presentation>
    <symbol name="isZero28" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_50" name="NumExp9"/>
            <OMS cd="AnonNode_50" name="BoolExp6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero28">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="set16" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_50" name="Ident13"/>
            <OMS cd="AnonNode_50" name="NumExp9"/>
            <OMS cd="AnonNode_50" name="Instr11"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="set16">
      <use format="Hets">[set]</use>
    </presentation>
    <symbol name="variable9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_50" name="Ident13"/>
            <OMS cd="AnonNode_50" name="NumExp9"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="variable9">
      <use format="Hets">[variable]</use>
    </presentation>
    <symbol name="while4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_50" name="BoolExp6"/>
            <OMS cd="AnonNode_50" name="Instr11"/>
            <OMS cd="AnonNode_50" name="Instr11"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="while4">
      <use format="Hets">[while]</use>
    </presentation>
  </theory>
  <theory xml:id="AnonNode_51">
    <presentation for="AnonNode_51">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_15">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_15" name="M"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_51" name="M7"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_15" name="M18"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_51" name="M26"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_15" name="N03"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_51" name="N012"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_15" name="N13"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_51" name="N112"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_15" name="OK"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_51" name="OK17"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_15" name="__Plus__3"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_51" name="__Plus__12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_15" name="compose1"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_51" name="compose12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_15" name="empty5"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_51" name="empty17"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_15" name="find5"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_51" name="find16"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_15" name="if_then_else1"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_51" name="if_then_else5"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_15" name="isZero"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_51" name="isZero17"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_15" name="isZero23"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_51" name="isZero29"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_15" name="set5"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_51" name="set17"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_15" name="variable2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_51" name="variable10"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_15" name="while1"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_51" name="while5"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <imports from="#AnonNode_57"/>
    <symbol role="sort" name="Prog11"/>
    <presentation for="Prog11">
      <use format="Hets">[Prog]</use>
    </presentation>
    <symbol name="program10" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_57" name="Instr12"/>
            <OMS cd="AnonNode_51" name="Prog11"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="program10">
      <use format="Hets">[program]</use>
    </presentation>
  </theory>
  <private for="AnonNode_51">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_57" Type:"GlobalDef" Origin:"DGFormalParams"
From:"AnonNode_15" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="AnonNode_52">
    <presentation for="AnonNode_52">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_16"/>
    <imports from="#AnonNode_17"/>
    <imports from="#AnonNode_18"/>
    <symbol role="sort" name="NumSQuote19"/>
    <presentation for="NumSQuote19">
      <use format="Hets">[Num&#39;]</use>
    </presentation>
    <symbol role="sort" name="Env18"/>
    <presentation for="Env18">
      <use format="Hets">[Env]</use>
    </presentation>
    <symbol name="M8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Syntax" name="BoolExp2"/>
            <OMS cd="AnonNode_52" name="Env18"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M8">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="OK18" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_52" name="NumSQuote19"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="OK18">
      <use format="Hets">[OK]</use>
    </presentation>
    <symbol name="isZero18" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_52" name="NumSQuote19"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero18">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="M27" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Syntax" name="NumExp3"/>
            <OMS cd="AnonNode_52" name="Env18"/>
            <OMS cd="AnonNode_52" name="NumSQuote19"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M27">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="M27" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Syntax" name="Instr2"/>
            <OMS cd="AnonNode_52" name="Env18"/>
            <OMS cd="AnonNode_52" name="Env18"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M27">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="find17" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Syntax" name="Ident5"/>
            <OMS cd="AnonNode_52" name="Env18"/>
            <OMS cd="AnonNode_52" name="NumSQuote19"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="find17">
      <use format="Hets">[find]</use>
    </presentation>
    <symbol name="in_data3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Syntax" name="Ident5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="in_data3">
      <use format="Hets">[in_data]</use>
    </presentation>
    <symbol name="out_data3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Syntax" name="Ident5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="out_data3">
      <use format="Hets">[out_data]</use>
    </presentation>
  </theory>
  <private for="AnonNode_52">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_18" Type:"GlobalDef" Origin:"DGFormalParams"
From:"AnonNode_17" Type:"GlobalDef" Origin:"DGFormalParams"
From:"AnonNode_16" Type:"GlobalDef" Origin:"DGFormalParams"
]]></data>
  </private>
  <theory xml:id="AnonNode_53">
    <presentation for="AnonNode_53">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_16"/>
    <symbol role="sort" name="Prog12"/>
    <presentation for="Prog12">
      <use format="Hets">[Prog]</use>
    </presentation>
    <symbol name="program11" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="InstrSemantics" name="Instr1"/>
            <OMS cd="AnonNode_53" name="Prog12"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="program11">
      <use format="Hets">[program]</use>
    </presentation>
  </theory>
  <private for="AnonNode_53">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_16" Type:"GlobalDef" Origin:"DGFitSpec"
]]></data>
  </private>
  <theory xml:id="AnonNode_54">
    <presentation for="AnonNode_54">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_17"/>
  </theory>
  <private for="AnonNode_54">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_17" Type:"GlobalDef" Origin:"DGFitSpec"
]]></data>
  </private>
  <theory xml:id="AnonNode_55">
    <presentation for="AnonNode_55">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_18"/>
  </theory>
  <private for="AnonNode_55">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_18" Type:"GlobalDef" Origin:"DGFitSpec"
]]></data>
  </private>
  <theory xml:id="AnonNode_56">
    <presentation for="AnonNode_56">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_53"/>
    <imports from="#AnonNode_54"/>
    <imports from="#AnonNode_55"/>
    <symbol role="sort" name="NumSQuote20"/>
    <presentation for="NumSQuote20">
      <use format="Hets">[Num&#39;]</use>
    </presentation>
    <symbol role="sort" name="Env19"/>
    <presentation for="Env19">
      <use format="Hets">[Env]</use>
    </presentation>
    <symbol name="M9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Syntax" name="BoolExp2"/>
            <OMS cd="AnonNode_56" name="Env19"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M9">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="OK19" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_56" name="NumSQuote20"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="OK19">
      <use format="Hets">[OK]</use>
    </presentation>
    <symbol name="isZero19" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_56" name="NumSQuote20"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero19">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="M28" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Syntax" name="NumExp3"/>
            <OMS cd="AnonNode_56" name="Env19"/>
            <OMS cd="AnonNode_56" name="NumSQuote20"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M28">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="M28" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Syntax" name="Instr2"/>
            <OMS cd="AnonNode_56" name="Env19"/>
            <OMS cd="AnonNode_56" name="Env19"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M28">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="find18" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Syntax" name="Ident5"/>
            <OMS cd="AnonNode_56" name="Env19"/>
            <OMS cd="AnonNode_56" name="NumSQuote20"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="find18">
      <use format="Hets">[find]</use>
    </presentation>
    <symbol name="in_data4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Syntax" name="Ident5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="in_data4">
      <use format="Hets">[in_data]</use>
    </presentation>
    <symbol name="out_data4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Syntax" name="Ident5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="out_data4">
      <use format="Hets">[out_data]</use>
    </presentation>
  </theory>
  <private for="AnonNode_56">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_55" Type:"GlobalDef" Origin:"DGFitSpec"
From:"AnonNode_54" Type:"GlobalDef" Origin:"DGFitSpec"
From:"AnonNode_53" Type:"GlobalDef" Origin:"DGFitSpec"
]]></data>
  </private>
  <theory xml:id="AnonNode_57">
    <presentation for="AnonNode_57">
      <use format="Hets">[,,0]</use>
    </presentation>
    <symbol role="sort" name="NumExp10"/>
    <presentation for="NumExp10">
      <use format="Hets">[NumExp]</use>
    </presentation>
    <symbol role="sort" name="NumSQuote18"/>
    <presentation for="NumSQuote18">
      <use format="Hets">[Num&#39;]</use>
    </presentation>
    <symbol role="sort" name="Instr12"/>
    <presentation for="Instr12">
      <use format="Hets">[Instr]</use>
    </presentation>
    <symbol role="sort" name="Ident14"/>
    <presentation for="Ident14">
      <use format="Hets">[Ident]</use>
    </presentation>
    <symbol role="sort" name="Env17"/>
    <presentation for="Env17">
      <use format="Hets">[Env]</use>
    </presentation>
    <symbol role="sort" name="BoolExp7"/>
    <presentation for="BoolExp7">
      <use format="Hets">[BoolExp]</use>
    </presentation>
    <symbol name="M7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_57" name="BoolExp7"/>
            <OMS cd="AnonNode_57" name="Env17"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M7">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="OK17" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_57" name="NumSQuote18"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="OK17">
      <use format="Hets">[OK]</use>
    </presentation>
    <symbol name="isZero17" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="AnonNode_57" name="NumSQuote18"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero17">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="N012" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_57" name="NumSQuote18"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N012">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N012" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_57" name="NumExp10"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N012">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N112" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_57" name="NumSQuote18"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N112">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="N112" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_57" name="NumExp10"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N112">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="M26" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_57" name="NumExp10"/>
            <OMS cd="AnonNode_57" name="Env17"/>
            <OMS cd="AnonNode_57" name="NumSQuote18"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M26">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="M26" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="AnonNode_57" name="Instr12"/>
            <OMS cd="AnonNode_57" name="Env17"/>
            <OMS cd="AnonNode_57" name="Env17"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="M26">
      <use format="Hets">[M]</use>
    </presentation>
    <symbol name="__Plus__12" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_57" name="NumSQuote18"/>
            <OMS cd="AnonNode_57" name="NumSQuote18"/>
            <OMS cd="AnonNode_57" name="NumSQuote18"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__12">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__Plus__12" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_57" name="NumExp10"/>
            <OMS cd="AnonNode_57" name="NumExp10"/>
            <OMS cd="AnonNode_57" name="NumExp10"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__12">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="compose12" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_57" name="Instr12"/>
            <OMS cd="AnonNode_57" name="Instr12"/>
            <OMS cd="AnonNode_57" name="Instr12"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="compose12">
      <use format="Hets">[compose]</use>
    </presentation>
    <symbol name="empty17" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_57" name="Env17"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="empty17">
      <use format="Hets">[empty]</use>
    </presentation>
    <symbol name="empty17" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_57" name="Instr12"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="empty17">
      <use format="Hets">[empty]</use>
    </presentation>
    <symbol name="find16" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_57" name="Ident14"/>
            <OMS cd="AnonNode_57" name="Env17"/>
            <OMS cd="AnonNode_57" name="NumSQuote18"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="find16">
      <use format="Hets">[find]</use>
    </presentation>
    <symbol name="if_then_else5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_57" name="BoolExp7"/>
            <OMS cd="AnonNode_57" name="Instr12"/>
            <OMS cd="AnonNode_57" name="Instr12"/>
            <OMS cd="AnonNode_57" name="Instr12"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="if_then_else5">
      <use format="Hets">[if_then_else]</use>
    </presentation>
    <symbol name="isZero29" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_57" name="NumExp10"/>
            <OMS cd="AnonNode_57" name="BoolExp7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero29">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="set17" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_57" name="Ident14"/>
            <OMS cd="AnonNode_57" name="NumSQuote18"/>
            <OMS cd="AnonNode_57" name="Env17"/>
            <OMS cd="AnonNode_57" name="Env17"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="set17">
      <use format="Hets">[set]</use>
    </presentation>
    <symbol name="set17" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_57" name="Ident14"/>
            <OMS cd="AnonNode_57" name="NumExp10"/>
            <OMS cd="AnonNode_57" name="Instr12"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="set17">
      <use format="Hets">[set]</use>
    </presentation>
    <symbol name="variable10" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_57" name="Ident14"/>
            <OMS cd="AnonNode_57" name="NumExp10"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="variable10">
      <use format="Hets">[variable]</use>
    </presentation>
    <symbol name="while5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_57" name="BoolExp7"/>
            <OMS cd="AnonNode_57" name="Instr12"/>
            <OMS cd="AnonNode_57" name="Instr12"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="while5">
      <use format="Hets">[while]</use>
    </presentation>
  </theory>
  <theory xml:id="AnonNode_58">
    <presentation for="AnonNode_58">
      <use format="Hets">[,,0]</use>
    </presentation>
    <symbol role="sort" name="Ident6"/>
    <presentation for="Ident6">
      <use format="Hets">[Ident]</use>
    </presentation>
    <symbol name="in_data2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_58" name="Ident6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="in_data2">
      <use format="Hets">[in_data]</use>
    </presentation>
    <symbol name="out_data2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_58" name="Ident6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="out_data2">
      <use format="Hets">[out_data]</use>
    </presentation>
  </theory>
  <theory xml:id="AnonNode_59">
    <presentation for="AnonNode_59">
      <use format="Hets">[,,0]</use>
    </presentation>
    <symbol role="sort" name="Prog1"/>
    <presentation for="Prog1">
      <use format="Hets">[Prog]</use>
    </presentation>
    <symbol role="sort" name="NumExp4"/>
    <presentation for="NumExp4">
      <use format="Hets">[NumExp]</use>
    </presentation>
    <symbol role="sort" name="Instr3"/>
    <presentation for="Instr3">
      <use format="Hets">[Instr]</use>
    </presentation>
    <symbol role="sort" name="Ident8"/>
    <presentation for="Ident8">
      <use format="Hets">[Ident]</use>
    </presentation>
    <symbol role="sort" name="BoolExp3"/>
    <presentation for="BoolExp3">
      <use format="Hets">[BoolExp]</use>
    </presentation>
    <symbol name="N06" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_59" name="NumExp4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N06">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N16" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_59" name="NumExp4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N16">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="__Plus__6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_59" name="NumExp4"/>
            <OMS cd="AnonNode_59" name="NumExp4"/>
            <OMS cd="AnonNode_59" name="NumExp4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__6">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="compose3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_59" name="Instr3"/>
            <OMS cd="AnonNode_59" name="Instr3"/>
            <OMS cd="AnonNode_59" name="Instr3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="compose3">
      <use format="Hets">[compose]</use>
    </presentation>
    <symbol name="empty8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_59" name="Instr3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="empty8">
      <use format="Hets">[empty]</use>
    </presentation>
    <symbol name="if_then_else3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_59" name="BoolExp3"/>
            <OMS cd="AnonNode_59" name="Instr3"/>
            <OMS cd="AnonNode_59" name="Instr3"/>
            <OMS cd="AnonNode_59" name="Instr3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="if_then_else3">
      <use format="Hets">[if_then_else]</use>
    </presentation>
    <symbol name="isZero25" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_59" name="NumExp4"/>
            <OMS cd="AnonNode_59" name="BoolExp3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isZero25">
      <use format="Hets">[isZero]</use>
    </presentation>
    <symbol name="program1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_59" name="Instr3"/>
            <OMS cd="AnonNode_59" name="Prog1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="program1">
      <use format="Hets">[program]</use>
    </presentation>
    <symbol name="set8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_59" name="Ident8"/>
            <OMS cd="AnonNode_59" name="NumExp4"/>
            <OMS cd="AnonNode_59" name="Instr3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="set8">
      <use format="Hets">[set]</use>
    </presentation>
    <symbol name="variable4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_59" name="Ident8"/>
            <OMS cd="AnonNode_59" name="NumExp4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="variable4">
      <use format="Hets">[variable]</use>
    </presentation>
    <symbol name="while3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="AnonNode_59" name="BoolExp3"/>
            <OMS cd="AnonNode_59" name="Instr3"/>
            <OMS cd="AnonNode_59" name="Instr3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="while3">
      <use format="Hets">[while]</use>
    </presentation>
  </theory>
  <theory xml:id="AnonNode_60">
    <presentation for="AnonNode_60">
      <use format="Hets">[,,0]</use>
    </presentation>
    <imports from="#AnonNode_21">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_21" name="M"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_60" name="M3"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_21" name="M19"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_60" name="M19"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_21" name="N04"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_60" name="N04"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_21" name="N14"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_60" name="N14"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_21" name="OK"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_60" name="OK7"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_21" name="__Plus__4"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_60" name="__Plus__4"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_21" name="compose2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_60" name="compose2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_21" name="empty6"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_60" name="empty6"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_21" name="find6"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_60" name="find6"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_21" name="if_then_else2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_60" name="if_then_else2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_21" name="in_data1"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_60" name="in_data1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_21" name="isZero"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_60" name="isZero7"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_21" name="isZero24"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_60" name="isZero24"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_21" name="out_data1"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_60" name="out_data1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_21" name="program"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_60" name="program"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_21" name="set6"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_60" name="set6"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_21" name="variable3"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_60" name="variable3"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="AnonNode_21" name="while2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="AnonNode_60" name="while2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
  </theory>
  <private for="AnonNode_60">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_21" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
</omdoc>
