<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE omdoc PUBLIC "-//OMDoc//DTD OMDoc V1.2//EN" "http://www.tzi.de/~hiben/omdoc/dtd/omdoc.dtd">
<omdoc xml:id="StructuredDatatypes">
  <theory xml:id="Maybe_P">
    <presentation for="Maybe_P">
      <use format="Hets">[Maybe,P,0]</use>
    </presentation>
    <symbol role="sort" name="S8"/>
    <presentation for="S8">
      <use format="Hets">[S]</use>
    </presentation>
  </theory>
  <theory xml:id="Maybe">
    <presentation for="Maybe">
      <use format="Hets">[Maybe,,0]</use>
    </presentation>
    <imports from="#Maybe_P"/>
    <symbol role="sort" name="MaybeSBrackOpenSSBrackClose"/>
    <presentation for="MaybeSBrackOpenSSBrackClose">
      <use format="Hets">[Maybe[S]]</use>
    </presentation>
    <adt>
      <sortdef name="MaybeSBrackOpenSSBrackClose" type="free">
        <constructor name="g__inj">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="Maybe_P" name="S8"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="nothing1"/>
        <insort for="#S8"/>
      </sortdef>
    </adt>
    <adt>
      <sortdef name="MaybeSBrackOpenSSBrackClose" type="free">
        <constructor name="g__inj">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="Maybe_P" name="S8"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="nothing1"/>
        <insort for="#S8"/>
      </sortdef>
    </adt>
    <symbol name="nothing" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Maybe" name="MaybeSBrackOpenSSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="nothing">
      <use format="Hets">[nothing]</use>
    </presentation>
    <axiom name="ga_disjoint_nothing_sort_S">
      <CMP>
  free type Maybe[S] ::= nothing | sort S
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="membership"/>
              <OMS cd="Maybe" name="nothing"/>
              <OMS cd="Maybe_P" name="S8"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_nothing_sort_S">
      <use format="Hets">ga_disjoint_nothing_sort_S</use>
    </presentation>
  </theory>
  <private for="Maybe">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Maybe_P" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Pair_P1">
    <presentation for="Pair_P1">
      <use format="Hets">[Pair,P,1]</use>
    </presentation>
    <symbol role="sort" name="S10"/>
    <presentation for="S10">
      <use format="Hets">[S]</use>
    </presentation>
  </theory>
  <theory xml:id="Pair_P2">
    <presentation for="Pair_P2">
      <use format="Hets">[Pair,P,2]</use>
    </presentation>
    <symbol role="sort" name="T6"/>
    <presentation for="T6">
      <use format="Hets">[T]</use>
    </presentation>
  </theory>
  <theory xml:id="Pair_P">
    <presentation for="Pair_P">
      <use format="Hets">[Pair,P,0]</use>
    </presentation>
    <imports from="#Pair_P1"/>
    <imports from="#Pair_P2"/>
    <symbol role="sort" name="S9"/>
    <presentation for="S9">
      <use format="Hets">[S]</use>
    </presentation>
  </theory>
  <private for="Pair_P">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Pair_P2" Type:"GlobalDef" Origin:"DGFormalParams"
From:"Pair_P1" Type:"GlobalDef" Origin:"DGFormalParams"
]]></data>
  </private>
  <theory xml:id="Pair">
    <presentation for="Pair">
      <use format="Hets">[Pair,,0]</use>
    </presentation>
    <imports from="#Pair_P"/>
    <symbol role="sort" name="PairSBrackOpenSCommaTSBrackClose"/>
    <presentation for="PairSBrackOpenSCommaTSBrackClose">
      <use format="Hets">[Pair[S],[T]]</use>
    </presentation>
    <adt>
      <sortdef name="PairSBrackOpenSCommaTSBrackClose" type="free">
        <constructor name="pair1">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="Pair_P" name="S9"/>
              </OMOBJ>
            </type>
          </argument>
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="Pair_P2" name="T6"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
      </sortdef>
    </adt>
    <symbol name="first10" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Pair" name="PairSBrackOpenSCommaTSBrackClose"/>
            <OMS cd="Pair_P" name="S9"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="first10">
      <use format="Hets">[first]</use>
    </presentation>
    <symbol name="pair" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Pair_P" name="S9"/>
            <OMS cd="Pair_P2" name="T6"/>
            <OMS cd="Pair" name="PairSBrackOpenSCommaTSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="pair">
      <use format="Hets">[pair]</use>
    </presentation>
    <symbol name="second" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Pair" name="PairSBrackOpenSCommaTSBrackClose"/>
            <OMS cd="Pair_P2" name="T6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="second">
      <use format="Hets">[second]</use>
    </presentation>
    <axiom name="ga_injective_pair">
      <CMP>
  free type Pair[S,T] ::= pair(first:S; second:T)
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Pair_P" name="S9"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Pair_P2" name="T6"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Pair_P" name="S9"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Pair_P2" name="T6"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Pair" name="pair"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Pair_P" name="S9"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Pair_P2" name="T6"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Pair" name="pair"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Pair_P" name="S9"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Pair_P2" name="T6"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Pair_P" name="S9"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Pair_P" name="S9"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Pair_P2" name="T6"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Pair_P2" name="T6"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective_pair">
      <use format="Hets">ga_injective_pair</use>
    </presentation>
    <axiom name="ga_selector_first3">
      <CMP>
  free type Pair[S,T] ::= pair(first:S; second:T)
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Pair_P" name="S9"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Pair_P2" name="T6"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Pair" name="first10"/>
                <OMA>
                  <OMS cd="Pair" name="pair"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Pair_P" name="S9"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Pair_P2" name="T6"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Pair_P" name="S9"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_first3">
      <use format="Hets">ga_selector_first</use>
    </presentation>
    <axiom name="ga_selector_second">
      <CMP>
  free type Pair[S,T] ::= pair(first:S; second:T)
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Pair_P" name="S9"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Pair_P2" name="T6"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Pair" name="second"/>
                <OMA>
                  <OMS cd="Pair" name="pair"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Pair_P" name="S9"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Pair_P2" name="T6"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Pair_P2" name="T6"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_second">
      <use format="Hets">ga_selector_second</use>
    </presentation>
  </theory>
  <private for="Pair">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Pair_P" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="GenerateSet_P">
    <presentation for="GenerateSet_P">
      <use format="Hets">[GenerateSet,P,0]</use>
    </presentation>
    <symbol role="sort" name="Elem29"/>
    <presentation for="Elem29">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <theory xml:id="GenerateSet">
    <presentation for="GenerateSet">
      <use format="Hets">[GenerateSet,,0]</use>
    </presentation>
    <imports from="#GenerateSet_P"/>
    <symbol role="sort" name="SetSBrackOpenElemSBrackClose4"/>
    <presentation for="SetSBrackOpenElemSBrackClose4">
      <use format="Hets">[Set[Elem]]</use>
    </presentation>
    <symbol name="__eps__5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="GenerateSet_P" name="Elem29"/>
            <OMS cd="GenerateSet" name="SetSBrackOpenElemSBrackClose4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__eps__5">
      <use format="Hets">[__,eps,__]</use>
    </presentation>
    <symbol name="__Plus__4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="GenerateSet" name="SetSBrackOpenElemSBrackClose4"/>
            <OMS cd="GenerateSet_P" name="Elem29"/>
            <OMS cd="GenerateSet" name="SetSBrackOpenElemSBrackClose4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__4">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="BraceOpenBraceClose6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="GenerateSet" name="SetSBrackOpenElemSBrackClose4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BraceOpenBraceClose6">
      <use format="Hets">[{,}]</use>
    </presentation>
    <axiom name="elemOf_NonEmpty_Set">
      <CMP>
  forall x,y: Elem; M,N: Set[Elem]
  forall x,y: Elem; M,N: Set[Elem]
  . not x eps {}                                   %(elemOf_empty_Set)%
  . x eps M+y &#60;=&#62; x=y \/ x eps M                   %(elemOf_NonEmpty_Set)%
  . M = N &#60;=&#62; (forall x: Elem . x eps M &#60;=&#62; x eps N)  %(equality_Set)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateSet_P" name="Elem29"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateSet_P" name="Elem29"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateSet" name="SetSBrackOpenElemSBrackClose4"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="GenerateSet" name="__eps__5"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="GenerateSet_P" name="Elem29"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="GenerateSet" name="__Plus__4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateSet" name="SetSBrackOpenElemSBrackClose4"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateSet_P" name="Elem29"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="disjunction"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateSet_P" name="Elem29"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateSet_P" name="Elem29"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="GenerateSet" name="__eps__5"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateSet_P" name="Elem29"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateSet" name="SetSBrackOpenElemSBrackClose4"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="elemOf_NonEmpty_Set">
      <use format="Hets">elemOf_NonEmpty_Set</use>
    </presentation>
    <axiom name="elemOf_empty_Set">
      <CMP>
  forall x,y: Elem; M,N: Set[Elem]
  forall x,y: Elem; M,N: Set[Elem]
  . not x eps {}                                   %(elemOf_empty_Set)%
  . x eps M+y &#60;=&#62; x=y \/ x eps M                   %(elemOf_NonEmpty_Set)%
  . M = N &#60;=&#62; (forall x: Elem . x eps M &#60;=&#62; x eps N)  %(equality_Set)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateSet_P" name="Elem29"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="GenerateSet" name="__eps__5"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="GenerateSet_P" name="Elem29"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMS cd="GenerateSet" name="BraceOpenBraceClose6"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="elemOf_empty_Set">
      <use format="Hets">elemOf_empty_Set</use>
    </presentation>
    <axiom name="equality_Set">
      <CMP>
  forall x,y: Elem; M,N: Set[Elem]
  forall x,y: Elem; M,N: Set[Elem]
  . not x eps {}                                   %(elemOf_empty_Set)%
  . x eps M+y &#60;=&#62; x=y \/ x eps M                   %(elemOf_NonEmpty_Set)%
  . M = N &#60;=&#62; (forall x: Elem . x eps M &#60;=&#62; x eps N)  %(equality_Set)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateSet" name="SetSBrackOpenElemSBrackClose4"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateSet" name="SetSBrackOpenElemSBrackClose4"/>
                </OMATP>
                <OMV name="N"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="GenerateSet" name="SetSBrackOpenElemSBrackClose4"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="GenerateSet" name="SetSBrackOpenElemSBrackClose4"/>
                  </OMATP>
                  <OMV name="N"/>
                </OMATTR>
              </OMA>
              <OMBIND>
                <OMS cd="casl" name="universal"/>
                <OMBVAR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateSet_P" name="Elem29"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMBVAR>
                <OMA>
                  <OMS cd="casl" name="equivalence"/>
                  <OMA>
                    <OMS cd="casl" name="predication"/>
                    <OMS cd="GenerateSet" name="__eps__5"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="GenerateSet_P" name="Elem29"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="GenerateSet" name="SetSBrackOpenElemSBrackClose4"/>
                      </OMATP>
                      <OMV name="M"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="casl" name="predication"/>
                    <OMS cd="GenerateSet" name="__eps__5"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="GenerateSet_P" name="Elem29"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="GenerateSet" name="SetSBrackOpenElemSBrackClose4"/>
                      </OMATP>
                      <OMV name="N"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMBIND>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="equality_Set">
      <use format="Hets">equality_Set</use>
    </presentation>
    <axiom name="ga_generated_SetSBrackOpenElemSBrackClose">
      <CMP/>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="sort-gen-ax"/>
            <OMBIND>
              <OMS cd="casl" name="Set[Elem]"/>
              <OMBVAR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="constraint-indices"/>
                    <OMSTR>0|-1|</OMSTR>
                  </OMATP>
                  <OMS cd="GenerateSet" name="__Plus__4"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="constraint-indices"/>
                    <OMSTR/>
                  </OMATP>
                  <OMS cd="GenerateSet" name="BraceOpenBraceClose6"/>
                </OMATTR>
              </OMBVAR>
              <OMS cd="casl" name="Set[Elem]"/>
            </OMBIND>
            <OMS cd="casl" name="false"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_generated_SetSBrackOpenElemSBrackClose">
      <use format="Hets">ga_generated_Set[Elem]</use>
    </presentation>
  </theory>
  <private for="GenerateSet">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"GenerateSet_P" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Set_PI">
    <presentation for="Set_PI">
      <use format="Hets">[Set,PI,0]</use>
    </presentation>
    <imports from="Basic/Numbers.omdoc#Nat"/>
  </theory>
  <private for="Set_PI">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="Set_P">
    <presentation for="Set_P">
      <use format="Hets">[Set,P,0]</use>
    </presentation>
    <imports from="#Set_PI"/>
    <symbol role="sort" name="Elem5"/>
    <presentation for="Elem5">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="Set_P">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Set_E2A">
    <presentation for="Set_E2A">
      <use format="Hets">[Set,E2A,0]</use>
    </presentation>
    <symbol role="sort" name="Elem52"/>
    <presentation for="Elem52">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="Set_E2A">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"GenerateSet_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst GenerateSet"
]]></data>
  </private>
  <theory xml:id="Set_E2">
    <presentation for="Set_E2">
      <use format="Hets">[Set,E,2]</use>
    </presentation>
    <imports from="#GenerateSet"/>
    <imports from="#Set_E2A"/>
    <imports from="#Set_P"/>
    <symbol role="sort" name="SetSBrackOpenElemSBrackClose1"/>
    <presentation for="SetSBrackOpenElemSBrackClose1">
      <use format="Hets">[Set[Elem]]</use>
    </presentation>
    <symbol name="__eps__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Set_P" name="Elem5"/>
            <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__eps__2">
      <use format="Hets">[__,eps,__]</use>
    </presentation>
    <symbol name="BraceOpenBraceClose2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BraceOpenBraceClose2">
      <use format="Hets">[{,}]</use>
    </presentation>
  </theory>
  <private for="Set_E2">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set_P" Type:"GlobalDef" Origin:"DGSpecInst GenerateSet"
From:"Set_E2A" Type:"GlobalDef" Origin:"DGFitSpec"
From:"GenerateSet" Type:"GlobalDef" Origin:"DGSpecInst GenerateSet"
]]></data>
  </private>
  <theory xml:id="Set_E1">
    <presentation for="Set_E1">
      <use format="Hets">[Set,E,1]</use>
    </presentation>
    <imports from="#Set_E2"/>
    <symbol name="__isSubsetOf__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
            <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__isSubsetOf__2">
      <use format="Hets">[__,isSubsetOf,__]</use>
    </presentation>
    <symbol name="isNonEmpty1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isNonEmpty1">
      <use format="Hets">[isNonEmpty]</use>
    </presentation>
    <symbol name="Hash__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="Hash__1">
      <use format="Hets">[#,__]</use>
    </presentation>
    <symbol name="__Minus__3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
            <OMS cd="Set_P" name="Elem5"/>
            <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__3">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__Minus__3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
            <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
            <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__3">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__intersection__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
            <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
            <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__intersection__2">
      <use format="Hets">[__,intersection,__]</use>
    </presentation>
    <symbol name="__symDiff__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
            <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
            <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__symDiff__1">
      <use format="Hets">[__,symDiff,__]</use>
    </presentation>
    <symbol name="__union__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
            <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
            <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__union__2">
      <use format="Hets">[__,union,__]</use>
    </presentation>
    <symbol name="BraceOpen__BraceClose2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Set_P" name="Elem5"/>
            <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BraceOpen__BraceClose2">
      <use format="Hets">[{,__,}]</use>
    </presentation>
    <axiom name="addElem_def_Set">
      <CMP>
  forall x,y: Elem; M,N,O: Set[Elem]
  forall x,y: Elem; M,N,O: Set[Elem]
  . isNonEmpty(M) &#60;=&#62; not M = {}             %(isNonEmpty_def)%
  . M isSubsetOf N &#60;=&#62; 
  . { x } = {} + x                                %(singletonSet_def)%
  . # {}       =  0                             %(numberOf_emptySet)%
  . # (M + x)  =  # M       when x eps M else
  . x + M = M + x                               %(addElem_def_Set)%
  . {}      - y  = {}                           %(remElem_EmptySet)%
  . (M + x) - y  =  M-y      when x=y else
  . M intersection {}    = {}                   %(intersection_Emptyset)%
  . M intersection (N+x) = 
  . M union {}    =  M                          %(union_EmptySet)%
  . M union (N+x) =  M union N      when x eps M else
  . M - {} = M                                  %(dif_Emptyset)%
  . M - (N+x) = (M - N) - x                     %(dif_Emptyset)%
  . M symDiff N = (M-N) union (N-M)              %(symDiff_def)%
  . (M union N) intersection O = 
  . O intersection (M union N) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_P" name="Elem5"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__Plus__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_P" name="Elem5"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat" name="__Plus__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_P" name="Elem5"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="addElem_def_Set">
      <use format="Hets">addElem_def_Set</use>
    </presentation>
    <axiom name="dif_Emptyset">
      <CMP>
  forall x,y: Elem; M,N,O: Set[Elem]
  forall x,y: Elem; M,N,O: Set[Elem]
  . isNonEmpty(M) &#60;=&#62; not M = {}             %(isNonEmpty_def)%
  . M isSubsetOf N &#60;=&#62; 
  . { x } = {} + x                                %(singletonSet_def)%
  . # {}       =  0                             %(numberOf_emptySet)%
  . # (M + x)  =  # M       when x eps M else
  . x + M = M + x                               %(addElem_def_Set)%
  . {}      - y  = {}                           %(remElem_EmptySet)%
  . (M + x) - y  =  M-y      when x=y else
  . M intersection {}    = {}                   %(intersection_Emptyset)%
  . M intersection (N+x) = 
  . M union {}    =  M                          %(union_EmptySet)%
  . M union (N+x) =  M union N      when x eps M else
  . M - {} = M                                  %(dif_Emptyset)%
  . M - (N+x) = (M - N) - x                     %(dif_Emptyset)%
  . M symDiff N = (M-N) union (N-M)              %(symDiff_def)%
  . (M union N) intersection O = 
  . O intersection (M union N) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__Minus__3"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
                <OMS cd="Set_E2" name="BraceOpenBraceClose2"/>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="dif_Emptyset">
      <use format="Hets">dif_Emptyset</use>
    </presentation>
    <axiom name="dif_Emptyset_1">
      <CMP>
  forall x,y: Elem; M,N,O: Set[Elem]
  forall x,y: Elem; M,N,O: Set[Elem]
  . isNonEmpty(M) &#60;=&#62; not M = {}             %(isNonEmpty_def)%
  . M isSubsetOf N &#60;=&#62; 
  . { x } = {} + x                                %(singletonSet_def)%
  . # {}       =  0                             %(numberOf_emptySet)%
  . # (M + x)  =  # M       when x eps M else
  . x + M = M + x                               %(addElem_def_Set)%
  . {}      - y  = {}                           %(remElem_EmptySet)%
  . (M + x) - y  =  M-y      when x=y else
  . M intersection {}    = {}                   %(intersection_Emptyset)%
  . M intersection (N+x) = 
  . M union {}    =  M                          %(union_EmptySet)%
  . M union (N+x) =  M union N      when x eps M else
  . M - {} = M                                  %(dif_Emptyset)%
  . M - (N+x) = (M - N) - x                     %(dif_Emptyset)%
  . M symDiff N = (M-N) union (N-M)              %(symDiff_def)%
  . (M union N) intersection O = 
  . O intersection (M union N) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_P" name="Elem5"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="N"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__Minus__3"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat" name="__Plus__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="N"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Set_E1" name="__Minus__3"/>
                <OMA>
                  <OMS cd="Set_E1" name="__Minus__3"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="N"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_P" name="Elem5"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="dif_Emptyset_1">
      <use format="Hets">dif_Emptyset_1</use>
    </presentation>
    <axiom name="distr1_Set">
      <CMP>
  forall x,y: Elem; M,N,O: Set[Elem]
  forall x,y: Elem; M,N,O: Set[Elem]
  . isNonEmpty(M) &#60;=&#62; not M = {}             %(isNonEmpty_def)%
  . M isSubsetOf N &#60;=&#62; 
  . { x } = {} + x                                %(singletonSet_def)%
  . # {}       =  0                             %(numberOf_emptySet)%
  . # (M + x)  =  # M       when x eps M else
  . x + M = M + x                               %(addElem_def_Set)%
  . {}      - y  = {}                           %(remElem_EmptySet)%
  . (M + x) - y  =  M-y      when x=y else
  . M intersection {}    = {}                   %(intersection_Emptyset)%
  . M intersection (N+x) = 
  . M union {}    =  M                          %(union_EmptySet)%
  . M union (N+x) =  M union N      when x eps M else
  . M - {} = M                                  %(dif_Emptyset)%
  . M - (N+x) = (M - N) - x                     %(dif_Emptyset)%
  . M symDiff N = (M-N) union (N-M)              %(symDiff_def)%
  . (M union N) intersection O = 
  . O intersection (M union N) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="N"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="O"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__intersection__2"/>
                <OMA>
                  <OMS cd="Set_E1" name="__union__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="N"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="O"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Set_E1" name="__union__2"/>
                <OMA>
                  <OMS cd="Set_E1" name="__intersection__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="O"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Set_E1" name="__intersection__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="N"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="O"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="distr1_Set">
      <use format="Hets">distr1_Set</use>
    </presentation>
    <axiom name="distr2_Set">
      <CMP>
  forall x,y: Elem; M,N,O: Set[Elem]
  forall x,y: Elem; M,N,O: Set[Elem]
  . isNonEmpty(M) &#60;=&#62; not M = {}             %(isNonEmpty_def)%
  . M isSubsetOf N &#60;=&#62; 
  . { x } = {} + x                                %(singletonSet_def)%
  . # {}       =  0                             %(numberOf_emptySet)%
  . # (M + x)  =  # M       when x eps M else
  . x + M = M + x                               %(addElem_def_Set)%
  . {}      - y  = {}                           %(remElem_EmptySet)%
  . (M + x) - y  =  M-y      when x=y else
  . M intersection {}    = {}                   %(intersection_Emptyset)%
  . M intersection (N+x) = 
  . M union {}    =  M                          %(union_EmptySet)%
  . M union (N+x) =  M union N      when x eps M else
  . M - {} = M                                  %(dif_Emptyset)%
  . M - (N+x) = (M - N) - x                     %(dif_Emptyset)%
  . M symDiff N = (M-N) union (N-M)              %(symDiff_def)%
  . (M union N) intersection O = 
  . O intersection (M union N) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="N"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="O"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__intersection__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="O"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Set_E1" name="__union__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="N"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Set_E1" name="__union__2"/>
                <OMA>
                  <OMS cd="Set_E1" name="__intersection__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="O"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Set_E1" name="__intersection__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="O"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="N"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="distr2_Set">
      <use format="Hets">distr2_Set</use>
    </presentation>
    <axiom name="ga_assoc___intersection__2">
      <CMP>
  __ intersection __ : Set[Elem] * Set[Elem] -&#62; Set[Elem],
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="z"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__intersection__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Set_E1" name="__intersection__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="z"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Set_E1" name="__intersection__2"/>
                <OMA>
                  <OMS cd="Set_E1" name="__intersection__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="z"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_assoc___intersection__2">
      <use format="Hets">ga_assoc___intersection__</use>
    </presentation>
    <axiom name="ga_assoc___union__2">
      <CMP>
  __ union __ : Set[Elem] * Set[Elem] -&#62; Set[Elem],
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="z"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__union__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Set_E1" name="__union__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="z"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Set_E1" name="__union__2"/>
                <OMA>
                  <OMS cd="Set_E1" name="__union__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="z"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_assoc___union__2">
      <use format="Hets">ga_assoc___union__</use>
    </presentation>
    <axiom name="ga_comm___intersection__2">
      <CMP>
  __ intersection __ : Set[Elem] * Set[Elem] -&#62; Set[Elem],
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__intersection__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Set_E1" name="__intersection__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_comm___intersection__2">
      <use format="Hets">ga_comm___intersection__</use>
    </presentation>
    <axiom name="ga_comm___union__2">
      <CMP>
  __ union __ : Set[Elem] * Set[Elem] -&#62; Set[Elem],
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__union__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Set_E1" name="__union__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_comm___union__2">
      <use format="Hets">ga_comm___union__</use>
    </presentation>
    <axiom name="ga_idem___intersection__2">
      <CMP>
  __ intersection __ : Set[Elem] * Set[Elem] -&#62; Set[Elem],
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__intersection__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_idem___intersection__2">
      <use format="Hets">ga_idem___intersection__</use>
    </presentation>
    <axiom name="ga_idem___union__1">
      <CMP>
  __ union __ : Set[Elem] * Set[Elem] -&#62; Set[Elem],
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__union__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_idem___union__1">
      <use format="Hets">ga_idem___union__</use>
    </presentation>
    <axiom name="ga_left_unit___union__2">
      <CMP>
  __ union __ : Set[Elem] * Set[Elem] -&#62; Set[Elem],
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__union__2"/>
                <OMS cd="Set_E2" name="BraceOpenBraceClose2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_left_unit___union__2">
      <use format="Hets">ga_left_unit___union__</use>
    </presentation>
    <axiom name="ga_right_unit___union__2">
      <CMP>
  __ union __ : Set[Elem] * Set[Elem] -&#62; Set[Elem],
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__union__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMS cd="Set_E2" name="BraceOpenBraceClose2"/>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_right_unit___union__2">
      <use format="Hets">ga_right_unit___union__</use>
    </presentation>
    <axiom name="intersection_Emptyset">
      <CMP>
  forall x,y: Elem; M,N,O: Set[Elem]
  forall x,y: Elem; M,N,O: Set[Elem]
  . isNonEmpty(M) &#60;=&#62; not M = {}             %(isNonEmpty_def)%
  . M isSubsetOf N &#60;=&#62; 
  . { x } = {} + x                                %(singletonSet_def)%
  . # {}       =  0                             %(numberOf_emptySet)%
  . # (M + x)  =  # M       when x eps M else
  . x + M = M + x                               %(addElem_def_Set)%
  . {}      - y  = {}                           %(remElem_EmptySet)%
  . (M + x) - y  =  M-y      when x=y else
  . M intersection {}    = {}                   %(intersection_Emptyset)%
  . M intersection (N+x) = 
  . M union {}    =  M                          %(union_EmptySet)%
  . M union (N+x) =  M union N      when x eps M else
  . M - {} = M                                  %(dif_Emptyset)%
  . M - (N+x) = (M - N) - x                     %(dif_Emptyset)%
  . M symDiff N = (M-N) union (N-M)              %(symDiff_def)%
  . (M union N) intersection O = 
  . O intersection (M union N) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__intersection__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
                <OMS cd="Set_E2" name="BraceOpenBraceClose2"/>
              </OMA>
              <OMS cd="Set_E2" name="BraceOpenBraceClose2"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="intersection_Emptyset">
      <use format="Hets">intersection_Emptyset</use>
    </presentation>
    <axiom name="intersection_NonEmptySet">
      <CMP>
  forall x,y: Elem; M,N,O: Set[Elem]
  forall x,y: Elem; M,N,O: Set[Elem]
  . isNonEmpty(M) &#60;=&#62; not M = {}             %(isNonEmpty_def)%
  . M isSubsetOf N &#60;=&#62; 
  . { x } = {} + x                                %(singletonSet_def)%
  . # {}       =  0                             %(numberOf_emptySet)%
  . # (M + x)  =  # M       when x eps M else
  . x + M = M + x                               %(addElem_def_Set)%
  . {}      - y  = {}                           %(remElem_EmptySet)%
  . (M + x) - y  =  M-y      when x=y else
  . M intersection {}    = {}                   %(intersection_Emptyset)%
  . M intersection (N+x) = 
  . M union {}    =  M                          %(union_EmptySet)%
  . M union (N+x) =  M union N      when x eps M else
  . M - {} = M                                  %(dif_Emptyset)%
  . M - (N+x) = (M - N) - x                     %(dif_Emptyset)%
  . M symDiff N = (M-N) union (N-M)              %(symDiff_def)%
  . (M union N) intersection O = 
  . O intersection (M union N) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_P" name="Elem5"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="N"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__intersection__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat" name="__Plus__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="N"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="IfThenElse"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Set_E2" name="__eps__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat" name="__Plus__2"/>
                  <OMA>
                    <OMS cd="Set_E1" name="__intersection__2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                      </OMATP>
                      <OMV name="M"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                      </OMATP>
                      <OMV name="N"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Set_E1" name="__intersection__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="N"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="intersection_NonEmptySet">
      <use format="Hets">intersection_NonEmptySet</use>
    </presentation>
    <axiom name="isNonEmpty_def">
      <CMP>
  forall x,y: Elem; M,N,O: Set[Elem]
  forall x,y: Elem; M,N,O: Set[Elem]
  . isNonEmpty(M) &#60;=&#62; not M = {}             %(isNonEmpty_def)%
  . M isSubsetOf N &#60;=&#62; 
  . { x } = {} + x                                %(singletonSet_def)%
  . # {}       =  0                             %(numberOf_emptySet)%
  . # (M + x)  =  # M       when x eps M else
  . x + M = M + x                               %(addElem_def_Set)%
  . {}      - y  = {}                           %(remElem_EmptySet)%
  . (M + x) - y  =  M-y      when x=y else
  . M intersection {}    = {}                   %(intersection_Emptyset)%
  . M intersection (N+x) = 
  . M union {}    =  M                          %(union_EmptySet)%
  . M union (N+x) =  M union N      when x eps M else
  . M - {} = M                                  %(dif_Emptyset)%
  . M - (N+x) = (M - N) - x                     %(dif_Emptyset)%
  . M symDiff N = (M-N) union (N-M)              %(symDiff_def)%
  . (M union N) intersection O = 
  . O intersection (M union N) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Set_E1" name="isNonEmpty1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMS cd="Set_E2" name="BraceOpenBraceClose2"/>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isNonEmpty_def">
      <use format="Hets">isNonEmpty_def</use>
    </presentation>
    <axiom name="isSubsetOf_def">
      <CMP>
  forall x,y: Elem; M,N,O: Set[Elem]
  forall x,y: Elem; M,N,O: Set[Elem]
  . isNonEmpty(M) &#60;=&#62; not M = {}             %(isNonEmpty_def)%
  . M isSubsetOf N &#60;=&#62; 
  . { x } = {} + x                                %(singletonSet_def)%
  . # {}       =  0                             %(numberOf_emptySet)%
  . # (M + x)  =  # M       when x eps M else
  . x + M = M + x                               %(addElem_def_Set)%
  . {}      - y  = {}                           %(remElem_EmptySet)%
  . (M + x) - y  =  M-y      when x=y else
  . M intersection {}    = {}                   %(intersection_Emptyset)%
  . M intersection (N+x) = 
  . M union {}    =  M                          %(union_EmptySet)%
  . M union (N+x) =  M union N      when x eps M else
  . M - {} = M                                  %(dif_Emptyset)%
  . M - (N+x) = (M - N) - x                     %(dif_Emptyset)%
  . M symDiff N = (M-N) union (N-M)              %(symDiff_def)%
  . (M union N) intersection O = 
  . O intersection (M union N) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="N"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Set_E1" name="__isSubsetOf__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="N"/>
                </OMATTR>
              </OMA>
              <OMBIND>
                <OMS cd="casl" name="universal"/>
                <OMBVAR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMBVAR>
                <OMA>
                  <OMS cd="casl" name="implication"/>
                  <OMA>
                    <OMS cd="casl" name="predication"/>
                    <OMS cd="Set_E2" name="__eps__2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Set_P" name="Elem5"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                      </OMATP>
                      <OMV name="M"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="casl" name="predication"/>
                    <OMS cd="Set_E2" name="__eps__2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Set_P" name="Elem5"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                      </OMATP>
                      <OMV name="N"/>
                    </OMATTR>
                  </OMA>
                  <OMS cd="casl" name="true"/>
                </OMA>
              </OMBIND>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isSubsetOf_def">
      <use format="Hets">isSubsetOf_def</use>
    </presentation>
    <axiom name="numberOf_NonEmptySet">
      <CMP>
  forall x,y: Elem; M,N,O: Set[Elem]
  forall x,y: Elem; M,N,O: Set[Elem]
  . isNonEmpty(M) &#60;=&#62; not M = {}             %(isNonEmpty_def)%
  . M isSubsetOf N &#60;=&#62; 
  . { x } = {} + x                                %(singletonSet_def)%
  . # {}       =  0                             %(numberOf_emptySet)%
  . # (M + x)  =  # M       when x eps M else
  . x + M = M + x                               %(addElem_def_Set)%
  . {}      - y  = {}                           %(remElem_EmptySet)%
  . (M + x) - y  =  M-y      when x=y else
  . M intersection {}    = {}                   %(intersection_Emptyset)%
  . M intersection (N+x) = 
  . M union {}    =  M                          %(union_EmptySet)%
  . M union (N+x) =  M union N      when x eps M else
  . M - {} = M                                  %(dif_Emptyset)%
  . M - (N+x) = (M - N) - x                     %(dif_Emptyset)%
  . M symDiff N = (M-N) union (N-M)              %(symDiff_def)%
  . (M union N) intersection O = 
  . O intersection (M union N) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_P" name="Elem5"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="Hash__1"/>
                <OMA>
                  <OMS cd="Nat" name="__Plus__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="IfThenElse"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Set_E2" name="__eps__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Set_E1" name="Hash__1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat" name="__Plus__2"/>
                  <OMA>
                    <OMS cd="Set_E1" name="Hash__1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                      </OMATP>
                      <OMV name="M"/>
                    </OMATTR>
                  </OMA>
                  <OMS cd="Nat" name="N12"/>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="numberOf_NonEmptySet">
      <use format="Hets">numberOf_NonEmptySet</use>
    </presentation>
    <axiom name="numberOf_emptySet">
      <CMP>
  . # {}       =  0                             %(numberOf_emptySet)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMA>
              <OMS cd="Set_E1" name="Hash__1"/>
              <OMS cd="Set_E2" name="BraceOpenBraceClose2"/>
            </OMA>
            <OMS cd="Nat" name="N02"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="numberOf_emptySet">
      <use format="Hets">numberOf_emptySet</use>
    </presentation>
    <axiom name="remElem_EmptySet">
      <CMP>
  forall x,y: Elem; M,N,O: Set[Elem]
  forall x,y: Elem; M,N,O: Set[Elem]
  . isNonEmpty(M) &#60;=&#62; not M = {}             %(isNonEmpty_def)%
  . M isSubsetOf N &#60;=&#62; 
  . { x } = {} + x                                %(singletonSet_def)%
  . # {}       =  0                             %(numberOf_emptySet)%
  . # (M + x)  =  # M       when x eps M else
  . x + M = M + x                               %(addElem_def_Set)%
  . {}      - y  = {}                           %(remElem_EmptySet)%
  . (M + x) - y  =  M-y      when x=y else
  . M intersection {}    = {}                   %(intersection_Emptyset)%
  . M intersection (N+x) = 
  . M union {}    =  M                          %(union_EmptySet)%
  . M union (N+x) =  M union N      when x eps M else
  . M - {} = M                                  %(dif_Emptyset)%
  . M - (N+x) = (M - N) - x                     %(dif_Emptyset)%
  . M symDiff N = (M-N) union (N-M)              %(symDiff_def)%
  . (M union N) intersection O = 
  . O intersection (M union N) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_P" name="Elem5"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__Minus__3"/>
                <OMS cd="Set_E2" name="BraceOpenBraceClose2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_P" name="Elem5"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMS cd="Set_E2" name="BraceOpenBraceClose2"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="remElem_EmptySet">
      <use format="Hets">remElem_EmptySet</use>
    </presentation>
    <axiom name="remElem_NonEmptySet">
      <CMP>
  forall x,y: Elem; M,N,O: Set[Elem]
  forall x,y: Elem; M,N,O: Set[Elem]
  . isNonEmpty(M) &#60;=&#62; not M = {}             %(isNonEmpty_def)%
  . M isSubsetOf N &#60;=&#62; 
  . { x } = {} + x                                %(singletonSet_def)%
  . # {}       =  0                             %(numberOf_emptySet)%
  . # (M + x)  =  # M       when x eps M else
  . x + M = M + x                               %(addElem_def_Set)%
  . {}      - y  = {}                           %(remElem_EmptySet)%
  . (M + x) - y  =  M-y      when x=y else
  . M intersection {}    = {}                   %(intersection_Emptyset)%
  . M intersection (N+x) = 
  . M union {}    =  M                          %(union_EmptySet)%
  . M union (N+x) =  M union N      when x eps M else
  . M - {} = M                                  %(dif_Emptyset)%
  . M - (N+x) = (M - N) - x                     %(dif_Emptyset)%
  . M symDiff N = (M-N) union (N-M)              %(symDiff_def)%
  . (M union N) intersection O = 
  . O intersection (M union N) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_P" name="Elem5"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_P" name="Elem5"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__Minus__3"/>
                <OMA>
                  <OMS cd="Nat" name="__Plus__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_P" name="Elem5"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="IfThenElse"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Set_E1" name="__Minus__3"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat" name="__Plus__2"/>
                  <OMA>
                    <OMS cd="Set_E1" name="__Minus__3"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                      </OMATP>
                      <OMV name="M"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Set_P" name="Elem5"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="remElem_NonEmptySet">
      <use format="Hets">remElem_NonEmptySet</use>
    </presentation>
    <axiom name="singletonSet_def">
      <CMP>
  forall x,y: Elem; M,N,O: Set[Elem]
  forall x,y: Elem; M,N,O: Set[Elem]
  . isNonEmpty(M) &#60;=&#62; not M = {}             %(isNonEmpty_def)%
  . M isSubsetOf N &#60;=&#62; 
  . { x } = {} + x                                %(singletonSet_def)%
  . # {}       =  0                             %(numberOf_emptySet)%
  . # (M + x)  =  # M       when x eps M else
  . x + M = M + x                               %(addElem_def_Set)%
  . {}      - y  = {}                           %(remElem_EmptySet)%
  . (M + x) - y  =  M-y      when x=y else
  . M intersection {}    = {}                   %(intersection_Emptyset)%
  . M intersection (N+x) = 
  . M union {}    =  M                          %(union_EmptySet)%
  . M union (N+x) =  M union N      when x eps M else
  . M - {} = M                                  %(dif_Emptyset)%
  . M - (N+x) = (M - N) - x                     %(dif_Emptyset)%
  . M symDiff N = (M-N) union (N-M)              %(symDiff_def)%
  . (M union N) intersection O = 
  . O intersection (M union N) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_P" name="Elem5"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="BraceOpen__BraceClose2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_P" name="Elem5"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat" name="__Plus__2"/>
                <OMS cd="Set_E2" name="BraceOpenBraceClose2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_P" name="Elem5"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="singletonSet_def">
      <use format="Hets">singletonSet_def</use>
    </presentation>
    <axiom name="symDiff_def">
      <CMP>
  forall x,y: Elem; M,N,O: Set[Elem]
  forall x,y: Elem; M,N,O: Set[Elem]
  . isNonEmpty(M) &#60;=&#62; not M = {}             %(isNonEmpty_def)%
  . M isSubsetOf N &#60;=&#62; 
  . { x } = {} + x                                %(singletonSet_def)%
  . # {}       =  0                             %(numberOf_emptySet)%
  . # (M + x)  =  # M       when x eps M else
  . x + M = M + x                               %(addElem_def_Set)%
  . {}      - y  = {}                           %(remElem_EmptySet)%
  . (M + x) - y  =  M-y      when x=y else
  . M intersection {}    = {}                   %(intersection_Emptyset)%
  . M intersection (N+x) = 
  . M union {}    =  M                          %(union_EmptySet)%
  . M union (N+x) =  M union N      when x eps M else
  . M - {} = M                                  %(dif_Emptyset)%
  . M - (N+x) = (M - N) - x                     %(dif_Emptyset)%
  . M symDiff N = (M-N) union (N-M)              %(symDiff_def)%
  . (M union N) intersection O = 
  . O intersection (M union N) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="N"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__symDiff__1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="N"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Set_E1" name="__union__2"/>
                <OMA>
                  <OMS cd="Set_E1" name="__Minus__3"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="N"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Set_E1" name="__Minus__3"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="N"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="symDiff_def">
      <use format="Hets">symDiff_def</use>
    </presentation>
    <axiom name="union_EmptySet">
      <CMP>
  forall x,y: Elem; M,N,O: Set[Elem]
  forall x,y: Elem; M,N,O: Set[Elem]
  . isNonEmpty(M) &#60;=&#62; not M = {}             %(isNonEmpty_def)%
  . M isSubsetOf N &#60;=&#62; 
  . { x } = {} + x                                %(singletonSet_def)%
  . # {}       =  0                             %(numberOf_emptySet)%
  . # (M + x)  =  # M       when x eps M else
  . x + M = M + x                               %(addElem_def_Set)%
  . {}      - y  = {}                           %(remElem_EmptySet)%
  . (M + x) - y  =  M-y      when x=y else
  . M intersection {}    = {}                   %(intersection_Emptyset)%
  . M intersection (N+x) = 
  . M union {}    =  M                          %(union_EmptySet)%
  . M union (N+x) =  M union N      when x eps M else
  . M - {} = M                                  %(dif_Emptyset)%
  . M - (N+x) = (M - N) - x                     %(dif_Emptyset)%
  . M symDiff N = (M-N) union (N-M)              %(symDiff_def)%
  . (M union N) intersection O = 
  . O intersection (M union N) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__union__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
                <OMS cd="Set_E2" name="BraceOpenBraceClose2"/>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="union_EmptySet">
      <use format="Hets">union_EmptySet</use>
    </presentation>
    <axiom name="union_NonEmptySet">
      <CMP>
  forall x,y: Elem; M,N,O: Set[Elem]
  forall x,y: Elem; M,N,O: Set[Elem]
  . isNonEmpty(M) &#60;=&#62; not M = {}             %(isNonEmpty_def)%
  . M isSubsetOf N &#60;=&#62; 
  . { x } = {} + x                                %(singletonSet_def)%
  . # {}       =  0                             %(numberOf_emptySet)%
  . # (M + x)  =  # M       when x eps M else
  . x + M = M + x                               %(addElem_def_Set)%
  . {}      - y  = {}                           %(remElem_EmptySet)%
  . (M + x) - y  =  M-y      when x=y else
  . M intersection {}    = {}                   %(intersection_Emptyset)%
  . M intersection (N+x) = 
  . M union {}    =  M                          %(union_EmptySet)%
  . M union (N+x) =  M union N      when x eps M else
  . M - {} = M                                  %(dif_Emptyset)%
  . M - (N+x) = (M - N) - x                     %(dif_Emptyset)%
  . M symDiff N = (M-N) union (N-M)              %(symDiff_def)%
  . (M union N) intersection O = 
  . O intersection (M union N) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_P" name="Elem5"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="N"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__union__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat" name="__Plus__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="N"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="IfThenElse"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Set_E2" name="__eps__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Set_E1" name="__union__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="N"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat" name="__Plus__2"/>
                  <OMA>
                    <OMS cd="Set_E1" name="__union__2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                      </OMATP>
                      <OMV name="M"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                      </OMATP>
                      <OMV name="N"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="union_NonEmptySet">
      <use format="Hets">union_NonEmptySet</use>
    </presentation>
  </theory>
  <private for="Set_E1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set" Type:"GlobalThm Open None Open" Origin:"DGExtension"
From:"Set_E2" Type:"GlobalDef" Origin:"DGExtension"
From:"Set_E2" Type:"GlobalThm Open Def Open" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Set">
    <presentation for="Set">
      <use format="Hets">[Set,,0]</use>
    </presentation>
    <imports from="#Set_E1"/>
    <axiom name="intersection_isSubsetOf">
      <CMP>
  forall x,y: Elem; M,N:Set[Elem]
  forall x,y: Elem; M,N:Set[Elem]
  . # (M union N) = 
  . # M &#60;= # (M union N)                        %(union_counting)%
  . M isSubsetOf (M union N)                    %(union_isSubsetOf)%
  . (M intersection N) isSubsetOf M             %(intersection_isSubsetOf)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="N"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="predication"/>
              <OMS cd="Set_E1" name="__isSubsetOf__2"/>
              <OMA>
                <OMS cd="Set_E1" name="__intersection__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="N"/>
                </OMATTR>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="intersection_isSubsetOf">
      <use format="Hets">intersection_isSubsetOf</use>
    </presentation>
    <axiom name="set_counting">
      <CMP>
  forall x,y: Elem; M,N:Set[Elem]
  forall x,y: Elem; M,N:Set[Elem]
  . # (M union N) = 
  . # M &#60;= # (M union N)                        %(union_counting)%
  . M isSubsetOf (M union N)                    %(union_isSubsetOf)%
  . (M intersection N) isSubsetOf M             %(intersection_isSubsetOf)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="N"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="Hash__1"/>
                <OMA>
                  <OMS cd="Set_E1" name="__union__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="N"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat" name="__MinusQuest__2"/>
                <OMA>
                  <OMS cd="Nat" name="__Plus__2"/>
                  <OMA>
                    <OMS cd="Set_E1" name="Hash__1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                      </OMATP>
                      <OMV name="M"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="Set_E1" name="Hash__1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                      </OMATP>
                      <OMV name="N"/>
                    </OMATTR>
                  </OMA>
                </OMA>
                <OMA>
                  <OMS cd="Set_E1" name="Hash__1"/>
                  <OMA>
                    <OMS cd="Set_E1" name="__intersection__2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                      </OMATP>
                      <OMV name="M"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                      </OMATP>
                      <OMV name="N"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="set_counting">
      <use format="Hets">set_counting</use>
    </presentation>
    <axiom name="union_counting">
      <CMP>
  forall x,y: Elem; M,N:Set[Elem]
  forall x,y: Elem; M,N:Set[Elem]
  . # (M union N) = 
  . # M &#60;= # (M union N)                        %(union_counting)%
  . M isSubsetOf (M union N)                    %(union_isSubsetOf)%
  . (M intersection N) isSubsetOf M             %(intersection_isSubsetOf)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="N"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="predication"/>
              <OMS cd="Nat" name="__LowerEquals__2"/>
              <OMA>
                <OMS cd="Set_E1" name="Hash__1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Set_E1" name="Hash__1"/>
                <OMA>
                  <OMS cd="Set_E1" name="__union__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="N"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="union_counting">
      <use format="Hets">union_counting</use>
    </presentation>
    <axiom name="union_isSubsetOf">
      <CMP>
  forall x,y: Elem; M,N:Set[Elem]
  forall x,y: Elem; M,N:Set[Elem]
  . # (M union N) = 
  . # M &#60;= # (M union N)                        %(union_counting)%
  . M isSubsetOf (M union N)                    %(union_isSubsetOf)%
  . (M intersection N) isSubsetOf M             %(intersection_isSubsetOf)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="N"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="predication"/>
              <OMS cd="Set_E1" name="__isSubsetOf__2"/>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMA>
                <OMS cd="Set_E1" name="__union__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="N"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="union_isSubsetOf">
      <use format="Hets">union_isSubsetOf</use>
    </presentation>
  </theory>
  <private for="Set">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set_E1" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="PartialOrder_in_Set_VGI">
    <presentation for="PartialOrder_in_Set_VGI">
      <use format="Hets">[PartialOrder_in_Set,VGI,0]</use>
    </presentation>
    <imports from="Basic/Numbers.omdoc#Nat"/>
  </theory>
  <private for="PartialOrder_in_Set_VGI">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="PartialOrder_in_Set_VG">
    <presentation for="PartialOrder_in_Set_VG">
      <use format="Hets">[PartialOrder_in_Set,VG,0]</use>
    </presentation>
    <imports from="#PartialOrder_in_Set_VGI"/>
    <symbol role="sort" name="Elem50"/>
    <presentation for="Elem50">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="PartialOrder_in_Set_VG">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"PartialOrder_in_Set_VGI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="PartialOrder_in_Set_TA">
    <presentation for="PartialOrder_in_Set_TA">
      <use format="Hets">[PartialOrder_in_Set,TA,0]</use>
    </presentation>
    <imports from="#Set_PI"/>
    <symbol role="sort" name="Elem49"/>
    <presentation for="Elem49">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="PartialOrder_in_Set_TA">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst Set"
From:"Set_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="PartialOrder_in_Set_T">
    <presentation for="PartialOrder_in_Set_T">
      <use format="Hets">[PartialOrder_in_Set,T,0]</use>
    </presentation>
    <imports from="#PartialOrder_in_Set_TA"/>
    <imports from="#PartialOrder_in_Set_VG"/>
    <imports from="#Set">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N02"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="N02"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N12"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="N12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N22"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="N22"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N32"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="N32"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N42"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="N42"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N52"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="N52"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N62"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="N62"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N72"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="N72"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N82"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="N82"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N92"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="N92"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="__LowerEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="__Lower__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="__GreaterEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="__Greater__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Ast__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="__Ast__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__AtAt__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="__AtAt__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__DivisionQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="__DivisionQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Excla2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="__Excla2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusExcla__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="__MinusExcla__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="__MinusQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Plus__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="__Plus__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Power__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="__Power__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__div__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="__div__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__mod__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="__mod__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="even2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="max2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="max2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="min2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="min2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="odd2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="pre2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="pre2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="suc2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Set_T" name="suc2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
  </theory>
  <private for="PartialOrder_in_Set_T">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set" Type:"GlobalDef" Origin:"DGSpecInst Set"
From:"PartialOrder" Type:"GlobalThm Open None Open" Origin:"DGView PartialOrder_in_Set"
From:"PartialOrder_in_Set_TA" Type:"GlobalDef" Origin:"DGFitSpec"
From:"PartialOrder_in_Set_VG" Type:"GlobalDef" Origin:"DGSpecInst Set"
]]></data>
  </private>
  <theory xml:id="PowerSet_PI">
    <presentation for="PowerSet_PI">
      <use format="Hets">[PowerSet,PI,0]</use>
    </presentation>
    <imports from="Basic/Numbers.omdoc#Nat"/>
  </theory>
  <private for="PowerSet_PI">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="PowerSet_PE1A">
    <presentation for="PowerSet_PE1A">
      <use format="Hets">[PowerSet,PE1A,0]</use>
    </presentation>
    <imports from="#Set_PI"/>
    <symbol role="sort" name="Elem51"/>
    <presentation for="Elem51">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="PowerSet_PE1A">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst Set"
From:"Set_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="PowerSet_PE1">
    <presentation for="PowerSet_PE1">
      <use format="Hets">[PowerSet,PE,1]</use>
    </presentation>
    <imports from="#PowerSet_PE1A"/>
    <imports from="#PowerSet_PI"/>
    <imports from="#Set">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N02"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="N02"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N12"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="N12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N22"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="N22"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N32"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="N32"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N42"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="N42"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N52"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="N52"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N62"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="N62"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N72"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="N72"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N82"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="N82"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N92"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="N92"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="__LowerEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="__Lower__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="__GreaterEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="__Greater__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Ast__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="__Ast__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__AtAt__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="__AtAt__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__DivisionQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="__DivisionQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Excla2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="__Excla2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusExcla__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="__MinusExcla__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="__MinusQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Plus__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="__Plus__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Power__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="__Power__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__div__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="__div__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__mod__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="__mod__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="even2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="max2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="max2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="min2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="min2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="odd2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="pre2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="pre2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="suc2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PowerSet_PE1" name="suc2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
  </theory>
  <private for="PowerSet_PE1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set" Type:"GlobalDef" Origin:"DGSpecInst Set"
From:"PowerSet_PI" Type:"GlobalDef" Origin:"DGSpecInst Set"
From:"PowerSet_PE1A" Type:"GlobalDef" Origin:"DGFitSpec"
]]></data>
  </private>
  <theory xml:id="PowerSet_P">
    <presentation for="PowerSet_P">
      <use format="Hets">[PowerSet,P,0]</use>
    </presentation>
    <imports from="#PowerSet_PE1"/>
    <symbol name="X2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="X2">
      <use format="Hets">[X]</use>
    </presentation>
  </theory>
  <private for="PowerSet_P">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"PowerSet_PE1" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="PowerSet">
    <presentation for="PowerSet">
      <use format="Hets">[PowerSet,,0]</use>
    </presentation>
    <imports from="#PowerSet_P"/>
    <symbol role="sort" name="PowerSetSBrackOpenXSBrackClose1"/>
    <presentation for="PowerSetSBrackOpenXSBrackClose1">
      <use format="Hets">[PowerSet[X]]</use>
    </presentation>
    <symbol role="sort" name="ElemSBrackOpenXSBrackClose1"/>
    <presentation for="ElemSBrackOpenXSBrackClose1">
      <use format="Hets">[Elem[X]]</use>
    </presentation>
    <adt>
      <sortdef name="Elem5" type="free">
        <insort for="#ElemSBrackOpenXSBrackClose1"/>
      </sortdef>
    </adt>
    <adt>
      <sortdef name="SetSBrackOpenElemSBrackClose1" type="free">
        <insort for="#PowerSetSBrackOpenXSBrackClose1"/>
      </sortdef>
    </adt>
    <axiom name="Ax13">
      <CMP>
     sorts PowerSet[X]= { Y: Set[Elem] . Y isSubsetOf X };
     sorts PowerSet[X]= { Y: Set[Elem] . Y isSubsetOf X };
     sorts PowerSet[X]= { Y: Set[Elem] . Y isSubsetOf X };
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="Y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="membership"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="Y"/>
                </OMATTR>
                <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Set_E1" name="__isSubsetOf__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="Y"/>
                </OMATTR>
                <OMS cd="PowerSet_P" name="X2"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax13">
      <use format="Hets">Ax1</use>
    </presentation>
    <axiom name="Ax2">
      <CMP>
           Elem[X] = { x : Elem . x eps X }
           Elem[X] = { x : Elem . x eps X }
           Elem[X] = { x : Elem . x eps X }
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_P" name="Elem5"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="membership"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_P" name="Elem5"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMS cd="PowerSet" name="ElemSBrackOpenXSBrackClose1"/>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Set_E2" name="__eps__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_P" name="Elem5"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMS cd="PowerSet_P" name="X2"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax2">
      <use format="Hets">Ax2</use>
    </presentation>
    <axiom name="distr1_PowerSet">
      <CMP>
     forall M,N,O: PowerSet[X]
     . (M union N) intersection O = 
     . O intersection (M union N) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                </OMATP>
                <OMV name="N"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                </OMATP>
                <OMV name="O"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__intersection__2"/>
                <OMA>
                  <OMS cd="Set_E1" name="__union__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                    </OMATP>
                    <OMV name="N"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                  </OMATP>
                  <OMV name="O"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Set_E1" name="__union__2"/>
                <OMA>
                  <OMS cd="Set_E1" name="__intersection__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                    </OMATP>
                    <OMV name="O"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Set_E1" name="__intersection__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                    </OMATP>
                    <OMV name="N"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                    </OMATP>
                    <OMV name="O"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="distr1_PowerSet">
      <use format="Hets">distr1_PowerSet</use>
    </presentation>
    <axiom name="distr2_PowerSet">
      <CMP>
     forall M,N,O: PowerSet[X]
     . (M union N) intersection O = 
     . O intersection (M union N) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                </OMATP>
                <OMV name="N"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                </OMATP>
                <OMV name="O"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__intersection__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                  </OMATP>
                  <OMV name="O"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Set_E1" name="__union__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                    </OMATP>
                    <OMV name="N"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Set_E1" name="__union__2"/>
                <OMA>
                  <OMS cd="Set_E1" name="__intersection__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                    </OMATP>
                    <OMV name="O"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Set_E1" name="__intersection__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                    </OMATP>
                    <OMV name="O"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                    </OMATP>
                    <OMV name="N"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="distr2_PowerSet">
      <use format="Hets">distr2_PowerSet</use>
    </presentation>
    <axiom name="ga_assoc___intersection__1">
      <CMP>
          __ intersection __ : PowerSet[X] * PowerSet[X] -&#62; PowerSet[X],
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                </OMATP>
                <OMV name="z"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__intersection__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Set_E1" name="__intersection__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                    </OMATP>
                    <OMV name="z"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Set_E1" name="__intersection__2"/>
                <OMA>
                  <OMS cd="Set_E1" name="__intersection__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                  </OMATP>
                  <OMV name="z"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_assoc___intersection__1">
      <use format="Hets">ga_assoc___intersection__</use>
    </presentation>
    <axiom name="ga_assoc___union__1">
      <CMP>
     ops  __ union __ : PowerSet[X] * PowerSet[X] -&#62; PowerSet[X],
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                </OMATP>
                <OMV name="z"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__union__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Set_E1" name="__union__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                    </OMATP>
                    <OMV name="z"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Set_E1" name="__union__2"/>
                <OMA>
                  <OMS cd="Set_E1" name="__union__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                  </OMATP>
                  <OMV name="z"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_assoc___union__1">
      <use format="Hets">ga_assoc___union__</use>
    </presentation>
    <axiom name="ga_comm___intersection__1">
      <CMP>
          __ intersection __ : PowerSet[X] * PowerSet[X] -&#62; PowerSet[X],
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__intersection__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Set_E1" name="__intersection__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_comm___intersection__1">
      <use format="Hets">ga_comm___intersection__</use>
    </presentation>
    <axiom name="ga_comm___union__1">
      <CMP>
     ops  __ union __ : PowerSet[X] * PowerSet[X] -&#62; PowerSet[X],
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__union__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Set_E1" name="__union__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_comm___union__1">
      <use format="Hets">ga_comm___union__</use>
    </presentation>
    <axiom name="ga_idem___intersection__1">
      <CMP>
          __ intersection __ : PowerSet[X] * PowerSet[X] -&#62; PowerSet[X],
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__intersection__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_idem___intersection__1">
      <use format="Hets">ga_idem___intersection__</use>
    </presentation>
    <axiom name="ga_idem___union__">
      <CMP>
     ops  __ union __ : PowerSet[X] * PowerSet[X] -&#62; PowerSet[X],
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__union__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_idem___union__">
      <use format="Hets">ga_idem___union__</use>
    </presentation>
    <axiom name="ga_left_unit___union__1">
      <CMP>
     ops  __ union __ : PowerSet[X] * PowerSet[X] -&#62; PowerSet[X],
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__union__2"/>
                <OMS cd="Set_E2" name="BraceOpenBraceClose2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_left_unit___union__1">
      <use format="Hets">ga_left_unit___union__</use>
    </presentation>
    <axiom name="ga_right_unit___union__1">
      <CMP>
     ops  __ union __ : PowerSet[X] * PowerSet[X] -&#62; PowerSet[X],
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__union__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMS cd="Set_E2" name="BraceOpenBraceClose2"/>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="PowerSet" name="PowerSetSBrackOpenXSBrackClose1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_right_unit___union__1">
      <use format="Hets">ga_right_unit___union__</use>
    </presentation>
  </theory>
  <private for="PowerSet">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"PowerSet_P" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="BooleanAlgebra_in_PowerSet_VGI">
    <presentation for="BooleanAlgebra_in_PowerSet_VGI">
      <use format="Hets">[BooleanAlgebra_in_PowerSet,VGI,0]</use>
    </presentation>
    <imports from="Basic/Numbers.omdoc#Nat"/>
  </theory>
  <private for="BooleanAlgebra_in_PowerSet_VGI">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="BooleanAlgebra_in_PowerSet_VGE1A">
    <presentation for="BooleanAlgebra_in_PowerSet_VGE1A">
      <use format="Hets">[BooleanAlgebra_in_PowerSet,VGE1A,0]</use>
    </presentation>
    <imports from="#Set_PI"/>
    <symbol role="sort" name="Elem16"/>
    <presentation for="Elem16">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="BooleanAlgebra_in_PowerSet_VGE1A">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst Set"
From:"Set_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="BooleanAlgebra_in_PowerSet_VGE1">
    <presentation for="BooleanAlgebra_in_PowerSet_VGE1">
      <use format="Hets">[BooleanAlgebra_in_PowerSet,VGE,1]</use>
    </presentation>
    <imports from="#BooleanAlgebra_in_PowerSet_VGE1A"/>
    <imports from="#BooleanAlgebra_in_PowerSet_VGI"/>
    <imports from="#Set">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N02"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="N02"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N12"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="N12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N22"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="N22"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N32"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="N32"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N42"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="N42"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N52"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="N52"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N62"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="N62"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N72"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="N72"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N82"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="N82"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N92"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="N92"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="__LowerEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="__Lower__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="__GreaterEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="__Greater__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Ast__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="__Ast__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__AtAt__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="__AtAt__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__DivisionQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="__DivisionQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Excla2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="__Excla2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusExcla__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="__MinusExcla__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="__MinusQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Plus__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="__Plus__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Power__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="__Power__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__div__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="__div__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__mod__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="__mod__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="even2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="max2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="max2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="min2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="min2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="odd2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="pre2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="pre2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="suc2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_VGE1" name="suc2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
  </theory>
  <private for="BooleanAlgebra_in_PowerSet_VGE1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set" Type:"GlobalDef" Origin:"DGSpecInst Set"
From:"BooleanAlgebra_in_PowerSet_VGE1A" Type:"GlobalDef" Origin:"DGFitSpec"
From:"BooleanAlgebra_in_PowerSet_VGI" Type:"GlobalDef" Origin:"DGSpecInst Set"
]]></data>
  </private>
  <theory xml:id="BooleanAlgebra_in_PowerSet_VG">
    <presentation for="BooleanAlgebra_in_PowerSet_VG">
      <use format="Hets">[BooleanAlgebra_in_PowerSet,VG,0]</use>
    </presentation>
    <imports from="#BooleanAlgebra_in_PowerSet_VGE1"/>
    <symbol name="X1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="X1">
      <use format="Hets">[X]</use>
    </presentation>
  </theory>
  <private for="BooleanAlgebra_in_PowerSet_VG">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"BooleanAlgebra_in_PowerSet_VGE1" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="BooleanAlgebra_in_PowerSet_TAE1A">
    <presentation for="BooleanAlgebra_in_PowerSet_TAE1A">
      <use format="Hets">[BooleanAlgebra_in_PowerSet,TAE1A,0]</use>
    </presentation>
    <imports from="#Set_PI"/>
    <symbol role="sort" name="Elem15"/>
    <presentation for="Elem15">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="BooleanAlgebra_in_PowerSet_TAE1A">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst Set"
From:"Set_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="BooleanAlgebra_in_PowerSet_TAE1">
    <presentation for="BooleanAlgebra_in_PowerSet_TAE1">
      <use format="Hets">[BooleanAlgebra_in_PowerSet,TAE,1]</use>
    </presentation>
    <imports from="#BooleanAlgebra_in_PowerSet_TAE1A"/>
    <imports from="#PowerSet_PI"/>
    <imports from="#Set">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N02"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="N02"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N12"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="N12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N22"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="N22"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N32"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="N32"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N42"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="N42"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N52"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="N52"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N62"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="N62"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N72"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="N72"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N82"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="N82"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N92"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="N92"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="__LowerEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="__Lower__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="__GreaterEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="__Greater__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Ast__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="__Ast__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__AtAt__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="__AtAt__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__DivisionQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="__DivisionQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Excla2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="__Excla2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusExcla__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="__MinusExcla__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="__MinusQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Plus__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="__Plus__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Power__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="__Power__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__div__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="__div__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__mod__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="__mod__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="even2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="max2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="max2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="min2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="min2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="odd2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="pre2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="pre2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="suc2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_TAE1" name="suc2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
  </theory>
  <private for="BooleanAlgebra_in_PowerSet_TAE1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set" Type:"GlobalDef" Origin:"DGSpecInst Set"
From:"BooleanAlgebra_in_PowerSet_TAE1A" Type:"GlobalDef" Origin:"DGFitSpec"
From:"PowerSet_PI" Type:"GlobalDef" Origin:"DGSpecInst Set"
]]></data>
  </private>
  <theory xml:id="BooleanAlgebra_in_PowerSet_TA">
    <presentation for="BooleanAlgebra_in_PowerSet_TA">
      <use format="Hets">[BooleanAlgebra_in_PowerSet,TA,0]</use>
    </presentation>
    <imports from="#BooleanAlgebra_in_PowerSet_TAE1"/>
    <symbol name="X" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="X">
      <use format="Hets">[X]</use>
    </presentation>
  </theory>
  <private for="BooleanAlgebra_in_PowerSet_TA">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"PowerSet_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst PowerSet"
From:"BooleanAlgebra_in_PowerSet_TAE1" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="BooleanAlgebra_in_PowerSet_T">
    <presentation for="BooleanAlgebra_in_PowerSet_T">
      <use format="Hets">[BooleanAlgebra_in_PowerSet,T,0]</use>
    </presentation>
    <imports from="#BooleanAlgebra_in_PowerSet_TA"/>
    <imports from="#BooleanAlgebra_in_PowerSet_VG"/>
    <imports from="#PowerSet">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="BraceOpenBraceClose2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="BraceOpenBraceClose2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="BraceOpen__BraceClose2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="BraceOpen__BraceClose2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="Hash__1"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="Hash__1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="N02"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="N02"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="N12"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="N12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="N22"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="N22"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="N32"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="N32"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="N42"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="N42"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="N52"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="N52"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="N62"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="N62"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="N72"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="N72"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="N82"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="N82"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="N92"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="N92"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="X2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="X"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="__LowerEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="__Lower__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="__GreaterEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="__Greater__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="__Ast__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="__Ast__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="__AtAt__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="__AtAt__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="__DivisionQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="__DivisionQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="__Excla2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="__Excla2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="__MinusExcla__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="__MinusExcla__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="__MinusQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="__MinusQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="__Minus__3"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="__Minus__3"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="__Plus__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="__Plus__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="__Power__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="__Power__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="__div__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="__div__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="__eps__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="__eps__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="__intersection__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="__intersection__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="__isSubsetOf__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="__isSubsetOf__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="__mod__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="__mod__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="__symDiff__1"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="__symDiff__1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="__union__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="__union__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="even2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="isNonEmpty"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="isNonEmpty1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="max2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="max2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="min2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="min2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="odd2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="pre2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="pre2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="PowerSet" name="suc2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BooleanAlgebra_in_PowerSet_T" name="suc2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <symbol role="sort" name="PowerSetSBrackOpenXSBrackClose"/>
    <presentation for="PowerSetSBrackOpenXSBrackClose">
      <use format="Hets">[PowerSet[X]]</use>
    </presentation>
    <symbol role="sort" name="ElemSBrackOpenXSBrackClose"/>
    <presentation for="ElemSBrackOpenXSBrackClose">
      <use format="Hets">[Elem[X]]</use>
    </presentation>
    <adt>
      <sortdef name="Elem5" type="free">
        <insort for="#ElemSBrackOpenXSBrackClose"/>
      </sortdef>
    </adt>
    <adt>
      <sortdef name="SetSBrackOpenElemSBrackClose1" type="free">
        <insort for="#PowerSetSBrackOpenXSBrackClose"/>
      </sortdef>
    </adt>
  </theory>
  <private for="BooleanAlgebra_in_PowerSet_T">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"BooleanAlgebra" Type:"GlobalThm Open None Open" Origin:"DGView BooleanAlgebra_in_PowerSet"
From:"BooleanAlgebra_in_PowerSet_TA" Type:"GlobalDef" Origin:"DGFitSpec"
From:"BooleanAlgebra_in_PowerSet_VG" Type:"GlobalDef" Origin:"DGSpecInst PowerSet"
From:"PowerSet" Type:"GlobalDef" Origin:"DGSpecInst PowerSet"
]]></data>
  </private>
  <theory xml:id="GenerateList_P">
    <presentation for="GenerateList_P">
      <use format="Hets">[GenerateList,P,0]</use>
    </presentation>
    <symbol role="sort" name="Elem26"/>
    <presentation for="Elem26">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <theory xml:id="GenerateList">
    <presentation for="GenerateList">
      <use format="Hets">[GenerateList,,0]</use>
    </presentation>
    <imports from="#GenerateList_P"/>
    <symbol role="sort" name="ListSBrackOpenElemSBrackClose"/>
    <presentation for="ListSBrackOpenElemSBrackClose">
      <use format="Hets">[List[Elem]]</use>
    </presentation>
    <adt>
      <sortdef name="ListSBrackOpenElemSBrackClose" type="free">
        <constructor name="SBrackOpenSBrackClose10"/>
        <constructor name="__::__10">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="GenerateList_P" name="Elem26"/>
              </OMOBJ>
            </type>
          </argument>
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="GenerateList" name="ListSBrackOpenElemSBrackClose"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
      </sortdef>
    </adt>
    <symbol name="SBrackOpenSBrackClose" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="GenerateList" name="ListSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SBrackOpenSBrackClose">
      <use format="Hets">[[,]]</use>
    </presentation>
    <symbol name="__::__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="GenerateList_P" name="Elem26"/>
            <OMS cd="GenerateList" name="ListSBrackOpenElemSBrackClose"/>
            <OMS cd="GenerateList" name="ListSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__::__">
      <use format="Hets">[__,::,__]</use>
    </presentation>
    <symbol name="first" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="GenerateList" name="ListSBrackOpenElemSBrackClose"/>
            <OMS cd="GenerateList_P" name="Elem26"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="first">
      <use format="Hets">[first]</use>
    </presentation>
    <symbol name="rest" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="GenerateList" name="ListSBrackOpenElemSBrackClose"/>
            <OMS cd="GenerateList" name="ListSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="rest">
      <use format="Hets">[rest]</use>
    </presentation>
    <axiom name="ga_disjoint_SBrackOpenSBrackClose___::__">
      <CMP>
  List[Elem] ::=  [] |  __ :: __ (first:? Elem; rest:? List[Elem])
  List[Elem] ::=  [] |  __ :: __ (first:? Elem; rest:? List[Elem])
  List[Elem] ::=  [] |  __ :: __ (first:? Elem; rest:? List[Elem])
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateList_P" name="Elem26"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateList" name="ListSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMS cd="GenerateList" name="SBrackOpenSBrackClose"/>
                <OMA>
                  <OMS cd="GenerateList" name="__::__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateList_P" name="Elem26"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateList" name="ListSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_SBrackOpenSBrackClose___::__">
      <use format="Hets">ga_disjoint_[]___::__</use>
    </presentation>
    <axiom name="ga_injective___::__">
      <CMP>
  List[Elem] ::=  [] |  __ :: __ (first:? Elem; rest:? List[Elem])
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateList_P" name="Elem26"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateList" name="ListSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateList_P" name="Elem26"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateList" name="ListSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="GenerateList" name="__::__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateList_P" name="Elem26"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateList" name="ListSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="GenerateList" name="__::__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateList_P" name="Elem26"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateList" name="ListSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateList_P" name="Elem26"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateList_P" name="Elem26"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateList" name="ListSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateList" name="ListSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective___::__">
      <use format="Hets">ga_injective___::__</use>
    </presentation>
    <axiom name="ga_selector_first">
      <CMP>
  List[Elem] ::=  [] |  __ :: __ (first:? Elem; rest:? List[Elem])
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateList_P" name="Elem26"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateList" name="ListSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="GenerateList" name="first"/>
                <OMA>
                  <OMS cd="GenerateList" name="__::__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateList_P" name="Elem26"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateList" name="ListSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateList_P" name="Elem26"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_first">
      <use format="Hets">ga_selector_first</use>
    </presentation>
    <axiom name="ga_selector_rest">
      <CMP>
  List[Elem] ::=  [] |  __ :: __ (first:? Elem; rest:? List[Elem])
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateList_P" name="Elem26"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateList" name="ListSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="GenerateList" name="rest"/>
                <OMA>
                  <OMS cd="GenerateList" name="__::__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateList_P" name="Elem26"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateList" name="ListSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateList" name="ListSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_rest">
      <use format="Hets">ga_selector_rest</use>
    </presentation>
    <axiom name="ga_selector_undef_first_SBrackOpenSBrackClose">
      <CMP>
  List[Elem] ::=  [] |  __ :: __ (first:? Elem; rest:? List[Elem])
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="definedness"/>
              <OMA>
                <OMS cd="GenerateList" name="first"/>
                <OMS cd="GenerateList" name="SBrackOpenSBrackClose"/>
              </OMA>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_undef_first_SBrackOpenSBrackClose">
      <use format="Hets">ga_selector_undef_first_[]</use>
    </presentation>
    <axiom name="ga_selector_undef_rest_SBrackOpenSBrackClose">
      <CMP>
  List[Elem] ::=  [] |  __ :: __ (first:? Elem; rest:? List[Elem])
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="definedness"/>
              <OMA>
                <OMS cd="GenerateList" name="rest"/>
                <OMS cd="GenerateList" name="SBrackOpenSBrackClose"/>
              </OMA>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_undef_rest_SBrackOpenSBrackClose">
      <use format="Hets">ga_selector_undef_rest_[]</use>
    </presentation>
  </theory>
  <private for="GenerateList">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"GenerateList_P" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="List_PI">
    <presentation for="List_PI">
      <use format="Hets">[List,PI,0]</use>
    </presentation>
    <imports from="Basic/Numbers.omdoc#Nat"/>
  </theory>
  <private for="List_PI">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="List_P">
    <presentation for="List_P">
      <use format="Hets">[List,P,0]</use>
    </presentation>
    <imports from="#List_PI"/>
    <symbol role="sort" name="Elem35"/>
    <presentation for="Elem35">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="List_P">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"List_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="List_E2A">
    <presentation for="List_E2A">
      <use format="Hets">[List,E2A,0]</use>
    </presentation>
    <symbol role="sort" name="Elem36"/>
    <presentation for="Elem36">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="List_E2A">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"GenerateList_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst GenerateList"
]]></data>
  </private>
  <theory xml:id="List_E2">
    <presentation for="List_E2">
      <use format="Hets">[List,E,2]</use>
    </presentation>
    <imports from="#GenerateList"/>
    <imports from="#List_E2A"/>
    <imports from="#List_P"/>
    <symbol role="sort" name="ListSBrackOpenElemSBrackClose1"/>
    <presentation for="ListSBrackOpenElemSBrackClose1">
      <use format="Hets">[List[Elem]]</use>
    </presentation>
    <symbol name="SBrackOpenSBrackClose5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SBrackOpenSBrackClose5">
      <use format="Hets">[[,]]</use>
    </presentation>
    <symbol name="__::__5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="List_P" name="Elem35"/>
            <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
            <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__::__5">
      <use format="Hets">[__,::,__]</use>
    </presentation>
    <symbol name="first5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
            <OMS cd="List_P" name="Elem35"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="first5">
      <use format="Hets">[first]</use>
    </presentation>
    <symbol name="rest5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
            <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="rest5">
      <use format="Hets">[rest]</use>
    </presentation>
  </theory>
  <private for="List_E2">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"List_P" Type:"GlobalDef" Origin:"DGSpecInst GenerateList"
From:"List_E2A" Type:"GlobalDef" Origin:"DGFitSpec"
From:"GenerateList" Type:"GlobalDef" Origin:"DGSpecInst GenerateList"
]]></data>
  </private>
  <theory xml:id="List_E1">
    <presentation for="List_E1">
      <use format="Hets">[List,E,1]</use>
    </presentation>
    <imports from="#List_E2"/>
    <symbol name="__eps__10" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="List_P" name="Elem35"/>
            <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__eps__10">
      <use format="Hets">[__,eps,__]</use>
    </presentation>
    <symbol name="isEmpty6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isEmpty6">
      <use format="Hets">[isEmpty]</use>
    </presentation>
    <symbol name="Hash__8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="Hash__8">
      <use format="Hets">[#,__]</use>
    </presentation>
    <symbol name="__Excla__4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
            <OMS cd="Nat" name="Nat3"/>
            <OMS cd="List_P" name="Elem35"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Excla__4">
      <use format="Hets">[__,!,__]</use>
    </presentation>
    <symbol name="__PlusPlus__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
            <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
            <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__PlusPlus__2">
      <use format="Hets">[__,++,__]</use>
    </presentation>
    <symbol name="drop2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Nat" name="Nat3"/>
            <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
            <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="drop2">
      <use format="Hets">[drop]</use>
    </presentation>
    <symbol name="freq4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
            <OMS cd="List_P" name="Elem35"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="freq4">
      <use format="Hets">[freq]</use>
    </presentation>
    <symbol name="front2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
            <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="front2">
      <use format="Hets">[front]</use>
    </presentation>
    <symbol name="last2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
            <OMS cd="List_P" name="Elem35"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="last2">
      <use format="Hets">[last]</use>
    </presentation>
    <symbol name="reverse2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
            <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="reverse2">
      <use format="Hets">[reverse]</use>
    </presentation>
    <symbol name="take2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Nat" name="Nat3"/>
            <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
            <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="take2">
      <use format="Hets">[take]</use>
    </presentation>
    <axiom name="List_elemOf_NeList1">
      <CMP>
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     . isEmpty(L) &#60;=&#62; L=[]                      %(isEmpty_def)%
     . not x eps []                             %(List_elemOf_nil)%
     . x eps (x::L)                             %(List_elemOf_NeList1)%
     . (x eps (y::L) &#60;=&#62; x eps L) if not x=y    %(List_elemOf_NeList2)%
     . L + x = L ++ [x]                      %(append_def)%
     . def first(L) &#60;=&#62; not isEmpty(L)       %(first_dom)%         %implied
     . not def first([])                     %(first_partial_nil)% %implied
     . def last(L) &#60;=&#62; not isEmpty(L)           %(last_dom)% %implied
     . not def last([])                         %(last_nil)%
     . last (x :: L) = x when isEmpty(L) else           
     . def front(L) &#60;=&#62; not isEmpty(L)       %(front_dom)% %implied
     . not def front([])                     %(front_nil)%
     . front (L + x )= L                     %(front_NeList)%
     . def rest(L) &#60;=&#62; not isEmpty(L)        %(rest_dom)% %implied
     . not def rest([])                      %(rest_nil)% %implied
     . # [] = 0                              %(numberOf_nil_List)%
     . # (x :: L) = suc( # L )               %(numberOf_NeList_List)%
     . [] ++ K = K                           %(concat_nil_List)%
     . (x::L) ++ K = x :: (L ++ K)           %(concat_NeList_List)%
     . reverse([])=[]                          %(reverse_nil)%
     . reverse(x::L) = reverse(L) ++ [x]       %(reverse_NeList)%
     . def L!n &#60;=&#62; #L &#62;= suc(n)                     %(index_dom)% %implied
     . not def[]!n                             %(index_nil)%
     . (x :: L)!0 = x                          %(index_0)%
     . (x :: L)!suc(p) = L!p                   %(index_suc)%
     . def take(n,L) &#60;=&#62; # L &#62;= n              %(take_dom)% %implied
     . take (n,L) = K &#60;=&#62; 
     . def drop(n,L) &#60;=&#62; # L &#62;= n              %(drop_dom)% %implied
     . drop (n,L) = K &#60;=&#62; 
     . freq ([],x) = 0                         %(freq_nil)%
     . freq (x::L,y) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_P" name="Elem35"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="predication"/>
              <OMS cd="List_E1" name="__eps__10"/>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_P" name="Elem35"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMA>
                <OMS cd="List_E2" name="__::__5"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="List_P" name="Elem35"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="L"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="List_elemOf_NeList1">
      <use format="Hets">List_elemOf_NeList1</use>
    </presentation>
    <axiom name="List_elemOf_NeList2">
      <CMP>
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     . isEmpty(L) &#60;=&#62; L=[]                      %(isEmpty_def)%
     . not x eps []                             %(List_elemOf_nil)%
     . x eps (x::L)                             %(List_elemOf_NeList1)%
     . (x eps (y::L) &#60;=&#62; x eps L) if not x=y    %(List_elemOf_NeList2)%
     . L + x = L ++ [x]                      %(append_def)%
     . def first(L) &#60;=&#62; not isEmpty(L)       %(first_dom)%         %implied
     . not def first([])                     %(first_partial_nil)% %implied
     . def last(L) &#60;=&#62; not isEmpty(L)           %(last_dom)% %implied
     . not def last([])                         %(last_nil)%
     . last (x :: L) = x when isEmpty(L) else           
     . def front(L) &#60;=&#62; not isEmpty(L)       %(front_dom)% %implied
     . not def front([])                     %(front_nil)%
     . front (L + x )= L                     %(front_NeList)%
     . def rest(L) &#60;=&#62; not isEmpty(L)        %(rest_dom)% %implied
     . not def rest([])                      %(rest_nil)% %implied
     . # [] = 0                              %(numberOf_nil_List)%
     . # (x :: L) = suc( # L )               %(numberOf_NeList_List)%
     . [] ++ K = K                           %(concat_nil_List)%
     . (x::L) ++ K = x :: (L ++ K)           %(concat_NeList_List)%
     . reverse([])=[]                          %(reverse_nil)%
     . reverse(x::L) = reverse(L) ++ [x]       %(reverse_NeList)%
     . def L!n &#60;=&#62; #L &#62;= suc(n)                     %(index_dom)% %implied
     . not def[]!n                             %(index_nil)%
     . (x :: L)!0 = x                          %(index_0)%
     . (x :: L)!suc(p) = L!p                   %(index_suc)%
     . def take(n,L) &#60;=&#62; # L &#62;= n              %(take_dom)% %implied
     . take (n,L) = K &#60;=&#62; 
     . def drop(n,L) &#60;=&#62; # L &#62;= n              %(drop_dom)% %implied
     . drop (n,L) = K &#60;=&#62; 
     . freq ([],x) = 0                         %(freq_nil)%
     . freq (x::L,y) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_P" name="Elem35"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_P" name="Elem35"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_P" name="Elem35"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_P" name="Elem35"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="equivalence"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="List_E1" name="__eps__10"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_P" name="Elem35"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMA>
                    <OMS cd="List_E2" name="__::__5"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="List_P" name="Elem35"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                      </OMATP>
                      <OMV name="L"/>
                    </OMATTR>
                  </OMA>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="List_E1" name="__eps__10"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_P" name="Elem35"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMS cd="casl" name="false"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="List_elemOf_NeList2">
      <use format="Hets">List_elemOf_NeList2</use>
    </presentation>
    <axiom name="List_elemOf_nil">
      <CMP>
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     . isEmpty(L) &#60;=&#62; L=[]                      %(isEmpty_def)%
     . not x eps []                             %(List_elemOf_nil)%
     . x eps (x::L)                             %(List_elemOf_NeList1)%
     . (x eps (y::L) &#60;=&#62; x eps L) if not x=y    %(List_elemOf_NeList2)%
     . L + x = L ++ [x]                      %(append_def)%
     . def first(L) &#60;=&#62; not isEmpty(L)       %(first_dom)%         %implied
     . not def first([])                     %(first_partial_nil)% %implied
     . def last(L) &#60;=&#62; not isEmpty(L)           %(last_dom)% %implied
     . not def last([])                         %(last_nil)%
     . last (x :: L) = x when isEmpty(L) else           
     . def front(L) &#60;=&#62; not isEmpty(L)       %(front_dom)% %implied
     . not def front([])                     %(front_nil)%
     . front (L + x )= L                     %(front_NeList)%
     . def rest(L) &#60;=&#62; not isEmpty(L)        %(rest_dom)% %implied
     . not def rest([])                      %(rest_nil)% %implied
     . # [] = 0                              %(numberOf_nil_List)%
     . # (x :: L) = suc( # L )               %(numberOf_NeList_List)%
     . [] ++ K = K                           %(concat_nil_List)%
     . (x::L) ++ K = x :: (L ++ K)           %(concat_NeList_List)%
     . reverse([])=[]                          %(reverse_nil)%
     . reverse(x::L) = reverse(L) ++ [x]       %(reverse_NeList)%
     . def L!n &#60;=&#62; #L &#62;= suc(n)                     %(index_dom)% %implied
     . not def[]!n                             %(index_nil)%
     . (x :: L)!0 = x                          %(index_0)%
     . (x :: L)!suc(p) = L!p                   %(index_suc)%
     . def take(n,L) &#60;=&#62; # L &#62;= n              %(take_dom)% %implied
     . take (n,L) = K &#60;=&#62; 
     . def drop(n,L) &#60;=&#62; # L &#62;= n              %(drop_dom)% %implied
     . drop (n,L) = K &#60;=&#62; 
     . freq ([],x) = 0                         %(freq_nil)%
     . freq (x::L,y) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_P" name="Elem35"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="List_E1" name="__eps__10"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="List_P" name="Elem35"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMS cd="List_E2" name="SBrackOpenSBrackClose5"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="List_elemOf_nil">
      <use format="Hets">List_elemOf_nil</use>
    </presentation>
    <axiom name="append_def">
      <CMP>
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     . isEmpty(L) &#60;=&#62; L=[]                      %(isEmpty_def)%
     . not x eps []                             %(List_elemOf_nil)%
     . x eps (x::L)                             %(List_elemOf_NeList1)%
     . (x eps (y::L) &#60;=&#62; x eps L) if not x=y    %(List_elemOf_NeList2)%
     . L + x = L ++ [x]                      %(append_def)%
     . def first(L) &#60;=&#62; not isEmpty(L)       %(first_dom)%         %implied
     . not def first([])                     %(first_partial_nil)% %implied
     . def last(L) &#60;=&#62; not isEmpty(L)           %(last_dom)% %implied
     . not def last([])                         %(last_nil)%
     . last (x :: L) = x when isEmpty(L) else           
     . def front(L) &#60;=&#62; not isEmpty(L)       %(front_dom)% %implied
     . not def front([])                     %(front_nil)%
     . front (L + x )= L                     %(front_NeList)%
     . def rest(L) &#60;=&#62; not isEmpty(L)        %(rest_dom)% %implied
     . not def rest([])                      %(rest_nil)% %implied
     . # [] = 0                              %(numberOf_nil_List)%
     . # (x :: L) = suc( # L )               %(numberOf_NeList_List)%
     . [] ++ K = K                           %(concat_nil_List)%
     . (x::L) ++ K = x :: (L ++ K)           %(concat_NeList_List)%
     . reverse([])=[]                          %(reverse_nil)%
     . reverse(x::L) = reverse(L) ++ [x]       %(reverse_NeList)%
     . def L!n &#60;=&#62; #L &#62;= suc(n)                     %(index_dom)% %implied
     . not def[]!n                             %(index_nil)%
     . (x :: L)!0 = x                          %(index_0)%
     . (x :: L)!suc(p) = L!p                   %(index_suc)%
     . def take(n,L) &#60;=&#62; # L &#62;= n              %(take_dom)% %implied
     . take (n,L) = K &#60;=&#62; 
     . def drop(n,L) &#60;=&#62; # L &#62;= n              %(drop_dom)% %implied
     . drop (n,L) = K &#60;=&#62; 
     . freq ([],x) = 0                         %(freq_nil)%
     . freq (x::L,y) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_P" name="Elem35"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__Plus__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="L"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="List_P" name="Elem35"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="List_E1" name="__PlusPlus__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="L"/>
                </OMATTR>
                <OMA>
                  <OMS cd="List_E2" name="__::__5"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_P" name="Elem35"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMS cd="List_E2" name="SBrackOpenSBrackClose5"/>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="append_def">
      <use format="Hets">append_def</use>
    </presentation>
    <axiom name="concat_NeList_List">
      <CMP>
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     . isEmpty(L) &#60;=&#62; L=[]                      %(isEmpty_def)%
     . not x eps []                             %(List_elemOf_nil)%
     . x eps (x::L)                             %(List_elemOf_NeList1)%
     . (x eps (y::L) &#60;=&#62; x eps L) if not x=y    %(List_elemOf_NeList2)%
     . L + x = L ++ [x]                      %(append_def)%
     . def first(L) &#60;=&#62; not isEmpty(L)       %(first_dom)%         %implied
     . not def first([])                     %(first_partial_nil)% %implied
     . def last(L) &#60;=&#62; not isEmpty(L)           %(last_dom)% %implied
     . not def last([])                         %(last_nil)%
     . last (x :: L) = x when isEmpty(L) else           
     . def front(L) &#60;=&#62; not isEmpty(L)       %(front_dom)% %implied
     . not def front([])                     %(front_nil)%
     . front (L + x )= L                     %(front_NeList)%
     . def rest(L) &#60;=&#62; not isEmpty(L)        %(rest_dom)% %implied
     . not def rest([])                      %(rest_nil)% %implied
     . # [] = 0                              %(numberOf_nil_List)%
     . # (x :: L) = suc( # L )               %(numberOf_NeList_List)%
     . [] ++ K = K                           %(concat_nil_List)%
     . (x::L) ++ K = x :: (L ++ K)           %(concat_NeList_List)%
     . reverse([])=[]                          %(reverse_nil)%
     . reverse(x::L) = reverse(L) ++ [x]       %(reverse_NeList)%
     . def L!n &#60;=&#62; #L &#62;= suc(n)                     %(index_dom)% %implied
     . not def[]!n                             %(index_nil)%
     . (x :: L)!0 = x                          %(index_0)%
     . (x :: L)!suc(p) = L!p                   %(index_suc)%
     . def take(n,L) &#60;=&#62; # L &#62;= n              %(take_dom)% %implied
     . take (n,L) = K &#60;=&#62; 
     . def drop(n,L) &#60;=&#62; # L &#62;= n              %(drop_dom)% %implied
     . drop (n,L) = K &#60;=&#62; 
     . freq ([],x) = 0                         %(freq_nil)%
     . freq (x::L,y) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_P" name="Elem35"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="K"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="List_E1" name="__PlusPlus__2"/>
                <OMA>
                  <OMS cd="List_E2" name="__::__5"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_P" name="Elem35"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="K"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="List_E2" name="__::__5"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="List_P" name="Elem35"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="List_E1" name="__PlusPlus__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="K"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="concat_NeList_List">
      <use format="Hets">concat_NeList_List</use>
    </presentation>
    <axiom name="concat_nil_List">
      <CMP>
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     . isEmpty(L) &#60;=&#62; L=[]                      %(isEmpty_def)%
     . not x eps []                             %(List_elemOf_nil)%
     . x eps (x::L)                             %(List_elemOf_NeList1)%
     . (x eps (y::L) &#60;=&#62; x eps L) if not x=y    %(List_elemOf_NeList2)%
     . L + x = L ++ [x]                      %(append_def)%
     . def first(L) &#60;=&#62; not isEmpty(L)       %(first_dom)%         %implied
     . not def first([])                     %(first_partial_nil)% %implied
     . def last(L) &#60;=&#62; not isEmpty(L)           %(last_dom)% %implied
     . not def last([])                         %(last_nil)%
     . last (x :: L) = x when isEmpty(L) else           
     . def front(L) &#60;=&#62; not isEmpty(L)       %(front_dom)% %implied
     . not def front([])                     %(front_nil)%
     . front (L + x )= L                     %(front_NeList)%
     . def rest(L) &#60;=&#62; not isEmpty(L)        %(rest_dom)% %implied
     . not def rest([])                      %(rest_nil)% %implied
     . # [] = 0                              %(numberOf_nil_List)%
     . # (x :: L) = suc( # L )               %(numberOf_NeList_List)%
     . [] ++ K = K                           %(concat_nil_List)%
     . (x::L) ++ K = x :: (L ++ K)           %(concat_NeList_List)%
     . reverse([])=[]                          %(reverse_nil)%
     . reverse(x::L) = reverse(L) ++ [x]       %(reverse_NeList)%
     . def L!n &#60;=&#62; #L &#62;= suc(n)                     %(index_dom)% %implied
     . not def[]!n                             %(index_nil)%
     . (x :: L)!0 = x                          %(index_0)%
     . (x :: L)!suc(p) = L!p                   %(index_suc)%
     . def take(n,L) &#60;=&#62; # L &#62;= n              %(take_dom)% %implied
     . take (n,L) = K &#60;=&#62; 
     . def drop(n,L) &#60;=&#62; # L &#62;= n              %(drop_dom)% %implied
     . drop (n,L) = K &#60;=&#62; 
     . freq ([],x) = 0                         %(freq_nil)%
     . freq (x::L,y) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="K"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="List_E1" name="__PlusPlus__2"/>
                <OMS cd="List_E2" name="SBrackOpenSBrackClose5"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="K"/>
                </OMATTR>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="K"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="concat_nil_List">
      <use format="Hets">concat_nil_List</use>
    </presentation>
    <axiom name="drop_def">
      <CMP>
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     . isEmpty(L) &#60;=&#62; L=[]                      %(isEmpty_def)%
     . not x eps []                             %(List_elemOf_nil)%
     . x eps (x::L)                             %(List_elemOf_NeList1)%
     . (x eps (y::L) &#60;=&#62; x eps L) if not x=y    %(List_elemOf_NeList2)%
     . L + x = L ++ [x]                      %(append_def)%
     . def first(L) &#60;=&#62; not isEmpty(L)       %(first_dom)%         %implied
     . not def first([])                     %(first_partial_nil)% %implied
     . def last(L) &#60;=&#62; not isEmpty(L)           %(last_dom)% %implied
     . not def last([])                         %(last_nil)%
     . last (x :: L) = x when isEmpty(L) else           
     . def front(L) &#60;=&#62; not isEmpty(L)       %(front_dom)% %implied
     . not def front([])                     %(front_nil)%
     . front (L + x )= L                     %(front_NeList)%
     . def rest(L) &#60;=&#62; not isEmpty(L)        %(rest_dom)% %implied
     . not def rest([])                      %(rest_nil)% %implied
     . # [] = 0                              %(numberOf_nil_List)%
     . # (x :: L) = suc( # L )               %(numberOf_NeList_List)%
     . [] ++ K = K                           %(concat_nil_List)%
     . (x::L) ++ K = x :: (L ++ K)           %(concat_NeList_List)%
     . reverse([])=[]                          %(reverse_nil)%
     . reverse(x::L) = reverse(L) ++ [x]       %(reverse_NeList)%
     . def L!n &#60;=&#62; #L &#62;= suc(n)                     %(index_dom)% %implied
     . not def[]!n                             %(index_nil)%
     . (x :: L)!0 = x                          %(index_0)%
     . (x :: L)!suc(p) = L!p                   %(index_suc)%
     . def take(n,L) &#60;=&#62; # L &#62;= n              %(take_dom)% %implied
     . take (n,L) = K &#60;=&#62; 
     . def drop(n,L) &#60;=&#62; # L &#62;= n              %(drop_dom)% %implied
     . drop (n,L) = K &#60;=&#62; 
     . freq ([],x) = 0                         %(freq_nil)%
     . freq (x::L,y) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat" name="Nat3"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="K"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="List_E1" name="drop2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat" name="Nat3"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="K"/>
                </OMATTR>
              </OMA>
              <OMBIND>
                <OMS cd="casl" name="existential"/>
                <OMBVAR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="S"/>
                  </OMATTR>
                </OMBVAR>
                <OMA>
                  <OMS cd="casl" name="conjunction"/>
                  <OMA>
                    <OMS cd="casl" name="strong-equation"/>
                    <OMA>
                      <OMS cd="List_E1" name="__PlusPlus__2"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                        </OMATP>
                        <OMV name="S"/>
                      </OMATTR>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                        </OMATP>
                        <OMV name="K"/>
                      </OMATTR>
                    </OMA>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                      </OMATP>
                      <OMV name="L"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="casl" name="strong-equation"/>
                    <OMA>
                      <OMS cd="List_E1" name="Hash__8"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                        </OMATP>
                        <OMV name="S"/>
                      </OMATTR>
                    </OMA>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat" name="Nat3"/>
                      </OMATP>
                      <OMV name="n"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMBIND>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="drop_def">
      <use format="Hets">drop_def</use>
    </presentation>
    <axiom name="drop_dom">
      <CMP>
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     . isEmpty(L) &#60;=&#62; L=[]                      %(isEmpty_def)%
     . not x eps []                             %(List_elemOf_nil)%
     . x eps (x::L)                             %(List_elemOf_NeList1)%
     . (x eps (y::L) &#60;=&#62; x eps L) if not x=y    %(List_elemOf_NeList2)%
     . L + x = L ++ [x]                      %(append_def)%
     . def first(L) &#60;=&#62; not isEmpty(L)       %(first_dom)%         %implied
     . not def first([])                     %(first_partial_nil)% %implied
     . def last(L) &#60;=&#62; not isEmpty(L)           %(last_dom)% %implied
     . not def last([])                         %(last_nil)%
     . last (x :: L) = x when isEmpty(L) else           
     . def front(L) &#60;=&#62; not isEmpty(L)       %(front_dom)% %implied
     . not def front([])                     %(front_nil)%
     . front (L + x )= L                     %(front_NeList)%
     . def rest(L) &#60;=&#62; not isEmpty(L)        %(rest_dom)% %implied
     . not def rest([])                      %(rest_nil)% %implied
     . # [] = 0                              %(numberOf_nil_List)%
     . # (x :: L) = suc( # L )               %(numberOf_NeList_List)%
     . [] ++ K = K                           %(concat_nil_List)%
     . (x::L) ++ K = x :: (L ++ K)           %(concat_NeList_List)%
     . reverse([])=[]                          %(reverse_nil)%
     . reverse(x::L) = reverse(L) ++ [x]       %(reverse_NeList)%
     . def L!n &#60;=&#62; #L &#62;= suc(n)                     %(index_dom)% %implied
     . not def[]!n                             %(index_nil)%
     . (x :: L)!0 = x                          %(index_0)%
     . (x :: L)!suc(p) = L!p                   %(index_suc)%
     . def take(n,L) &#60;=&#62; # L &#62;= n              %(take_dom)% %implied
     . take (n,L) = K &#60;=&#62; 
     . def drop(n,L) &#60;=&#62; # L &#62;= n              %(drop_dom)% %implied
     . drop (n,L) = K &#60;=&#62; 
     . freq ([],x) = 0                         %(freq_nil)%
     . freq (x::L,y) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat" name="Nat3"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="List_E1" name="drop2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat" name="Nat3"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat" name="__GreaterEquals__2"/>
                <OMA>
                  <OMS cd="List_E1" name="Hash__8"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat" name="Nat3"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="drop_dom">
      <use format="Hets">drop_dom</use>
    </presentation>
    <axiom name="first_dom">
      <CMP>
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     . isEmpty(L) &#60;=&#62; L=[]                      %(isEmpty_def)%
     . not x eps []                             %(List_elemOf_nil)%
     . x eps (x::L)                             %(List_elemOf_NeList1)%
     . (x eps (y::L) &#60;=&#62; x eps L) if not x=y    %(List_elemOf_NeList2)%
     . L + x = L ++ [x]                      %(append_def)%
     . def first(L) &#60;=&#62; not isEmpty(L)       %(first_dom)%         %implied
     . not def first([])                     %(first_partial_nil)% %implied
     . def last(L) &#60;=&#62; not isEmpty(L)           %(last_dom)% %implied
     . not def last([])                         %(last_nil)%
     . last (x :: L) = x when isEmpty(L) else           
     . def front(L) &#60;=&#62; not isEmpty(L)       %(front_dom)% %implied
     . not def front([])                     %(front_nil)%
     . front (L + x )= L                     %(front_NeList)%
     . def rest(L) &#60;=&#62; not isEmpty(L)        %(rest_dom)% %implied
     . not def rest([])                      %(rest_nil)% %implied
     . # [] = 0                              %(numberOf_nil_List)%
     . # (x :: L) = suc( # L )               %(numberOf_NeList_List)%
     . [] ++ K = K                           %(concat_nil_List)%
     . (x::L) ++ K = x :: (L ++ K)           %(concat_NeList_List)%
     . reverse([])=[]                          %(reverse_nil)%
     . reverse(x::L) = reverse(L) ++ [x]       %(reverse_NeList)%
     . def L!n &#60;=&#62; #L &#62;= suc(n)                     %(index_dom)% %implied
     . not def[]!n                             %(index_nil)%
     . (x :: L)!0 = x                          %(index_0)%
     . (x :: L)!suc(p) = L!p                   %(index_suc)%
     . def take(n,L) &#60;=&#62; # L &#62;= n              %(take_dom)% %implied
     . take (n,L) = K &#60;=&#62; 
     . def drop(n,L) &#60;=&#62; # L &#62;= n              %(drop_dom)% %implied
     . drop (n,L) = K &#60;=&#62; 
     . freq ([],x) = 0                         %(freq_nil)%
     . freq (x::L,y) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="List_E2" name="first5"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="List_E1" name="isEmpty6"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="first_dom">
      <use format="Hets">first_dom</use>
    </presentation>
    <axiom name="first_partial_nil">
      <CMP>
     . not def first([])                     %(first_partial_nil)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="definedness"/>
              <OMA>
                <OMS cd="List_E2" name="first5"/>
                <OMS cd="List_E2" name="SBrackOpenSBrackClose5"/>
              </OMA>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="first_partial_nil">
      <use format="Hets">first_partial_nil</use>
    </presentation>
    <axiom name="freq_NeList">
      <CMP>
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     . isEmpty(L) &#60;=&#62; L=[]                      %(isEmpty_def)%
     . not x eps []                             %(List_elemOf_nil)%
     . x eps (x::L)                             %(List_elemOf_NeList1)%
     . (x eps (y::L) &#60;=&#62; x eps L) if not x=y    %(List_elemOf_NeList2)%
     . L + x = L ++ [x]                      %(append_def)%
     . def first(L) &#60;=&#62; not isEmpty(L)       %(first_dom)%         %implied
     . not def first([])                     %(first_partial_nil)% %implied
     . def last(L) &#60;=&#62; not isEmpty(L)           %(last_dom)% %implied
     . not def last([])                         %(last_nil)%
     . last (x :: L) = x when isEmpty(L) else           
     . def front(L) &#60;=&#62; not isEmpty(L)       %(front_dom)% %implied
     . not def front([])                     %(front_nil)%
     . front (L + x )= L                     %(front_NeList)%
     . def rest(L) &#60;=&#62; not isEmpty(L)        %(rest_dom)% %implied
     . not def rest([])                      %(rest_nil)% %implied
     . # [] = 0                              %(numberOf_nil_List)%
     . # (x :: L) = suc( # L )               %(numberOf_NeList_List)%
     . [] ++ K = K                           %(concat_nil_List)%
     . (x::L) ++ K = x :: (L ++ K)           %(concat_NeList_List)%
     . reverse([])=[]                          %(reverse_nil)%
     . reverse(x::L) = reverse(L) ++ [x]       %(reverse_NeList)%
     . def L!n &#60;=&#62; #L &#62;= suc(n)                     %(index_dom)% %implied
     . not def[]!n                             %(index_nil)%
     . (x :: L)!0 = x                          %(index_0)%
     . (x :: L)!suc(p) = L!p                   %(index_suc)%
     . def take(n,L) &#60;=&#62; # L &#62;= n              %(take_dom)% %implied
     . take (n,L) = K &#60;=&#62; 
     . def drop(n,L) &#60;=&#62; # L &#62;= n              %(drop_dom)% %implied
     . drop (n,L) = K &#60;=&#62; 
     . freq ([],x) = 0                         %(freq_nil)%
     . freq (x::L,y) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_P" name="Elem35"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_P" name="Elem35"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="List_E1" name="freq4"/>
                <OMA>
                  <OMS cd="List_E2" name="__::__5"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_P" name="Elem35"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="List_P" name="Elem35"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="IfThenElse"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_P" name="Elem35"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_P" name="Elem35"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat" name="suc2"/>
                  <OMA>
                    <OMS cd="List_E1" name="freq4"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                      </OMATP>
                      <OMV name="L"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="List_P" name="Elem35"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                  </OMA>
                </OMA>
                <OMA>
                  <OMS cd="List_E1" name="freq4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_P" name="Elem35"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="freq_NeList">
      <use format="Hets">freq_NeList</use>
    </presentation>
    <axiom name="freq_nil">
      <CMP>
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     . isEmpty(L) &#60;=&#62; L=[]                      %(isEmpty_def)%
     . not x eps []                             %(List_elemOf_nil)%
     . x eps (x::L)                             %(List_elemOf_NeList1)%
     . (x eps (y::L) &#60;=&#62; x eps L) if not x=y    %(List_elemOf_NeList2)%
     . L + x = L ++ [x]                      %(append_def)%
     . def first(L) &#60;=&#62; not isEmpty(L)       %(first_dom)%         %implied
     . not def first([])                     %(first_partial_nil)% %implied
     . def last(L) &#60;=&#62; not isEmpty(L)           %(last_dom)% %implied
     . not def last([])                         %(last_nil)%
     . last (x :: L) = x when isEmpty(L) else           
     . def front(L) &#60;=&#62; not isEmpty(L)       %(front_dom)% %implied
     . not def front([])                     %(front_nil)%
     . front (L + x )= L                     %(front_NeList)%
     . def rest(L) &#60;=&#62; not isEmpty(L)        %(rest_dom)% %implied
     . not def rest([])                      %(rest_nil)% %implied
     . # [] = 0                              %(numberOf_nil_List)%
     . # (x :: L) = suc( # L )               %(numberOf_NeList_List)%
     . [] ++ K = K                           %(concat_nil_List)%
     . (x::L) ++ K = x :: (L ++ K)           %(concat_NeList_List)%
     . reverse([])=[]                          %(reverse_nil)%
     . reverse(x::L) = reverse(L) ++ [x]       %(reverse_NeList)%
     . def L!n &#60;=&#62; #L &#62;= suc(n)                     %(index_dom)% %implied
     . not def[]!n                             %(index_nil)%
     . (x :: L)!0 = x                          %(index_0)%
     . (x :: L)!suc(p) = L!p                   %(index_suc)%
     . def take(n,L) &#60;=&#62; # L &#62;= n              %(take_dom)% %implied
     . take (n,L) = K &#60;=&#62; 
     . def drop(n,L) &#60;=&#62; # L &#62;= n              %(drop_dom)% %implied
     . drop (n,L) = K &#60;=&#62; 
     . freq ([],x) = 0                         %(freq_nil)%
     . freq (x::L,y) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_P" name="Elem35"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="List_E1" name="freq4"/>
                <OMS cd="List_E2" name="SBrackOpenSBrackClose5"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="List_P" name="Elem35"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMS cd="Nat" name="N02"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="freq_nil">
      <use format="Hets">freq_nil</use>
    </presentation>
    <axiom name="front_NeList">
      <CMP>
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     . isEmpty(L) &#60;=&#62; L=[]                      %(isEmpty_def)%
     . not x eps []                             %(List_elemOf_nil)%
     . x eps (x::L)                             %(List_elemOf_NeList1)%
     . (x eps (y::L) &#60;=&#62; x eps L) if not x=y    %(List_elemOf_NeList2)%
     . L + x = L ++ [x]                      %(append_def)%
     . def first(L) &#60;=&#62; not isEmpty(L)       %(first_dom)%         %implied
     . not def first([])                     %(first_partial_nil)% %implied
     . def last(L) &#60;=&#62; not isEmpty(L)           %(last_dom)% %implied
     . not def last([])                         %(last_nil)%
     . last (x :: L) = x when isEmpty(L) else           
     . def front(L) &#60;=&#62; not isEmpty(L)       %(front_dom)% %implied
     . not def front([])                     %(front_nil)%
     . front (L + x )= L                     %(front_NeList)%
     . def rest(L) &#60;=&#62; not isEmpty(L)        %(rest_dom)% %implied
     . not def rest([])                      %(rest_nil)% %implied
     . # [] = 0                              %(numberOf_nil_List)%
     . # (x :: L) = suc( # L )               %(numberOf_NeList_List)%
     . [] ++ K = K                           %(concat_nil_List)%
     . (x::L) ++ K = x :: (L ++ K)           %(concat_NeList_List)%
     . reverse([])=[]                          %(reverse_nil)%
     . reverse(x::L) = reverse(L) ++ [x]       %(reverse_NeList)%
     . def L!n &#60;=&#62; #L &#62;= suc(n)                     %(index_dom)% %implied
     . not def[]!n                             %(index_nil)%
     . (x :: L)!0 = x                          %(index_0)%
     . (x :: L)!suc(p) = L!p                   %(index_suc)%
     . def take(n,L) &#60;=&#62; # L &#62;= n              %(take_dom)% %implied
     . take (n,L) = K &#60;=&#62; 
     . def drop(n,L) &#60;=&#62; # L &#62;= n              %(drop_dom)% %implied
     . drop (n,L) = K &#60;=&#62; 
     . freq ([],x) = 0                         %(freq_nil)%
     . freq (x::L,y) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_P" name="Elem35"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="List_E1" name="front2"/>
                <OMA>
                  <OMS cd="Nat" name="__Plus__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_P" name="Elem35"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="front_NeList">
      <use format="Hets">front_NeList</use>
    </presentation>
    <axiom name="front_dom">
      <CMP>
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     . isEmpty(L) &#60;=&#62; L=[]                      %(isEmpty_def)%
     . not x eps []                             %(List_elemOf_nil)%
     . x eps (x::L)                             %(List_elemOf_NeList1)%
     . (x eps (y::L) &#60;=&#62; x eps L) if not x=y    %(List_elemOf_NeList2)%
     . L + x = L ++ [x]                      %(append_def)%
     . def first(L) &#60;=&#62; not isEmpty(L)       %(first_dom)%         %implied
     . not def first([])                     %(first_partial_nil)% %implied
     . def last(L) &#60;=&#62; not isEmpty(L)           %(last_dom)% %implied
     . not def last([])                         %(last_nil)%
     . last (x :: L) = x when isEmpty(L) else           
     . def front(L) &#60;=&#62; not isEmpty(L)       %(front_dom)% %implied
     . not def front([])                     %(front_nil)%
     . front (L + x )= L                     %(front_NeList)%
     . def rest(L) &#60;=&#62; not isEmpty(L)        %(rest_dom)% %implied
     . not def rest([])                      %(rest_nil)% %implied
     . # [] = 0                              %(numberOf_nil_List)%
     . # (x :: L) = suc( # L )               %(numberOf_NeList_List)%
     . [] ++ K = K                           %(concat_nil_List)%
     . (x::L) ++ K = x :: (L ++ K)           %(concat_NeList_List)%
     . reverse([])=[]                          %(reverse_nil)%
     . reverse(x::L) = reverse(L) ++ [x]       %(reverse_NeList)%
     . def L!n &#60;=&#62; #L &#62;= suc(n)                     %(index_dom)% %implied
     . not def[]!n                             %(index_nil)%
     . (x :: L)!0 = x                          %(index_0)%
     . (x :: L)!suc(p) = L!p                   %(index_suc)%
     . def take(n,L) &#60;=&#62; # L &#62;= n              %(take_dom)% %implied
     . take (n,L) = K &#60;=&#62; 
     . def drop(n,L) &#60;=&#62; # L &#62;= n              %(drop_dom)% %implied
     . drop (n,L) = K &#60;=&#62; 
     . freq ([],x) = 0                         %(freq_nil)%
     . freq (x::L,y) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="List_E1" name="front2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="List_E1" name="isEmpty6"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="front_dom">
      <use format="Hets">front_dom</use>
    </presentation>
    <axiom name="front_nil">
      <CMP>
     . not def front([])                     %(front_nil)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="definedness"/>
              <OMA>
                <OMS cd="List_E1" name="front2"/>
                <OMS cd="List_E2" name="SBrackOpenSBrackClose5"/>
              </OMA>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="front_nil">
      <use format="Hets">front_nil</use>
    </presentation>
    <axiom name="index_0">
      <CMP>
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     . isEmpty(L) &#60;=&#62; L=[]                      %(isEmpty_def)%
     . not x eps []                             %(List_elemOf_nil)%
     . x eps (x::L)                             %(List_elemOf_NeList1)%
     . (x eps (y::L) &#60;=&#62; x eps L) if not x=y    %(List_elemOf_NeList2)%
     . L + x = L ++ [x]                      %(append_def)%
     . def first(L) &#60;=&#62; not isEmpty(L)       %(first_dom)%         %implied
     . not def first([])                     %(first_partial_nil)% %implied
     . def last(L) &#60;=&#62; not isEmpty(L)           %(last_dom)% %implied
     . not def last([])                         %(last_nil)%
     . last (x :: L) = x when isEmpty(L) else           
     . def front(L) &#60;=&#62; not isEmpty(L)       %(front_dom)% %implied
     . not def front([])                     %(front_nil)%
     . front (L + x )= L                     %(front_NeList)%
     . def rest(L) &#60;=&#62; not isEmpty(L)        %(rest_dom)% %implied
     . not def rest([])                      %(rest_nil)% %implied
     . # [] = 0                              %(numberOf_nil_List)%
     . # (x :: L) = suc( # L )               %(numberOf_NeList_List)%
     . [] ++ K = K                           %(concat_nil_List)%
     . (x::L) ++ K = x :: (L ++ K)           %(concat_NeList_List)%
     . reverse([])=[]                          %(reverse_nil)%
     . reverse(x::L) = reverse(L) ++ [x]       %(reverse_NeList)%
     . def L!n &#60;=&#62; #L &#62;= suc(n)                     %(index_dom)% %implied
     . not def[]!n                             %(index_nil)%
     . (x :: L)!0 = x                          %(index_0)%
     . (x :: L)!suc(p) = L!p                   %(index_suc)%
     . def take(n,L) &#60;=&#62; # L &#62;= n              %(take_dom)% %implied
     . take (n,L) = K &#60;=&#62; 
     . def drop(n,L) &#60;=&#62; # L &#62;= n              %(drop_dom)% %implied
     . drop (n,L) = K &#60;=&#62; 
     . freq ([],x) = 0                         %(freq_nil)%
     . freq (x::L,y) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_P" name="Elem35"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="List_E1" name="__Excla__4"/>
                <OMA>
                  <OMS cd="List_E2" name="__::__5"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_P" name="Elem35"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
                <OMS cd="Nat" name="N02"/>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_P" name="Elem35"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="index_0">
      <use format="Hets">index_0</use>
    </presentation>
    <axiom name="index_dom">
      <CMP>
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     . isEmpty(L) &#60;=&#62; L=[]                      %(isEmpty_def)%
     . not x eps []                             %(List_elemOf_nil)%
     . x eps (x::L)                             %(List_elemOf_NeList1)%
     . (x eps (y::L) &#60;=&#62; x eps L) if not x=y    %(List_elemOf_NeList2)%
     . L + x = L ++ [x]                      %(append_def)%
     . def first(L) &#60;=&#62; not isEmpty(L)       %(first_dom)%         %implied
     . not def first([])                     %(first_partial_nil)% %implied
     . def last(L) &#60;=&#62; not isEmpty(L)           %(last_dom)% %implied
     . not def last([])                         %(last_nil)%
     . last (x :: L) = x when isEmpty(L) else           
     . def front(L) &#60;=&#62; not isEmpty(L)       %(front_dom)% %implied
     . not def front([])                     %(front_nil)%
     . front (L + x )= L                     %(front_NeList)%
     . def rest(L) &#60;=&#62; not isEmpty(L)        %(rest_dom)% %implied
     . not def rest([])                      %(rest_nil)% %implied
     . # [] = 0                              %(numberOf_nil_List)%
     . # (x :: L) = suc( # L )               %(numberOf_NeList_List)%
     . [] ++ K = K                           %(concat_nil_List)%
     . (x::L) ++ K = x :: (L ++ K)           %(concat_NeList_List)%
     . reverse([])=[]                          %(reverse_nil)%
     . reverse(x::L) = reverse(L) ++ [x]       %(reverse_NeList)%
     . def L!n &#60;=&#62; #L &#62;= suc(n)                     %(index_dom)% %implied
     . not def[]!n                             %(index_nil)%
     . (x :: L)!0 = x                          %(index_0)%
     . (x :: L)!suc(p) = L!p                   %(index_suc)%
     . def take(n,L) &#60;=&#62; # L &#62;= n              %(take_dom)% %implied
     . take (n,L) = K &#60;=&#62; 
     . def drop(n,L) &#60;=&#62; # L &#62;= n              %(drop_dom)% %implied
     . drop (n,L) = K &#60;=&#62; 
     . freq ([],x) = 0                         %(freq_nil)%
     . freq (x::L,y) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat" name="Nat3"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="List_E1" name="__Excla__4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat" name="Nat3"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat" name="__GreaterEquals__2"/>
                <OMA>
                  <OMS cd="List_E1" name="Hash__8"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat" name="suc2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat" name="Nat3"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="index_dom">
      <use format="Hets">index_dom</use>
    </presentation>
    <axiom name="index_nil">
      <CMP>
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     . isEmpty(L) &#60;=&#62; L=[]                      %(isEmpty_def)%
     . not x eps []                             %(List_elemOf_nil)%
     . x eps (x::L)                             %(List_elemOf_NeList1)%
     . (x eps (y::L) &#60;=&#62; x eps L) if not x=y    %(List_elemOf_NeList2)%
     . L + x = L ++ [x]                      %(append_def)%
     . def first(L) &#60;=&#62; not isEmpty(L)       %(first_dom)%         %implied
     . not def first([])                     %(first_partial_nil)% %implied
     . def last(L) &#60;=&#62; not isEmpty(L)           %(last_dom)% %implied
     . not def last([])                         %(last_nil)%
     . last (x :: L) = x when isEmpty(L) else           
     . def front(L) &#60;=&#62; not isEmpty(L)       %(front_dom)% %implied
     . not def front([])                     %(front_nil)%
     . front (L + x )= L                     %(front_NeList)%
     . def rest(L) &#60;=&#62; not isEmpty(L)        %(rest_dom)% %implied
     . not def rest([])                      %(rest_nil)% %implied
     . # [] = 0                              %(numberOf_nil_List)%
     . # (x :: L) = suc( # L )               %(numberOf_NeList_List)%
     . [] ++ K = K                           %(concat_nil_List)%
     . (x::L) ++ K = x :: (L ++ K)           %(concat_NeList_List)%
     . reverse([])=[]                          %(reverse_nil)%
     . reverse(x::L) = reverse(L) ++ [x]       %(reverse_NeList)%
     . def L!n &#60;=&#62; #L &#62;= suc(n)                     %(index_dom)% %implied
     . not def[]!n                             %(index_nil)%
     . (x :: L)!0 = x                          %(index_0)%
     . (x :: L)!suc(p) = L!p                   %(index_suc)%
     . def take(n,L) &#60;=&#62; # L &#62;= n              %(take_dom)% %implied
     . take (n,L) = K &#60;=&#62; 
     . def drop(n,L) &#60;=&#62; # L &#62;= n              %(drop_dom)% %implied
     . drop (n,L) = K &#60;=&#62; 
     . freq ([],x) = 0                         %(freq_nil)%
     . freq (x::L,y) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat" name="Nat3"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="List_E1" name="__Excla__4"/>
                  <OMS cd="List_E2" name="SBrackOpenSBrackClose5"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat" name="Nat3"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="index_nil">
      <use format="Hets">index_nil</use>
    </presentation>
    <axiom name="index_suc">
      <CMP>
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     . isEmpty(L) &#60;=&#62; L=[]                      %(isEmpty_def)%
     . not x eps []                             %(List_elemOf_nil)%
     . x eps (x::L)                             %(List_elemOf_NeList1)%
     . (x eps (y::L) &#60;=&#62; x eps L) if not x=y    %(List_elemOf_NeList2)%
     . L + x = L ++ [x]                      %(append_def)%
     . def first(L) &#60;=&#62; not isEmpty(L)       %(first_dom)%         %implied
     . not def first([])                     %(first_partial_nil)% %implied
     . def last(L) &#60;=&#62; not isEmpty(L)           %(last_dom)% %implied
     . not def last([])                         %(last_nil)%
     . last (x :: L) = x when isEmpty(L) else           
     . def front(L) &#60;=&#62; not isEmpty(L)       %(front_dom)% %implied
     . not def front([])                     %(front_nil)%
     . front (L + x )= L                     %(front_NeList)%
     . def rest(L) &#60;=&#62; not isEmpty(L)        %(rest_dom)% %implied
     . not def rest([])                      %(rest_nil)% %implied
     . # [] = 0                              %(numberOf_nil_List)%
     . # (x :: L) = suc( # L )               %(numberOf_NeList_List)%
     . [] ++ K = K                           %(concat_nil_List)%
     . (x::L) ++ K = x :: (L ++ K)           %(concat_NeList_List)%
     . reverse([])=[]                          %(reverse_nil)%
     . reverse(x::L) = reverse(L) ++ [x]       %(reverse_NeList)%
     . def L!n &#60;=&#62; #L &#62;= suc(n)                     %(index_dom)% %implied
     . not def[]!n                             %(index_nil)%
     . (x :: L)!0 = x                          %(index_0)%
     . (x :: L)!suc(p) = L!p                   %(index_suc)%
     . def take(n,L) &#60;=&#62; # L &#62;= n              %(take_dom)% %implied
     . take (n,L) = K &#60;=&#62; 
     . def drop(n,L) &#60;=&#62; # L &#62;= n              %(drop_dom)% %implied
     . drop (n,L) = K &#60;=&#62; 
     . freq ([],x) = 0                         %(freq_nil)%
     . freq (x::L,y) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_P" name="Elem35"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat" name="Pos2"/>
                </OMATP>
                <OMV name="p"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="List_E1" name="__Excla__4"/>
                <OMA>
                  <OMS cd="List_E2" name="__::__5"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_P" name="Elem35"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat" name="suc2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat" name="Pos2"/>
                    </OMATP>
                    <OMV name="p"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="List_E1" name="__Excla__4"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="L"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat" name="Pos2"/>
                  </OMATP>
                  <OMV name="p"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="index_suc">
      <use format="Hets">index_suc</use>
    </presentation>
    <axiom name="isEmpty_def">
      <CMP>
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     . isEmpty(L) &#60;=&#62; L=[]                      %(isEmpty_def)%
     . not x eps []                             %(List_elemOf_nil)%
     . x eps (x::L)                             %(List_elemOf_NeList1)%
     . (x eps (y::L) &#60;=&#62; x eps L) if not x=y    %(List_elemOf_NeList2)%
     . L + x = L ++ [x]                      %(append_def)%
     . def first(L) &#60;=&#62; not isEmpty(L)       %(first_dom)%         %implied
     . not def first([])                     %(first_partial_nil)% %implied
     . def last(L) &#60;=&#62; not isEmpty(L)           %(last_dom)% %implied
     . not def last([])                         %(last_nil)%
     . last (x :: L) = x when isEmpty(L) else           
     . def front(L) &#60;=&#62; not isEmpty(L)       %(front_dom)% %implied
     . not def front([])                     %(front_nil)%
     . front (L + x )= L                     %(front_NeList)%
     . def rest(L) &#60;=&#62; not isEmpty(L)        %(rest_dom)% %implied
     . not def rest([])                      %(rest_nil)% %implied
     . # [] = 0                              %(numberOf_nil_List)%
     . # (x :: L) = suc( # L )               %(numberOf_NeList_List)%
     . [] ++ K = K                           %(concat_nil_List)%
     . (x::L) ++ K = x :: (L ++ K)           %(concat_NeList_List)%
     . reverse([])=[]                          %(reverse_nil)%
     . reverse(x::L) = reverse(L) ++ [x]       %(reverse_NeList)%
     . def L!n &#60;=&#62; #L &#62;= suc(n)                     %(index_dom)% %implied
     . not def[]!n                             %(index_nil)%
     . (x :: L)!0 = x                          %(index_0)%
     . (x :: L)!suc(p) = L!p                   %(index_suc)%
     . def take(n,L) &#60;=&#62; # L &#62;= n              %(take_dom)% %implied
     . take (n,L) = K &#60;=&#62; 
     . def drop(n,L) &#60;=&#62; # L &#62;= n              %(drop_dom)% %implied
     . drop (n,L) = K &#60;=&#62; 
     . freq ([],x) = 0                         %(freq_nil)%
     . freq (x::L,y) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="List_E1" name="isEmpty6"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="L"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="L"/>
                </OMATTR>
                <OMS cd="List_E2" name="SBrackOpenSBrackClose5"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isEmpty_def">
      <use format="Hets">isEmpty_def</use>
    </presentation>
    <axiom name="last_NeList">
      <CMP>
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     . isEmpty(L) &#60;=&#62; L=[]                      %(isEmpty_def)%
     . not x eps []                             %(List_elemOf_nil)%
     . x eps (x::L)                             %(List_elemOf_NeList1)%
     . (x eps (y::L) &#60;=&#62; x eps L) if not x=y    %(List_elemOf_NeList2)%
     . L + x = L ++ [x]                      %(append_def)%
     . def first(L) &#60;=&#62; not isEmpty(L)       %(first_dom)%         %implied
     . not def first([])                     %(first_partial_nil)% %implied
     . def last(L) &#60;=&#62; not isEmpty(L)           %(last_dom)% %implied
     . not def last([])                         %(last_nil)%
     . last (x :: L) = x when isEmpty(L) else           
     . def front(L) &#60;=&#62; not isEmpty(L)       %(front_dom)% %implied
     . not def front([])                     %(front_nil)%
     . front (L + x )= L                     %(front_NeList)%
     . def rest(L) &#60;=&#62; not isEmpty(L)        %(rest_dom)% %implied
     . not def rest([])                      %(rest_nil)% %implied
     . # [] = 0                              %(numberOf_nil_List)%
     . # (x :: L) = suc( # L )               %(numberOf_NeList_List)%
     . [] ++ K = K                           %(concat_nil_List)%
     . (x::L) ++ K = x :: (L ++ K)           %(concat_NeList_List)%
     . reverse([])=[]                          %(reverse_nil)%
     . reverse(x::L) = reverse(L) ++ [x]       %(reverse_NeList)%
     . def L!n &#60;=&#62; #L &#62;= suc(n)                     %(index_dom)% %implied
     . not def[]!n                             %(index_nil)%
     . (x :: L)!0 = x                          %(index_0)%
     . (x :: L)!suc(p) = L!p                   %(index_suc)%
     . def take(n,L) &#60;=&#62; # L &#62;= n              %(take_dom)% %implied
     . take (n,L) = K &#60;=&#62; 
     . def drop(n,L) &#60;=&#62; # L &#62;= n              %(drop_dom)% %implied
     . drop (n,L) = K &#60;=&#62; 
     . freq ([],x) = 0                         %(freq_nil)%
     . freq (x::L,y) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_P" name="Elem35"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="List_E1" name="last2"/>
                <OMA>
                  <OMS cd="List_E2" name="__::__5"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_P" name="Elem35"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="IfThenElse"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="List_E1" name="isEmpty6"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="List_P" name="Elem35"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="List_E1" name="last2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="last_NeList">
      <use format="Hets">last_NeList</use>
    </presentation>
    <axiom name="last_dom">
      <CMP>
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     . isEmpty(L) &#60;=&#62; L=[]                      %(isEmpty_def)%
     . not x eps []                             %(List_elemOf_nil)%
     . x eps (x::L)                             %(List_elemOf_NeList1)%
     . (x eps (y::L) &#60;=&#62; x eps L) if not x=y    %(List_elemOf_NeList2)%
     . L + x = L ++ [x]                      %(append_def)%
     . def first(L) &#60;=&#62; not isEmpty(L)       %(first_dom)%         %implied
     . not def first([])                     %(first_partial_nil)% %implied
     . def last(L) &#60;=&#62; not isEmpty(L)           %(last_dom)% %implied
     . not def last([])                         %(last_nil)%
     . last (x :: L) = x when isEmpty(L) else           
     . def front(L) &#60;=&#62; not isEmpty(L)       %(front_dom)% %implied
     . not def front([])                     %(front_nil)%
     . front (L + x )= L                     %(front_NeList)%
     . def rest(L) &#60;=&#62; not isEmpty(L)        %(rest_dom)% %implied
     . not def rest([])                      %(rest_nil)% %implied
     . # [] = 0                              %(numberOf_nil_List)%
     . # (x :: L) = suc( # L )               %(numberOf_NeList_List)%
     . [] ++ K = K                           %(concat_nil_List)%
     . (x::L) ++ K = x :: (L ++ K)           %(concat_NeList_List)%
     . reverse([])=[]                          %(reverse_nil)%
     . reverse(x::L) = reverse(L) ++ [x]       %(reverse_NeList)%
     . def L!n &#60;=&#62; #L &#62;= suc(n)                     %(index_dom)% %implied
     . not def[]!n                             %(index_nil)%
     . (x :: L)!0 = x                          %(index_0)%
     . (x :: L)!suc(p) = L!p                   %(index_suc)%
     . def take(n,L) &#60;=&#62; # L &#62;= n              %(take_dom)% %implied
     . take (n,L) = K &#60;=&#62; 
     . def drop(n,L) &#60;=&#62; # L &#62;= n              %(drop_dom)% %implied
     . drop (n,L) = K &#60;=&#62; 
     . freq ([],x) = 0                         %(freq_nil)%
     . freq (x::L,y) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="List_E1" name="last2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="List_E1" name="isEmpty6"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="last_dom">
      <use format="Hets">last_dom</use>
    </presentation>
    <axiom name="last_nil">
      <CMP>
     . not def last([])                         %(last_nil)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="definedness"/>
              <OMA>
                <OMS cd="List_E1" name="last2"/>
                <OMS cd="List_E2" name="SBrackOpenSBrackClose5"/>
              </OMA>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="last_nil">
      <use format="Hets">last_nil</use>
    </presentation>
    <axiom name="numberOf_NeList_List">
      <CMP>
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     . isEmpty(L) &#60;=&#62; L=[]                      %(isEmpty_def)%
     . not x eps []                             %(List_elemOf_nil)%
     . x eps (x::L)                             %(List_elemOf_NeList1)%
     . (x eps (y::L) &#60;=&#62; x eps L) if not x=y    %(List_elemOf_NeList2)%
     . L + x = L ++ [x]                      %(append_def)%
     . def first(L) &#60;=&#62; not isEmpty(L)       %(first_dom)%         %implied
     . not def first([])                     %(first_partial_nil)% %implied
     . def last(L) &#60;=&#62; not isEmpty(L)           %(last_dom)% %implied
     . not def last([])                         %(last_nil)%
     . last (x :: L) = x when isEmpty(L) else           
     . def front(L) &#60;=&#62; not isEmpty(L)       %(front_dom)% %implied
     . not def front([])                     %(front_nil)%
     . front (L + x )= L                     %(front_NeList)%
     . def rest(L) &#60;=&#62; not isEmpty(L)        %(rest_dom)% %implied
     . not def rest([])                      %(rest_nil)% %implied
     . # [] = 0                              %(numberOf_nil_List)%
     . # (x :: L) = suc( # L )               %(numberOf_NeList_List)%
     . [] ++ K = K                           %(concat_nil_List)%
     . (x::L) ++ K = x :: (L ++ K)           %(concat_NeList_List)%
     . reverse([])=[]                          %(reverse_nil)%
     . reverse(x::L) = reverse(L) ++ [x]       %(reverse_NeList)%
     . def L!n &#60;=&#62; #L &#62;= suc(n)                     %(index_dom)% %implied
     . not def[]!n                             %(index_nil)%
     . (x :: L)!0 = x                          %(index_0)%
     . (x :: L)!suc(p) = L!p                   %(index_suc)%
     . def take(n,L) &#60;=&#62; # L &#62;= n              %(take_dom)% %implied
     . take (n,L) = K &#60;=&#62; 
     . def drop(n,L) &#60;=&#62; # L &#62;= n              %(drop_dom)% %implied
     . drop (n,L) = K &#60;=&#62; 
     . freq ([],x) = 0                         %(freq_nil)%
     . freq (x::L,y) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_P" name="Elem35"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="List_E1" name="Hash__8"/>
                <OMA>
                  <OMS cd="List_E2" name="__::__5"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_P" name="Elem35"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat" name="suc2"/>
                <OMA>
                  <OMS cd="List_E1" name="Hash__8"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="numberOf_NeList_List">
      <use format="Hets">numberOf_NeList_List</use>
    </presentation>
    <axiom name="numberOf_nil_List">
      <CMP>
     . # [] = 0                              %(numberOf_nil_List)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMA>
              <OMS cd="List_E1" name="Hash__8"/>
              <OMS cd="List_E2" name="SBrackOpenSBrackClose5"/>
            </OMA>
            <OMS cd="Nat" name="N02"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="numberOf_nil_List">
      <use format="Hets">numberOf_nil_List</use>
    </presentation>
    <axiom name="rest_dom">
      <CMP>
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     . isEmpty(L) &#60;=&#62; L=[]                      %(isEmpty_def)%
     . not x eps []                             %(List_elemOf_nil)%
     . x eps (x::L)                             %(List_elemOf_NeList1)%
     . (x eps (y::L) &#60;=&#62; x eps L) if not x=y    %(List_elemOf_NeList2)%
     . L + x = L ++ [x]                      %(append_def)%
     . def first(L) &#60;=&#62; not isEmpty(L)       %(first_dom)%         %implied
     . not def first([])                     %(first_partial_nil)% %implied
     . def last(L) &#60;=&#62; not isEmpty(L)           %(last_dom)% %implied
     . not def last([])                         %(last_nil)%
     . last (x :: L) = x when isEmpty(L) else           
     . def front(L) &#60;=&#62; not isEmpty(L)       %(front_dom)% %implied
     . not def front([])                     %(front_nil)%
     . front (L + x )= L                     %(front_NeList)%
     . def rest(L) &#60;=&#62; not isEmpty(L)        %(rest_dom)% %implied
     . not def rest([])                      %(rest_nil)% %implied
     . # [] = 0                              %(numberOf_nil_List)%
     . # (x :: L) = suc( # L )               %(numberOf_NeList_List)%
     . [] ++ K = K                           %(concat_nil_List)%
     . (x::L) ++ K = x :: (L ++ K)           %(concat_NeList_List)%
     . reverse([])=[]                          %(reverse_nil)%
     . reverse(x::L) = reverse(L) ++ [x]       %(reverse_NeList)%
     . def L!n &#60;=&#62; #L &#62;= suc(n)                     %(index_dom)% %implied
     . not def[]!n                             %(index_nil)%
     . (x :: L)!0 = x                          %(index_0)%
     . (x :: L)!suc(p) = L!p                   %(index_suc)%
     . def take(n,L) &#60;=&#62; # L &#62;= n              %(take_dom)% %implied
     . take (n,L) = K &#60;=&#62; 
     . def drop(n,L) &#60;=&#62; # L &#62;= n              %(drop_dom)% %implied
     . drop (n,L) = K &#60;=&#62; 
     . freq ([],x) = 0                         %(freq_nil)%
     . freq (x::L,y) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="List_E2" name="rest5"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="List_E1" name="isEmpty6"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="rest_dom">
      <use format="Hets">rest_dom</use>
    </presentation>
    <axiom name="rest_nil">
      <CMP>
     . not def rest([])                      %(rest_nil)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="definedness"/>
              <OMA>
                <OMS cd="List_E2" name="rest5"/>
                <OMS cd="List_E2" name="SBrackOpenSBrackClose5"/>
              </OMA>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="rest_nil">
      <use format="Hets">rest_nil</use>
    </presentation>
    <axiom name="reverse_NeList">
      <CMP>
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     . isEmpty(L) &#60;=&#62; L=[]                      %(isEmpty_def)%
     . not x eps []                             %(List_elemOf_nil)%
     . x eps (x::L)                             %(List_elemOf_NeList1)%
     . (x eps (y::L) &#60;=&#62; x eps L) if not x=y    %(List_elemOf_NeList2)%
     . L + x = L ++ [x]                      %(append_def)%
     . def first(L) &#60;=&#62; not isEmpty(L)       %(first_dom)%         %implied
     . not def first([])                     %(first_partial_nil)% %implied
     . def last(L) &#60;=&#62; not isEmpty(L)           %(last_dom)% %implied
     . not def last([])                         %(last_nil)%
     . last (x :: L) = x when isEmpty(L) else           
     . def front(L) &#60;=&#62; not isEmpty(L)       %(front_dom)% %implied
     . not def front([])                     %(front_nil)%
     . front (L + x )= L                     %(front_NeList)%
     . def rest(L) &#60;=&#62; not isEmpty(L)        %(rest_dom)% %implied
     . not def rest([])                      %(rest_nil)% %implied
     . # [] = 0                              %(numberOf_nil_List)%
     . # (x :: L) = suc( # L )               %(numberOf_NeList_List)%
     . [] ++ K = K                           %(concat_nil_List)%
     . (x::L) ++ K = x :: (L ++ K)           %(concat_NeList_List)%
     . reverse([])=[]                          %(reverse_nil)%
     . reverse(x::L) = reverse(L) ++ [x]       %(reverse_NeList)%
     . def L!n &#60;=&#62; #L &#62;= suc(n)                     %(index_dom)% %implied
     . not def[]!n                             %(index_nil)%
     . (x :: L)!0 = x                          %(index_0)%
     . (x :: L)!suc(p) = L!p                   %(index_suc)%
     . def take(n,L) &#60;=&#62; # L &#62;= n              %(take_dom)% %implied
     . take (n,L) = K &#60;=&#62; 
     . def drop(n,L) &#60;=&#62; # L &#62;= n              %(drop_dom)% %implied
     . drop (n,L) = K &#60;=&#62; 
     . freq ([],x) = 0                         %(freq_nil)%
     . freq (x::L,y) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_P" name="Elem35"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="List_E1" name="reverse2"/>
                <OMA>
                  <OMS cd="List_E2" name="__::__5"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_P" name="Elem35"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="List_E1" name="__PlusPlus__2"/>
                <OMA>
                  <OMS cd="List_E1" name="reverse2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="List_E2" name="__::__5"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_P" name="Elem35"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMS cd="List_E2" name="SBrackOpenSBrackClose5"/>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="reverse_NeList">
      <use format="Hets">reverse_NeList</use>
    </presentation>
    <axiom name="reverse_nil">
      <CMP>
     . reverse([])=[]                          %(reverse_nil)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMA>
              <OMS cd="List_E1" name="reverse2"/>
              <OMS cd="List_E2" name="SBrackOpenSBrackClose5"/>
            </OMA>
            <OMS cd="List_E2" name="SBrackOpenSBrackClose5"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="reverse_nil">
      <use format="Hets">reverse_nil</use>
    </presentation>
    <axiom name="take_def">
      <CMP>
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     . isEmpty(L) &#60;=&#62; L=[]                      %(isEmpty_def)%
     . not x eps []                             %(List_elemOf_nil)%
     . x eps (x::L)                             %(List_elemOf_NeList1)%
     . (x eps (y::L) &#60;=&#62; x eps L) if not x=y    %(List_elemOf_NeList2)%
     . L + x = L ++ [x]                      %(append_def)%
     . def first(L) &#60;=&#62; not isEmpty(L)       %(first_dom)%         %implied
     . not def first([])                     %(first_partial_nil)% %implied
     . def last(L) &#60;=&#62; not isEmpty(L)           %(last_dom)% %implied
     . not def last([])                         %(last_nil)%
     . last (x :: L) = x when isEmpty(L) else           
     . def front(L) &#60;=&#62; not isEmpty(L)       %(front_dom)% %implied
     . not def front([])                     %(front_nil)%
     . front (L + x )= L                     %(front_NeList)%
     . def rest(L) &#60;=&#62; not isEmpty(L)        %(rest_dom)% %implied
     . not def rest([])                      %(rest_nil)% %implied
     . # [] = 0                              %(numberOf_nil_List)%
     . # (x :: L) = suc( # L )               %(numberOf_NeList_List)%
     . [] ++ K = K                           %(concat_nil_List)%
     . (x::L) ++ K = x :: (L ++ K)           %(concat_NeList_List)%
     . reverse([])=[]                          %(reverse_nil)%
     . reverse(x::L) = reverse(L) ++ [x]       %(reverse_NeList)%
     . def L!n &#60;=&#62; #L &#62;= suc(n)                     %(index_dom)% %implied
     . not def[]!n                             %(index_nil)%
     . (x :: L)!0 = x                          %(index_0)%
     . (x :: L)!suc(p) = L!p                   %(index_suc)%
     . def take(n,L) &#60;=&#62; # L &#62;= n              %(take_dom)% %implied
     . take (n,L) = K &#60;=&#62; 
     . def drop(n,L) &#60;=&#62; # L &#62;= n              %(drop_dom)% %implied
     . drop (n,L) = K &#60;=&#62; 
     . freq ([],x) = 0                         %(freq_nil)%
     . freq (x::L,y) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat" name="Nat3"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="K"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="List_E1" name="take2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat" name="Nat3"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="K"/>
                </OMATTR>
              </OMA>
              <OMBIND>
                <OMS cd="casl" name="existential"/>
                <OMBVAR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="S"/>
                  </OMATTR>
                </OMBVAR>
                <OMA>
                  <OMS cd="casl" name="conjunction"/>
                  <OMA>
                    <OMS cd="casl" name="strong-equation"/>
                    <OMA>
                      <OMS cd="List_E1" name="__PlusPlus__2"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                        </OMATP>
                        <OMV name="K"/>
                      </OMATTR>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                        </OMATP>
                        <OMV name="S"/>
                      </OMATTR>
                    </OMA>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                      </OMATP>
                      <OMV name="L"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="casl" name="strong-equation"/>
                    <OMA>
                      <OMS cd="List_E1" name="Hash__8"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                        </OMATP>
                        <OMV name="K"/>
                      </OMATTR>
                    </OMA>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat" name="Nat3"/>
                      </OMATP>
                      <OMV name="n"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMBIND>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="take_def">
      <use format="Hets">take_def</use>
    </presentation>
    <axiom name="take_dom">
      <CMP>
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     forall x,y: Elem; n: Nat; p: Pos; L,K: List[Elem]
     . isEmpty(L) &#60;=&#62; L=[]                      %(isEmpty_def)%
     . not x eps []                             %(List_elemOf_nil)%
     . x eps (x::L)                             %(List_elemOf_NeList1)%
     . (x eps (y::L) &#60;=&#62; x eps L) if not x=y    %(List_elemOf_NeList2)%
     . L + x = L ++ [x]                      %(append_def)%
     . def first(L) &#60;=&#62; not isEmpty(L)       %(first_dom)%         %implied
     . not def first([])                     %(first_partial_nil)% %implied
     . def last(L) &#60;=&#62; not isEmpty(L)           %(last_dom)% %implied
     . not def last([])                         %(last_nil)%
     . last (x :: L) = x when isEmpty(L) else           
     . def front(L) &#60;=&#62; not isEmpty(L)       %(front_dom)% %implied
     . not def front([])                     %(front_nil)%
     . front (L + x )= L                     %(front_NeList)%
     . def rest(L) &#60;=&#62; not isEmpty(L)        %(rest_dom)% %implied
     . not def rest([])                      %(rest_nil)% %implied
     . # [] = 0                              %(numberOf_nil_List)%
     . # (x :: L) = suc( # L )               %(numberOf_NeList_List)%
     . [] ++ K = K                           %(concat_nil_List)%
     . (x::L) ++ K = x :: (L ++ K)           %(concat_NeList_List)%
     . reverse([])=[]                          %(reverse_nil)%
     . reverse(x::L) = reverse(L) ++ [x]       %(reverse_NeList)%
     . def L!n &#60;=&#62; #L &#62;= suc(n)                     %(index_dom)% %implied
     . not def[]!n                             %(index_nil)%
     . (x :: L)!0 = x                          %(index_0)%
     . (x :: L)!suc(p) = L!p                   %(index_suc)%
     . def take(n,L) &#60;=&#62; # L &#62;= n              %(take_dom)% %implied
     . take (n,L) = K &#60;=&#62; 
     . def drop(n,L) &#60;=&#62; # L &#62;= n              %(drop_dom)% %implied
     . drop (n,L) = K &#60;=&#62; 
     . freq ([],x) = 0                         %(freq_nil)%
     . freq (x::L,y) = 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat" name="Nat3"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="List_E1" name="take2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat" name="Nat3"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat" name="__GreaterEquals__2"/>
                <OMA>
                  <OMS cd="List_E1" name="Hash__8"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat" name="Nat3"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="take_dom">
      <use format="Hets">take_dom</use>
    </presentation>
  </theory>
  <private for="List_E1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"List" Type:"GlobalThm Open None Open" Origin:"DGExtension"
From:"List_E2" Type:"GlobalDef" Origin:"DGExtension"
From:"List_E2" Type:"GlobalThm Open Def Open" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="List">
    <presentation for="List">
      <use format="Hets">[List,,0]</use>
    </presentation>
    <imports from="#List_E1"/>
    <adt>
      <sortdef name="ListSBrackOpenElemSBrackClose1" type="free">
        <constructor name="SBrackOpenSBrackClose10"/>
        <constructor name="__Plus__6">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
              </OMOBJ>
            </type>
          </argument>
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="List_P" name="Elem35"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
      </sortdef>
    </adt>
    <axiom name="first_rest">
      <CMP>
     forall L: List[Elem]
     . first(L)::rest(L) = L if not isEmpty(L)  %(first_rest)%
     . front(L)+ last(L) = L if not isEmpty(L)  %(front_last)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="List_E1" name="isEmpty6"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="List_E2" name="__::__5"/>
                  <OMA>
                    <OMS cd="List_E2" name="first5"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                      </OMATP>
                      <OMV name="L"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="List_E2" name="rest5"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                      </OMATP>
                      <OMV name="L"/>
                    </OMATTR>
                  </OMA>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="L"/>
                </OMATTR>
              </OMA>
              <OMS cd="casl" name="false"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="first_rest">
      <use format="Hets">first_rest</use>
    </presentation>
    <axiom name="front_last">
      <CMP>
     forall L: List[Elem]
     . first(L)::rest(L) = L if not isEmpty(L)  %(first_rest)%
     . front(L)+ last(L) = L if not isEmpty(L)  %(front_last)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="List_E1" name="isEmpty6"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Nat" name="__Plus__2"/>
                  <OMA>
                    <OMS cd="List_E1" name="front2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                      </OMATP>
                      <OMV name="L"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="List_E1" name="last2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                      </OMATP>
                      <OMV name="L"/>
                    </OMATTR>
                  </OMA>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="L"/>
                </OMATTR>
              </OMA>
              <OMS cd="casl" name="false"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="front_last">
      <use format="Hets">front_last</use>
    </presentation>
    <axiom name="ga_disjoint_SBrackOpenSBrackClose___Plus__">
      <CMP>
           List[Elem]::= [] | __+__(front:?List[Elem];last:?Elem)
           List[Elem]::= [] | __+__(front:?List[Elem];last:?Elem)
           List[Elem]::= [] | __+__(front:?List[Elem];last:?Elem)
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_P" name="Elem35"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMS cd="List_E2" name="SBrackOpenSBrackClose5"/>
                <OMA>
                  <OMS cd="Nat" name="__Plus__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_P" name="Elem35"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_SBrackOpenSBrackClose___Plus__">
      <use format="Hets">ga_disjoint_[]___+__</use>
    </presentation>
    <axiom name="ga_injective___Plus__">
      <CMP>
           List[Elem]::= [] | __+__(front:?List[Elem];last:?Elem)
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_P" name="Elem35"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_P" name="Elem35"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Nat" name="__Plus__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_P" name="Elem35"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat" name="__Plus__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_P" name="Elem35"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_P" name="Elem35"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_P" name="Elem35"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective___Plus__">
      <use format="Hets">ga_injective___+__</use>
    </presentation>
    <axiom name="ga_selector_front">
      <CMP>
           List[Elem]::= [] | __+__(front:?List[Elem];last:?Elem)
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_P" name="Elem35"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="List_E1" name="front2"/>
                <OMA>
                  <OMS cd="Nat" name="__Plus__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_P" name="Elem35"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_front">
      <use format="Hets">ga_selector_front</use>
    </presentation>
    <axiom name="ga_selector_last">
      <CMP>
           List[Elem]::= [] | __+__(front:?List[Elem];last:?Elem)
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_P" name="Elem35"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="List_E1" name="last2"/>
                <OMA>
                  <OMS cd="Nat" name="__Plus__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_E2" name="ListSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="List_P" name="Elem35"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="List_P" name="Elem35"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_last">
      <use format="Hets">ga_selector_last</use>
    </presentation>
    <axiom name="ga_selector_undef_front_SBrackOpenSBrackClose">
      <CMP>
           List[Elem]::= [] | __+__(front:?List[Elem];last:?Elem)
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="definedness"/>
              <OMA>
                <OMS cd="List_E1" name="front2"/>
                <OMS cd="List_E2" name="SBrackOpenSBrackClose5"/>
              </OMA>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_undef_front_SBrackOpenSBrackClose">
      <use format="Hets">ga_selector_undef_front_[]</use>
    </presentation>
    <axiom name="ga_selector_undef_last_SBrackOpenSBrackClose">
      <CMP>
           List[Elem]::= [] | __+__(front:?List[Elem];last:?Elem)
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="definedness"/>
              <OMA>
                <OMS cd="List_E1" name="last2"/>
                <OMS cd="List_E2" name="SBrackOpenSBrackClose5"/>
              </OMA>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_undef_last_SBrackOpenSBrackClose">
      <use format="Hets">ga_selector_undef_last_[]</use>
    </presentation>
  </theory>
  <private for="List">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"List_E1" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Monoid_in_List_VGI">
    <presentation for="Monoid_in_List_VGI">
      <use format="Hets">[Monoid_in_List,VGI,0]</use>
    </presentation>
    <imports from="Basic/Numbers.omdoc#Nat"/>
  </theory>
  <private for="Monoid_in_List_VGI">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="Monoid_in_List_VG">
    <presentation for="Monoid_in_List_VG">
      <use format="Hets">[Monoid_in_List,VG,0]</use>
    </presentation>
    <imports from="#Monoid_in_List_VGI"/>
    <symbol role="sort" name="Elem39"/>
    <presentation for="Elem39">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="Monoid_in_List_VG">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Monoid_in_List_VGI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Monoid_in_List_TA">
    <presentation for="Monoid_in_List_TA">
      <use format="Hets">[Monoid_in_List,TA,0]</use>
    </presentation>
    <imports from="#List_PI"/>
    <symbol role="sort" name="Elem38"/>
    <presentation for="Elem38">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="Monoid_in_List_TA">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"List_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst List"
From:"List_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Monoid_in_List_T">
    <presentation for="Monoid_in_List_T">
      <use format="Hets">[Monoid_in_List,T,0]</use>
    </presentation>
    <imports from="#List">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N02"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="N02"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N12"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="N12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N22"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="N22"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N32"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="N32"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N42"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="N42"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N52"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="N52"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N62"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="N62"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N72"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="N72"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N82"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="N82"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N92"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="N92"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="__LowerEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="__Lower__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="__GreaterEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="__Greater__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__Ast__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="__Ast__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__AtAt__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="__AtAt__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__DivisionQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="__DivisionQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__Excla2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="__Excla2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__MinusExcla__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="__MinusExcla__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__MinusQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="__MinusQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__Plus__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="__Plus__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__Power__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="__Power__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__div__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="__div__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__mod__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="__mod__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="even2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="max2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="max2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="min2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="min2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="odd2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="pre2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="pre2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="suc2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Monoid_in_List_T" name="suc2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <imports from="#Monoid_in_List_TA"/>
    <imports from="#Monoid_in_List_VG"/>
  </theory>
  <private for="Monoid_in_List_T">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"List" Type:"GlobalDef" Origin:"DGSpecInst List"
From:"Monoid" Type:"GlobalThm Open None Open" Origin:"DGView Monoid_in_List"
From:"Monoid_in_List_TA" Type:"GlobalDef" Origin:"DGFitSpec"
From:"Monoid_in_List_VG" Type:"GlobalDef" Origin:"DGSpecInst List"
]]></data>
  </private>
  <theory xml:id="String_1A">
    <presentation for="String_1A">
      <use format="Hets">[String,1A,0]</use>
    </presentation>
    <imports from="Basic/SimpleDatatypes.omdoc#Char"/>
    <imports from="#List_PI"/>
    <symbol role="sort" name="Char3"/>
    <presentation for="Char3">
      <use format="Hets">[Char]</use>
    </presentation>
    <symbol name="isDigit2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isDigit2">
      <use format="Hets">[isDigit]</use>
    </presentation>
    <symbol name="isLetter2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isLetter2">
      <use format="Hets">[isLetter]</use>
    </presentation>
    <symbol name="isPrintable2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isPrintable2">
      <use format="Hets">[isPrintable]</use>
    </presentation>
    <symbol name="SQuote_SQuote4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuote_SQuote4">
      <use format="Hets">[&#39; &#39;]</use>
    </presentation>
    <symbol name="SQuoteExclaSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteExclaSQuote2">
      <use format="Hets">[&#39;!&#39;]</use>
    </presentation>
    <symbol name="SQuoteHashSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteHashSQuote2">
      <use format="Hets">[&#39;#&#39;]</use>
    </presentation>
    <symbol name="SQuoteDollarSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteDollarSQuote2">
      <use format="Hets">[&#39;$&#39;]</use>
    </presentation>
    <symbol name="SQuotePercentSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotePercentSQuote2">
      <use format="Hets">[&#39;%&#39;]</use>
    </presentation>
    <symbol name="SQuoteAmpSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteAmpSQuote2">
      <use format="Hets">[&#39;&#38;&#39;]</use>
    </presentation>
    <symbol name="SQuoteBrackOpenSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBrackOpenSQuote2">
      <use format="Hets">[&#39;(&#39;]</use>
    </presentation>
    <symbol name="SQuoteBrackCloseSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBrackCloseSQuote2">
      <use format="Hets">[&#39;)&#39;]</use>
    </presentation>
    <symbol name="SQuoteAstSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteAstSQuote2">
      <use format="Hets">[&#39;*&#39;]</use>
    </presentation>
    <symbol name="SQuotePlusSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotePlusSQuote2">
      <use format="Hets">[&#39;+&#39;]</use>
    </presentation>
    <symbol name="SQuoteCommaSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteCommaSQuote2">
      <use format="Hets">[&#39;,&#39;]</use>
    </presentation>
    <symbol name="SQuoteMinusSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteMinusSQuote2">
      <use format="Hets">[&#39;-&#39;]</use>
    </presentation>
    <symbol name="SQuote.SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuote.SQuote2">
      <use format="Hets">[&#39;.&#39;]</use>
    </presentation>
    <symbol name="SQuoteDivisionSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteDivisionSQuote2">
      <use format="Hets">[&#39;/&#39;]</use>
    </presentation>
    <symbol name="SQuote0SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuote0SQuote2">
      <use format="Hets">[&#39;0&#39;]</use>
    </presentation>
    <symbol name="SQuote1SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuote1SQuote2">
      <use format="Hets">[&#39;1&#39;]</use>
    </presentation>
    <symbol name="SQuote2SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuote2SQuote2">
      <use format="Hets">[&#39;2&#39;]</use>
    </presentation>
    <symbol name="SQuote3SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuote3SQuote2">
      <use format="Hets">[&#39;3&#39;]</use>
    </presentation>
    <symbol name="SQuote4SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuote4SQuote2">
      <use format="Hets">[&#39;4&#39;]</use>
    </presentation>
    <symbol name="SQuote5SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuote5SQuote2">
      <use format="Hets">[&#39;5&#39;]</use>
    </presentation>
    <symbol name="SQuote6SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuote6SQuote2">
      <use format="Hets">[&#39;6&#39;]</use>
    </presentation>
    <symbol name="SQuote7SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuote7SQuote2">
      <use format="Hets">[&#39;7&#39;]</use>
    </presentation>
    <symbol name="SQuote8SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuote8SQuote2">
      <use format="Hets">[&#39;8&#39;]</use>
    </presentation>
    <symbol name="SQuote9SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuote9SQuote2">
      <use format="Hets">[&#39;9&#39;]</use>
    </presentation>
    <symbol name="SQuote:SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuote:SQuote2">
      <use format="Hets">[&#39;:&#39;]</use>
    </presentation>
    <symbol name="SQuoteSemiColonSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSemiColonSQuote2">
      <use format="Hets">[&#39;;&#39;]</use>
    </presentation>
    <symbol name="SQuoteLowerSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteLowerSQuote2">
      <use format="Hets">[&#39;&#60;&#39;]</use>
    </presentation>
    <symbol name="SQuoteEqualsSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteEqualsSQuote2">
      <use format="Hets">[&#39;=&#39;]</use>
    </presentation>
    <symbol name="SQuoteGreaterSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteGreaterSQuote2">
      <use format="Hets">[&#39;&#62;&#39;]</use>
    </presentation>
    <symbol name="SQuoteQuestSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteQuestSQuote2">
      <use format="Hets">[&#39;?&#39;]</use>
    </presentation>
    <symbol name="SQuoteAtSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteAtSQuote2">
      <use format="Hets">[&#39;@&#39;]</use>
    </presentation>
    <symbol name="SQuoteASQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteASQuote2">
      <use format="Hets">[&#39;A&#39;]</use>
    </presentation>
    <symbol name="SQuoteBSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBSQuote2">
      <use format="Hets">[&#39;B&#39;]</use>
    </presentation>
    <symbol name="SQuoteCSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteCSQuote2">
      <use format="Hets">[&#39;C&#39;]</use>
    </presentation>
    <symbol name="SQuoteDSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteDSQuote2">
      <use format="Hets">[&#39;D&#39;]</use>
    </presentation>
    <symbol name="SQuoteESQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteESQuote2">
      <use format="Hets">[&#39;E&#39;]</use>
    </presentation>
    <symbol name="SQuoteFSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteFSQuote2">
      <use format="Hets">[&#39;F&#39;]</use>
    </presentation>
    <symbol name="SQuoteGSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteGSQuote2">
      <use format="Hets">[&#39;G&#39;]</use>
    </presentation>
    <symbol name="SQuoteHSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteHSQuote2">
      <use format="Hets">[&#39;H&#39;]</use>
    </presentation>
    <symbol name="SQuoteISQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteISQuote2">
      <use format="Hets">[&#39;I&#39;]</use>
    </presentation>
    <symbol name="SQuoteJSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteJSQuote2">
      <use format="Hets">[&#39;J&#39;]</use>
    </presentation>
    <symbol name="SQuoteKSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteKSQuote2">
      <use format="Hets">[&#39;K&#39;]</use>
    </presentation>
    <symbol name="SQuoteLSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteLSQuote2">
      <use format="Hets">[&#39;L&#39;]</use>
    </presentation>
    <symbol name="SQuoteMSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteMSQuote2">
      <use format="Hets">[&#39;M&#39;]</use>
    </presentation>
    <symbol name="SQuoteNSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteNSQuote2">
      <use format="Hets">[&#39;N&#39;]</use>
    </presentation>
    <symbol name="SQuoteOSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteOSQuote2">
      <use format="Hets">[&#39;O&#39;]</use>
    </presentation>
    <symbol name="SQuotePSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotePSQuote2">
      <use format="Hets">[&#39;P&#39;]</use>
    </presentation>
    <symbol name="SQuoteQSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteQSQuote2">
      <use format="Hets">[&#39;Q&#39;]</use>
    </presentation>
    <symbol name="SQuoteRSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteRSQuote2">
      <use format="Hets">[&#39;R&#39;]</use>
    </presentation>
    <symbol name="SQuoteSSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSSQuote2">
      <use format="Hets">[&#39;S&#39;]</use>
    </presentation>
    <symbol name="SQuoteTSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteTSQuote2">
      <use format="Hets">[&#39;T&#39;]</use>
    </presentation>
    <symbol name="SQuoteUSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteUSQuote2">
      <use format="Hets">[&#39;U&#39;]</use>
    </presentation>
    <symbol name="SQuoteVSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteVSQuote2">
      <use format="Hets">[&#39;V&#39;]</use>
    </presentation>
    <symbol name="SQuoteWSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteWSQuote2">
      <use format="Hets">[&#39;W&#39;]</use>
    </presentation>
    <symbol name="SQuoteXSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteXSQuote2">
      <use format="Hets">[&#39;X&#39;]</use>
    </presentation>
    <symbol name="SQuoteYSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteYSQuote2">
      <use format="Hets">[&#39;Y&#39;]</use>
    </presentation>
    <symbol name="SQuoteZSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteZSQuote2">
      <use format="Hets">[&#39;Z&#39;]</use>
    </presentation>
    <symbol name="SQuoteSBrackOpenSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSBrackOpenSQuote2">
      <use format="Hets">[&#39;[&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashQuoteSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashQuoteSQuote2">
      <use format="Hets">[&#39;\&#34;&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashSQuoteSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashSQuoteSQuote2">
      <use format="Hets">[&#39;\&#39;&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash000SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash000SQuote2">
      <use format="Hets">[&#39;\000&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash001SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash001SQuote2">
      <use format="Hets">[&#39;\001&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash002SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash002SQuote2">
      <use format="Hets">[&#39;\002&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash003SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash003SQuote2">
      <use format="Hets">[&#39;\003&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash004SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash004SQuote2">
      <use format="Hets">[&#39;\004&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash005SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash005SQuote2">
      <use format="Hets">[&#39;\005&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash006SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash006SQuote2">
      <use format="Hets">[&#39;\006&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash007SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash007SQuote2">
      <use format="Hets">[&#39;\007&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash008SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash008SQuote2">
      <use format="Hets">[&#39;\008&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash009SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash009SQuote2">
      <use format="Hets">[&#39;\009&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash010SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash010SQuote2">
      <use format="Hets">[&#39;\010&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash011SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash011SQuote2">
      <use format="Hets">[&#39;\011&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash012SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash012SQuote2">
      <use format="Hets">[&#39;\012&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash013SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash013SQuote2">
      <use format="Hets">[&#39;\013&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash014SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash014SQuote2">
      <use format="Hets">[&#39;\014&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash015SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash015SQuote2">
      <use format="Hets">[&#39;\015&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash016SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash016SQuote2">
      <use format="Hets">[&#39;\016&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash017SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash017SQuote2">
      <use format="Hets">[&#39;\017&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash018SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash018SQuote2">
      <use format="Hets">[&#39;\018&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash019SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash019SQuote2">
      <use format="Hets">[&#39;\019&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash020SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash020SQuote2">
      <use format="Hets">[&#39;\020&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash021SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash021SQuote2">
      <use format="Hets">[&#39;\021&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash022SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash022SQuote2">
      <use format="Hets">[&#39;\022&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash023SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash023SQuote2">
      <use format="Hets">[&#39;\023&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash024SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash024SQuote2">
      <use format="Hets">[&#39;\024&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash025SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash025SQuote2">
      <use format="Hets">[&#39;\025&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash026SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash026SQuote2">
      <use format="Hets">[&#39;\026&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash027SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash027SQuote2">
      <use format="Hets">[&#39;\027&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash028SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash028SQuote2">
      <use format="Hets">[&#39;\028&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash029SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash029SQuote2">
      <use format="Hets">[&#39;\029&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash030SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash030SQuote2">
      <use format="Hets">[&#39;\030&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash031SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash031SQuote2">
      <use format="Hets">[&#39;\031&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash032SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash032SQuote2">
      <use format="Hets">[&#39;\032&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash033SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash033SQuote2">
      <use format="Hets">[&#39;\033&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash034SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash034SQuote2">
      <use format="Hets">[&#39;\034&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash035SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash035SQuote2">
      <use format="Hets">[&#39;\035&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash036SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash036SQuote2">
      <use format="Hets">[&#39;\036&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash037SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash037SQuote2">
      <use format="Hets">[&#39;\037&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash038SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash038SQuote2">
      <use format="Hets">[&#39;\038&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash039SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash039SQuote2">
      <use format="Hets">[&#39;\039&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash040SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash040SQuote2">
      <use format="Hets">[&#39;\040&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash041SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash041SQuote2">
      <use format="Hets">[&#39;\041&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash042SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash042SQuote2">
      <use format="Hets">[&#39;\042&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash043SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash043SQuote2">
      <use format="Hets">[&#39;\043&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash044SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash044SQuote2">
      <use format="Hets">[&#39;\044&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash045SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash045SQuote2">
      <use format="Hets">[&#39;\045&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash046SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash046SQuote2">
      <use format="Hets">[&#39;\046&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash047SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash047SQuote2">
      <use format="Hets">[&#39;\047&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash048SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash048SQuote2">
      <use format="Hets">[&#39;\048&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash049SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash049SQuote2">
      <use format="Hets">[&#39;\049&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash050SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash050SQuote2">
      <use format="Hets">[&#39;\050&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash051SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash051SQuote2">
      <use format="Hets">[&#39;\051&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash052SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash052SQuote2">
      <use format="Hets">[&#39;\052&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash053SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash053SQuote2">
      <use format="Hets">[&#39;\053&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash054SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash054SQuote2">
      <use format="Hets">[&#39;\054&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash055SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash055SQuote2">
      <use format="Hets">[&#39;\055&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash056SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash056SQuote2">
      <use format="Hets">[&#39;\056&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash057SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash057SQuote2">
      <use format="Hets">[&#39;\057&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash058SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash058SQuote2">
      <use format="Hets">[&#39;\058&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash059SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash059SQuote2">
      <use format="Hets">[&#39;\059&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash060SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash060SQuote2">
      <use format="Hets">[&#39;\060&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash061SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash061SQuote2">
      <use format="Hets">[&#39;\061&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash062SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash062SQuote2">
      <use format="Hets">[&#39;\062&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash063SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash063SQuote2">
      <use format="Hets">[&#39;\063&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash064SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash064SQuote2">
      <use format="Hets">[&#39;\064&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash065SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash065SQuote2">
      <use format="Hets">[&#39;\065&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash066SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash066SQuote2">
      <use format="Hets">[&#39;\066&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash067SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash067SQuote2">
      <use format="Hets">[&#39;\067&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash068SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash068SQuote2">
      <use format="Hets">[&#39;\068&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash069SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash069SQuote2">
      <use format="Hets">[&#39;\069&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash070SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash070SQuote2">
      <use format="Hets">[&#39;\070&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash071SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash071SQuote2">
      <use format="Hets">[&#39;\071&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash072SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash072SQuote2">
      <use format="Hets">[&#39;\072&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash073SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash073SQuote2">
      <use format="Hets">[&#39;\073&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash074SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash074SQuote2">
      <use format="Hets">[&#39;\074&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash075SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash075SQuote2">
      <use format="Hets">[&#39;\075&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash076SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash076SQuote2">
      <use format="Hets">[&#39;\076&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash077SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash077SQuote2">
      <use format="Hets">[&#39;\077&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash078SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash078SQuote2">
      <use format="Hets">[&#39;\078&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash079SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash079SQuote2">
      <use format="Hets">[&#39;\079&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash080SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash080SQuote2">
      <use format="Hets">[&#39;\080&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash081SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash081SQuote2">
      <use format="Hets">[&#39;\081&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash082SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash082SQuote2">
      <use format="Hets">[&#39;\082&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash083SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash083SQuote2">
      <use format="Hets">[&#39;\083&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash084SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash084SQuote2">
      <use format="Hets">[&#39;\084&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash085SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash085SQuote2">
      <use format="Hets">[&#39;\085&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash086SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash086SQuote2">
      <use format="Hets">[&#39;\086&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash087SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash087SQuote2">
      <use format="Hets">[&#39;\087&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash088SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash088SQuote2">
      <use format="Hets">[&#39;\088&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash089SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash089SQuote2">
      <use format="Hets">[&#39;\089&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash090SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash090SQuote2">
      <use format="Hets">[&#39;\090&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash091SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash091SQuote2">
      <use format="Hets">[&#39;\091&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash092SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash092SQuote2">
      <use format="Hets">[&#39;\092&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash093SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash093SQuote2">
      <use format="Hets">[&#39;\093&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash094SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash094SQuote2">
      <use format="Hets">[&#39;\094&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash095SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash095SQuote2">
      <use format="Hets">[&#39;\095&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash096SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash096SQuote2">
      <use format="Hets">[&#39;\096&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash097SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash097SQuote2">
      <use format="Hets">[&#39;\097&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash098SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash098SQuote2">
      <use format="Hets">[&#39;\098&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash099SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash099SQuote2">
      <use format="Hets">[&#39;\099&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash100SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash100SQuote2">
      <use format="Hets">[&#39;\100&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash101SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash101SQuote2">
      <use format="Hets">[&#39;\101&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash102SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash102SQuote2">
      <use format="Hets">[&#39;\102&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash103SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash103SQuote2">
      <use format="Hets">[&#39;\103&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash104SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash104SQuote2">
      <use format="Hets">[&#39;\104&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash105SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash105SQuote2">
      <use format="Hets">[&#39;\105&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash106SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash106SQuote2">
      <use format="Hets">[&#39;\106&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash107SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash107SQuote2">
      <use format="Hets">[&#39;\107&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash108SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash108SQuote2">
      <use format="Hets">[&#39;\108&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash109SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash109SQuote2">
      <use format="Hets">[&#39;\109&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash110SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash110SQuote2">
      <use format="Hets">[&#39;\110&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash111SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash111SQuote2">
      <use format="Hets">[&#39;\111&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash112SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash112SQuote2">
      <use format="Hets">[&#39;\112&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash113SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash113SQuote2">
      <use format="Hets">[&#39;\113&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash114SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash114SQuote2">
      <use format="Hets">[&#39;\114&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash115SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash115SQuote2">
      <use format="Hets">[&#39;\115&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash116SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash116SQuote2">
      <use format="Hets">[&#39;\116&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash117SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash117SQuote2">
      <use format="Hets">[&#39;\117&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash118SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash118SQuote2">
      <use format="Hets">[&#39;\118&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash119SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash119SQuote2">
      <use format="Hets">[&#39;\119&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash120SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash120SQuote2">
      <use format="Hets">[&#39;\120&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash121SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash121SQuote2">
      <use format="Hets">[&#39;\121&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash122SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash122SQuote2">
      <use format="Hets">[&#39;\122&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash123SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash123SQuote2">
      <use format="Hets">[&#39;\123&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash124SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash124SQuote2">
      <use format="Hets">[&#39;\124&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash125SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash125SQuote2">
      <use format="Hets">[&#39;\125&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash126SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash126SQuote2">
      <use format="Hets">[&#39;\126&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash127SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash127SQuote2">
      <use format="Hets">[&#39;\127&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash128SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash128SQuote2">
      <use format="Hets">[&#39;\128&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash129SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash129SQuote2">
      <use format="Hets">[&#39;\129&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash130SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash130SQuote2">
      <use format="Hets">[&#39;\130&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash131SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash131SQuote2">
      <use format="Hets">[&#39;\131&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash132SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash132SQuote2">
      <use format="Hets">[&#39;\132&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash133SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash133SQuote2">
      <use format="Hets">[&#39;\133&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash134SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash134SQuote2">
      <use format="Hets">[&#39;\134&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash135SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash135SQuote2">
      <use format="Hets">[&#39;\135&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash136SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash136SQuote2">
      <use format="Hets">[&#39;\136&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash137SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash137SQuote2">
      <use format="Hets">[&#39;\137&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash138SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash138SQuote2">
      <use format="Hets">[&#39;\138&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash139SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash139SQuote2">
      <use format="Hets">[&#39;\139&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash140SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash140SQuote2">
      <use format="Hets">[&#39;\140&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash141SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash141SQuote2">
      <use format="Hets">[&#39;\141&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash142SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash142SQuote2">
      <use format="Hets">[&#39;\142&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash143SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash143SQuote2">
      <use format="Hets">[&#39;\143&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash144SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash144SQuote2">
      <use format="Hets">[&#39;\144&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash145SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash145SQuote2">
      <use format="Hets">[&#39;\145&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash146SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash146SQuote2">
      <use format="Hets">[&#39;\146&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash147SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash147SQuote2">
      <use format="Hets">[&#39;\147&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash148SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash148SQuote2">
      <use format="Hets">[&#39;\148&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash149SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash149SQuote2">
      <use format="Hets">[&#39;\149&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash150SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash150SQuote2">
      <use format="Hets">[&#39;\150&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash151SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash151SQuote2">
      <use format="Hets">[&#39;\151&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash152SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash152SQuote2">
      <use format="Hets">[&#39;\152&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash153SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash153SQuote2">
      <use format="Hets">[&#39;\153&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash154SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash154SQuote2">
      <use format="Hets">[&#39;\154&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash155SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash155SQuote2">
      <use format="Hets">[&#39;\155&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash156SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash156SQuote2">
      <use format="Hets">[&#39;\156&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash157SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash157SQuote2">
      <use format="Hets">[&#39;\157&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash158SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash158SQuote2">
      <use format="Hets">[&#39;\158&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash159SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash159SQuote2">
      <use format="Hets">[&#39;\159&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash160SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash160SQuote2">
      <use format="Hets">[&#39;\160&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash161SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash161SQuote2">
      <use format="Hets">[&#39;\161&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash162SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash162SQuote2">
      <use format="Hets">[&#39;\162&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash163SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash163SQuote2">
      <use format="Hets">[&#39;\163&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash164SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash164SQuote2">
      <use format="Hets">[&#39;\164&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash165SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash165SQuote2">
      <use format="Hets">[&#39;\165&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash166SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash166SQuote2">
      <use format="Hets">[&#39;\166&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash167SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash167SQuote2">
      <use format="Hets">[&#39;\167&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash168SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash168SQuote2">
      <use format="Hets">[&#39;\168&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash169SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash169SQuote2">
      <use format="Hets">[&#39;\169&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash170SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash170SQuote2">
      <use format="Hets">[&#39;\170&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash171SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash171SQuote2">
      <use format="Hets">[&#39;\171&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash172SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash172SQuote2">
      <use format="Hets">[&#39;\172&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash173SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash173SQuote2">
      <use format="Hets">[&#39;\173&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash174SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash174SQuote2">
      <use format="Hets">[&#39;\174&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash175SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash175SQuote2">
      <use format="Hets">[&#39;\175&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash176SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash176SQuote2">
      <use format="Hets">[&#39;\176&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash177SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash177SQuote2">
      <use format="Hets">[&#39;\177&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash178SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash178SQuote2">
      <use format="Hets">[&#39;\178&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash179SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash179SQuote2">
      <use format="Hets">[&#39;\179&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash180SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash180SQuote2">
      <use format="Hets">[&#39;\180&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash181SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash181SQuote2">
      <use format="Hets">[&#39;\181&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash182SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash182SQuote2">
      <use format="Hets">[&#39;\182&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash183SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash183SQuote2">
      <use format="Hets">[&#39;\183&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash184SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash184SQuote2">
      <use format="Hets">[&#39;\184&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash185SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash185SQuote2">
      <use format="Hets">[&#39;\185&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash186SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash186SQuote2">
      <use format="Hets">[&#39;\186&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash187SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash187SQuote2">
      <use format="Hets">[&#39;\187&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash188SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash188SQuote2">
      <use format="Hets">[&#39;\188&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash189SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash189SQuote2">
      <use format="Hets">[&#39;\189&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash190SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash190SQuote2">
      <use format="Hets">[&#39;\190&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash191SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash191SQuote2">
      <use format="Hets">[&#39;\191&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash192SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash192SQuote2">
      <use format="Hets">[&#39;\192&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash193SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash193SQuote2">
      <use format="Hets">[&#39;\193&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash194SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash194SQuote2">
      <use format="Hets">[&#39;\194&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash195SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash195SQuote2">
      <use format="Hets">[&#39;\195&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash196SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash196SQuote2">
      <use format="Hets">[&#39;\196&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash197SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash197SQuote2">
      <use format="Hets">[&#39;\197&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash198SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash198SQuote2">
      <use format="Hets">[&#39;\198&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash199SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash199SQuote2">
      <use format="Hets">[&#39;\199&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash200SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash200SQuote2">
      <use format="Hets">[&#39;\200&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash201SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash201SQuote2">
      <use format="Hets">[&#39;\201&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash202SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash202SQuote2">
      <use format="Hets">[&#39;\202&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash203SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash203SQuote2">
      <use format="Hets">[&#39;\203&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash204SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash204SQuote2">
      <use format="Hets">[&#39;\204&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash205SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash205SQuote2">
      <use format="Hets">[&#39;\205&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash206SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash206SQuote2">
      <use format="Hets">[&#39;\206&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash207SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash207SQuote2">
      <use format="Hets">[&#39;\207&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash208SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash208SQuote2">
      <use format="Hets">[&#39;\208&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash209SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash209SQuote2">
      <use format="Hets">[&#39;\209&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash210SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash210SQuote2">
      <use format="Hets">[&#39;\210&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash211SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash211SQuote2">
      <use format="Hets">[&#39;\211&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash212SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash212SQuote2">
      <use format="Hets">[&#39;\212&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash213SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash213SQuote2">
      <use format="Hets">[&#39;\213&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash214SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash214SQuote2">
      <use format="Hets">[&#39;\214&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash215SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash215SQuote2">
      <use format="Hets">[&#39;\215&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash216SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash216SQuote2">
      <use format="Hets">[&#39;\216&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash217SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash217SQuote2">
      <use format="Hets">[&#39;\217&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash218SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash218SQuote2">
      <use format="Hets">[&#39;\218&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash219SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash219SQuote2">
      <use format="Hets">[&#39;\219&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash220SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash220SQuote2">
      <use format="Hets">[&#39;\220&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash221SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash221SQuote2">
      <use format="Hets">[&#39;\221&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash222SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash222SQuote2">
      <use format="Hets">[&#39;\222&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash223SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash223SQuote2">
      <use format="Hets">[&#39;\223&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash224SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash224SQuote2">
      <use format="Hets">[&#39;\224&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash225SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash225SQuote2">
      <use format="Hets">[&#39;\225&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash226SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash226SQuote2">
      <use format="Hets">[&#39;\226&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash227SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash227SQuote2">
      <use format="Hets">[&#39;\227&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash228SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash228SQuote2">
      <use format="Hets">[&#39;\228&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash229SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash229SQuote2">
      <use format="Hets">[&#39;\229&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash230SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash230SQuote2">
      <use format="Hets">[&#39;\230&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash231SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash231SQuote2">
      <use format="Hets">[&#39;\231&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash232SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash232SQuote2">
      <use format="Hets">[&#39;\232&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash233SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash233SQuote2">
      <use format="Hets">[&#39;\233&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash234SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash234SQuote2">
      <use format="Hets">[&#39;\234&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash235SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash235SQuote2">
      <use format="Hets">[&#39;\235&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash236SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash236SQuote2">
      <use format="Hets">[&#39;\236&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash237SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash237SQuote2">
      <use format="Hets">[&#39;\237&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash238SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash238SQuote2">
      <use format="Hets">[&#39;\238&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash239SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash239SQuote2">
      <use format="Hets">[&#39;\239&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash240SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash240SQuote2">
      <use format="Hets">[&#39;\240&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash241SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash241SQuote2">
      <use format="Hets">[&#39;\241&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash242SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash242SQuote2">
      <use format="Hets">[&#39;\242&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash243SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash243SQuote2">
      <use format="Hets">[&#39;\243&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash244SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash244SQuote2">
      <use format="Hets">[&#39;\244&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash245SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash245SQuote2">
      <use format="Hets">[&#39;\245&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash246SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash246SQuote2">
      <use format="Hets">[&#39;\246&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash247SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash247SQuote2">
      <use format="Hets">[&#39;\247&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash248SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash248SQuote2">
      <use format="Hets">[&#39;\248&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash249SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash249SQuote2">
      <use format="Hets">[&#39;\249&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash250SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash250SQuote2">
      <use format="Hets">[&#39;\250&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash251SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash251SQuote2">
      <use format="Hets">[&#39;\251&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash252SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash252SQuote2">
      <use format="Hets">[&#39;\252&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash253SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash253SQuote2">
      <use format="Hets">[&#39;\253&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash254SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash254SQuote2">
      <use format="Hets">[&#39;\254&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash255SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash255SQuote2">
      <use format="Hets">[&#39;\255&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashQuestSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashQuestSQuote2">
      <use format="Hets">[&#39;\?&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashBackslashSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashBackslashSQuote2">
      <use format="Hets">[&#39;\\&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashaSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashaSQuote2">
      <use format="Hets">[&#39;\a&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashbSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashbSQuote2">
      <use format="Hets">[&#39;\b&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashfSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashfSQuote2">
      <use format="Hets">[&#39;\f&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashnSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashnSQuote2">
      <use format="Hets">[&#39;\n&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho000SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho000SQuote2">
      <use format="Hets">[&#39;\o000&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho001SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho001SQuote2">
      <use format="Hets">[&#39;\o001&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho002SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho002SQuote2">
      <use format="Hets">[&#39;\o002&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho003SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho003SQuote2">
      <use format="Hets">[&#39;\o003&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho004SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho004SQuote2">
      <use format="Hets">[&#39;\o004&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho005SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho005SQuote2">
      <use format="Hets">[&#39;\o005&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho006SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho006SQuote2">
      <use format="Hets">[&#39;\o006&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho007SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho007SQuote2">
      <use format="Hets">[&#39;\o007&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho010SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho010SQuote2">
      <use format="Hets">[&#39;\o010&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho011SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho011SQuote2">
      <use format="Hets">[&#39;\o011&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho012SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho012SQuote2">
      <use format="Hets">[&#39;\o012&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho013SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho013SQuote2">
      <use format="Hets">[&#39;\o013&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho014SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho014SQuote2">
      <use format="Hets">[&#39;\o014&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho015SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho015SQuote2">
      <use format="Hets">[&#39;\o015&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho016SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho016SQuote2">
      <use format="Hets">[&#39;\o016&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho017SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho017SQuote2">
      <use format="Hets">[&#39;\o017&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho020SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho020SQuote2">
      <use format="Hets">[&#39;\o020&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho021SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho021SQuote2">
      <use format="Hets">[&#39;\o021&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho022SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho022SQuote2">
      <use format="Hets">[&#39;\o022&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho023SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho023SQuote2">
      <use format="Hets">[&#39;\o023&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho024SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho024SQuote2">
      <use format="Hets">[&#39;\o024&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho025SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho025SQuote2">
      <use format="Hets">[&#39;\o025&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho026SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho026SQuote2">
      <use format="Hets">[&#39;\o026&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho027SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho027SQuote2">
      <use format="Hets">[&#39;\o027&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho030SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho030SQuote2">
      <use format="Hets">[&#39;\o030&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho031SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho031SQuote2">
      <use format="Hets">[&#39;\o031&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho032SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho032SQuote2">
      <use format="Hets">[&#39;\o032&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho033SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho033SQuote2">
      <use format="Hets">[&#39;\o033&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho034SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho034SQuote2">
      <use format="Hets">[&#39;\o034&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho035SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho035SQuote2">
      <use format="Hets">[&#39;\o035&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho036SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho036SQuote2">
      <use format="Hets">[&#39;\o036&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho037SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho037SQuote2">
      <use format="Hets">[&#39;\o037&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho040SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho040SQuote2">
      <use format="Hets">[&#39;\o040&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho041SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho041SQuote2">
      <use format="Hets">[&#39;\o041&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho042SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho042SQuote2">
      <use format="Hets">[&#39;\o042&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho043SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho043SQuote2">
      <use format="Hets">[&#39;\o043&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho044SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho044SQuote2">
      <use format="Hets">[&#39;\o044&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho045SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho045SQuote2">
      <use format="Hets">[&#39;\o045&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho046SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho046SQuote2">
      <use format="Hets">[&#39;\o046&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho047SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho047SQuote2">
      <use format="Hets">[&#39;\o047&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho050SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho050SQuote2">
      <use format="Hets">[&#39;\o050&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho051SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho051SQuote2">
      <use format="Hets">[&#39;\o051&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho052SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho052SQuote2">
      <use format="Hets">[&#39;\o052&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho053SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho053SQuote2">
      <use format="Hets">[&#39;\o053&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho054SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho054SQuote2">
      <use format="Hets">[&#39;\o054&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho055SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho055SQuote2">
      <use format="Hets">[&#39;\o055&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho056SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho056SQuote2">
      <use format="Hets">[&#39;\o056&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho057SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho057SQuote2">
      <use format="Hets">[&#39;\o057&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho060SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho060SQuote2">
      <use format="Hets">[&#39;\o060&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho061SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho061SQuote2">
      <use format="Hets">[&#39;\o061&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho062SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho062SQuote2">
      <use format="Hets">[&#39;\o062&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho063SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho063SQuote2">
      <use format="Hets">[&#39;\o063&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho064SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho064SQuote2">
      <use format="Hets">[&#39;\o064&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho065SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho065SQuote2">
      <use format="Hets">[&#39;\o065&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho066SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho066SQuote2">
      <use format="Hets">[&#39;\o066&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho067SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho067SQuote2">
      <use format="Hets">[&#39;\o067&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho070SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho070SQuote2">
      <use format="Hets">[&#39;\o070&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho071SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho071SQuote2">
      <use format="Hets">[&#39;\o071&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho072SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho072SQuote2">
      <use format="Hets">[&#39;\o072&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho073SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho073SQuote2">
      <use format="Hets">[&#39;\o073&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho074SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho074SQuote2">
      <use format="Hets">[&#39;\o074&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho075SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho075SQuote2">
      <use format="Hets">[&#39;\o075&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho076SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho076SQuote2">
      <use format="Hets">[&#39;\o076&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho077SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho077SQuote2">
      <use format="Hets">[&#39;\o077&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho100SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho100SQuote2">
      <use format="Hets">[&#39;\o100&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho101SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho101SQuote2">
      <use format="Hets">[&#39;\o101&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho102SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho102SQuote2">
      <use format="Hets">[&#39;\o102&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho103SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho103SQuote2">
      <use format="Hets">[&#39;\o103&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho104SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho104SQuote2">
      <use format="Hets">[&#39;\o104&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho105SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho105SQuote2">
      <use format="Hets">[&#39;\o105&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho106SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho106SQuote2">
      <use format="Hets">[&#39;\o106&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho107SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho107SQuote2">
      <use format="Hets">[&#39;\o107&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho110SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho110SQuote2">
      <use format="Hets">[&#39;\o110&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho111SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho111SQuote2">
      <use format="Hets">[&#39;\o111&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho112SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho112SQuote2">
      <use format="Hets">[&#39;\o112&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho113SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho113SQuote2">
      <use format="Hets">[&#39;\o113&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho114SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho114SQuote2">
      <use format="Hets">[&#39;\o114&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho115SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho115SQuote2">
      <use format="Hets">[&#39;\o115&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho116SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho116SQuote2">
      <use format="Hets">[&#39;\o116&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho117SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho117SQuote2">
      <use format="Hets">[&#39;\o117&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho120SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho120SQuote2">
      <use format="Hets">[&#39;\o120&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho121SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho121SQuote2">
      <use format="Hets">[&#39;\o121&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho122SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho122SQuote2">
      <use format="Hets">[&#39;\o122&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho123SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho123SQuote2">
      <use format="Hets">[&#39;\o123&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho124SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho124SQuote2">
      <use format="Hets">[&#39;\o124&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho125SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho125SQuote2">
      <use format="Hets">[&#39;\o125&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho126SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho126SQuote2">
      <use format="Hets">[&#39;\o126&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho127SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho127SQuote2">
      <use format="Hets">[&#39;\o127&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho130SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho130SQuote2">
      <use format="Hets">[&#39;\o130&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho131SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho131SQuote2">
      <use format="Hets">[&#39;\o131&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho132SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho132SQuote2">
      <use format="Hets">[&#39;\o132&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho133SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho133SQuote2">
      <use format="Hets">[&#39;\o133&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho134SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho134SQuote2">
      <use format="Hets">[&#39;\o134&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho135SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho135SQuote2">
      <use format="Hets">[&#39;\o135&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho136SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho136SQuote2">
      <use format="Hets">[&#39;\o136&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho137SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho137SQuote2">
      <use format="Hets">[&#39;\o137&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho140SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho140SQuote2">
      <use format="Hets">[&#39;\o140&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho141SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho141SQuote2">
      <use format="Hets">[&#39;\o141&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho142SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho142SQuote2">
      <use format="Hets">[&#39;\o142&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho143SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho143SQuote2">
      <use format="Hets">[&#39;\o143&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho144SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho144SQuote2">
      <use format="Hets">[&#39;\o144&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho145SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho145SQuote2">
      <use format="Hets">[&#39;\o145&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho146SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho146SQuote2">
      <use format="Hets">[&#39;\o146&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho147SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho147SQuote2">
      <use format="Hets">[&#39;\o147&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho150SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho150SQuote2">
      <use format="Hets">[&#39;\o150&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho151SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho151SQuote2">
      <use format="Hets">[&#39;\o151&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho152SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho152SQuote2">
      <use format="Hets">[&#39;\o152&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho153SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho153SQuote2">
      <use format="Hets">[&#39;\o153&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho154SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho154SQuote2">
      <use format="Hets">[&#39;\o154&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho155SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho155SQuote2">
      <use format="Hets">[&#39;\o155&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho156SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho156SQuote2">
      <use format="Hets">[&#39;\o156&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho157SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho157SQuote2">
      <use format="Hets">[&#39;\o157&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho160SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho160SQuote2">
      <use format="Hets">[&#39;\o160&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho161SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho161SQuote2">
      <use format="Hets">[&#39;\o161&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho162SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho162SQuote2">
      <use format="Hets">[&#39;\o162&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho163SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho163SQuote2">
      <use format="Hets">[&#39;\o163&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho164SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho164SQuote2">
      <use format="Hets">[&#39;\o164&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho165SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho165SQuote2">
      <use format="Hets">[&#39;\o165&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho166SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho166SQuote2">
      <use format="Hets">[&#39;\o166&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho167SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho167SQuote2">
      <use format="Hets">[&#39;\o167&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho170SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho170SQuote2">
      <use format="Hets">[&#39;\o170&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho171SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho171SQuote2">
      <use format="Hets">[&#39;\o171&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho172SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho172SQuote2">
      <use format="Hets">[&#39;\o172&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho173SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho173SQuote2">
      <use format="Hets">[&#39;\o173&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho174SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho174SQuote2">
      <use format="Hets">[&#39;\o174&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho175SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho175SQuote2">
      <use format="Hets">[&#39;\o175&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho176SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho176SQuote2">
      <use format="Hets">[&#39;\o176&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho177SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho177SQuote2">
      <use format="Hets">[&#39;\o177&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho200SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho200SQuote2">
      <use format="Hets">[&#39;\o200&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho201SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho201SQuote2">
      <use format="Hets">[&#39;\o201&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho202SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho202SQuote2">
      <use format="Hets">[&#39;\o202&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho203SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho203SQuote2">
      <use format="Hets">[&#39;\o203&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho204SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho204SQuote2">
      <use format="Hets">[&#39;\o204&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho205SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho205SQuote2">
      <use format="Hets">[&#39;\o205&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho206SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho206SQuote2">
      <use format="Hets">[&#39;\o206&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho207SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho207SQuote2">
      <use format="Hets">[&#39;\o207&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho210SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho210SQuote2">
      <use format="Hets">[&#39;\o210&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho211SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho211SQuote2">
      <use format="Hets">[&#39;\o211&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho212SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho212SQuote2">
      <use format="Hets">[&#39;\o212&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho213SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho213SQuote2">
      <use format="Hets">[&#39;\o213&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho214SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho214SQuote2">
      <use format="Hets">[&#39;\o214&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho215SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho215SQuote2">
      <use format="Hets">[&#39;\o215&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho216SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho216SQuote2">
      <use format="Hets">[&#39;\o216&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho217SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho217SQuote2">
      <use format="Hets">[&#39;\o217&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho220SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho220SQuote2">
      <use format="Hets">[&#39;\o220&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho221SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho221SQuote2">
      <use format="Hets">[&#39;\o221&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho222SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho222SQuote2">
      <use format="Hets">[&#39;\o222&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho223SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho223SQuote2">
      <use format="Hets">[&#39;\o223&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho224SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho224SQuote2">
      <use format="Hets">[&#39;\o224&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho225SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho225SQuote2">
      <use format="Hets">[&#39;\o225&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho226SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho226SQuote2">
      <use format="Hets">[&#39;\o226&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho227SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho227SQuote2">
      <use format="Hets">[&#39;\o227&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho230SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho230SQuote2">
      <use format="Hets">[&#39;\o230&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho231SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho231SQuote2">
      <use format="Hets">[&#39;\o231&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho232SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho232SQuote2">
      <use format="Hets">[&#39;\o232&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho233SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho233SQuote2">
      <use format="Hets">[&#39;\o233&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho234SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho234SQuote2">
      <use format="Hets">[&#39;\o234&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho235SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho235SQuote2">
      <use format="Hets">[&#39;\o235&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho236SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho236SQuote2">
      <use format="Hets">[&#39;\o236&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho237SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho237SQuote2">
      <use format="Hets">[&#39;\o237&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho240SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho240SQuote2">
      <use format="Hets">[&#39;\o240&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho241SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho241SQuote2">
      <use format="Hets">[&#39;\o241&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho242SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho242SQuote2">
      <use format="Hets">[&#39;\o242&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho243SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho243SQuote2">
      <use format="Hets">[&#39;\o243&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho244SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho244SQuote2">
      <use format="Hets">[&#39;\o244&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho245SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho245SQuote2">
      <use format="Hets">[&#39;\o245&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho246SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho246SQuote2">
      <use format="Hets">[&#39;\o246&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho247SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho247SQuote2">
      <use format="Hets">[&#39;\o247&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho250SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho250SQuote2">
      <use format="Hets">[&#39;\o250&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho251SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho251SQuote2">
      <use format="Hets">[&#39;\o251&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho252SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho252SQuote2">
      <use format="Hets">[&#39;\o252&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho253SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho253SQuote2">
      <use format="Hets">[&#39;\o253&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho254SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho254SQuote2">
      <use format="Hets">[&#39;\o254&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho255SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho255SQuote2">
      <use format="Hets">[&#39;\o255&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho256SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho256SQuote2">
      <use format="Hets">[&#39;\o256&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho257SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho257SQuote2">
      <use format="Hets">[&#39;\o257&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho260SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho260SQuote2">
      <use format="Hets">[&#39;\o260&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho261SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho261SQuote2">
      <use format="Hets">[&#39;\o261&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho262SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho262SQuote2">
      <use format="Hets">[&#39;\o262&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho263SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho263SQuote2">
      <use format="Hets">[&#39;\o263&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho264SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho264SQuote2">
      <use format="Hets">[&#39;\o264&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho265SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho265SQuote2">
      <use format="Hets">[&#39;\o265&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho266SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho266SQuote2">
      <use format="Hets">[&#39;\o266&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho267SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho267SQuote2">
      <use format="Hets">[&#39;\o267&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho270SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho270SQuote2">
      <use format="Hets">[&#39;\o270&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho271SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho271SQuote2">
      <use format="Hets">[&#39;\o271&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho272SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho272SQuote2">
      <use format="Hets">[&#39;\o272&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho273SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho273SQuote2">
      <use format="Hets">[&#39;\o273&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho274SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho274SQuote2">
      <use format="Hets">[&#39;\o274&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho275SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho275SQuote2">
      <use format="Hets">[&#39;\o275&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho276SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho276SQuote2">
      <use format="Hets">[&#39;\o276&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho277SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho277SQuote2">
      <use format="Hets">[&#39;\o277&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho300SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho300SQuote2">
      <use format="Hets">[&#39;\o300&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho301SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho301SQuote2">
      <use format="Hets">[&#39;\o301&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho302SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho302SQuote2">
      <use format="Hets">[&#39;\o302&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho303SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho303SQuote2">
      <use format="Hets">[&#39;\o303&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho304SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho304SQuote2">
      <use format="Hets">[&#39;\o304&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho305SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho305SQuote2">
      <use format="Hets">[&#39;\o305&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho306SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho306SQuote2">
      <use format="Hets">[&#39;\o306&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho307SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho307SQuote2">
      <use format="Hets">[&#39;\o307&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho310SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho310SQuote2">
      <use format="Hets">[&#39;\o310&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho311SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho311SQuote2">
      <use format="Hets">[&#39;\o311&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho312SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho312SQuote2">
      <use format="Hets">[&#39;\o312&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho313SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho313SQuote2">
      <use format="Hets">[&#39;\o313&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho314SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho314SQuote2">
      <use format="Hets">[&#39;\o314&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho315SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho315SQuote2">
      <use format="Hets">[&#39;\o315&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho316SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho316SQuote2">
      <use format="Hets">[&#39;\o316&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho317SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho317SQuote2">
      <use format="Hets">[&#39;\o317&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho320SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho320SQuote2">
      <use format="Hets">[&#39;\o320&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho321SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho321SQuote2">
      <use format="Hets">[&#39;\o321&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho322SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho322SQuote2">
      <use format="Hets">[&#39;\o322&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho323SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho323SQuote2">
      <use format="Hets">[&#39;\o323&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho324SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho324SQuote2">
      <use format="Hets">[&#39;\o324&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho325SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho325SQuote2">
      <use format="Hets">[&#39;\o325&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho326SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho326SQuote2">
      <use format="Hets">[&#39;\o326&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho327SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho327SQuote2">
      <use format="Hets">[&#39;\o327&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho330SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho330SQuote2">
      <use format="Hets">[&#39;\o330&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho331SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho331SQuote2">
      <use format="Hets">[&#39;\o331&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho332SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho332SQuote2">
      <use format="Hets">[&#39;\o332&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho333SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho333SQuote2">
      <use format="Hets">[&#39;\o333&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho334SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho334SQuote2">
      <use format="Hets">[&#39;\o334&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho335SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho335SQuote2">
      <use format="Hets">[&#39;\o335&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho336SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho336SQuote2">
      <use format="Hets">[&#39;\o336&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho337SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho337SQuote2">
      <use format="Hets">[&#39;\o337&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho340SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho340SQuote2">
      <use format="Hets">[&#39;\o340&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho341SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho341SQuote2">
      <use format="Hets">[&#39;\o341&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho342SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho342SQuote2">
      <use format="Hets">[&#39;\o342&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho343SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho343SQuote2">
      <use format="Hets">[&#39;\o343&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho344SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho344SQuote2">
      <use format="Hets">[&#39;\o344&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho345SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho345SQuote2">
      <use format="Hets">[&#39;\o345&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho346SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho346SQuote2">
      <use format="Hets">[&#39;\o346&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho347SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho347SQuote2">
      <use format="Hets">[&#39;\o347&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho350SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho350SQuote2">
      <use format="Hets">[&#39;\o350&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho351SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho351SQuote2">
      <use format="Hets">[&#39;\o351&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho352SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho352SQuote2">
      <use format="Hets">[&#39;\o352&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho353SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho353SQuote2">
      <use format="Hets">[&#39;\o353&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho354SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho354SQuote2">
      <use format="Hets">[&#39;\o354&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho355SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho355SQuote2">
      <use format="Hets">[&#39;\o355&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho356SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho356SQuote2">
      <use format="Hets">[&#39;\o356&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho357SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho357SQuote2">
      <use format="Hets">[&#39;\o357&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho360SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho360SQuote2">
      <use format="Hets">[&#39;\o360&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho361SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho361SQuote2">
      <use format="Hets">[&#39;\o361&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho362SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho362SQuote2">
      <use format="Hets">[&#39;\o362&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho363SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho363SQuote2">
      <use format="Hets">[&#39;\o363&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho364SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho364SQuote2">
      <use format="Hets">[&#39;\o364&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho365SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho365SQuote2">
      <use format="Hets">[&#39;\o365&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho366SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho366SQuote2">
      <use format="Hets">[&#39;\o366&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho367SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho367SQuote2">
      <use format="Hets">[&#39;\o367&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho370SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho370SQuote2">
      <use format="Hets">[&#39;\o370&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho371SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho371SQuote2">
      <use format="Hets">[&#39;\o371&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho372SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho372SQuote2">
      <use format="Hets">[&#39;\o372&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho373SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho373SQuote2">
      <use format="Hets">[&#39;\o373&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho374SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho374SQuote2">
      <use format="Hets">[&#39;\o374&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho375SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho375SQuote2">
      <use format="Hets">[&#39;\o375&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho376SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho376SQuote2">
      <use format="Hets">[&#39;\o376&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho377SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho377SQuote2">
      <use format="Hets">[&#39;\o377&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashrSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashrSQuote2">
      <use format="Hets">[&#39;\r&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashtSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashtSQuote2">
      <use format="Hets">[&#39;\t&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashvSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashvSQuote2">
      <use format="Hets">[&#39;\v&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx00SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx00SQuote2">
      <use format="Hets">[&#39;\x00&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx01SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx01SQuote2">
      <use format="Hets">[&#39;\x01&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx02SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx02SQuote2">
      <use format="Hets">[&#39;\x02&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx03SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx03SQuote2">
      <use format="Hets">[&#39;\x03&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx04SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx04SQuote2">
      <use format="Hets">[&#39;\x04&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx05SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx05SQuote2">
      <use format="Hets">[&#39;\x05&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx06SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx06SQuote2">
      <use format="Hets">[&#39;\x06&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx07SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx07SQuote2">
      <use format="Hets">[&#39;\x07&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx08SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx08SQuote2">
      <use format="Hets">[&#39;\x08&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx09SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx09SQuote2">
      <use format="Hets">[&#39;\x09&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx0ASQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx0ASQuote2">
      <use format="Hets">[&#39;\x0A&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx0BSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx0BSQuote2">
      <use format="Hets">[&#39;\x0B&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx0CSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx0CSQuote2">
      <use format="Hets">[&#39;\x0C&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx0DSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx0DSQuote2">
      <use format="Hets">[&#39;\x0D&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx0ESQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx0ESQuote2">
      <use format="Hets">[&#39;\x0E&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx0FSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx0FSQuote2">
      <use format="Hets">[&#39;\x0F&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx10SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx10SQuote2">
      <use format="Hets">[&#39;\x10&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx11SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx11SQuote2">
      <use format="Hets">[&#39;\x11&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx12SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx12SQuote2">
      <use format="Hets">[&#39;\x12&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx13SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx13SQuote2">
      <use format="Hets">[&#39;\x13&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx14SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx14SQuote2">
      <use format="Hets">[&#39;\x14&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx15SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx15SQuote2">
      <use format="Hets">[&#39;\x15&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx16SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx16SQuote2">
      <use format="Hets">[&#39;\x16&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx17SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx17SQuote2">
      <use format="Hets">[&#39;\x17&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx18SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx18SQuote2">
      <use format="Hets">[&#39;\x18&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx19SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx19SQuote2">
      <use format="Hets">[&#39;\x19&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx1ASQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx1ASQuote2">
      <use format="Hets">[&#39;\x1A&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx1BSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx1BSQuote2">
      <use format="Hets">[&#39;\x1B&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx1CSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx1CSQuote2">
      <use format="Hets">[&#39;\x1C&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx1DSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx1DSQuote2">
      <use format="Hets">[&#39;\x1D&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx1ESQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx1ESQuote2">
      <use format="Hets">[&#39;\x1E&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx1FSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx1FSQuote2">
      <use format="Hets">[&#39;\x1F&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx20SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx20SQuote2">
      <use format="Hets">[&#39;\x20&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx21SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx21SQuote2">
      <use format="Hets">[&#39;\x21&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx22SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx22SQuote2">
      <use format="Hets">[&#39;\x22&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx23SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx23SQuote2">
      <use format="Hets">[&#39;\x23&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx24SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx24SQuote2">
      <use format="Hets">[&#39;\x24&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx25SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx25SQuote2">
      <use format="Hets">[&#39;\x25&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx26SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx26SQuote2">
      <use format="Hets">[&#39;\x26&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx27SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx27SQuote2">
      <use format="Hets">[&#39;\x27&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx28SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx28SQuote2">
      <use format="Hets">[&#39;\x28&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx29SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx29SQuote2">
      <use format="Hets">[&#39;\x29&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx2ASQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx2ASQuote2">
      <use format="Hets">[&#39;\x2A&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx2BSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx2BSQuote2">
      <use format="Hets">[&#39;\x2B&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx2CSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx2CSQuote2">
      <use format="Hets">[&#39;\x2C&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx2DSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx2DSQuote2">
      <use format="Hets">[&#39;\x2D&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx2ESQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx2ESQuote2">
      <use format="Hets">[&#39;\x2E&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx2FSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx2FSQuote2">
      <use format="Hets">[&#39;\x2F&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx30SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx30SQuote2">
      <use format="Hets">[&#39;\x30&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx31SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx31SQuote2">
      <use format="Hets">[&#39;\x31&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx32SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx32SQuote2">
      <use format="Hets">[&#39;\x32&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx33SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx33SQuote2">
      <use format="Hets">[&#39;\x33&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx34SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx34SQuote2">
      <use format="Hets">[&#39;\x34&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx35SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx35SQuote2">
      <use format="Hets">[&#39;\x35&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx36SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx36SQuote2">
      <use format="Hets">[&#39;\x36&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx37SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx37SQuote2">
      <use format="Hets">[&#39;\x37&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx38SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx38SQuote2">
      <use format="Hets">[&#39;\x38&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx39SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx39SQuote2">
      <use format="Hets">[&#39;\x39&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx3ASQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx3ASQuote2">
      <use format="Hets">[&#39;\x3A&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx3BSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx3BSQuote2">
      <use format="Hets">[&#39;\x3B&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx3CSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx3CSQuote2">
      <use format="Hets">[&#39;\x3C&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx3DSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx3DSQuote2">
      <use format="Hets">[&#39;\x3D&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx3ESQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx3ESQuote2">
      <use format="Hets">[&#39;\x3E&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx3FSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx3FSQuote2">
      <use format="Hets">[&#39;\x3F&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx40SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx40SQuote2">
      <use format="Hets">[&#39;\x40&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx41SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx41SQuote2">
      <use format="Hets">[&#39;\x41&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx42SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx42SQuote2">
      <use format="Hets">[&#39;\x42&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx43SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx43SQuote2">
      <use format="Hets">[&#39;\x43&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx44SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx44SQuote2">
      <use format="Hets">[&#39;\x44&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx45SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx45SQuote2">
      <use format="Hets">[&#39;\x45&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx46SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx46SQuote2">
      <use format="Hets">[&#39;\x46&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx47SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx47SQuote2">
      <use format="Hets">[&#39;\x47&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx48SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx48SQuote2">
      <use format="Hets">[&#39;\x48&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx49SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx49SQuote2">
      <use format="Hets">[&#39;\x49&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx4ASQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx4ASQuote2">
      <use format="Hets">[&#39;\x4A&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx4BSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx4BSQuote2">
      <use format="Hets">[&#39;\x4B&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx4CSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx4CSQuote2">
      <use format="Hets">[&#39;\x4C&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx4DSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx4DSQuote2">
      <use format="Hets">[&#39;\x4D&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx4ESQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx4ESQuote2">
      <use format="Hets">[&#39;\x4E&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx4FSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx4FSQuote2">
      <use format="Hets">[&#39;\x4F&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx50SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx50SQuote2">
      <use format="Hets">[&#39;\x50&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx51SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx51SQuote2">
      <use format="Hets">[&#39;\x51&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx52SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx52SQuote2">
      <use format="Hets">[&#39;\x52&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx53SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx53SQuote2">
      <use format="Hets">[&#39;\x53&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx54SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx54SQuote2">
      <use format="Hets">[&#39;\x54&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx55SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx55SQuote2">
      <use format="Hets">[&#39;\x55&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx56SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx56SQuote2">
      <use format="Hets">[&#39;\x56&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx57SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx57SQuote2">
      <use format="Hets">[&#39;\x57&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx58SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx58SQuote2">
      <use format="Hets">[&#39;\x58&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx59SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx59SQuote2">
      <use format="Hets">[&#39;\x59&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx5ASQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx5ASQuote2">
      <use format="Hets">[&#39;\x5A&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx5BSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx5BSQuote2">
      <use format="Hets">[&#39;\x5B&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx5CSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx5CSQuote2">
      <use format="Hets">[&#39;\x5C&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx5DSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx5DSQuote2">
      <use format="Hets">[&#39;\x5D&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx5ESQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx5ESQuote2">
      <use format="Hets">[&#39;\x5E&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx5FSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx5FSQuote2">
      <use format="Hets">[&#39;\x5F&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx60SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx60SQuote2">
      <use format="Hets">[&#39;\x60&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx61SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx61SQuote2">
      <use format="Hets">[&#39;\x61&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx62SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx62SQuote2">
      <use format="Hets">[&#39;\x62&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx63SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx63SQuote2">
      <use format="Hets">[&#39;\x63&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx64SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx64SQuote2">
      <use format="Hets">[&#39;\x64&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx65SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx65SQuote2">
      <use format="Hets">[&#39;\x65&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx66SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx66SQuote2">
      <use format="Hets">[&#39;\x66&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx67SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx67SQuote2">
      <use format="Hets">[&#39;\x67&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx68SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx68SQuote2">
      <use format="Hets">[&#39;\x68&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx69SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx69SQuote2">
      <use format="Hets">[&#39;\x69&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx6ASQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx6ASQuote2">
      <use format="Hets">[&#39;\x6A&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx6BSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx6BSQuote2">
      <use format="Hets">[&#39;\x6B&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx6CSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx6CSQuote2">
      <use format="Hets">[&#39;\x6C&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx6DSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx6DSQuote2">
      <use format="Hets">[&#39;\x6D&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx6ESQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx6ESQuote2">
      <use format="Hets">[&#39;\x6E&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx6FSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx6FSQuote2">
      <use format="Hets">[&#39;\x6F&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx70SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx70SQuote2">
      <use format="Hets">[&#39;\x70&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx71SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx71SQuote2">
      <use format="Hets">[&#39;\x71&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx72SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx72SQuote2">
      <use format="Hets">[&#39;\x72&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx73SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx73SQuote2">
      <use format="Hets">[&#39;\x73&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx74SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx74SQuote2">
      <use format="Hets">[&#39;\x74&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx75SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx75SQuote2">
      <use format="Hets">[&#39;\x75&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx76SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx76SQuote2">
      <use format="Hets">[&#39;\x76&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx77SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx77SQuote2">
      <use format="Hets">[&#39;\x77&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx78SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx78SQuote2">
      <use format="Hets">[&#39;\x78&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx79SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx79SQuote2">
      <use format="Hets">[&#39;\x79&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx7ASQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx7ASQuote2">
      <use format="Hets">[&#39;\x7A&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx7BSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx7BSQuote2">
      <use format="Hets">[&#39;\x7B&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx7CSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx7CSQuote2">
      <use format="Hets">[&#39;\x7C&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx7DSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx7DSQuote2">
      <use format="Hets">[&#39;\x7D&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx7ESQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx7ESQuote2">
      <use format="Hets">[&#39;\x7E&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx7FSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx7FSQuote2">
      <use format="Hets">[&#39;\x7F&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx80SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx80SQuote2">
      <use format="Hets">[&#39;\x80&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx81SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx81SQuote2">
      <use format="Hets">[&#39;\x81&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx82SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx82SQuote2">
      <use format="Hets">[&#39;\x82&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx83SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx83SQuote2">
      <use format="Hets">[&#39;\x83&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx84SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx84SQuote2">
      <use format="Hets">[&#39;\x84&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx85SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx85SQuote2">
      <use format="Hets">[&#39;\x85&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx86SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx86SQuote2">
      <use format="Hets">[&#39;\x86&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx87SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx87SQuote2">
      <use format="Hets">[&#39;\x87&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx88SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx88SQuote2">
      <use format="Hets">[&#39;\x88&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx89SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx89SQuote2">
      <use format="Hets">[&#39;\x89&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx8ASQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx8ASQuote2">
      <use format="Hets">[&#39;\x8A&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx8BSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx8BSQuote2">
      <use format="Hets">[&#39;\x8B&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx8CSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx8CSQuote2">
      <use format="Hets">[&#39;\x8C&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx8DSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx8DSQuote2">
      <use format="Hets">[&#39;\x8D&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx8ESQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx8ESQuote2">
      <use format="Hets">[&#39;\x8E&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx8FSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx8FSQuote2">
      <use format="Hets">[&#39;\x8F&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx90SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx90SQuote2">
      <use format="Hets">[&#39;\x90&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx91SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx91SQuote2">
      <use format="Hets">[&#39;\x91&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx92SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx92SQuote2">
      <use format="Hets">[&#39;\x92&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx93SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx93SQuote2">
      <use format="Hets">[&#39;\x93&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx94SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx94SQuote2">
      <use format="Hets">[&#39;\x94&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx95SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx95SQuote2">
      <use format="Hets">[&#39;\x95&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx96SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx96SQuote2">
      <use format="Hets">[&#39;\x96&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx97SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx97SQuote2">
      <use format="Hets">[&#39;\x97&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx98SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx98SQuote2">
      <use format="Hets">[&#39;\x98&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx99SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx99SQuote2">
      <use format="Hets">[&#39;\x99&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx9ASQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx9ASQuote2">
      <use format="Hets">[&#39;\x9A&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx9BSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx9BSQuote2">
      <use format="Hets">[&#39;\x9B&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx9CSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx9CSQuote2">
      <use format="Hets">[&#39;\x9C&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx9DSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx9DSQuote2">
      <use format="Hets">[&#39;\x9D&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx9ESQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx9ESQuote2">
      <use format="Hets">[&#39;\x9E&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx9FSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx9FSQuote2">
      <use format="Hets">[&#39;\x9F&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxA0SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxA0SQuote2">
      <use format="Hets">[&#39;\xA0&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxA1SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxA1SQuote2">
      <use format="Hets">[&#39;\xA1&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxA2SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxA2SQuote2">
      <use format="Hets">[&#39;\xA2&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxA3SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxA3SQuote2">
      <use format="Hets">[&#39;\xA3&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxA4SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxA4SQuote2">
      <use format="Hets">[&#39;\xA4&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxA5SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxA5SQuote2">
      <use format="Hets">[&#39;\xA5&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxA6SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxA6SQuote2">
      <use format="Hets">[&#39;\xA6&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxA7SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxA7SQuote2">
      <use format="Hets">[&#39;\xA7&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxA8SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxA8SQuote2">
      <use format="Hets">[&#39;\xA8&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxA9SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxA9SQuote2">
      <use format="Hets">[&#39;\xA9&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxAASQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxAASQuote2">
      <use format="Hets">[&#39;\xAA&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxABSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxABSQuote2">
      <use format="Hets">[&#39;\xAB&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxACSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxACSQuote2">
      <use format="Hets">[&#39;\xAC&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxADSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxADSQuote2">
      <use format="Hets">[&#39;\xAD&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxAESQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxAESQuote2">
      <use format="Hets">[&#39;\xAE&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxAFSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxAFSQuote2">
      <use format="Hets">[&#39;\xAF&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxB0SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxB0SQuote2">
      <use format="Hets">[&#39;\xB0&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxB1SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxB1SQuote2">
      <use format="Hets">[&#39;\xB1&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxB2SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxB2SQuote2">
      <use format="Hets">[&#39;\xB2&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxB3SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxB3SQuote2">
      <use format="Hets">[&#39;\xB3&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxB4SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxB4SQuote2">
      <use format="Hets">[&#39;\xB4&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxB5SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxB5SQuote2">
      <use format="Hets">[&#39;\xB5&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxB6SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxB6SQuote2">
      <use format="Hets">[&#39;\xB6&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxB7SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxB7SQuote2">
      <use format="Hets">[&#39;\xB7&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxB8SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxB8SQuote2">
      <use format="Hets">[&#39;\xB8&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxB9SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxB9SQuote2">
      <use format="Hets">[&#39;\xB9&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxBASQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxBASQuote2">
      <use format="Hets">[&#39;\xBA&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxBBSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxBBSQuote2">
      <use format="Hets">[&#39;\xBB&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxBCSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxBCSQuote2">
      <use format="Hets">[&#39;\xBC&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxBDSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxBDSQuote2">
      <use format="Hets">[&#39;\xBD&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxBESQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxBESQuote2">
      <use format="Hets">[&#39;\xBE&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxBFSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxBFSQuote2">
      <use format="Hets">[&#39;\xBF&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxC0SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxC0SQuote2">
      <use format="Hets">[&#39;\xC0&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxC1SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxC1SQuote2">
      <use format="Hets">[&#39;\xC1&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxC2SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxC2SQuote2">
      <use format="Hets">[&#39;\xC2&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxC3SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxC3SQuote2">
      <use format="Hets">[&#39;\xC3&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxC4SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxC4SQuote2">
      <use format="Hets">[&#39;\xC4&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxC5SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxC5SQuote2">
      <use format="Hets">[&#39;\xC5&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxC6SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxC6SQuote2">
      <use format="Hets">[&#39;\xC6&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxC7SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxC7SQuote2">
      <use format="Hets">[&#39;\xC7&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxC8SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxC8SQuote2">
      <use format="Hets">[&#39;\xC8&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxC9SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxC9SQuote2">
      <use format="Hets">[&#39;\xC9&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxCASQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxCASQuote2">
      <use format="Hets">[&#39;\xCA&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxCBSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxCBSQuote2">
      <use format="Hets">[&#39;\xCB&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxCCSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxCCSQuote2">
      <use format="Hets">[&#39;\xCC&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxCDSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxCDSQuote2">
      <use format="Hets">[&#39;\xCD&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxCESQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxCESQuote2">
      <use format="Hets">[&#39;\xCE&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxCFSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxCFSQuote2">
      <use format="Hets">[&#39;\xCF&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxD0SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxD0SQuote2">
      <use format="Hets">[&#39;\xD0&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxD1SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxD1SQuote2">
      <use format="Hets">[&#39;\xD1&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxD2SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxD2SQuote2">
      <use format="Hets">[&#39;\xD2&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxD3SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxD3SQuote2">
      <use format="Hets">[&#39;\xD3&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxD4SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxD4SQuote2">
      <use format="Hets">[&#39;\xD4&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxD5SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxD5SQuote2">
      <use format="Hets">[&#39;\xD5&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxD6SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxD6SQuote2">
      <use format="Hets">[&#39;\xD6&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxD7SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxD7SQuote2">
      <use format="Hets">[&#39;\xD7&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxD8SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxD8SQuote2">
      <use format="Hets">[&#39;\xD8&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxD9SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxD9SQuote2">
      <use format="Hets">[&#39;\xD9&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxDASQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxDASQuote2">
      <use format="Hets">[&#39;\xDA&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxDBSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxDBSQuote2">
      <use format="Hets">[&#39;\xDB&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxDCSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxDCSQuote2">
      <use format="Hets">[&#39;\xDC&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxDDSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxDDSQuote2">
      <use format="Hets">[&#39;\xDD&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxDESQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxDESQuote2">
      <use format="Hets">[&#39;\xDE&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxDFSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxDFSQuote2">
      <use format="Hets">[&#39;\xDF&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxE0SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxE0SQuote2">
      <use format="Hets">[&#39;\xE0&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxE1SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxE1SQuote2">
      <use format="Hets">[&#39;\xE1&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxE2SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxE2SQuote2">
      <use format="Hets">[&#39;\xE2&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxE3SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxE3SQuote2">
      <use format="Hets">[&#39;\xE3&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxE4SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxE4SQuote2">
      <use format="Hets">[&#39;\xE4&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxE5SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxE5SQuote2">
      <use format="Hets">[&#39;\xE5&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxE6SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxE6SQuote2">
      <use format="Hets">[&#39;\xE6&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxE7SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxE7SQuote2">
      <use format="Hets">[&#39;\xE7&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxE8SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxE8SQuote2">
      <use format="Hets">[&#39;\xE8&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxE9SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxE9SQuote2">
      <use format="Hets">[&#39;\xE9&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxEASQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxEASQuote2">
      <use format="Hets">[&#39;\xEA&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxEBSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxEBSQuote2">
      <use format="Hets">[&#39;\xEB&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxECSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxECSQuote2">
      <use format="Hets">[&#39;\xEC&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxEDSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxEDSQuote2">
      <use format="Hets">[&#39;\xED&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxEESQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxEESQuote2">
      <use format="Hets">[&#39;\xEE&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxEFSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxEFSQuote2">
      <use format="Hets">[&#39;\xEF&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxF0SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxF0SQuote2">
      <use format="Hets">[&#39;\xF0&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxF1SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxF1SQuote2">
      <use format="Hets">[&#39;\xF1&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxF2SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxF2SQuote2">
      <use format="Hets">[&#39;\xF2&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxF3SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxF3SQuote2">
      <use format="Hets">[&#39;\xF3&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxF4SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxF4SQuote2">
      <use format="Hets">[&#39;\xF4&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxF5SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxF5SQuote2">
      <use format="Hets">[&#39;\xF5&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxF6SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxF6SQuote2">
      <use format="Hets">[&#39;\xF6&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxF7SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxF7SQuote2">
      <use format="Hets">[&#39;\xF7&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxF8SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxF8SQuote2">
      <use format="Hets">[&#39;\xF8&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxF9SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxF9SQuote2">
      <use format="Hets">[&#39;\xF9&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxFASQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxFASQuote2">
      <use format="Hets">[&#39;\xFA&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxFBSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxFBSQuote2">
      <use format="Hets">[&#39;\xFB&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxFCSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxFCSQuote2">
      <use format="Hets">[&#39;\xFC&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxFDSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxFDSQuote2">
      <use format="Hets">[&#39;\xFD&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxFESQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxFESQuote2">
      <use format="Hets">[&#39;\xFE&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxFFSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxFFSQuote2">
      <use format="Hets">[&#39;\xFF&#39;]</use>
    </presentation>
    <symbol name="SQuoteSBrackCloseSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSBrackCloseSQuote2">
      <use format="Hets">[&#39;]&#39;]</use>
    </presentation>
    <symbol name="SQuotePowerSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotePowerSQuote2">
      <use format="Hets">[&#39;^&#39;]</use>
    </presentation>
    <symbol name="SQuote_SQuote5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuote_SQuote5">
      <use format="Hets">[&#39;_&#39;]</use>
    </presentation>
    <symbol name="SQuoteAccGravSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteAccGravSQuote2">
      <use format="Hets">[&#39;`&#39;]</use>
    </presentation>
    <symbol name="SQuoteaSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteaSQuote2">
      <use format="Hets">[&#39;a&#39;]</use>
    </presentation>
    <symbol name="SQuotebSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotebSQuote2">
      <use format="Hets">[&#39;b&#39;]</use>
    </presentation>
    <symbol name="SQuotecSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotecSQuote2">
      <use format="Hets">[&#39;c&#39;]</use>
    </presentation>
    <symbol name="SQuotedSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotedSQuote2">
      <use format="Hets">[&#39;d&#39;]</use>
    </presentation>
    <symbol name="SQuoteeSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteeSQuote2">
      <use format="Hets">[&#39;e&#39;]</use>
    </presentation>
    <symbol name="SQuotefSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotefSQuote2">
      <use format="Hets">[&#39;f&#39;]</use>
    </presentation>
    <symbol name="SQuotegSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotegSQuote2">
      <use format="Hets">[&#39;g&#39;]</use>
    </presentation>
    <symbol name="SQuotehSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotehSQuote2">
      <use format="Hets">[&#39;h&#39;]</use>
    </presentation>
    <symbol name="SQuoteiSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteiSQuote2">
      <use format="Hets">[&#39;i&#39;]</use>
    </presentation>
    <symbol name="SQuotejSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotejSQuote2">
      <use format="Hets">[&#39;j&#39;]</use>
    </presentation>
    <symbol name="SQuotekSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotekSQuote2">
      <use format="Hets">[&#39;k&#39;]</use>
    </presentation>
    <symbol name="SQuotelSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotelSQuote2">
      <use format="Hets">[&#39;l&#39;]</use>
    </presentation>
    <symbol name="SQuotemSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotemSQuote2">
      <use format="Hets">[&#39;m&#39;]</use>
    </presentation>
    <symbol name="SQuotenSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotenSQuote2">
      <use format="Hets">[&#39;n&#39;]</use>
    </presentation>
    <symbol name="SQuoteoSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteoSQuote2">
      <use format="Hets">[&#39;o&#39;]</use>
    </presentation>
    <symbol name="SQuotepSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotepSQuote2">
      <use format="Hets">[&#39;p&#39;]</use>
    </presentation>
    <symbol name="SQuoteqSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteqSQuote2">
      <use format="Hets">[&#39;q&#39;]</use>
    </presentation>
    <symbol name="SQuoterSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoterSQuote2">
      <use format="Hets">[&#39;r&#39;]</use>
    </presentation>
    <symbol name="SQuotesSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotesSQuote2">
      <use format="Hets">[&#39;s&#39;]</use>
    </presentation>
    <symbol name="SQuotetSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotetSQuote2">
      <use format="Hets">[&#39;t&#39;]</use>
    </presentation>
    <symbol name="SQuoteuSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteuSQuote2">
      <use format="Hets">[&#39;u&#39;]</use>
    </presentation>
    <symbol name="SQuotevSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotevSQuote2">
      <use format="Hets">[&#39;v&#39;]</use>
    </presentation>
    <symbol name="SQuotewSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotewSQuote2">
      <use format="Hets">[&#39;w&#39;]</use>
    </presentation>
    <symbol name="SQuotexSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotexSQuote2">
      <use format="Hets">[&#39;x&#39;]</use>
    </presentation>
    <symbol name="SQuoteySQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteySQuote2">
      <use format="Hets">[&#39;y&#39;]</use>
    </presentation>
    <symbol name="SQuotezSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotezSQuote2">
      <use format="Hets">[&#39;z&#39;]</use>
    </presentation>
    <symbol name="SQuoteBraceOpenSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBraceOpenSQuote2">
      <use format="Hets">[&#39;{&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote190" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote190">
      <use format="Hets">[&#39;|&#39;]</use>
    </presentation>
    <symbol name="SQuoteBraceCloseSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBraceCloseSQuote2">
      <use format="Hets">[&#39;}&#39;]</use>
    </presentation>
    <symbol name="SQuoteTildeSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteTildeSQuote2">
      <use format="Hets">[&#39;~&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote191" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote191">
      <use format="Hets">[&#39; &#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote192" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote192">
      <use format="Hets">[&#39;¡&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote193" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote193">
      <use format="Hets">[&#39;¢&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote194" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote194">
      <use format="Hets">[&#39;£&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote195" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote195">
      <use format="Hets">[&#39;¤&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote196" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote196">
      <use format="Hets">[&#39;¥&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote197" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote197">
      <use format="Hets">[&#39;¦&#39;]</use>
    </presentation>
    <symbol name="SQuoteParaSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteParaSQuote2">
      <use format="Hets">[&#39;§&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote198" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote198">
      <use format="Hets">[&#39;¨&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote199" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote199">
      <use format="Hets">[&#39;©&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote200" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote200">
      <use format="Hets">[&#39;ª&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote201" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote201">
      <use format="Hets">[&#39;«&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote202" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote202">
      <use format="Hets">[&#39;¬&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote203" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote203">
      <use format="Hets">[&#39;­&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote204" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote204">
      <use format="Hets">[&#39;®&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote205" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote205">
      <use format="Hets">[&#39;¯&#39;]</use>
    </presentation>
    <symbol name="SQuoteDegreeSQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteDegreeSQuote2">
      <use format="Hets">[&#39;°&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote206" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote206">
      <use format="Hets">[&#39;±&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote207" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote207">
      <use format="Hets">[&#39;²&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote208" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote208">
      <use format="Hets">[&#39;³&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote209" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote209">
      <use format="Hets">[&#39;´&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote210" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote210">
      <use format="Hets">[&#39;µ&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote211" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote211">
      <use format="Hets">[&#39;¶&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote212" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote212">
      <use format="Hets">[&#39;·&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote213" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote213">
      <use format="Hets">[&#39;¸&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote214" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote214">
      <use format="Hets">[&#39;¹&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote215" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote215">
      <use format="Hets">[&#39;º&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote216" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote216">
      <use format="Hets">[&#39;»&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote217" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote217">
      <use format="Hets">[&#39;¼&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote218" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote218">
      <use format="Hets">[&#39;½&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote219" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote219">
      <use format="Hets">[&#39;¾&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote220" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote220">
      <use format="Hets">[&#39;¿&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote221" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote221">
      <use format="Hets">[&#39;À&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote222" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote222">
      <use format="Hets">[&#39;Á&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote223" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote223">
      <use format="Hets">[&#39;Â&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote224" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote224">
      <use format="Hets">[&#39;Ã&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote225" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote225">
      <use format="Hets">[&#39;Ä&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote226" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote226">
      <use format="Hets">[&#39;Å&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote227" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote227">
      <use format="Hets">[&#39;Æ&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote228" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote228">
      <use format="Hets">[&#39;Ç&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote229" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote229">
      <use format="Hets">[&#39;È&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote230" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote230">
      <use format="Hets">[&#39;É&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote231" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote231">
      <use format="Hets">[&#39;Ê&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote232" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote232">
      <use format="Hets">[&#39;Ë&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote233" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote233">
      <use format="Hets">[&#39;Ì&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote234" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote234">
      <use format="Hets">[&#39;Í&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote235" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote235">
      <use format="Hets">[&#39;Î&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote236" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote236">
      <use format="Hets">[&#39;Ï&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote237" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote237">
      <use format="Hets">[&#39;Ð&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote238" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote238">
      <use format="Hets">[&#39;Ñ&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote239" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote239">
      <use format="Hets">[&#39;Ò&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote240" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote240">
      <use format="Hets">[&#39;Ó&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote241" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote241">
      <use format="Hets">[&#39;Ô&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote242" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote242">
      <use format="Hets">[&#39;Õ&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote243" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote243">
      <use format="Hets">[&#39;Ö&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote244" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote244">
      <use format="Hets">[&#39;×&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote245" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote245">
      <use format="Hets">[&#39;Ø&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote246" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote246">
      <use format="Hets">[&#39;Ù&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote247" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote247">
      <use format="Hets">[&#39;Ú&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote248" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote248">
      <use format="Hets">[&#39;Û&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote249" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote249">
      <use format="Hets">[&#39;Ü&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote250" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote250">
      <use format="Hets">[&#39;Ý&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote251" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote251">
      <use format="Hets">[&#39;Þ&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote252" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote252">
      <use format="Hets">[&#39;ß&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote253" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote253">
      <use format="Hets">[&#39;à&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote254" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote254">
      <use format="Hets">[&#39;á&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote255" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote255">
      <use format="Hets">[&#39;â&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote256" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote256">
      <use format="Hets">[&#39;ã&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote257" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote257">
      <use format="Hets">[&#39;ä&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote258" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote258">
      <use format="Hets">[&#39;å&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote259" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote259">
      <use format="Hets">[&#39;æ&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote260" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote260">
      <use format="Hets">[&#39;ç&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote261" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote261">
      <use format="Hets">[&#39;è&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote262" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote262">
      <use format="Hets">[&#39;é&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote263" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote263">
      <use format="Hets">[&#39;ê&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote264" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote264">
      <use format="Hets">[&#39;ë&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote265" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote265">
      <use format="Hets">[&#39;ì&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote266" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote266">
      <use format="Hets">[&#39;í&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote267" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote267">
      <use format="Hets">[&#39;î&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote268" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote268">
      <use format="Hets">[&#39;ï&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote269" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote269">
      <use format="Hets">[&#39;ð&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote270" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote270">
      <use format="Hets">[&#39;ñ&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote271" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote271">
      <use format="Hets">[&#39;ò&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote272" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote272">
      <use format="Hets">[&#39;ó&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote273" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote273">
      <use format="Hets">[&#39;ô&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote274" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote274">
      <use format="Hets">[&#39;õ&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote275" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote275">
      <use format="Hets">[&#39;ö&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote276" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote276">
      <use format="Hets">[&#39;÷&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote277" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote277">
      <use format="Hets">[&#39;ø&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote278" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote278">
      <use format="Hets">[&#39;ù&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote279" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote279">
      <use format="Hets">[&#39;ú&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote280" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote280">
      <use format="Hets">[&#39;û&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote281" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote281">
      <use format="Hets">[&#39;ü&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote282" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote282">
      <use format="Hets">[&#39;ý&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote283" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote283">
      <use format="Hets">[&#39;þ&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote284" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote284">
      <use format="Hets">[&#39;ÿ&#39;]</use>
    </presentation>
    <symbol name="ACK2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="ACK2">
      <use format="Hets">[ACK]</use>
    </presentation>
    <symbol name="BEL2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BEL2">
      <use format="Hets">[BEL]</use>
    </presentation>
    <symbol name="BS2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BS2">
      <use format="Hets">[BS]</use>
    </presentation>
    <symbol name="CAN2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="CAN2">
      <use format="Hets">[CAN]</use>
    </presentation>
    <symbol name="CR2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="CR2">
      <use format="Hets">[CR]</use>
    </presentation>
    <symbol name="DC12" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="DC12">
      <use format="Hets">[DC1]</use>
    </presentation>
    <symbol name="DC22" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="DC22">
      <use format="Hets">[DC2]</use>
    </presentation>
    <symbol name="DC32" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="DC32">
      <use format="Hets">[DC3]</use>
    </presentation>
    <symbol name="DC42" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="DC42">
      <use format="Hets">[DC4]</use>
    </presentation>
    <symbol name="DEL2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="DEL2">
      <use format="Hets">[DEL]</use>
    </presentation>
    <symbol name="DLE2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="DLE2">
      <use format="Hets">[DLE]</use>
    </presentation>
    <symbol name="EM2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="EM2">
      <use format="Hets">[EM]</use>
    </presentation>
    <symbol name="ENQ2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="ENQ2">
      <use format="Hets">[ENQ]</use>
    </presentation>
    <symbol name="EOT2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="EOT2">
      <use format="Hets">[EOT]</use>
    </presentation>
    <symbol name="ESC2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="ESC2">
      <use format="Hets">[ESC]</use>
    </presentation>
    <symbol name="ETB2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="ETB2">
      <use format="Hets">[ETB]</use>
    </presentation>
    <symbol name="ETX2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="ETX2">
      <use format="Hets">[ETX]</use>
    </presentation>
    <symbol name="FF2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="FF2">
      <use format="Hets">[FF]</use>
    </presentation>
    <symbol name="FS2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="FS2">
      <use format="Hets">[FS]</use>
    </presentation>
    <symbol name="GS2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="GS2">
      <use format="Hets">[GS]</use>
    </presentation>
    <symbol name="HT2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="HT2">
      <use format="Hets">[HT]</use>
    </presentation>
    <symbol name="LF2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="LF2">
      <use format="Hets">[LF]</use>
    </presentation>
    <symbol name="NAK2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="NAK2">
      <use format="Hets">[NAK]</use>
    </presentation>
    <symbol name="NL2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="NL2">
      <use format="Hets">[NL]</use>
    </presentation>
    <symbol name="NP2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="NP2">
      <use format="Hets">[NP]</use>
    </presentation>
    <symbol name="NUL2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="NUL2">
      <use format="Hets">[NUL]</use>
    </presentation>
    <symbol name="RS2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="RS2">
      <use format="Hets">[RS]</use>
    </presentation>
    <symbol name="SI2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SI2">
      <use format="Hets">[SI]</use>
    </presentation>
    <symbol name="SO2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SO2">
      <use format="Hets">[SO]</use>
    </presentation>
    <symbol name="SOH2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SOH2">
      <use format="Hets">[SOH]</use>
    </presentation>
    <symbol name="SP2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SP2">
      <use format="Hets">[SP]</use>
    </presentation>
    <symbol name="SUB2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SUB2">
      <use format="Hets">[SUB]</use>
    </presentation>
    <symbol name="SYN2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SYN2">
      <use format="Hets">[SYN]</use>
    </presentation>
    <symbol name="SYX2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SYX2">
      <use format="Hets">[SYX]</use>
    </presentation>
    <symbol name="US2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="US2">
      <use format="Hets">[US]</use>
    </presentation>
    <symbol name="VT2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="VT2">
      <use format="Hets">[VT]</use>
    </presentation>
    <symbol name="chr2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Nat" name="Nat3"/>
            <OMS cd="String_1A" name="Char3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="chr2">
      <use format="Hets">[chr]</use>
    </presentation>
    <symbol name="ord2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1A" name="Char3"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="ord2">
      <use format="Hets">[ord]</use>
    </presentation>
  </theory>
  <private for="String_1A">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"List_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst List"
From:"List_PI" Type:"GlobalDef" Origin:"DGSpecInst Char"
From:"Char" Type:"GlobalDef" Origin:"DGSpecInst Char"
]]></data>
  </private>
  <theory xml:id="String_1">
    <presentation for="String_1">
      <use format="Hets">[String,,1]</use>
    </presentation>
    <imports from="#List">
      <morphism hiding="#__ Elem List[Elem] [] __!__ __++__ __+__ __::__ __eps__ drop first freq front isEmpty last rest reverse take">
        <requation>
          <OMOBJ>
            <OMS cd="List" name="Elem35"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="Char2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="ListSBrackOpenElemSBrackClose1"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="ListSBrackOpenCharSBrackClose"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N02"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="N02"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N12"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="N12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N22"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="N22"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N32"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="N32"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N42"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="N42"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N52"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="N52"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N62"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="N62"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N72"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="N72"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N82"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="N82"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N92"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="N92"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="__LowerEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="__Lower__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="__GreaterEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="__Greater__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__Ast__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="__Ast__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__AtAt__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="__AtAt__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__DivisionQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="__DivisionQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__Excla2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="__Excla2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__MinusExcla__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="__MinusExcla__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__MinusQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="__MinusQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__Plus__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="__Plus__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__Power__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="__Power__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__div__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="__div__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__mod__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="__mod__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="even2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="max2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="max2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="min2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="min2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="odd2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="pre2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="pre2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="suc2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String_1" name="suc2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <imports from="#String_1A"/>
    <symbol role="sort" name="ListSBrackOpenCharSBrackClose"/>
    <presentation for="ListSBrackOpenCharSBrackClose">
      <use format="Hets">[List[Char]]</use>
    </presentation>
    <symbol role="sort" name="Char2"/>
    <presentation for="Char2">
      <use format="Hets">[Char]</use>
    </presentation>
    <symbol name="isDigit1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isDigit1">
      <use format="Hets">[isDigit]</use>
    </presentation>
    <symbol name="isLetter1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isLetter1">
      <use format="Hets">[isLetter]</use>
    </presentation>
    <symbol name="isPrintable1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isPrintable1">
      <use format="Hets">[isPrintable]</use>
    </presentation>
    <symbol name="SQuote_SQuote2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuote_SQuote2">
      <use format="Hets">[&#39; &#39;]</use>
    </presentation>
    <symbol name="SQuoteExclaSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteExclaSQuote1">
      <use format="Hets">[&#39;!&#39;]</use>
    </presentation>
    <symbol name="SQuoteHashSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteHashSQuote1">
      <use format="Hets">[&#39;#&#39;]</use>
    </presentation>
    <symbol name="SQuoteDollarSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteDollarSQuote1">
      <use format="Hets">[&#39;$&#39;]</use>
    </presentation>
    <symbol name="SQuotePercentSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotePercentSQuote1">
      <use format="Hets">[&#39;%&#39;]</use>
    </presentation>
    <symbol name="SQuoteAmpSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteAmpSQuote1">
      <use format="Hets">[&#39;&#38;&#39;]</use>
    </presentation>
    <symbol name="SQuoteBrackOpenSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBrackOpenSQuote1">
      <use format="Hets">[&#39;(&#39;]</use>
    </presentation>
    <symbol name="SQuoteBrackCloseSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBrackCloseSQuote1">
      <use format="Hets">[&#39;)&#39;]</use>
    </presentation>
    <symbol name="SQuoteAstSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteAstSQuote1">
      <use format="Hets">[&#39;*&#39;]</use>
    </presentation>
    <symbol name="SQuotePlusSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotePlusSQuote1">
      <use format="Hets">[&#39;+&#39;]</use>
    </presentation>
    <symbol name="SQuoteCommaSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteCommaSQuote1">
      <use format="Hets">[&#39;,&#39;]</use>
    </presentation>
    <symbol name="SQuoteMinusSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteMinusSQuote1">
      <use format="Hets">[&#39;-&#39;]</use>
    </presentation>
    <symbol name="SQuote.SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuote.SQuote1">
      <use format="Hets">[&#39;.&#39;]</use>
    </presentation>
    <symbol name="SQuoteDivisionSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteDivisionSQuote1">
      <use format="Hets">[&#39;/&#39;]</use>
    </presentation>
    <symbol name="SQuote0SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuote0SQuote1">
      <use format="Hets">[&#39;0&#39;]</use>
    </presentation>
    <symbol name="SQuote1SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuote1SQuote1">
      <use format="Hets">[&#39;1&#39;]</use>
    </presentation>
    <symbol name="SQuote2SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuote2SQuote1">
      <use format="Hets">[&#39;2&#39;]</use>
    </presentation>
    <symbol name="SQuote3SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuote3SQuote1">
      <use format="Hets">[&#39;3&#39;]</use>
    </presentation>
    <symbol name="SQuote4SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuote4SQuote1">
      <use format="Hets">[&#39;4&#39;]</use>
    </presentation>
    <symbol name="SQuote5SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuote5SQuote1">
      <use format="Hets">[&#39;5&#39;]</use>
    </presentation>
    <symbol name="SQuote6SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuote6SQuote1">
      <use format="Hets">[&#39;6&#39;]</use>
    </presentation>
    <symbol name="SQuote7SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuote7SQuote1">
      <use format="Hets">[&#39;7&#39;]</use>
    </presentation>
    <symbol name="SQuote8SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuote8SQuote1">
      <use format="Hets">[&#39;8&#39;]</use>
    </presentation>
    <symbol name="SQuote9SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuote9SQuote1">
      <use format="Hets">[&#39;9&#39;]</use>
    </presentation>
    <symbol name="SQuote:SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuote:SQuote1">
      <use format="Hets">[&#39;:&#39;]</use>
    </presentation>
    <symbol name="SQuoteSemiColonSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSemiColonSQuote1">
      <use format="Hets">[&#39;;&#39;]</use>
    </presentation>
    <symbol name="SQuoteLowerSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteLowerSQuote1">
      <use format="Hets">[&#39;&#60;&#39;]</use>
    </presentation>
    <symbol name="SQuoteEqualsSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteEqualsSQuote1">
      <use format="Hets">[&#39;=&#39;]</use>
    </presentation>
    <symbol name="SQuoteGreaterSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteGreaterSQuote1">
      <use format="Hets">[&#39;&#62;&#39;]</use>
    </presentation>
    <symbol name="SQuoteQuestSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteQuestSQuote1">
      <use format="Hets">[&#39;?&#39;]</use>
    </presentation>
    <symbol name="SQuoteAtSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteAtSQuote1">
      <use format="Hets">[&#39;@&#39;]</use>
    </presentation>
    <symbol name="SQuoteASQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteASQuote1">
      <use format="Hets">[&#39;A&#39;]</use>
    </presentation>
    <symbol name="SQuoteBSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBSQuote1">
      <use format="Hets">[&#39;B&#39;]</use>
    </presentation>
    <symbol name="SQuoteCSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteCSQuote1">
      <use format="Hets">[&#39;C&#39;]</use>
    </presentation>
    <symbol name="SQuoteDSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteDSQuote1">
      <use format="Hets">[&#39;D&#39;]</use>
    </presentation>
    <symbol name="SQuoteESQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteESQuote1">
      <use format="Hets">[&#39;E&#39;]</use>
    </presentation>
    <symbol name="SQuoteFSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteFSQuote1">
      <use format="Hets">[&#39;F&#39;]</use>
    </presentation>
    <symbol name="SQuoteGSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteGSQuote1">
      <use format="Hets">[&#39;G&#39;]</use>
    </presentation>
    <symbol name="SQuoteHSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteHSQuote1">
      <use format="Hets">[&#39;H&#39;]</use>
    </presentation>
    <symbol name="SQuoteISQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteISQuote1">
      <use format="Hets">[&#39;I&#39;]</use>
    </presentation>
    <symbol name="SQuoteJSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteJSQuote1">
      <use format="Hets">[&#39;J&#39;]</use>
    </presentation>
    <symbol name="SQuoteKSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteKSQuote1">
      <use format="Hets">[&#39;K&#39;]</use>
    </presentation>
    <symbol name="SQuoteLSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteLSQuote1">
      <use format="Hets">[&#39;L&#39;]</use>
    </presentation>
    <symbol name="SQuoteMSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteMSQuote1">
      <use format="Hets">[&#39;M&#39;]</use>
    </presentation>
    <symbol name="SQuoteNSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteNSQuote1">
      <use format="Hets">[&#39;N&#39;]</use>
    </presentation>
    <symbol name="SQuoteOSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteOSQuote1">
      <use format="Hets">[&#39;O&#39;]</use>
    </presentation>
    <symbol name="SQuotePSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotePSQuote1">
      <use format="Hets">[&#39;P&#39;]</use>
    </presentation>
    <symbol name="SQuoteQSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteQSQuote1">
      <use format="Hets">[&#39;Q&#39;]</use>
    </presentation>
    <symbol name="SQuoteRSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteRSQuote1">
      <use format="Hets">[&#39;R&#39;]</use>
    </presentation>
    <symbol name="SQuoteSSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSSQuote1">
      <use format="Hets">[&#39;S&#39;]</use>
    </presentation>
    <symbol name="SQuoteTSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteTSQuote1">
      <use format="Hets">[&#39;T&#39;]</use>
    </presentation>
    <symbol name="SQuoteUSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteUSQuote1">
      <use format="Hets">[&#39;U&#39;]</use>
    </presentation>
    <symbol name="SQuoteVSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteVSQuote1">
      <use format="Hets">[&#39;V&#39;]</use>
    </presentation>
    <symbol name="SQuoteWSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteWSQuote1">
      <use format="Hets">[&#39;W&#39;]</use>
    </presentation>
    <symbol name="SQuoteXSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteXSQuote1">
      <use format="Hets">[&#39;X&#39;]</use>
    </presentation>
    <symbol name="SQuoteYSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteYSQuote1">
      <use format="Hets">[&#39;Y&#39;]</use>
    </presentation>
    <symbol name="SQuoteZSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteZSQuote1">
      <use format="Hets">[&#39;Z&#39;]</use>
    </presentation>
    <symbol name="SQuoteSBrackOpenSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSBrackOpenSQuote1">
      <use format="Hets">[&#39;[&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashQuoteSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashQuoteSQuote1">
      <use format="Hets">[&#39;\&#34;&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashSQuoteSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashSQuoteSQuote1">
      <use format="Hets">[&#39;\&#39;&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash000SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash000SQuote1">
      <use format="Hets">[&#39;\000&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash001SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash001SQuote1">
      <use format="Hets">[&#39;\001&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash002SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash002SQuote1">
      <use format="Hets">[&#39;\002&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash003SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash003SQuote1">
      <use format="Hets">[&#39;\003&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash004SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash004SQuote1">
      <use format="Hets">[&#39;\004&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash005SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash005SQuote1">
      <use format="Hets">[&#39;\005&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash006SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash006SQuote1">
      <use format="Hets">[&#39;\006&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash007SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash007SQuote1">
      <use format="Hets">[&#39;\007&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash008SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash008SQuote1">
      <use format="Hets">[&#39;\008&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash009SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash009SQuote1">
      <use format="Hets">[&#39;\009&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash010SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash010SQuote1">
      <use format="Hets">[&#39;\010&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash011SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash011SQuote1">
      <use format="Hets">[&#39;\011&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash012SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash012SQuote1">
      <use format="Hets">[&#39;\012&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash013SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash013SQuote1">
      <use format="Hets">[&#39;\013&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash014SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash014SQuote1">
      <use format="Hets">[&#39;\014&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash015SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash015SQuote1">
      <use format="Hets">[&#39;\015&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash016SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash016SQuote1">
      <use format="Hets">[&#39;\016&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash017SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash017SQuote1">
      <use format="Hets">[&#39;\017&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash018SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash018SQuote1">
      <use format="Hets">[&#39;\018&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash019SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash019SQuote1">
      <use format="Hets">[&#39;\019&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash020SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash020SQuote1">
      <use format="Hets">[&#39;\020&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash021SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash021SQuote1">
      <use format="Hets">[&#39;\021&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash022SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash022SQuote1">
      <use format="Hets">[&#39;\022&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash023SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash023SQuote1">
      <use format="Hets">[&#39;\023&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash024SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash024SQuote1">
      <use format="Hets">[&#39;\024&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash025SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash025SQuote1">
      <use format="Hets">[&#39;\025&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash026SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash026SQuote1">
      <use format="Hets">[&#39;\026&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash027SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash027SQuote1">
      <use format="Hets">[&#39;\027&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash028SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash028SQuote1">
      <use format="Hets">[&#39;\028&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash029SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash029SQuote1">
      <use format="Hets">[&#39;\029&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash030SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash030SQuote1">
      <use format="Hets">[&#39;\030&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash031SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash031SQuote1">
      <use format="Hets">[&#39;\031&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash032SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash032SQuote1">
      <use format="Hets">[&#39;\032&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash033SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash033SQuote1">
      <use format="Hets">[&#39;\033&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash034SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash034SQuote1">
      <use format="Hets">[&#39;\034&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash035SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash035SQuote1">
      <use format="Hets">[&#39;\035&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash036SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash036SQuote1">
      <use format="Hets">[&#39;\036&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash037SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash037SQuote1">
      <use format="Hets">[&#39;\037&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash038SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash038SQuote1">
      <use format="Hets">[&#39;\038&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash039SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash039SQuote1">
      <use format="Hets">[&#39;\039&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash040SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash040SQuote1">
      <use format="Hets">[&#39;\040&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash041SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash041SQuote1">
      <use format="Hets">[&#39;\041&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash042SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash042SQuote1">
      <use format="Hets">[&#39;\042&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash043SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash043SQuote1">
      <use format="Hets">[&#39;\043&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash044SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash044SQuote1">
      <use format="Hets">[&#39;\044&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash045SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash045SQuote1">
      <use format="Hets">[&#39;\045&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash046SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash046SQuote1">
      <use format="Hets">[&#39;\046&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash047SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash047SQuote1">
      <use format="Hets">[&#39;\047&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash048SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash048SQuote1">
      <use format="Hets">[&#39;\048&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash049SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash049SQuote1">
      <use format="Hets">[&#39;\049&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash050SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash050SQuote1">
      <use format="Hets">[&#39;\050&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash051SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash051SQuote1">
      <use format="Hets">[&#39;\051&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash052SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash052SQuote1">
      <use format="Hets">[&#39;\052&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash053SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash053SQuote1">
      <use format="Hets">[&#39;\053&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash054SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash054SQuote1">
      <use format="Hets">[&#39;\054&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash055SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash055SQuote1">
      <use format="Hets">[&#39;\055&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash056SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash056SQuote1">
      <use format="Hets">[&#39;\056&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash057SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash057SQuote1">
      <use format="Hets">[&#39;\057&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash058SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash058SQuote1">
      <use format="Hets">[&#39;\058&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash059SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash059SQuote1">
      <use format="Hets">[&#39;\059&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash060SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash060SQuote1">
      <use format="Hets">[&#39;\060&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash061SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash061SQuote1">
      <use format="Hets">[&#39;\061&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash062SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash062SQuote1">
      <use format="Hets">[&#39;\062&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash063SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash063SQuote1">
      <use format="Hets">[&#39;\063&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash064SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash064SQuote1">
      <use format="Hets">[&#39;\064&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash065SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash065SQuote1">
      <use format="Hets">[&#39;\065&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash066SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash066SQuote1">
      <use format="Hets">[&#39;\066&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash067SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash067SQuote1">
      <use format="Hets">[&#39;\067&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash068SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash068SQuote1">
      <use format="Hets">[&#39;\068&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash069SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash069SQuote1">
      <use format="Hets">[&#39;\069&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash070SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash070SQuote1">
      <use format="Hets">[&#39;\070&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash071SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash071SQuote1">
      <use format="Hets">[&#39;\071&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash072SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash072SQuote1">
      <use format="Hets">[&#39;\072&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash073SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash073SQuote1">
      <use format="Hets">[&#39;\073&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash074SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash074SQuote1">
      <use format="Hets">[&#39;\074&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash075SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash075SQuote1">
      <use format="Hets">[&#39;\075&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash076SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash076SQuote1">
      <use format="Hets">[&#39;\076&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash077SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash077SQuote1">
      <use format="Hets">[&#39;\077&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash078SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash078SQuote1">
      <use format="Hets">[&#39;\078&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash079SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash079SQuote1">
      <use format="Hets">[&#39;\079&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash080SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash080SQuote1">
      <use format="Hets">[&#39;\080&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash081SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash081SQuote1">
      <use format="Hets">[&#39;\081&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash082SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash082SQuote1">
      <use format="Hets">[&#39;\082&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash083SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash083SQuote1">
      <use format="Hets">[&#39;\083&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash084SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash084SQuote1">
      <use format="Hets">[&#39;\084&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash085SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash085SQuote1">
      <use format="Hets">[&#39;\085&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash086SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash086SQuote1">
      <use format="Hets">[&#39;\086&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash087SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash087SQuote1">
      <use format="Hets">[&#39;\087&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash088SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash088SQuote1">
      <use format="Hets">[&#39;\088&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash089SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash089SQuote1">
      <use format="Hets">[&#39;\089&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash090SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash090SQuote1">
      <use format="Hets">[&#39;\090&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash091SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash091SQuote1">
      <use format="Hets">[&#39;\091&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash092SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash092SQuote1">
      <use format="Hets">[&#39;\092&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash093SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash093SQuote1">
      <use format="Hets">[&#39;\093&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash094SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash094SQuote1">
      <use format="Hets">[&#39;\094&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash095SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash095SQuote1">
      <use format="Hets">[&#39;\095&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash096SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash096SQuote1">
      <use format="Hets">[&#39;\096&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash097SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash097SQuote1">
      <use format="Hets">[&#39;\097&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash098SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash098SQuote1">
      <use format="Hets">[&#39;\098&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash099SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash099SQuote1">
      <use format="Hets">[&#39;\099&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash100SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash100SQuote1">
      <use format="Hets">[&#39;\100&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash101SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash101SQuote1">
      <use format="Hets">[&#39;\101&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash102SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash102SQuote1">
      <use format="Hets">[&#39;\102&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash103SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash103SQuote1">
      <use format="Hets">[&#39;\103&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash104SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash104SQuote1">
      <use format="Hets">[&#39;\104&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash105SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash105SQuote1">
      <use format="Hets">[&#39;\105&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash106SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash106SQuote1">
      <use format="Hets">[&#39;\106&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash107SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash107SQuote1">
      <use format="Hets">[&#39;\107&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash108SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash108SQuote1">
      <use format="Hets">[&#39;\108&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash109SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash109SQuote1">
      <use format="Hets">[&#39;\109&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash110SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash110SQuote1">
      <use format="Hets">[&#39;\110&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash111SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash111SQuote1">
      <use format="Hets">[&#39;\111&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash112SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash112SQuote1">
      <use format="Hets">[&#39;\112&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash113SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash113SQuote1">
      <use format="Hets">[&#39;\113&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash114SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash114SQuote1">
      <use format="Hets">[&#39;\114&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash115SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash115SQuote1">
      <use format="Hets">[&#39;\115&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash116SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash116SQuote1">
      <use format="Hets">[&#39;\116&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash117SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash117SQuote1">
      <use format="Hets">[&#39;\117&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash118SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash118SQuote1">
      <use format="Hets">[&#39;\118&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash119SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash119SQuote1">
      <use format="Hets">[&#39;\119&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash120SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash120SQuote1">
      <use format="Hets">[&#39;\120&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash121SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash121SQuote1">
      <use format="Hets">[&#39;\121&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash122SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash122SQuote1">
      <use format="Hets">[&#39;\122&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash123SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash123SQuote1">
      <use format="Hets">[&#39;\123&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash124SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash124SQuote1">
      <use format="Hets">[&#39;\124&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash125SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash125SQuote1">
      <use format="Hets">[&#39;\125&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash126SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash126SQuote1">
      <use format="Hets">[&#39;\126&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash127SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash127SQuote1">
      <use format="Hets">[&#39;\127&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash128SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash128SQuote1">
      <use format="Hets">[&#39;\128&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash129SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash129SQuote1">
      <use format="Hets">[&#39;\129&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash130SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash130SQuote1">
      <use format="Hets">[&#39;\130&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash131SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash131SQuote1">
      <use format="Hets">[&#39;\131&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash132SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash132SQuote1">
      <use format="Hets">[&#39;\132&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash133SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash133SQuote1">
      <use format="Hets">[&#39;\133&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash134SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash134SQuote1">
      <use format="Hets">[&#39;\134&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash135SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash135SQuote1">
      <use format="Hets">[&#39;\135&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash136SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash136SQuote1">
      <use format="Hets">[&#39;\136&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash137SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash137SQuote1">
      <use format="Hets">[&#39;\137&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash138SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash138SQuote1">
      <use format="Hets">[&#39;\138&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash139SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash139SQuote1">
      <use format="Hets">[&#39;\139&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash140SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash140SQuote1">
      <use format="Hets">[&#39;\140&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash141SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash141SQuote1">
      <use format="Hets">[&#39;\141&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash142SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash142SQuote1">
      <use format="Hets">[&#39;\142&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash143SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash143SQuote1">
      <use format="Hets">[&#39;\143&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash144SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash144SQuote1">
      <use format="Hets">[&#39;\144&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash145SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash145SQuote1">
      <use format="Hets">[&#39;\145&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash146SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash146SQuote1">
      <use format="Hets">[&#39;\146&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash147SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash147SQuote1">
      <use format="Hets">[&#39;\147&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash148SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash148SQuote1">
      <use format="Hets">[&#39;\148&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash149SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash149SQuote1">
      <use format="Hets">[&#39;\149&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash150SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash150SQuote1">
      <use format="Hets">[&#39;\150&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash151SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash151SQuote1">
      <use format="Hets">[&#39;\151&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash152SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash152SQuote1">
      <use format="Hets">[&#39;\152&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash153SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash153SQuote1">
      <use format="Hets">[&#39;\153&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash154SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash154SQuote1">
      <use format="Hets">[&#39;\154&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash155SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash155SQuote1">
      <use format="Hets">[&#39;\155&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash156SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash156SQuote1">
      <use format="Hets">[&#39;\156&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash157SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash157SQuote1">
      <use format="Hets">[&#39;\157&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash158SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash158SQuote1">
      <use format="Hets">[&#39;\158&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash159SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash159SQuote1">
      <use format="Hets">[&#39;\159&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash160SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash160SQuote1">
      <use format="Hets">[&#39;\160&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash161SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash161SQuote1">
      <use format="Hets">[&#39;\161&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash162SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash162SQuote1">
      <use format="Hets">[&#39;\162&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash163SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash163SQuote1">
      <use format="Hets">[&#39;\163&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash164SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash164SQuote1">
      <use format="Hets">[&#39;\164&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash165SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash165SQuote1">
      <use format="Hets">[&#39;\165&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash166SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash166SQuote1">
      <use format="Hets">[&#39;\166&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash167SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash167SQuote1">
      <use format="Hets">[&#39;\167&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash168SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash168SQuote1">
      <use format="Hets">[&#39;\168&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash169SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash169SQuote1">
      <use format="Hets">[&#39;\169&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash170SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash170SQuote1">
      <use format="Hets">[&#39;\170&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash171SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash171SQuote1">
      <use format="Hets">[&#39;\171&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash172SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash172SQuote1">
      <use format="Hets">[&#39;\172&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash173SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash173SQuote1">
      <use format="Hets">[&#39;\173&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash174SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash174SQuote1">
      <use format="Hets">[&#39;\174&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash175SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash175SQuote1">
      <use format="Hets">[&#39;\175&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash176SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash176SQuote1">
      <use format="Hets">[&#39;\176&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash177SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash177SQuote1">
      <use format="Hets">[&#39;\177&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash178SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash178SQuote1">
      <use format="Hets">[&#39;\178&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash179SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash179SQuote1">
      <use format="Hets">[&#39;\179&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash180SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash180SQuote1">
      <use format="Hets">[&#39;\180&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash181SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash181SQuote1">
      <use format="Hets">[&#39;\181&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash182SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash182SQuote1">
      <use format="Hets">[&#39;\182&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash183SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash183SQuote1">
      <use format="Hets">[&#39;\183&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash184SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash184SQuote1">
      <use format="Hets">[&#39;\184&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash185SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash185SQuote1">
      <use format="Hets">[&#39;\185&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash186SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash186SQuote1">
      <use format="Hets">[&#39;\186&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash187SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash187SQuote1">
      <use format="Hets">[&#39;\187&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash188SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash188SQuote1">
      <use format="Hets">[&#39;\188&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash189SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash189SQuote1">
      <use format="Hets">[&#39;\189&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash190SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash190SQuote1">
      <use format="Hets">[&#39;\190&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash191SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash191SQuote1">
      <use format="Hets">[&#39;\191&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash192SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash192SQuote1">
      <use format="Hets">[&#39;\192&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash193SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash193SQuote1">
      <use format="Hets">[&#39;\193&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash194SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash194SQuote1">
      <use format="Hets">[&#39;\194&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash195SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash195SQuote1">
      <use format="Hets">[&#39;\195&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash196SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash196SQuote1">
      <use format="Hets">[&#39;\196&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash197SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash197SQuote1">
      <use format="Hets">[&#39;\197&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash198SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash198SQuote1">
      <use format="Hets">[&#39;\198&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash199SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash199SQuote1">
      <use format="Hets">[&#39;\199&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash200SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash200SQuote1">
      <use format="Hets">[&#39;\200&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash201SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash201SQuote1">
      <use format="Hets">[&#39;\201&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash202SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash202SQuote1">
      <use format="Hets">[&#39;\202&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash203SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash203SQuote1">
      <use format="Hets">[&#39;\203&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash204SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash204SQuote1">
      <use format="Hets">[&#39;\204&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash205SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash205SQuote1">
      <use format="Hets">[&#39;\205&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash206SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash206SQuote1">
      <use format="Hets">[&#39;\206&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash207SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash207SQuote1">
      <use format="Hets">[&#39;\207&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash208SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash208SQuote1">
      <use format="Hets">[&#39;\208&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash209SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash209SQuote1">
      <use format="Hets">[&#39;\209&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash210SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash210SQuote1">
      <use format="Hets">[&#39;\210&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash211SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash211SQuote1">
      <use format="Hets">[&#39;\211&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash212SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash212SQuote1">
      <use format="Hets">[&#39;\212&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash213SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash213SQuote1">
      <use format="Hets">[&#39;\213&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash214SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash214SQuote1">
      <use format="Hets">[&#39;\214&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash215SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash215SQuote1">
      <use format="Hets">[&#39;\215&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash216SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash216SQuote1">
      <use format="Hets">[&#39;\216&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash217SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash217SQuote1">
      <use format="Hets">[&#39;\217&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash218SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash218SQuote1">
      <use format="Hets">[&#39;\218&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash219SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash219SQuote1">
      <use format="Hets">[&#39;\219&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash220SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash220SQuote1">
      <use format="Hets">[&#39;\220&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash221SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash221SQuote1">
      <use format="Hets">[&#39;\221&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash222SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash222SQuote1">
      <use format="Hets">[&#39;\222&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash223SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash223SQuote1">
      <use format="Hets">[&#39;\223&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash224SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash224SQuote1">
      <use format="Hets">[&#39;\224&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash225SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash225SQuote1">
      <use format="Hets">[&#39;\225&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash226SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash226SQuote1">
      <use format="Hets">[&#39;\226&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash227SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash227SQuote1">
      <use format="Hets">[&#39;\227&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash228SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash228SQuote1">
      <use format="Hets">[&#39;\228&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash229SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash229SQuote1">
      <use format="Hets">[&#39;\229&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash230SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash230SQuote1">
      <use format="Hets">[&#39;\230&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash231SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash231SQuote1">
      <use format="Hets">[&#39;\231&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash232SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash232SQuote1">
      <use format="Hets">[&#39;\232&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash233SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash233SQuote1">
      <use format="Hets">[&#39;\233&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash234SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash234SQuote1">
      <use format="Hets">[&#39;\234&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash235SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash235SQuote1">
      <use format="Hets">[&#39;\235&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash236SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash236SQuote1">
      <use format="Hets">[&#39;\236&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash237SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash237SQuote1">
      <use format="Hets">[&#39;\237&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash238SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash238SQuote1">
      <use format="Hets">[&#39;\238&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash239SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash239SQuote1">
      <use format="Hets">[&#39;\239&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash240SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash240SQuote1">
      <use format="Hets">[&#39;\240&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash241SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash241SQuote1">
      <use format="Hets">[&#39;\241&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash242SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash242SQuote1">
      <use format="Hets">[&#39;\242&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash243SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash243SQuote1">
      <use format="Hets">[&#39;\243&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash244SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash244SQuote1">
      <use format="Hets">[&#39;\244&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash245SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash245SQuote1">
      <use format="Hets">[&#39;\245&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash246SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash246SQuote1">
      <use format="Hets">[&#39;\246&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash247SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash247SQuote1">
      <use format="Hets">[&#39;\247&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash248SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash248SQuote1">
      <use format="Hets">[&#39;\248&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash249SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash249SQuote1">
      <use format="Hets">[&#39;\249&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash250SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash250SQuote1">
      <use format="Hets">[&#39;\250&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash251SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash251SQuote1">
      <use format="Hets">[&#39;\251&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash252SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash252SQuote1">
      <use format="Hets">[&#39;\252&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash253SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash253SQuote1">
      <use format="Hets">[&#39;\253&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash254SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash254SQuote1">
      <use format="Hets">[&#39;\254&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslash255SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslash255SQuote1">
      <use format="Hets">[&#39;\255&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashQuestSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashQuestSQuote1">
      <use format="Hets">[&#39;\?&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashBackslashSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashBackslashSQuote1">
      <use format="Hets">[&#39;\\&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashaSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashaSQuote1">
      <use format="Hets">[&#39;\a&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashbSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashbSQuote1">
      <use format="Hets">[&#39;\b&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashfSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashfSQuote1">
      <use format="Hets">[&#39;\f&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashnSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashnSQuote1">
      <use format="Hets">[&#39;\n&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho000SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho000SQuote1">
      <use format="Hets">[&#39;\o000&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho001SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho001SQuote1">
      <use format="Hets">[&#39;\o001&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho002SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho002SQuote1">
      <use format="Hets">[&#39;\o002&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho003SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho003SQuote1">
      <use format="Hets">[&#39;\o003&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho004SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho004SQuote1">
      <use format="Hets">[&#39;\o004&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho005SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho005SQuote1">
      <use format="Hets">[&#39;\o005&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho006SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho006SQuote1">
      <use format="Hets">[&#39;\o006&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho007SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho007SQuote1">
      <use format="Hets">[&#39;\o007&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho010SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho010SQuote1">
      <use format="Hets">[&#39;\o010&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho011SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho011SQuote1">
      <use format="Hets">[&#39;\o011&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho012SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho012SQuote1">
      <use format="Hets">[&#39;\o012&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho013SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho013SQuote1">
      <use format="Hets">[&#39;\o013&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho014SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho014SQuote1">
      <use format="Hets">[&#39;\o014&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho015SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho015SQuote1">
      <use format="Hets">[&#39;\o015&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho016SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho016SQuote1">
      <use format="Hets">[&#39;\o016&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho017SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho017SQuote1">
      <use format="Hets">[&#39;\o017&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho020SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho020SQuote1">
      <use format="Hets">[&#39;\o020&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho021SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho021SQuote1">
      <use format="Hets">[&#39;\o021&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho022SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho022SQuote1">
      <use format="Hets">[&#39;\o022&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho023SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho023SQuote1">
      <use format="Hets">[&#39;\o023&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho024SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho024SQuote1">
      <use format="Hets">[&#39;\o024&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho025SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho025SQuote1">
      <use format="Hets">[&#39;\o025&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho026SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho026SQuote1">
      <use format="Hets">[&#39;\o026&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho027SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho027SQuote1">
      <use format="Hets">[&#39;\o027&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho030SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho030SQuote1">
      <use format="Hets">[&#39;\o030&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho031SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho031SQuote1">
      <use format="Hets">[&#39;\o031&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho032SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho032SQuote1">
      <use format="Hets">[&#39;\o032&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho033SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho033SQuote1">
      <use format="Hets">[&#39;\o033&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho034SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho034SQuote1">
      <use format="Hets">[&#39;\o034&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho035SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho035SQuote1">
      <use format="Hets">[&#39;\o035&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho036SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho036SQuote1">
      <use format="Hets">[&#39;\o036&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho037SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho037SQuote1">
      <use format="Hets">[&#39;\o037&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho040SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho040SQuote1">
      <use format="Hets">[&#39;\o040&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho041SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho041SQuote1">
      <use format="Hets">[&#39;\o041&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho042SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho042SQuote1">
      <use format="Hets">[&#39;\o042&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho043SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho043SQuote1">
      <use format="Hets">[&#39;\o043&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho044SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho044SQuote1">
      <use format="Hets">[&#39;\o044&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho045SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho045SQuote1">
      <use format="Hets">[&#39;\o045&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho046SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho046SQuote1">
      <use format="Hets">[&#39;\o046&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho047SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho047SQuote1">
      <use format="Hets">[&#39;\o047&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho050SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho050SQuote1">
      <use format="Hets">[&#39;\o050&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho051SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho051SQuote1">
      <use format="Hets">[&#39;\o051&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho052SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho052SQuote1">
      <use format="Hets">[&#39;\o052&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho053SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho053SQuote1">
      <use format="Hets">[&#39;\o053&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho054SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho054SQuote1">
      <use format="Hets">[&#39;\o054&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho055SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho055SQuote1">
      <use format="Hets">[&#39;\o055&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho056SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho056SQuote1">
      <use format="Hets">[&#39;\o056&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho057SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho057SQuote1">
      <use format="Hets">[&#39;\o057&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho060SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho060SQuote1">
      <use format="Hets">[&#39;\o060&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho061SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho061SQuote1">
      <use format="Hets">[&#39;\o061&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho062SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho062SQuote1">
      <use format="Hets">[&#39;\o062&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho063SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho063SQuote1">
      <use format="Hets">[&#39;\o063&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho064SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho064SQuote1">
      <use format="Hets">[&#39;\o064&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho065SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho065SQuote1">
      <use format="Hets">[&#39;\o065&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho066SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho066SQuote1">
      <use format="Hets">[&#39;\o066&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho067SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho067SQuote1">
      <use format="Hets">[&#39;\o067&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho070SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho070SQuote1">
      <use format="Hets">[&#39;\o070&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho071SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho071SQuote1">
      <use format="Hets">[&#39;\o071&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho072SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho072SQuote1">
      <use format="Hets">[&#39;\o072&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho073SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho073SQuote1">
      <use format="Hets">[&#39;\o073&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho074SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho074SQuote1">
      <use format="Hets">[&#39;\o074&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho075SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho075SQuote1">
      <use format="Hets">[&#39;\o075&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho076SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho076SQuote1">
      <use format="Hets">[&#39;\o076&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho077SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho077SQuote1">
      <use format="Hets">[&#39;\o077&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho100SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho100SQuote1">
      <use format="Hets">[&#39;\o100&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho101SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho101SQuote1">
      <use format="Hets">[&#39;\o101&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho102SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho102SQuote1">
      <use format="Hets">[&#39;\o102&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho103SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho103SQuote1">
      <use format="Hets">[&#39;\o103&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho104SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho104SQuote1">
      <use format="Hets">[&#39;\o104&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho105SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho105SQuote1">
      <use format="Hets">[&#39;\o105&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho106SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho106SQuote1">
      <use format="Hets">[&#39;\o106&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho107SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho107SQuote1">
      <use format="Hets">[&#39;\o107&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho110SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho110SQuote1">
      <use format="Hets">[&#39;\o110&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho111SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho111SQuote1">
      <use format="Hets">[&#39;\o111&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho112SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho112SQuote1">
      <use format="Hets">[&#39;\o112&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho113SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho113SQuote1">
      <use format="Hets">[&#39;\o113&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho114SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho114SQuote1">
      <use format="Hets">[&#39;\o114&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho115SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho115SQuote1">
      <use format="Hets">[&#39;\o115&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho116SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho116SQuote1">
      <use format="Hets">[&#39;\o116&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho117SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho117SQuote1">
      <use format="Hets">[&#39;\o117&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho120SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho120SQuote1">
      <use format="Hets">[&#39;\o120&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho121SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho121SQuote1">
      <use format="Hets">[&#39;\o121&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho122SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho122SQuote1">
      <use format="Hets">[&#39;\o122&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho123SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho123SQuote1">
      <use format="Hets">[&#39;\o123&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho124SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho124SQuote1">
      <use format="Hets">[&#39;\o124&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho125SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho125SQuote1">
      <use format="Hets">[&#39;\o125&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho126SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho126SQuote1">
      <use format="Hets">[&#39;\o126&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho127SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho127SQuote1">
      <use format="Hets">[&#39;\o127&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho130SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho130SQuote1">
      <use format="Hets">[&#39;\o130&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho131SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho131SQuote1">
      <use format="Hets">[&#39;\o131&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho132SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho132SQuote1">
      <use format="Hets">[&#39;\o132&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho133SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho133SQuote1">
      <use format="Hets">[&#39;\o133&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho134SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho134SQuote1">
      <use format="Hets">[&#39;\o134&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho135SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho135SQuote1">
      <use format="Hets">[&#39;\o135&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho136SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho136SQuote1">
      <use format="Hets">[&#39;\o136&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho137SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho137SQuote1">
      <use format="Hets">[&#39;\o137&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho140SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho140SQuote1">
      <use format="Hets">[&#39;\o140&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho141SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho141SQuote1">
      <use format="Hets">[&#39;\o141&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho142SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho142SQuote1">
      <use format="Hets">[&#39;\o142&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho143SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho143SQuote1">
      <use format="Hets">[&#39;\o143&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho144SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho144SQuote1">
      <use format="Hets">[&#39;\o144&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho145SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho145SQuote1">
      <use format="Hets">[&#39;\o145&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho146SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho146SQuote1">
      <use format="Hets">[&#39;\o146&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho147SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho147SQuote1">
      <use format="Hets">[&#39;\o147&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho150SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho150SQuote1">
      <use format="Hets">[&#39;\o150&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho151SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho151SQuote1">
      <use format="Hets">[&#39;\o151&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho152SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho152SQuote1">
      <use format="Hets">[&#39;\o152&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho153SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho153SQuote1">
      <use format="Hets">[&#39;\o153&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho154SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho154SQuote1">
      <use format="Hets">[&#39;\o154&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho155SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho155SQuote1">
      <use format="Hets">[&#39;\o155&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho156SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho156SQuote1">
      <use format="Hets">[&#39;\o156&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho157SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho157SQuote1">
      <use format="Hets">[&#39;\o157&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho160SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho160SQuote1">
      <use format="Hets">[&#39;\o160&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho161SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho161SQuote1">
      <use format="Hets">[&#39;\o161&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho162SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho162SQuote1">
      <use format="Hets">[&#39;\o162&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho163SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho163SQuote1">
      <use format="Hets">[&#39;\o163&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho164SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho164SQuote1">
      <use format="Hets">[&#39;\o164&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho165SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho165SQuote1">
      <use format="Hets">[&#39;\o165&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho166SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho166SQuote1">
      <use format="Hets">[&#39;\o166&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho167SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho167SQuote1">
      <use format="Hets">[&#39;\o167&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho170SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho170SQuote1">
      <use format="Hets">[&#39;\o170&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho171SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho171SQuote1">
      <use format="Hets">[&#39;\o171&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho172SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho172SQuote1">
      <use format="Hets">[&#39;\o172&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho173SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho173SQuote1">
      <use format="Hets">[&#39;\o173&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho174SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho174SQuote1">
      <use format="Hets">[&#39;\o174&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho175SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho175SQuote1">
      <use format="Hets">[&#39;\o175&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho176SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho176SQuote1">
      <use format="Hets">[&#39;\o176&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho177SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho177SQuote1">
      <use format="Hets">[&#39;\o177&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho200SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho200SQuote1">
      <use format="Hets">[&#39;\o200&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho201SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho201SQuote1">
      <use format="Hets">[&#39;\o201&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho202SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho202SQuote1">
      <use format="Hets">[&#39;\o202&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho203SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho203SQuote1">
      <use format="Hets">[&#39;\o203&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho204SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho204SQuote1">
      <use format="Hets">[&#39;\o204&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho205SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho205SQuote1">
      <use format="Hets">[&#39;\o205&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho206SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho206SQuote1">
      <use format="Hets">[&#39;\o206&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho207SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho207SQuote1">
      <use format="Hets">[&#39;\o207&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho210SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho210SQuote1">
      <use format="Hets">[&#39;\o210&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho211SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho211SQuote1">
      <use format="Hets">[&#39;\o211&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho212SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho212SQuote1">
      <use format="Hets">[&#39;\o212&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho213SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho213SQuote1">
      <use format="Hets">[&#39;\o213&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho214SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho214SQuote1">
      <use format="Hets">[&#39;\o214&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho215SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho215SQuote1">
      <use format="Hets">[&#39;\o215&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho216SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho216SQuote1">
      <use format="Hets">[&#39;\o216&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho217SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho217SQuote1">
      <use format="Hets">[&#39;\o217&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho220SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho220SQuote1">
      <use format="Hets">[&#39;\o220&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho221SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho221SQuote1">
      <use format="Hets">[&#39;\o221&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho222SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho222SQuote1">
      <use format="Hets">[&#39;\o222&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho223SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho223SQuote1">
      <use format="Hets">[&#39;\o223&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho224SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho224SQuote1">
      <use format="Hets">[&#39;\o224&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho225SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho225SQuote1">
      <use format="Hets">[&#39;\o225&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho226SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho226SQuote1">
      <use format="Hets">[&#39;\o226&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho227SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho227SQuote1">
      <use format="Hets">[&#39;\o227&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho230SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho230SQuote1">
      <use format="Hets">[&#39;\o230&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho231SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho231SQuote1">
      <use format="Hets">[&#39;\o231&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho232SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho232SQuote1">
      <use format="Hets">[&#39;\o232&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho233SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho233SQuote1">
      <use format="Hets">[&#39;\o233&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho234SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho234SQuote1">
      <use format="Hets">[&#39;\o234&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho235SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho235SQuote1">
      <use format="Hets">[&#39;\o235&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho236SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho236SQuote1">
      <use format="Hets">[&#39;\o236&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho237SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho237SQuote1">
      <use format="Hets">[&#39;\o237&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho240SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho240SQuote1">
      <use format="Hets">[&#39;\o240&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho241SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho241SQuote1">
      <use format="Hets">[&#39;\o241&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho242SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho242SQuote1">
      <use format="Hets">[&#39;\o242&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho243SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho243SQuote1">
      <use format="Hets">[&#39;\o243&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho244SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho244SQuote1">
      <use format="Hets">[&#39;\o244&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho245SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho245SQuote1">
      <use format="Hets">[&#39;\o245&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho246SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho246SQuote1">
      <use format="Hets">[&#39;\o246&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho247SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho247SQuote1">
      <use format="Hets">[&#39;\o247&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho250SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho250SQuote1">
      <use format="Hets">[&#39;\o250&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho251SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho251SQuote1">
      <use format="Hets">[&#39;\o251&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho252SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho252SQuote1">
      <use format="Hets">[&#39;\o252&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho253SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho253SQuote1">
      <use format="Hets">[&#39;\o253&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho254SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho254SQuote1">
      <use format="Hets">[&#39;\o254&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho255SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho255SQuote1">
      <use format="Hets">[&#39;\o255&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho256SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho256SQuote1">
      <use format="Hets">[&#39;\o256&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho257SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho257SQuote1">
      <use format="Hets">[&#39;\o257&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho260SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho260SQuote1">
      <use format="Hets">[&#39;\o260&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho261SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho261SQuote1">
      <use format="Hets">[&#39;\o261&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho262SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho262SQuote1">
      <use format="Hets">[&#39;\o262&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho263SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho263SQuote1">
      <use format="Hets">[&#39;\o263&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho264SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho264SQuote1">
      <use format="Hets">[&#39;\o264&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho265SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho265SQuote1">
      <use format="Hets">[&#39;\o265&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho266SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho266SQuote1">
      <use format="Hets">[&#39;\o266&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho267SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho267SQuote1">
      <use format="Hets">[&#39;\o267&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho270SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho270SQuote1">
      <use format="Hets">[&#39;\o270&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho271SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho271SQuote1">
      <use format="Hets">[&#39;\o271&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho272SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho272SQuote1">
      <use format="Hets">[&#39;\o272&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho273SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho273SQuote1">
      <use format="Hets">[&#39;\o273&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho274SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho274SQuote1">
      <use format="Hets">[&#39;\o274&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho275SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho275SQuote1">
      <use format="Hets">[&#39;\o275&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho276SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho276SQuote1">
      <use format="Hets">[&#39;\o276&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho277SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho277SQuote1">
      <use format="Hets">[&#39;\o277&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho300SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho300SQuote1">
      <use format="Hets">[&#39;\o300&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho301SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho301SQuote1">
      <use format="Hets">[&#39;\o301&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho302SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho302SQuote1">
      <use format="Hets">[&#39;\o302&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho303SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho303SQuote1">
      <use format="Hets">[&#39;\o303&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho304SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho304SQuote1">
      <use format="Hets">[&#39;\o304&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho305SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho305SQuote1">
      <use format="Hets">[&#39;\o305&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho306SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho306SQuote1">
      <use format="Hets">[&#39;\o306&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho307SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho307SQuote1">
      <use format="Hets">[&#39;\o307&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho310SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho310SQuote1">
      <use format="Hets">[&#39;\o310&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho311SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho311SQuote1">
      <use format="Hets">[&#39;\o311&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho312SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho312SQuote1">
      <use format="Hets">[&#39;\o312&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho313SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho313SQuote1">
      <use format="Hets">[&#39;\o313&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho314SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho314SQuote1">
      <use format="Hets">[&#39;\o314&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho315SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho315SQuote1">
      <use format="Hets">[&#39;\o315&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho316SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho316SQuote1">
      <use format="Hets">[&#39;\o316&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho317SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho317SQuote1">
      <use format="Hets">[&#39;\o317&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho320SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho320SQuote1">
      <use format="Hets">[&#39;\o320&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho321SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho321SQuote1">
      <use format="Hets">[&#39;\o321&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho322SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho322SQuote1">
      <use format="Hets">[&#39;\o322&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho323SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho323SQuote1">
      <use format="Hets">[&#39;\o323&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho324SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho324SQuote1">
      <use format="Hets">[&#39;\o324&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho325SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho325SQuote1">
      <use format="Hets">[&#39;\o325&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho326SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho326SQuote1">
      <use format="Hets">[&#39;\o326&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho327SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho327SQuote1">
      <use format="Hets">[&#39;\o327&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho330SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho330SQuote1">
      <use format="Hets">[&#39;\o330&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho331SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho331SQuote1">
      <use format="Hets">[&#39;\o331&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho332SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho332SQuote1">
      <use format="Hets">[&#39;\o332&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho333SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho333SQuote1">
      <use format="Hets">[&#39;\o333&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho334SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho334SQuote1">
      <use format="Hets">[&#39;\o334&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho335SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho335SQuote1">
      <use format="Hets">[&#39;\o335&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho336SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho336SQuote1">
      <use format="Hets">[&#39;\o336&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho337SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho337SQuote1">
      <use format="Hets">[&#39;\o337&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho340SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho340SQuote1">
      <use format="Hets">[&#39;\o340&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho341SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho341SQuote1">
      <use format="Hets">[&#39;\o341&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho342SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho342SQuote1">
      <use format="Hets">[&#39;\o342&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho343SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho343SQuote1">
      <use format="Hets">[&#39;\o343&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho344SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho344SQuote1">
      <use format="Hets">[&#39;\o344&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho345SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho345SQuote1">
      <use format="Hets">[&#39;\o345&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho346SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho346SQuote1">
      <use format="Hets">[&#39;\o346&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho347SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho347SQuote1">
      <use format="Hets">[&#39;\o347&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho350SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho350SQuote1">
      <use format="Hets">[&#39;\o350&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho351SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho351SQuote1">
      <use format="Hets">[&#39;\o351&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho352SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho352SQuote1">
      <use format="Hets">[&#39;\o352&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho353SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho353SQuote1">
      <use format="Hets">[&#39;\o353&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho354SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho354SQuote1">
      <use format="Hets">[&#39;\o354&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho355SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho355SQuote1">
      <use format="Hets">[&#39;\o355&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho356SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho356SQuote1">
      <use format="Hets">[&#39;\o356&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho357SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho357SQuote1">
      <use format="Hets">[&#39;\o357&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho360SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho360SQuote1">
      <use format="Hets">[&#39;\o360&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho361SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho361SQuote1">
      <use format="Hets">[&#39;\o361&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho362SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho362SQuote1">
      <use format="Hets">[&#39;\o362&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho363SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho363SQuote1">
      <use format="Hets">[&#39;\o363&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho364SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho364SQuote1">
      <use format="Hets">[&#39;\o364&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho365SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho365SQuote1">
      <use format="Hets">[&#39;\o365&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho366SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho366SQuote1">
      <use format="Hets">[&#39;\o366&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho367SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho367SQuote1">
      <use format="Hets">[&#39;\o367&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho370SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho370SQuote1">
      <use format="Hets">[&#39;\o370&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho371SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho371SQuote1">
      <use format="Hets">[&#39;\o371&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho372SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho372SQuote1">
      <use format="Hets">[&#39;\o372&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho373SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho373SQuote1">
      <use format="Hets">[&#39;\o373&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho374SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho374SQuote1">
      <use format="Hets">[&#39;\o374&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho375SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho375SQuote1">
      <use format="Hets">[&#39;\o375&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho376SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho376SQuote1">
      <use format="Hets">[&#39;\o376&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslasho377SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslasho377SQuote1">
      <use format="Hets">[&#39;\o377&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashrSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashrSQuote1">
      <use format="Hets">[&#39;\r&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashtSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashtSQuote1">
      <use format="Hets">[&#39;\t&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashvSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashvSQuote1">
      <use format="Hets">[&#39;\v&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx00SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx00SQuote1">
      <use format="Hets">[&#39;\x00&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx01SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx01SQuote1">
      <use format="Hets">[&#39;\x01&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx02SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx02SQuote1">
      <use format="Hets">[&#39;\x02&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx03SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx03SQuote1">
      <use format="Hets">[&#39;\x03&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx04SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx04SQuote1">
      <use format="Hets">[&#39;\x04&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx05SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx05SQuote1">
      <use format="Hets">[&#39;\x05&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx06SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx06SQuote1">
      <use format="Hets">[&#39;\x06&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx07SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx07SQuote1">
      <use format="Hets">[&#39;\x07&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx08SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx08SQuote1">
      <use format="Hets">[&#39;\x08&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx09SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx09SQuote1">
      <use format="Hets">[&#39;\x09&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx0ASQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx0ASQuote1">
      <use format="Hets">[&#39;\x0A&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx0BSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx0BSQuote1">
      <use format="Hets">[&#39;\x0B&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx0CSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx0CSQuote1">
      <use format="Hets">[&#39;\x0C&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx0DSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx0DSQuote1">
      <use format="Hets">[&#39;\x0D&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx0ESQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx0ESQuote1">
      <use format="Hets">[&#39;\x0E&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx0FSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx0FSQuote1">
      <use format="Hets">[&#39;\x0F&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx10SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx10SQuote1">
      <use format="Hets">[&#39;\x10&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx11SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx11SQuote1">
      <use format="Hets">[&#39;\x11&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx12SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx12SQuote1">
      <use format="Hets">[&#39;\x12&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx13SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx13SQuote1">
      <use format="Hets">[&#39;\x13&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx14SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx14SQuote1">
      <use format="Hets">[&#39;\x14&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx15SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx15SQuote1">
      <use format="Hets">[&#39;\x15&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx16SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx16SQuote1">
      <use format="Hets">[&#39;\x16&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx17SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx17SQuote1">
      <use format="Hets">[&#39;\x17&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx18SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx18SQuote1">
      <use format="Hets">[&#39;\x18&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx19SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx19SQuote1">
      <use format="Hets">[&#39;\x19&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx1ASQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx1ASQuote1">
      <use format="Hets">[&#39;\x1A&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx1BSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx1BSQuote1">
      <use format="Hets">[&#39;\x1B&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx1CSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx1CSQuote1">
      <use format="Hets">[&#39;\x1C&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx1DSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx1DSQuote1">
      <use format="Hets">[&#39;\x1D&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx1ESQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx1ESQuote1">
      <use format="Hets">[&#39;\x1E&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx1FSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx1FSQuote1">
      <use format="Hets">[&#39;\x1F&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx20SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx20SQuote1">
      <use format="Hets">[&#39;\x20&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx21SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx21SQuote1">
      <use format="Hets">[&#39;\x21&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx22SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx22SQuote1">
      <use format="Hets">[&#39;\x22&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx23SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx23SQuote1">
      <use format="Hets">[&#39;\x23&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx24SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx24SQuote1">
      <use format="Hets">[&#39;\x24&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx25SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx25SQuote1">
      <use format="Hets">[&#39;\x25&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx26SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx26SQuote1">
      <use format="Hets">[&#39;\x26&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx27SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx27SQuote1">
      <use format="Hets">[&#39;\x27&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx28SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx28SQuote1">
      <use format="Hets">[&#39;\x28&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx29SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx29SQuote1">
      <use format="Hets">[&#39;\x29&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx2ASQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx2ASQuote1">
      <use format="Hets">[&#39;\x2A&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx2BSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx2BSQuote1">
      <use format="Hets">[&#39;\x2B&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx2CSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx2CSQuote1">
      <use format="Hets">[&#39;\x2C&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx2DSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx2DSQuote1">
      <use format="Hets">[&#39;\x2D&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx2ESQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx2ESQuote1">
      <use format="Hets">[&#39;\x2E&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx2FSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx2FSQuote1">
      <use format="Hets">[&#39;\x2F&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx30SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx30SQuote1">
      <use format="Hets">[&#39;\x30&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx31SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx31SQuote1">
      <use format="Hets">[&#39;\x31&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx32SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx32SQuote1">
      <use format="Hets">[&#39;\x32&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx33SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx33SQuote1">
      <use format="Hets">[&#39;\x33&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx34SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx34SQuote1">
      <use format="Hets">[&#39;\x34&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx35SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx35SQuote1">
      <use format="Hets">[&#39;\x35&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx36SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx36SQuote1">
      <use format="Hets">[&#39;\x36&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx37SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx37SQuote1">
      <use format="Hets">[&#39;\x37&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx38SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx38SQuote1">
      <use format="Hets">[&#39;\x38&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx39SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx39SQuote1">
      <use format="Hets">[&#39;\x39&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx3ASQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx3ASQuote1">
      <use format="Hets">[&#39;\x3A&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx3BSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx3BSQuote1">
      <use format="Hets">[&#39;\x3B&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx3CSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx3CSQuote1">
      <use format="Hets">[&#39;\x3C&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx3DSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx3DSQuote1">
      <use format="Hets">[&#39;\x3D&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx3ESQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx3ESQuote1">
      <use format="Hets">[&#39;\x3E&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx3FSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx3FSQuote1">
      <use format="Hets">[&#39;\x3F&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx40SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx40SQuote1">
      <use format="Hets">[&#39;\x40&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx41SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx41SQuote1">
      <use format="Hets">[&#39;\x41&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx42SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx42SQuote1">
      <use format="Hets">[&#39;\x42&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx43SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx43SQuote1">
      <use format="Hets">[&#39;\x43&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx44SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx44SQuote1">
      <use format="Hets">[&#39;\x44&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx45SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx45SQuote1">
      <use format="Hets">[&#39;\x45&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx46SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx46SQuote1">
      <use format="Hets">[&#39;\x46&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx47SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx47SQuote1">
      <use format="Hets">[&#39;\x47&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx48SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx48SQuote1">
      <use format="Hets">[&#39;\x48&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx49SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx49SQuote1">
      <use format="Hets">[&#39;\x49&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx4ASQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx4ASQuote1">
      <use format="Hets">[&#39;\x4A&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx4BSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx4BSQuote1">
      <use format="Hets">[&#39;\x4B&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx4CSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx4CSQuote1">
      <use format="Hets">[&#39;\x4C&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx4DSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx4DSQuote1">
      <use format="Hets">[&#39;\x4D&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx4ESQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx4ESQuote1">
      <use format="Hets">[&#39;\x4E&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx4FSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx4FSQuote1">
      <use format="Hets">[&#39;\x4F&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx50SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx50SQuote1">
      <use format="Hets">[&#39;\x50&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx51SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx51SQuote1">
      <use format="Hets">[&#39;\x51&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx52SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx52SQuote1">
      <use format="Hets">[&#39;\x52&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx53SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx53SQuote1">
      <use format="Hets">[&#39;\x53&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx54SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx54SQuote1">
      <use format="Hets">[&#39;\x54&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx55SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx55SQuote1">
      <use format="Hets">[&#39;\x55&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx56SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx56SQuote1">
      <use format="Hets">[&#39;\x56&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx57SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx57SQuote1">
      <use format="Hets">[&#39;\x57&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx58SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx58SQuote1">
      <use format="Hets">[&#39;\x58&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx59SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx59SQuote1">
      <use format="Hets">[&#39;\x59&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx5ASQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx5ASQuote1">
      <use format="Hets">[&#39;\x5A&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx5BSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx5BSQuote1">
      <use format="Hets">[&#39;\x5B&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx5CSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx5CSQuote1">
      <use format="Hets">[&#39;\x5C&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx5DSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx5DSQuote1">
      <use format="Hets">[&#39;\x5D&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx5ESQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx5ESQuote1">
      <use format="Hets">[&#39;\x5E&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx5FSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx5FSQuote1">
      <use format="Hets">[&#39;\x5F&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx60SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx60SQuote1">
      <use format="Hets">[&#39;\x60&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx61SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx61SQuote1">
      <use format="Hets">[&#39;\x61&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx62SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx62SQuote1">
      <use format="Hets">[&#39;\x62&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx63SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx63SQuote1">
      <use format="Hets">[&#39;\x63&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx64SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx64SQuote1">
      <use format="Hets">[&#39;\x64&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx65SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx65SQuote1">
      <use format="Hets">[&#39;\x65&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx66SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx66SQuote1">
      <use format="Hets">[&#39;\x66&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx67SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx67SQuote1">
      <use format="Hets">[&#39;\x67&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx68SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx68SQuote1">
      <use format="Hets">[&#39;\x68&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx69SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx69SQuote1">
      <use format="Hets">[&#39;\x69&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx6ASQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx6ASQuote1">
      <use format="Hets">[&#39;\x6A&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx6BSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx6BSQuote1">
      <use format="Hets">[&#39;\x6B&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx6CSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx6CSQuote1">
      <use format="Hets">[&#39;\x6C&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx6DSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx6DSQuote1">
      <use format="Hets">[&#39;\x6D&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx6ESQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx6ESQuote1">
      <use format="Hets">[&#39;\x6E&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx6FSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx6FSQuote1">
      <use format="Hets">[&#39;\x6F&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx70SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx70SQuote1">
      <use format="Hets">[&#39;\x70&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx71SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx71SQuote1">
      <use format="Hets">[&#39;\x71&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx72SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx72SQuote1">
      <use format="Hets">[&#39;\x72&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx73SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx73SQuote1">
      <use format="Hets">[&#39;\x73&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx74SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx74SQuote1">
      <use format="Hets">[&#39;\x74&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx75SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx75SQuote1">
      <use format="Hets">[&#39;\x75&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx76SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx76SQuote1">
      <use format="Hets">[&#39;\x76&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx77SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx77SQuote1">
      <use format="Hets">[&#39;\x77&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx78SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx78SQuote1">
      <use format="Hets">[&#39;\x78&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx79SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx79SQuote1">
      <use format="Hets">[&#39;\x79&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx7ASQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx7ASQuote1">
      <use format="Hets">[&#39;\x7A&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx7BSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx7BSQuote1">
      <use format="Hets">[&#39;\x7B&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx7CSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx7CSQuote1">
      <use format="Hets">[&#39;\x7C&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx7DSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx7DSQuote1">
      <use format="Hets">[&#39;\x7D&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx7ESQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx7ESQuote1">
      <use format="Hets">[&#39;\x7E&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx7FSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx7FSQuote1">
      <use format="Hets">[&#39;\x7F&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx80SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx80SQuote1">
      <use format="Hets">[&#39;\x80&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx81SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx81SQuote1">
      <use format="Hets">[&#39;\x81&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx82SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx82SQuote1">
      <use format="Hets">[&#39;\x82&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx83SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx83SQuote1">
      <use format="Hets">[&#39;\x83&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx84SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx84SQuote1">
      <use format="Hets">[&#39;\x84&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx85SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx85SQuote1">
      <use format="Hets">[&#39;\x85&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx86SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx86SQuote1">
      <use format="Hets">[&#39;\x86&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx87SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx87SQuote1">
      <use format="Hets">[&#39;\x87&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx88SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx88SQuote1">
      <use format="Hets">[&#39;\x88&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx89SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx89SQuote1">
      <use format="Hets">[&#39;\x89&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx8ASQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx8ASQuote1">
      <use format="Hets">[&#39;\x8A&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx8BSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx8BSQuote1">
      <use format="Hets">[&#39;\x8B&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx8CSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx8CSQuote1">
      <use format="Hets">[&#39;\x8C&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx8DSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx8DSQuote1">
      <use format="Hets">[&#39;\x8D&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx8ESQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx8ESQuote1">
      <use format="Hets">[&#39;\x8E&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx8FSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx8FSQuote1">
      <use format="Hets">[&#39;\x8F&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx90SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx90SQuote1">
      <use format="Hets">[&#39;\x90&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx91SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx91SQuote1">
      <use format="Hets">[&#39;\x91&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx92SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx92SQuote1">
      <use format="Hets">[&#39;\x92&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx93SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx93SQuote1">
      <use format="Hets">[&#39;\x93&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx94SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx94SQuote1">
      <use format="Hets">[&#39;\x94&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx95SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx95SQuote1">
      <use format="Hets">[&#39;\x95&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx96SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx96SQuote1">
      <use format="Hets">[&#39;\x96&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx97SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx97SQuote1">
      <use format="Hets">[&#39;\x97&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx98SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx98SQuote1">
      <use format="Hets">[&#39;\x98&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx99SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx99SQuote1">
      <use format="Hets">[&#39;\x99&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx9ASQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx9ASQuote1">
      <use format="Hets">[&#39;\x9A&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx9BSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx9BSQuote1">
      <use format="Hets">[&#39;\x9B&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx9CSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx9CSQuote1">
      <use format="Hets">[&#39;\x9C&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx9DSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx9DSQuote1">
      <use format="Hets">[&#39;\x9D&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx9ESQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx9ESQuote1">
      <use format="Hets">[&#39;\x9E&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashx9FSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashx9FSQuote1">
      <use format="Hets">[&#39;\x9F&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxA0SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxA0SQuote1">
      <use format="Hets">[&#39;\xA0&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxA1SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxA1SQuote1">
      <use format="Hets">[&#39;\xA1&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxA2SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxA2SQuote1">
      <use format="Hets">[&#39;\xA2&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxA3SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxA3SQuote1">
      <use format="Hets">[&#39;\xA3&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxA4SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxA4SQuote1">
      <use format="Hets">[&#39;\xA4&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxA5SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxA5SQuote1">
      <use format="Hets">[&#39;\xA5&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxA6SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxA6SQuote1">
      <use format="Hets">[&#39;\xA6&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxA7SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxA7SQuote1">
      <use format="Hets">[&#39;\xA7&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxA8SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxA8SQuote1">
      <use format="Hets">[&#39;\xA8&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxA9SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxA9SQuote1">
      <use format="Hets">[&#39;\xA9&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxAASQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxAASQuote1">
      <use format="Hets">[&#39;\xAA&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxABSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxABSQuote1">
      <use format="Hets">[&#39;\xAB&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxACSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxACSQuote1">
      <use format="Hets">[&#39;\xAC&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxADSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxADSQuote1">
      <use format="Hets">[&#39;\xAD&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxAESQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxAESQuote1">
      <use format="Hets">[&#39;\xAE&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxAFSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxAFSQuote1">
      <use format="Hets">[&#39;\xAF&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxB0SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxB0SQuote1">
      <use format="Hets">[&#39;\xB0&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxB1SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxB1SQuote1">
      <use format="Hets">[&#39;\xB1&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxB2SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxB2SQuote1">
      <use format="Hets">[&#39;\xB2&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxB3SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxB3SQuote1">
      <use format="Hets">[&#39;\xB3&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxB4SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxB4SQuote1">
      <use format="Hets">[&#39;\xB4&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxB5SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxB5SQuote1">
      <use format="Hets">[&#39;\xB5&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxB6SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxB6SQuote1">
      <use format="Hets">[&#39;\xB6&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxB7SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxB7SQuote1">
      <use format="Hets">[&#39;\xB7&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxB8SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxB8SQuote1">
      <use format="Hets">[&#39;\xB8&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxB9SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxB9SQuote1">
      <use format="Hets">[&#39;\xB9&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxBASQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxBASQuote1">
      <use format="Hets">[&#39;\xBA&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxBBSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxBBSQuote1">
      <use format="Hets">[&#39;\xBB&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxBCSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxBCSQuote1">
      <use format="Hets">[&#39;\xBC&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxBDSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxBDSQuote1">
      <use format="Hets">[&#39;\xBD&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxBESQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxBESQuote1">
      <use format="Hets">[&#39;\xBE&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxBFSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxBFSQuote1">
      <use format="Hets">[&#39;\xBF&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxC0SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxC0SQuote1">
      <use format="Hets">[&#39;\xC0&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxC1SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxC1SQuote1">
      <use format="Hets">[&#39;\xC1&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxC2SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxC2SQuote1">
      <use format="Hets">[&#39;\xC2&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxC3SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxC3SQuote1">
      <use format="Hets">[&#39;\xC3&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxC4SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxC4SQuote1">
      <use format="Hets">[&#39;\xC4&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxC5SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxC5SQuote1">
      <use format="Hets">[&#39;\xC5&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxC6SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxC6SQuote1">
      <use format="Hets">[&#39;\xC6&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxC7SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxC7SQuote1">
      <use format="Hets">[&#39;\xC7&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxC8SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxC8SQuote1">
      <use format="Hets">[&#39;\xC8&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxC9SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxC9SQuote1">
      <use format="Hets">[&#39;\xC9&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxCASQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxCASQuote1">
      <use format="Hets">[&#39;\xCA&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxCBSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxCBSQuote1">
      <use format="Hets">[&#39;\xCB&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxCCSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxCCSQuote1">
      <use format="Hets">[&#39;\xCC&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxCDSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxCDSQuote1">
      <use format="Hets">[&#39;\xCD&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxCESQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxCESQuote1">
      <use format="Hets">[&#39;\xCE&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxCFSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxCFSQuote1">
      <use format="Hets">[&#39;\xCF&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxD0SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxD0SQuote1">
      <use format="Hets">[&#39;\xD0&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxD1SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxD1SQuote1">
      <use format="Hets">[&#39;\xD1&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxD2SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxD2SQuote1">
      <use format="Hets">[&#39;\xD2&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxD3SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxD3SQuote1">
      <use format="Hets">[&#39;\xD3&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxD4SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxD4SQuote1">
      <use format="Hets">[&#39;\xD4&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxD5SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxD5SQuote1">
      <use format="Hets">[&#39;\xD5&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxD6SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxD6SQuote1">
      <use format="Hets">[&#39;\xD6&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxD7SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxD7SQuote1">
      <use format="Hets">[&#39;\xD7&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxD8SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxD8SQuote1">
      <use format="Hets">[&#39;\xD8&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxD9SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxD9SQuote1">
      <use format="Hets">[&#39;\xD9&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxDASQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxDASQuote1">
      <use format="Hets">[&#39;\xDA&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxDBSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxDBSQuote1">
      <use format="Hets">[&#39;\xDB&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxDCSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxDCSQuote1">
      <use format="Hets">[&#39;\xDC&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxDDSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxDDSQuote1">
      <use format="Hets">[&#39;\xDD&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxDESQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxDESQuote1">
      <use format="Hets">[&#39;\xDE&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxDFSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxDFSQuote1">
      <use format="Hets">[&#39;\xDF&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxE0SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxE0SQuote1">
      <use format="Hets">[&#39;\xE0&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxE1SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxE1SQuote1">
      <use format="Hets">[&#39;\xE1&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxE2SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxE2SQuote1">
      <use format="Hets">[&#39;\xE2&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxE3SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxE3SQuote1">
      <use format="Hets">[&#39;\xE3&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxE4SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxE4SQuote1">
      <use format="Hets">[&#39;\xE4&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxE5SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxE5SQuote1">
      <use format="Hets">[&#39;\xE5&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxE6SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxE6SQuote1">
      <use format="Hets">[&#39;\xE6&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxE7SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxE7SQuote1">
      <use format="Hets">[&#39;\xE7&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxE8SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxE8SQuote1">
      <use format="Hets">[&#39;\xE8&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxE9SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxE9SQuote1">
      <use format="Hets">[&#39;\xE9&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxEASQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxEASQuote1">
      <use format="Hets">[&#39;\xEA&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxEBSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxEBSQuote1">
      <use format="Hets">[&#39;\xEB&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxECSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxECSQuote1">
      <use format="Hets">[&#39;\xEC&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxEDSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxEDSQuote1">
      <use format="Hets">[&#39;\xED&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxEESQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxEESQuote1">
      <use format="Hets">[&#39;\xEE&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxEFSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxEFSQuote1">
      <use format="Hets">[&#39;\xEF&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxF0SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxF0SQuote1">
      <use format="Hets">[&#39;\xF0&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxF1SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxF1SQuote1">
      <use format="Hets">[&#39;\xF1&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxF2SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxF2SQuote1">
      <use format="Hets">[&#39;\xF2&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxF3SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxF3SQuote1">
      <use format="Hets">[&#39;\xF3&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxF4SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxF4SQuote1">
      <use format="Hets">[&#39;\xF4&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxF5SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxF5SQuote1">
      <use format="Hets">[&#39;\xF5&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxF6SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxF6SQuote1">
      <use format="Hets">[&#39;\xF6&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxF7SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxF7SQuote1">
      <use format="Hets">[&#39;\xF7&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxF8SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxF8SQuote1">
      <use format="Hets">[&#39;\xF8&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxF9SQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxF9SQuote1">
      <use format="Hets">[&#39;\xF9&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxFASQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxFASQuote1">
      <use format="Hets">[&#39;\xFA&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxFBSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxFBSQuote1">
      <use format="Hets">[&#39;\xFB&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxFCSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxFCSQuote1">
      <use format="Hets">[&#39;\xFC&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxFDSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxFDSQuote1">
      <use format="Hets">[&#39;\xFD&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxFESQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxFESQuote1">
      <use format="Hets">[&#39;\xFE&#39;]</use>
    </presentation>
    <symbol name="SQuoteBackslashxFFSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBackslashxFFSQuote1">
      <use format="Hets">[&#39;\xFF&#39;]</use>
    </presentation>
    <symbol name="SQuoteSBrackCloseSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSBrackCloseSQuote1">
      <use format="Hets">[&#39;]&#39;]</use>
    </presentation>
    <symbol name="SQuotePowerSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotePowerSQuote1">
      <use format="Hets">[&#39;^&#39;]</use>
    </presentation>
    <symbol name="SQuote_SQuote3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuote_SQuote3">
      <use format="Hets">[&#39;_&#39;]</use>
    </presentation>
    <symbol name="SQuoteAccGravSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteAccGravSQuote1">
      <use format="Hets">[&#39;`&#39;]</use>
    </presentation>
    <symbol name="SQuoteaSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteaSQuote1">
      <use format="Hets">[&#39;a&#39;]</use>
    </presentation>
    <symbol name="SQuotebSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotebSQuote1">
      <use format="Hets">[&#39;b&#39;]</use>
    </presentation>
    <symbol name="SQuotecSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotecSQuote1">
      <use format="Hets">[&#39;c&#39;]</use>
    </presentation>
    <symbol name="SQuotedSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotedSQuote1">
      <use format="Hets">[&#39;d&#39;]</use>
    </presentation>
    <symbol name="SQuoteeSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteeSQuote1">
      <use format="Hets">[&#39;e&#39;]</use>
    </presentation>
    <symbol name="SQuotefSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotefSQuote1">
      <use format="Hets">[&#39;f&#39;]</use>
    </presentation>
    <symbol name="SQuotegSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotegSQuote1">
      <use format="Hets">[&#39;g&#39;]</use>
    </presentation>
    <symbol name="SQuotehSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotehSQuote1">
      <use format="Hets">[&#39;h&#39;]</use>
    </presentation>
    <symbol name="SQuoteiSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteiSQuote1">
      <use format="Hets">[&#39;i&#39;]</use>
    </presentation>
    <symbol name="SQuotejSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotejSQuote1">
      <use format="Hets">[&#39;j&#39;]</use>
    </presentation>
    <symbol name="SQuotekSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotekSQuote1">
      <use format="Hets">[&#39;k&#39;]</use>
    </presentation>
    <symbol name="SQuotelSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotelSQuote1">
      <use format="Hets">[&#39;l&#39;]</use>
    </presentation>
    <symbol name="SQuotemSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotemSQuote1">
      <use format="Hets">[&#39;m&#39;]</use>
    </presentation>
    <symbol name="SQuotenSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotenSQuote1">
      <use format="Hets">[&#39;n&#39;]</use>
    </presentation>
    <symbol name="SQuoteoSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteoSQuote1">
      <use format="Hets">[&#39;o&#39;]</use>
    </presentation>
    <symbol name="SQuotepSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotepSQuote1">
      <use format="Hets">[&#39;p&#39;]</use>
    </presentation>
    <symbol name="SQuoteqSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteqSQuote1">
      <use format="Hets">[&#39;q&#39;]</use>
    </presentation>
    <symbol name="SQuoterSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoterSQuote1">
      <use format="Hets">[&#39;r&#39;]</use>
    </presentation>
    <symbol name="SQuotesSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotesSQuote1">
      <use format="Hets">[&#39;s&#39;]</use>
    </presentation>
    <symbol name="SQuotetSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotetSQuote1">
      <use format="Hets">[&#39;t&#39;]</use>
    </presentation>
    <symbol name="SQuoteuSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteuSQuote1">
      <use format="Hets">[&#39;u&#39;]</use>
    </presentation>
    <symbol name="SQuotevSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotevSQuote1">
      <use format="Hets">[&#39;v&#39;]</use>
    </presentation>
    <symbol name="SQuotewSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotewSQuote1">
      <use format="Hets">[&#39;w&#39;]</use>
    </presentation>
    <symbol name="SQuotexSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotexSQuote1">
      <use format="Hets">[&#39;x&#39;]</use>
    </presentation>
    <symbol name="SQuoteySQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteySQuote1">
      <use format="Hets">[&#39;y&#39;]</use>
    </presentation>
    <symbol name="SQuotezSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuotezSQuote1">
      <use format="Hets">[&#39;z&#39;]</use>
    </presentation>
    <symbol name="SQuoteBraceOpenSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBraceOpenSQuote1">
      <use format="Hets">[&#39;{&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote95" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote95">
      <use format="Hets">[&#39;|&#39;]</use>
    </presentation>
    <symbol name="SQuoteBraceCloseSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteBraceCloseSQuote1">
      <use format="Hets">[&#39;}&#39;]</use>
    </presentation>
    <symbol name="SQuoteTildeSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteTildeSQuote1">
      <use format="Hets">[&#39;~&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote96" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote96">
      <use format="Hets">[&#39; &#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote97" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote97">
      <use format="Hets">[&#39;¡&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote98" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote98">
      <use format="Hets">[&#39;¢&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote99" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote99">
      <use format="Hets">[&#39;£&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote100" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote100">
      <use format="Hets">[&#39;¤&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote101" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote101">
      <use format="Hets">[&#39;¥&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote102" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote102">
      <use format="Hets">[&#39;¦&#39;]</use>
    </presentation>
    <symbol name="SQuoteParaSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteParaSQuote1">
      <use format="Hets">[&#39;§&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote103" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote103">
      <use format="Hets">[&#39;¨&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote104" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote104">
      <use format="Hets">[&#39;©&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote105" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote105">
      <use format="Hets">[&#39;ª&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote106" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote106">
      <use format="Hets">[&#39;«&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote107" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote107">
      <use format="Hets">[&#39;¬&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote108" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote108">
      <use format="Hets">[&#39;­&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote109" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote109">
      <use format="Hets">[&#39;®&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote110" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote110">
      <use format="Hets">[&#39;¯&#39;]</use>
    </presentation>
    <symbol name="SQuoteDegreeSQuote1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteDegreeSQuote1">
      <use format="Hets">[&#39;°&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote111" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote111">
      <use format="Hets">[&#39;±&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote112" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote112">
      <use format="Hets">[&#39;²&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote113" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote113">
      <use format="Hets">[&#39;³&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote114" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote114">
      <use format="Hets">[&#39;´&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote115" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote115">
      <use format="Hets">[&#39;µ&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote116" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote116">
      <use format="Hets">[&#39;¶&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote117" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote117">
      <use format="Hets">[&#39;·&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote118" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote118">
      <use format="Hets">[&#39;¸&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote119" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote119">
      <use format="Hets">[&#39;¹&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote120" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote120">
      <use format="Hets">[&#39;º&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote121" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote121">
      <use format="Hets">[&#39;»&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote122" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote122">
      <use format="Hets">[&#39;¼&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote123" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote123">
      <use format="Hets">[&#39;½&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote124" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote124">
      <use format="Hets">[&#39;¾&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote125" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote125">
      <use format="Hets">[&#39;¿&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote126" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote126">
      <use format="Hets">[&#39;À&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote127" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote127">
      <use format="Hets">[&#39;Á&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote128" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote128">
      <use format="Hets">[&#39;Â&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote129" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote129">
      <use format="Hets">[&#39;Ã&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote130" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote130">
      <use format="Hets">[&#39;Ä&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote131" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote131">
      <use format="Hets">[&#39;Å&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote132" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote132">
      <use format="Hets">[&#39;Æ&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote133" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote133">
      <use format="Hets">[&#39;Ç&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote134" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote134">
      <use format="Hets">[&#39;È&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote135" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote135">
      <use format="Hets">[&#39;É&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote136" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote136">
      <use format="Hets">[&#39;Ê&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote137" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote137">
      <use format="Hets">[&#39;Ë&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote138" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote138">
      <use format="Hets">[&#39;Ì&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote139" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote139">
      <use format="Hets">[&#39;Í&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote140" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote140">
      <use format="Hets">[&#39;Î&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote141" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote141">
      <use format="Hets">[&#39;Ï&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote142" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote142">
      <use format="Hets">[&#39;Ð&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote143" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote143">
      <use format="Hets">[&#39;Ñ&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote144" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote144">
      <use format="Hets">[&#39;Ò&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote145" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote145">
      <use format="Hets">[&#39;Ó&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote146" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote146">
      <use format="Hets">[&#39;Ô&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote147" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote147">
      <use format="Hets">[&#39;Õ&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote148" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote148">
      <use format="Hets">[&#39;Ö&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote149" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote149">
      <use format="Hets">[&#39;×&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote150" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote150">
      <use format="Hets">[&#39;Ø&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote151" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote151">
      <use format="Hets">[&#39;Ù&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote152" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote152">
      <use format="Hets">[&#39;Ú&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote153" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote153">
      <use format="Hets">[&#39;Û&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote154" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote154">
      <use format="Hets">[&#39;Ü&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote155" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote155">
      <use format="Hets">[&#39;Ý&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote156" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote156">
      <use format="Hets">[&#39;Þ&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote157" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote157">
      <use format="Hets">[&#39;ß&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote158" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote158">
      <use format="Hets">[&#39;à&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote159" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote159">
      <use format="Hets">[&#39;á&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote160" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote160">
      <use format="Hets">[&#39;â&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote161" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote161">
      <use format="Hets">[&#39;ã&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote162" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote162">
      <use format="Hets">[&#39;ä&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote163" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote163">
      <use format="Hets">[&#39;å&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote164" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote164">
      <use format="Hets">[&#39;æ&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote165" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote165">
      <use format="Hets">[&#39;ç&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote166" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote166">
      <use format="Hets">[&#39;è&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote167" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote167">
      <use format="Hets">[&#39;é&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote168" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote168">
      <use format="Hets">[&#39;ê&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote169" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote169">
      <use format="Hets">[&#39;ë&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote170" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote170">
      <use format="Hets">[&#39;ì&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote171" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote171">
      <use format="Hets">[&#39;í&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote172" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote172">
      <use format="Hets">[&#39;î&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote173" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote173">
      <use format="Hets">[&#39;ï&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote174" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote174">
      <use format="Hets">[&#39;ð&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote175" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote175">
      <use format="Hets">[&#39;ñ&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote176" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote176">
      <use format="Hets">[&#39;ò&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote177" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote177">
      <use format="Hets">[&#39;ó&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote178" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote178">
      <use format="Hets">[&#39;ô&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote179" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote179">
      <use format="Hets">[&#39;õ&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote180" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote180">
      <use format="Hets">[&#39;ö&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote181" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote181">
      <use format="Hets">[&#39;÷&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote182" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote182">
      <use format="Hets">[&#39;ø&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote183" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote183">
      <use format="Hets">[&#39;ù&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote184" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote184">
      <use format="Hets">[&#39;ú&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote185" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote185">
      <use format="Hets">[&#39;û&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote186" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote186">
      <use format="Hets">[&#39;ü&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote187" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote187">
      <use format="Hets">[&#39;ý&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote188" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote188">
      <use format="Hets">[&#39;þ&#39;]</use>
    </presentation>
    <symbol name="SQuoteSQuote189" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SQuoteSQuote189">
      <use format="Hets">[&#39;ÿ&#39;]</use>
    </presentation>
    <symbol name="ACK1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="ACK1">
      <use format="Hets">[ACK]</use>
    </presentation>
    <symbol name="BEL1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BEL1">
      <use format="Hets">[BEL]</use>
    </presentation>
    <symbol name="BS1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BS1">
      <use format="Hets">[BS]</use>
    </presentation>
    <symbol name="CAN1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="CAN1">
      <use format="Hets">[CAN]</use>
    </presentation>
    <symbol name="CR1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="CR1">
      <use format="Hets">[CR]</use>
    </presentation>
    <symbol name="DC11" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="DC11">
      <use format="Hets">[DC1]</use>
    </presentation>
    <symbol name="DC21" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="DC21">
      <use format="Hets">[DC2]</use>
    </presentation>
    <symbol name="DC31" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="DC31">
      <use format="Hets">[DC3]</use>
    </presentation>
    <symbol name="DC41" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="DC41">
      <use format="Hets">[DC4]</use>
    </presentation>
    <symbol name="DEL1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="DEL1">
      <use format="Hets">[DEL]</use>
    </presentation>
    <symbol name="DLE1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="DLE1">
      <use format="Hets">[DLE]</use>
    </presentation>
    <symbol name="EM1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="EM1">
      <use format="Hets">[EM]</use>
    </presentation>
    <symbol name="ENQ1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="ENQ1">
      <use format="Hets">[ENQ]</use>
    </presentation>
    <symbol name="EOT1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="EOT1">
      <use format="Hets">[EOT]</use>
    </presentation>
    <symbol name="ESC1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="ESC1">
      <use format="Hets">[ESC]</use>
    </presentation>
    <symbol name="ETB1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="ETB1">
      <use format="Hets">[ETB]</use>
    </presentation>
    <symbol name="ETX1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="ETX1">
      <use format="Hets">[ETX]</use>
    </presentation>
    <symbol name="FF1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="FF1">
      <use format="Hets">[FF]</use>
    </presentation>
    <symbol name="FS1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="FS1">
      <use format="Hets">[FS]</use>
    </presentation>
    <symbol name="GS1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="GS1">
      <use format="Hets">[GS]</use>
    </presentation>
    <symbol name="HT1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="HT1">
      <use format="Hets">[HT]</use>
    </presentation>
    <symbol name="LF1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="LF1">
      <use format="Hets">[LF]</use>
    </presentation>
    <symbol name="NAK1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="NAK1">
      <use format="Hets">[NAK]</use>
    </presentation>
    <symbol name="NL1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="NL1">
      <use format="Hets">[NL]</use>
    </presentation>
    <symbol name="NP1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="NP1">
      <use format="Hets">[NP]</use>
    </presentation>
    <symbol name="NUL1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="NUL1">
      <use format="Hets">[NUL]</use>
    </presentation>
    <symbol name="RS1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="RS1">
      <use format="Hets">[RS]</use>
    </presentation>
    <symbol name="SI1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SI1">
      <use format="Hets">[SI]</use>
    </presentation>
    <symbol name="SO1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SO1">
      <use format="Hets">[SO]</use>
    </presentation>
    <symbol name="SOH1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SOH1">
      <use format="Hets">[SOH]</use>
    </presentation>
    <symbol name="SP1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SP1">
      <use format="Hets">[SP]</use>
    </presentation>
    <symbol name="SUB1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SUB1">
      <use format="Hets">[SUB]</use>
    </presentation>
    <symbol name="SYN1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SYN1">
      <use format="Hets">[SYN]</use>
    </presentation>
    <symbol name="SYX1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SYX1">
      <use format="Hets">[SYX]</use>
    </presentation>
    <symbol name="US1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="US1">
      <use format="Hets">[US]</use>
    </presentation>
    <symbol name="VT1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="VT1">
      <use format="Hets">[VT]</use>
    </presentation>
    <symbol name="chr1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Nat" name="Nat3"/>
            <OMS cd="String_1" name="Char2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="chr1">
      <use format="Hets">[chr]</use>
    </presentation>
    <symbol name="ord1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="ord1">
      <use format="Hets">[ord]</use>
    </presentation>
  </theory>
  <private for="String_1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"List" Type:"GlobalDef" Origin:"DGSpecInst List"
From:"String_1A" Type:"GlobalDef" Origin:"DGFitSpec"
]]></data>
  </private>
  <theory xml:id="String">
    <presentation for="String">
      <use format="Hets">[String,,0]</use>
    </presentation>
    <imports from="#String_1">
      <morphism hiding="#__ List[Char] [] __!__ __++__ __+__ __::__ __eps__ drop first freq front isEmpty last rest reverse take">
        <requation>
          <OMOBJ>
            <OMS cd="String_1" name="ListSBrackOpenCharSBrackClose"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String" name="String1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="String_1" name="SBrackOpenSBrackClose5"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String" name="emptyString"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="String_1" name="__::__5"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="String" name="__:At:__"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <symbol role="sort" name="String1"/>
    <presentation for="String1">
      <use format="Hets">[String]</use>
    </presentation>
    <symbol name="__:At:__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String_1" name="Char2"/>
            <OMS cd="String" name="String1"/>
            <OMS cd="String" name="String1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__:At:__">
      <use format="Hets">[__,:@:,__]</use>
    </presentation>
    <symbol name="emptyString" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="String" name="String1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="emptyString">
      <use format="Hets">[emptyString]</use>
    </presentation>
  </theory>
  <private for="String">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"String_1" Type:"GlobalDef" Origin:"DGTranslation"
]]></data>
  </private>
  <theory xml:id="GenerateMap_P1">
    <presentation for="GenerateMap_P1">
      <use format="Hets">[GenerateMap,P,1]</use>
    </presentation>
    <symbol role="sort" name="S1"/>
    <presentation for="S1">
      <use format="Hets">[S]</use>
    </presentation>
  </theory>
  <theory xml:id="GenerateMap_P2">
    <presentation for="GenerateMap_P2">
      <use format="Hets">[GenerateMap,P,2]</use>
    </presentation>
    <symbol role="sort" name="T"/>
    <presentation for="T">
      <use format="Hets">[T]</use>
    </presentation>
  </theory>
  <theory xml:id="GenerateMap_P">
    <presentation for="GenerateMap_P">
      <use format="Hets">[GenerateMap,P,0]</use>
    </presentation>
    <imports from="#GenerateMap_P1"/>
    <imports from="#GenerateMap_P2"/>
    <symbol role="sort" name="S"/>
    <presentation for="S">
      <use format="Hets">[S]</use>
    </presentation>
  </theory>
  <private for="GenerateMap_P">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"GenerateMap_P2" Type:"GlobalDef" Origin:"DGFormalParams"
From:"GenerateMap_P1" Type:"GlobalDef" Origin:"DGFormalParams"
]]></data>
  </private>
  <theory xml:id="GenerateMap">
    <presentation for="GenerateMap">
      <use format="Hets">[GenerateMap,,0]</use>
    </presentation>
    <imports from="#GenerateMap_P"/>
    <symbol role="sort" name="MapSBrackOpenSCommaTSBrackClose"/>
    <presentation for="MapSBrackOpenSCommaTSBrackClose">
      <use format="Hets">[Map[S],[T]]</use>
    </presentation>
    <symbol name="__SBrackOpen__Division__SBrackClose1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="GenerateMap" name="MapSBrackOpenSCommaTSBrackClose"/>
            <OMS cd="GenerateMap_P2" name="T"/>
            <OMS cd="GenerateMap_P" name="S"/>
            <OMS cd="GenerateMap" name="MapSBrackOpenSCommaTSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__SBrackOpen__Division__SBrackClose1">
      <use format="Hets">[__,[,__,/,__,]]</use>
    </presentation>
    <symbol name="empty1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="GenerateMap" name="MapSBrackOpenSCommaTSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="empty1">
      <use format="Hets">[empty]</use>
    </presentation>
    <symbol name="lookup1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="GenerateMap_P" name="S"/>
            <OMS cd="GenerateMap" name="MapSBrackOpenSCommaTSBrackClose"/>
            <OMS cd="GenerateMap_P2" name="T"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="lookup1">
      <use format="Hets">[lookup]</use>
    </presentation>
    <axiom name="equality_Map">
      <CMP>
  forall M,N:Map[S,T];s,s1,s2:S; t1,t2:T
  forall M,N:Map[S,T];s,s1,s2:S; t1,t2:T
  forall M,N:Map[S,T];s,s1,s2:S; t1,t2:T
     . not def lookup(s,empty)                          %(lookup_empty_Map)%
     . lookup(s, M[t1/s1]) = t1 when s=s1	else	
     . M=N &#60;=&#62; forall s:S . lookup(s,M)=lookup(s,N)       %(equality_Map)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateMap" name="MapSBrackOpenSCommaTSBrackClose"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateMap" name="MapSBrackOpenSCommaTSBrackClose"/>
                </OMATP>
                <OMV name="N"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="GenerateMap" name="MapSBrackOpenSCommaTSBrackClose"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="GenerateMap" name="MapSBrackOpenSCommaTSBrackClose"/>
                  </OMATP>
                  <OMV name="N"/>
                </OMATTR>
              </OMA>
              <OMBIND>
                <OMS cd="casl" name="universal"/>
                <OMBVAR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateMap_P" name="S"/>
                    </OMATP>
                    <OMV name="s"/>
                  </OMATTR>
                </OMBVAR>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMA>
                    <OMS cd="GenerateMap" name="lookup1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="GenerateMap_P" name="S"/>
                      </OMATP>
                      <OMV name="s"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="GenerateMap" name="MapSBrackOpenSCommaTSBrackClose"/>
                      </OMATP>
                      <OMV name="M"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="GenerateMap" name="lookup1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="GenerateMap_P" name="S"/>
                      </OMATP>
                      <OMV name="s"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="GenerateMap" name="MapSBrackOpenSCommaTSBrackClose"/>
                      </OMATP>
                      <OMV name="N"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMBIND>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="equality_Map">
      <use format="Hets">equality_Map</use>
    </presentation>
    <axiom name="ga_generated_MapSBrackOpenSCommaTSBrackClose">
      <CMP/>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="sort-gen-ax"/>
            <OMBIND>
              <OMS cd="casl" name="Map[S,T]"/>
              <OMBVAR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="constraint-indices"/>
                    <OMSTR>0|-1|-1|</OMSTR>
                  </OMATP>
                  <OMS cd="GenerateMap" name="__SBrackOpen__Division__SBrackClose1"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="constraint-indices"/>
                    <OMSTR/>
                  </OMATP>
                  <OMS cd="GenerateMap" name="empty1"/>
                </OMATTR>
              </OMBVAR>
              <OMS cd="casl" name="Map[S,T]"/>
            </OMBIND>
            <OMS cd="casl" name="false"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_generated_MapSBrackOpenSCommaTSBrackClose">
      <use format="Hets">ga_generated_Map[S,T]</use>
    </presentation>
    <axiom name="lookup_empty_Map">
      <CMP>
  forall M,N:Map[S,T];s,s1,s2:S; t1,t2:T
  forall M,N:Map[S,T];s,s1,s2:S; t1,t2:T
  forall M,N:Map[S,T];s,s1,s2:S; t1,t2:T
     . not def lookup(s,empty)                          %(lookup_empty_Map)%
     . lookup(s, M[t1/s1]) = t1 when s=s1	else	
     . M=N &#60;=&#62; forall s:S . lookup(s,M)=lookup(s,N)       %(equality_Map)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateMap_P" name="S"/>
                </OMATP>
                <OMV name="s"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="GenerateMap" name="lookup1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateMap_P" name="S"/>
                    </OMATP>
                    <OMV name="s"/>
                  </OMATTR>
                  <OMS cd="GenerateMap" name="empty1"/>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="lookup_empty_Map">
      <use format="Hets">lookup_empty_Map</use>
    </presentation>
    <axiom name="lookup_nonEmpty_Map">
      <CMP>
  forall M,N:Map[S,T];s,s1,s2:S; t1,t2:T
  forall M,N:Map[S,T];s,s1,s2:S; t1,t2:T
  forall M,N:Map[S,T];s,s1,s2:S; t1,t2:T
     . not def lookup(s,empty)                          %(lookup_empty_Map)%
     . lookup(s, M[t1/s1]) = t1 when s=s1	else	
     . M=N &#60;=&#62; forall s:S . lookup(s,M)=lookup(s,N)       %(equality_Map)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateMap" name="MapSBrackOpenSCommaTSBrackClose"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateMap_P" name="S"/>
                </OMATP>
                <OMV name="s"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateMap_P" name="S"/>
                </OMATP>
                <OMV name="s1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateMap_P2" name="T"/>
                </OMATP>
                <OMV name="t1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="GenerateMap" name="lookup1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="GenerateMap_P" name="S"/>
                  </OMATP>
                  <OMV name="s"/>
                </OMATTR>
                <OMA>
                  <OMS cd="GenerateMap" name="__SBrackOpen__Division__SBrackClose1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateMap" name="MapSBrackOpenSCommaTSBrackClose"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateMap_P2" name="T"/>
                    </OMATP>
                    <OMV name="t1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateMap_P" name="S"/>
                    </OMATP>
                    <OMV name="s1"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="IfThenElse"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateMap_P" name="S"/>
                    </OMATP>
                    <OMV name="s"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateMap_P" name="S"/>
                    </OMATP>
                    <OMV name="s1"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="GenerateMap_P2" name="T"/>
                  </OMATP>
                  <OMV name="t1"/>
                </OMATTR>
                <OMA>
                  <OMS cd="GenerateMap" name="lookup1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateMap_P" name="S"/>
                    </OMATP>
                    <OMV name="s"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateMap" name="MapSBrackOpenSCommaTSBrackClose"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="lookup_nonEmpty_Map">
      <use format="Hets">lookup_nonEmpty_Map</use>
    </presentation>
  </theory>
  <private for="GenerateMap">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"GenerateMap_P" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Map_PI">
    <presentation for="Map_PI">
      <use format="Hets">[Map,PI,0]</use>
    </presentation>
    <imports from="Basic/Numbers.omdoc#Nat"/>
  </theory>
  <private for="Map_PI">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="Map_P1">
    <presentation for="Map_P1">
      <use format="Hets">[Map,P,1]</use>
    </presentation>
    <imports from="#Map_PI"/>
    <symbol role="sort" name="S7"/>
    <presentation for="S7">
      <use format="Hets">[S]</use>
    </presentation>
  </theory>
  <private for="Map_P1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Map_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Map_P2">
    <presentation for="Map_P2">
      <use format="Hets">[Map,P,2]</use>
    </presentation>
    <imports from="#Map_PI"/>
    <symbol role="sort" name="T2"/>
    <presentation for="T2">
      <use format="Hets">[T]</use>
    </presentation>
  </theory>
  <private for="Map_P2">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Map_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Map_P">
    <presentation for="Map_P">
      <use format="Hets">[Map,P,0]</use>
    </presentation>
    <imports from="#Map_P1"/>
    <imports from="#Map_P2"/>
    <symbol role="sort" name="S3"/>
    <presentation for="S3">
      <use format="Hets">[S]</use>
    </presentation>
  </theory>
  <private for="Map_P">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Map_P2" Type:"GlobalDef" Origin:"DGFormalParams"
From:"Map_P1" Type:"GlobalDef" Origin:"DGFormalParams"
]]></data>
  </private>
  <theory xml:id="Map_E1UA">
    <presentation for="Map_E1UA">
      <use format="Hets">[Map,E1UA,0]</use>
    </presentation>
    <symbol role="sort" name="S6"/>
    <presentation for="S6">
      <use format="Hets">[S]</use>
    </presentation>
  </theory>
  <private for="Map_E1UA">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"GenerateMap_P1" Type:"GlobalThm Open None Open" Origin:"DGSpecInst GenerateMap"
]]></data>
  </private>
  <theory xml:id="Map_E1UA1">
    <presentation for="Map_E1UA1">
      <use format="Hets">[Map,E1UA,1]</use>
    </presentation>
    <symbol role="sort" name="T5"/>
    <presentation for="T5">
      <use format="Hets">[T]</use>
    </presentation>
  </theory>
  <private for="Map_E1UA1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"GenerateMap_P2" Type:"GlobalThm Open None Open" Origin:"DGSpecInst GenerateMap"
]]></data>
  </private>
  <theory xml:id="Map_E1U">
    <presentation for="Map_E1U">
      <use format="Hets">[Map,E1U,0]</use>
    </presentation>
    <imports from="#GenerateMap"/>
    <imports from="#Map_E1UA"/>
    <imports from="#Map_E1UA1"/>
    <imports from="#Map_P"/>
    <symbol role="sort" name="MapSBrackOpenSCommaTSBrackClose2"/>
    <presentation for="MapSBrackOpenSCommaTSBrackClose2">
      <use format="Hets">[Map[S],[T]]</use>
    </presentation>
    <symbol name="__SBrackOpen__Division__SBrackClose3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Map_E1U" name="MapSBrackOpenSCommaTSBrackClose2"/>
            <OMS cd="Map_P2" name="T2"/>
            <OMS cd="Map_P" name="S3"/>
            <OMS cd="Map_E1U" name="MapSBrackOpenSCommaTSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__SBrackOpen__Division__SBrackClose3">
      <use format="Hets">[__,[,__,/,__,]]</use>
    </presentation>
    <symbol name="empty3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Map_E1U" name="MapSBrackOpenSCommaTSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="empty3">
      <use format="Hets">[empty]</use>
    </presentation>
    <symbol name="lookup3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Map_P" name="S3"/>
            <OMS cd="Map_E1U" name="MapSBrackOpenSCommaTSBrackClose2"/>
            <OMS cd="Map_P2" name="T2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="lookup3">
      <use format="Hets">[lookup]</use>
    </presentation>
  </theory>
  <private for="Map_E1U">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Map_P" Type:"GlobalDef" Origin:"DGSpecInst GenerateMap"
From:"Map_E1UA" Type:"GlobalDef" Origin:"DGFitSpec"
From:"Map_E1UA1" Type:"GlobalDef" Origin:"DGFitSpec"
From:"GenerateMap" Type:"GlobalDef" Origin:"DGSpecInst GenerateMap"
]]></data>
  </private>
  <theory xml:id="Map_E1U1A">
    <presentation for="Map_E1U1A">
      <use format="Hets">[Map,E1U1A,0]</use>
    </presentation>
    <imports from="#Set_PI"/>
    <symbol role="sort" name="S5"/>
    <presentation for="S5">
      <use format="Hets">[S]</use>
    </presentation>
  </theory>
  <private for="Map_E1U1A">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst Set"
From:"Set_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Map_E1U1">
    <presentation for="Map_E1U1">
      <use format="Hets">[Map,E1U,1]</use>
    </presentation>
    <imports from="#Map_E1U1A"/>
    <imports from="#Map_P"/>
    <imports from="#Set">
      <morphism hiding="#__ Elem Set[Elem] __+__ __-__ __eps__ __intersection__ __isSubsetOf__ __symDiff__ __union__ isNonEmpty {__} {}">
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="Elem5"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="S4"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N02"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="N02"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N12"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="N12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N22"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="N22"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N32"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="N32"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N42"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="N42"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N52"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="N52"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N62"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="N62"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N72"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="N72"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N82"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="N82"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N92"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="N92"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="SetSBrackOpenElemSBrackClose1"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="SetSBrackOpenSSBrackClose1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="__LowerEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="__Lower__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="__GreaterEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="__Greater__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Ast__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="__Ast__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__AtAt__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="__AtAt__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__DivisionQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="__DivisionQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Excla2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="__Excla2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusExcla__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="__MinusExcla__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="__MinusQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Plus__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="__Plus__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Power__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="__Power__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__div__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="__div__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__mod__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="__mod__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="even2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="max2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="max2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="min2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="min2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="odd2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="pre2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="pre2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="suc2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U1" name="suc2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <symbol role="sort" name="T3"/>
    <presentation for="T3">
      <use format="Hets">[T]</use>
    </presentation>
    <symbol role="sort" name="SetSBrackOpenSSBrackClose1"/>
    <presentation for="SetSBrackOpenSSBrackClose1">
      <use format="Hets">[Set[S]]</use>
    </presentation>
    <symbol role="sort" name="S4"/>
    <presentation for="S4">
      <use format="Hets">[S]</use>
    </presentation>
  </theory>
  <private for="Map_E1U1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set" Type:"GlobalDef" Origin:"DGSpecInst Set"
From:"Map_P" Type:"GlobalDef" Origin:"DGSpecInst Set"
From:"Map_E1U1A" Type:"GlobalDef" Origin:"DGFitSpec"
]]></data>
  </private>
  <theory xml:id="Map_E1U2A">
    <presentation for="Map_E1U2A">
      <use format="Hets">[Map,E1U2A,0]</use>
    </presentation>
    <imports from="#Set_PI"/>
    <symbol role="sort" name="T4"/>
    <presentation for="T4">
      <use format="Hets">[T]</use>
    </presentation>
  </theory>
  <private for="Map_E1U2A">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst Set"
From:"Set_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Map_E1U2">
    <presentation for="Map_E1U2">
      <use format="Hets">[Map,E1U,2]</use>
    </presentation>
    <imports from="#Map_E1U2A"/>
    <imports from="#Map_P"/>
    <imports from="#Set">
      <morphism hiding="#__ Elem Set[Elem] __+__ __-__ __eps__ __intersection__ __isSubsetOf__ __symDiff__ __union__ isNonEmpty {__} {}">
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="Elem5"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="T1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N02"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="N02"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N12"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="N12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N22"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="N22"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N32"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="N32"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N42"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="N42"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N52"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="N52"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N62"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="N62"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N72"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="N72"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N82"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="N82"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N92"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="N92"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="SetSBrackOpenElemSBrackClose1"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="SetSBrackOpenTSBrackClose"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="__LowerEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="__Lower__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="__GreaterEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="__Greater__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Ast__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="__Ast__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__AtAt__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="__AtAt__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__DivisionQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="__DivisionQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Excla2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="__Excla2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusExcla__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="__MinusExcla__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="__MinusQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Plus__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="__Plus__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Power__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="__Power__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__div__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="__div__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__mod__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="__mod__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="even2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="max2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="max2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="min2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="min2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="odd2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="pre2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="pre2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="suc2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Map_E1U2" name="suc2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <symbol role="sort" name="T1"/>
    <presentation for="T1">
      <use format="Hets">[T]</use>
    </presentation>
    <symbol role="sort" name="SetSBrackOpenTSBrackClose"/>
    <presentation for="SetSBrackOpenTSBrackClose">
      <use format="Hets">[Set[T]]</use>
    </presentation>
    <symbol role="sort" name="S2"/>
    <presentation for="S2">
      <use format="Hets">[S]</use>
    </presentation>
  </theory>
  <private for="Map_E1U2">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set" Type:"GlobalDef" Origin:"DGSpecInst Set"
From:"Map_E1U2A" Type:"GlobalDef" Origin:"DGFitSpec"
From:"Map_P" Type:"GlobalDef" Origin:"DGSpecInst Set"
]]></data>
  </private>
  <theory xml:id="Map_E1">
    <presentation for="Map_E1">
      <use format="Hets">[Map,E,1]</use>
    </presentation>
    <imports from="#Map_E1U"/>
    <imports from="#Map_E1U1"/>
    <imports from="#Map_E1U2"/>
    <symbol role="sort" name="SetSBrackOpenSSBrackClose"/>
    <presentation for="SetSBrackOpenSSBrackClose">
      <use format="Hets">[Set[S]]</use>
    </presentation>
    <symbol role="sort" name="MapSBrackOpenSCommaTSBrackClose1"/>
    <presentation for="MapSBrackOpenSCommaTSBrackClose1">
      <use format="Hets">[Map[S],[T]]</use>
    </presentation>
    <symbol name="__SBrackOpen__Division__SBrackClose2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
            <OMS cd="Map_E1U2" name="T1"/>
            <OMS cd="Map_E1U2" name="S2"/>
            <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__SBrackOpen__Division__SBrackClose2">
      <use format="Hets">[__,[,__,/,__,]]</use>
    </presentation>
    <symbol name="empty2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="empty2">
      <use format="Hets">[empty]</use>
    </presentation>
    <symbol name="lookup2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Map_E1U2" name="S2"/>
            <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
            <OMS cd="Map_E1U2" name="T1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="lookup2">
      <use format="Hets">[lookup]</use>
    </presentation>
  </theory>
  <private for="Map_E1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Map_E1U2" Type:"GlobalDef" Origin:"DGUnion"
From:"Map_E1U1" Type:"GlobalDef" Origin:"DGUnion"
From:"Map_E1U" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="Map">
    <presentation for="Map">
      <use format="Hets">[Map,,0]</use>
    </presentation>
    <imports from="#Map_E1"/>
    <symbol role="sort" name="EntrySBrackOpenSCommaTSBrackClose"/>
    <presentation for="EntrySBrackOpenSCommaTSBrackClose">
      <use format="Hets">[Entry[S],[T]]</use>
    </presentation>
    <adt>
      <sortdef name="EntrySBrackOpenSCommaTSBrackClose" type="free">
        <constructor name="SBrackOpen__Division__SBrackClose3">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="Map_E1U2" name="T1"/>
              </OMOBJ>
            </type>
          </argument>
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="Map_E1U2" name="S2"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
      </sortdef>
    </adt>
    <symbol name="__::__MinusGreater__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
            <OMS cd="Map_E1" name="SetSBrackOpenSSBrackClose"/>
            <OMS cd="Map_E1U2" name="SetSBrackOpenTSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__::__MinusGreater__1">
      <use format="Hets">[__,::,__,-&#62;,__]</use>
    </presentation>
    <symbol name="isEmpty7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isEmpty7">
      <use format="Hets">[isEmpty]</use>
    </presentation>
    <symbol name="SBrackOpen__Division__SBrackClose1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Map_E1U2" name="T1"/>
            <OMS cd="Map_E1U2" name="S2"/>
            <OMS cd="Map" name="EntrySBrackOpenSCommaTSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SBrackOpen__Division__SBrackClose1">
      <use format="Hets">[[,__,/,__,]]</use>
    </presentation>
    <symbol name="dom1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
            <OMS cd="Map_E1" name="SetSBrackOpenSSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="dom1">
      <use format="Hets">[dom]</use>
    </presentation>
    <symbol name="range1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
            <OMS cd="Map_E1U2" name="SetSBrackOpenTSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="range1">
      <use format="Hets">[range]</use>
    </presentation>
    <symbol name="source1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Map" name="EntrySBrackOpenSCommaTSBrackClose"/>
            <OMS cd="Map_E1U2" name="S2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="source1">
      <use format="Hets">[source]</use>
    </presentation>
    <symbol name="target1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Map" name="EntrySBrackOpenSCommaTSBrackClose"/>
            <OMS cd="Map_E1U2" name="T1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="target1">
      <use format="Hets">[target]</use>
    </presentation>
    <axiom name="arrow_def_Map">
      <CMP>
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
            X: Set[S]; Y: Set[T]
     . isEmpty(M) &#60;=&#62; M=empty                           %(isEmpty_def_Map)%
     . [t/s] eps M &#60;=&#62; lookup(s,M)=t                      %(elemOf_def_Map)%
     .  M::X-&#62;Y &#60;=&#62; dom(M)=X /\ range(M) isSubsetOf Y   %(arrow_def_Map)%
     .  M+[t/s]=M[t/s]                                  %(overwrite2_def_Map)%
     .  empty-[t/s] = empty                             %(minus_empty_Map)%
     .  (M[t/s])-[t1/s1] = 
     . empty-s=empty                                %(minusSource_empty_Map)%
     . (M+e)-s=
     . empty-t=empty                             %(minusTarget_empty_Map)%
     . (M+e)-t = 
     . s eps dom(M)   &#60;=&#62; def lookup(s,M)                     %(dom_def_Map)%
     . t eps range(M) &#60;=&#62; exists s:S . lookup(s,M)=t        %(range_def_Map)%
     .  M union N = O &#60;=&#62;
     . def lookup(s,M) &#60;=&#62; exists t:T . [t/s] eps M   %(lookup_dom)% %implied
     . M[t1/s][t2/s] = M[t2/s]                 %(overwrite_Map)% %implied
     . M[t1/s1][t2/s2]= M[t2/s2][t1/s1] if not s1=s2   
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1" name="SetSBrackOpenSSBrackClose"/>
                </OMATP>
                <OMV name="X"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="SetSBrackOpenTSBrackClose"/>
                </OMATP>
                <OMV name="Y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Map" name="__::__MinusGreater__1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Map_E1" name="SetSBrackOpenSSBrackClose"/>
                  </OMATP>
                  <OMV name="X"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Map_E1U2" name="SetSBrackOpenTSBrackClose"/>
                  </OMATP>
                  <OMV name="Y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMA>
                    <OMS cd="Map" name="dom1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                      </OMATP>
                      <OMV name="M"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1" name="SetSBrackOpenSSBrackClose"/>
                    </OMATP>
                    <OMV name="X"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Set_E1" name="__isSubsetOf__2"/>
                  <OMA>
                    <OMS cd="Map" name="range1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                      </OMATP>
                      <OMV name="M"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="SetSBrackOpenTSBrackClose"/>
                    </OMATP>
                    <OMV name="Y"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="arrow_def_Map">
      <use format="Hets">arrow_def_Map</use>
    </presentation>
    <axiom name="comm_Map">
      <CMP>
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
            X: Set[S]; Y: Set[T]
     . isEmpty(M) &#60;=&#62; M=empty                           %(isEmpty_def_Map)%
     . [t/s] eps M &#60;=&#62; lookup(s,M)=t                      %(elemOf_def_Map)%
     .  M::X-&#62;Y &#60;=&#62; dom(M)=X /\ range(M) isSubsetOf Y   %(arrow_def_Map)%
     .  M+[t/s]=M[t/s]                                  %(overwrite2_def_Map)%
     .  empty-[t/s] = empty                             %(minus_empty_Map)%
     .  (M[t/s])-[t1/s1] = 
     . empty-s=empty                                %(minusSource_empty_Map)%
     . (M+e)-s=
     . empty-t=empty                             %(minusTarget_empty_Map)%
     . (M+e)-t = 
     . s eps dom(M)   &#60;=&#62; def lookup(s,M)                     %(dom_def_Map)%
     . t eps range(M) &#60;=&#62; exists s:S . lookup(s,M)=t        %(range_def_Map)%
     .  M union N = O &#60;=&#62;
     . def lookup(s,M) &#60;=&#62; exists t:T . [t/s] eps M   %(lookup_dom)% %implied
     . M[t1/s][t2/s] = M[t2/s]                 %(overwrite_Map)% %implied
     . M[t1/s1][t2/s2]= M[t2/s2][t1/s1] if not s1=s2   
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="S2"/>
                </OMATP>
                <OMV name="s1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="S2"/>
                </OMATP>
                <OMV name="s2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="T1"/>
                </OMATP>
                <OMV name="t1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="T1"/>
                </OMATP>
                <OMV name="t2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="S2"/>
                    </OMATP>
                    <OMV name="s1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="S2"/>
                    </OMATP>
                    <OMV name="s2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Map_E1" name="__SBrackOpen__Division__SBrackClose2"/>
                  <OMA>
                    <OMS cd="Map_E1" name="__SBrackOpen__Division__SBrackClose2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                      </OMATP>
                      <OMV name="M"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map_E1U2" name="T1"/>
                      </OMATP>
                      <OMV name="t1"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map_E1U2" name="S2"/>
                      </OMATP>
                      <OMV name="s1"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="T1"/>
                    </OMATP>
                    <OMV name="t2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="S2"/>
                    </OMATP>
                    <OMV name="s2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Map_E1" name="__SBrackOpen__Division__SBrackClose2"/>
                  <OMA>
                    <OMS cd="Map_E1" name="__SBrackOpen__Division__SBrackClose2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                      </OMATP>
                      <OMV name="M"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map_E1U2" name="T1"/>
                      </OMATP>
                      <OMV name="t2"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map_E1U2" name="S2"/>
                      </OMATP>
                      <OMV name="s2"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="T1"/>
                    </OMATP>
                    <OMV name="t1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="S2"/>
                    </OMATP>
                    <OMV name="s1"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMS cd="casl" name="false"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="comm_Map">
      <use format="Hets">comm_Map</use>
    </presentation>
    <axiom name="dom_def_Map">
      <CMP>
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
            X: Set[S]; Y: Set[T]
     . isEmpty(M) &#60;=&#62; M=empty                           %(isEmpty_def_Map)%
     . [t/s] eps M &#60;=&#62; lookup(s,M)=t                      %(elemOf_def_Map)%
     .  M::X-&#62;Y &#60;=&#62; dom(M)=X /\ range(M) isSubsetOf Y   %(arrow_def_Map)%
     .  M+[t/s]=M[t/s]                                  %(overwrite2_def_Map)%
     .  empty-[t/s] = empty                             %(minus_empty_Map)%
     .  (M[t/s])-[t1/s1] = 
     . empty-s=empty                                %(minusSource_empty_Map)%
     . (M+e)-s=
     . empty-t=empty                             %(minusTarget_empty_Map)%
     . (M+e)-t = 
     . s eps dom(M)   &#60;=&#62; def lookup(s,M)                     %(dom_def_Map)%
     . t eps range(M) &#60;=&#62; exists s:S . lookup(s,M)=t        %(range_def_Map)%
     .  M union N = O &#60;=&#62;
     . def lookup(s,M) &#60;=&#62; exists t:T . [t/s] eps M   %(lookup_dom)% %implied
     . M[t1/s][t2/s] = M[t2/s]                 %(overwrite_Map)% %implied
     . M[t1/s1][t2/s2]= M[t2/s2][t1/s1] if not s1=s2   
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="S2"/>
                </OMATP>
                <OMV name="s"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Set_E2" name="__eps__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Map_E1U2" name="S2"/>
                  </OMATP>
                  <OMV name="s"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Map" name="dom1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="Map_E1" name="lookup2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="S2"/>
                    </OMATP>
                    <OMV name="s"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="dom_def_Map">
      <use format="Hets">dom_def_Map</use>
    </presentation>
    <axiom name="elemOf_def_Map">
      <CMP>
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
            X: Set[S]; Y: Set[T]
     . isEmpty(M) &#60;=&#62; M=empty                           %(isEmpty_def_Map)%
     . [t/s] eps M &#60;=&#62; lookup(s,M)=t                      %(elemOf_def_Map)%
     .  M::X-&#62;Y &#60;=&#62; dom(M)=X /\ range(M) isSubsetOf Y   %(arrow_def_Map)%
     .  M+[t/s]=M[t/s]                                  %(overwrite2_def_Map)%
     .  empty-[t/s] = empty                             %(minus_empty_Map)%
     .  (M[t/s])-[t1/s1] = 
     . empty-s=empty                                %(minusSource_empty_Map)%
     . (M+e)-s=
     . empty-t=empty                             %(minusTarget_empty_Map)%
     . (M+e)-t = 
     . s eps dom(M)   &#60;=&#62; def lookup(s,M)                     %(dom_def_Map)%
     . t eps range(M) &#60;=&#62; exists s:S . lookup(s,M)=t        %(range_def_Map)%
     .  M union N = O &#60;=&#62;
     . def lookup(s,M) &#60;=&#62; exists t:T . [t/s] eps M   %(lookup_dom)% %implied
     . M[t1/s][t2/s] = M[t2/s]                 %(overwrite_Map)% %implied
     . M[t1/s1][t2/s2]= M[t2/s2][t1/s1] if not s1=s2   
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="S2"/>
                </OMATP>
                <OMV name="s"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="T1"/>
                </OMATP>
                <OMV name="t"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Set_E2" name="__eps__2"/>
                <OMA>
                  <OMS cd="Map" name="SBrackOpen__Division__SBrackClose1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="T1"/>
                    </OMATP>
                    <OMV name="t"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="S2"/>
                    </OMATP>
                    <OMV name="s"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Map_E1" name="lookup2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="S2"/>
                    </OMATP>
                    <OMV name="s"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Map_E1U2" name="T1"/>
                  </OMATP>
                  <OMV name="t"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="elemOf_def_Map">
      <use format="Hets">elemOf_def_Map</use>
    </presentation>
    <axiom name="ga_injective_SBrackOpen__Division__SBrackClose">
      <CMP>
     free type Entry[S,T]::=[__/__] (target:T;source:S)
     free type Entry[S,T]::=[__/__] (target:T;source:S)
     free type Entry[S,T]::=[__/__] (target:T;source:S)
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="T1"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="S2"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="T1"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="S2"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Map" name="SBrackOpen__Division__SBrackClose1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="T1"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="S2"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Map" name="SBrackOpen__Division__SBrackClose1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="T1"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="S2"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="T1"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="T1"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="S2"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="S2"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective_SBrackOpen__Division__SBrackClose">
      <use format="Hets">ga_injective_[__/__]</use>
    </presentation>
    <axiom name="ga_selector_source">
      <CMP>
     free type Entry[S,T]::=[__/__] (target:T;source:S)
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="T1"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="S2"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Map" name="source1"/>
                <OMA>
                  <OMS cd="Map" name="SBrackOpen__Division__SBrackClose1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="T1"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="S2"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="S2"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_source">
      <use format="Hets">ga_selector_source</use>
    </presentation>
    <axiom name="ga_selector_target">
      <CMP>
     free type Entry[S,T]::=[__/__] (target:T;source:S)
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="T1"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="S2"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Map" name="target1"/>
                <OMA>
                  <OMS cd="Map" name="SBrackOpen__Division__SBrackClose1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="T1"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="S2"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="T1"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_target">
      <use format="Hets">ga_selector_target</use>
    </presentation>
    <axiom name="isEmpty_def_Map">
      <CMP>
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
            X: Set[S]; Y: Set[T]
     . isEmpty(M) &#60;=&#62; M=empty                           %(isEmpty_def_Map)%
     . [t/s] eps M &#60;=&#62; lookup(s,M)=t                      %(elemOf_def_Map)%
     .  M::X-&#62;Y &#60;=&#62; dom(M)=X /\ range(M) isSubsetOf Y   %(arrow_def_Map)%
     .  M+[t/s]=M[t/s]                                  %(overwrite2_def_Map)%
     .  empty-[t/s] = empty                             %(minus_empty_Map)%
     .  (M[t/s])-[t1/s1] = 
     . empty-s=empty                                %(minusSource_empty_Map)%
     . (M+e)-s=
     . empty-t=empty                             %(minusTarget_empty_Map)%
     . (M+e)-t = 
     . s eps dom(M)   &#60;=&#62; def lookup(s,M)                     %(dom_def_Map)%
     . t eps range(M) &#60;=&#62; exists s:S . lookup(s,M)=t        %(range_def_Map)%
     .  M union N = O &#60;=&#62;
     . def lookup(s,M) &#60;=&#62; exists t:T . [t/s] eps M   %(lookup_dom)% %implied
     . M[t1/s][t2/s] = M[t2/s]                 %(overwrite_Map)% %implied
     . M[t1/s1][t2/s2]= M[t2/s2][t1/s1] if not s1=s2   
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Map" name="isEmpty7"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
                <OMS cd="Map_E1" name="empty2"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isEmpty_def_Map">
      <use format="Hets">isEmpty_def_Map</use>
    </presentation>
    <axiom name="lookup_dom">
      <CMP>
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
            X: Set[S]; Y: Set[T]
     . isEmpty(M) &#60;=&#62; M=empty                           %(isEmpty_def_Map)%
     . [t/s] eps M &#60;=&#62; lookup(s,M)=t                      %(elemOf_def_Map)%
     .  M::X-&#62;Y &#60;=&#62; dom(M)=X /\ range(M) isSubsetOf Y   %(arrow_def_Map)%
     .  M+[t/s]=M[t/s]                                  %(overwrite2_def_Map)%
     .  empty-[t/s] = empty                             %(minus_empty_Map)%
     .  (M[t/s])-[t1/s1] = 
     . empty-s=empty                                %(minusSource_empty_Map)%
     . (M+e)-s=
     . empty-t=empty                             %(minusTarget_empty_Map)%
     . (M+e)-t = 
     . s eps dom(M)   &#60;=&#62; def lookup(s,M)                     %(dom_def_Map)%
     . t eps range(M) &#60;=&#62; exists s:S . lookup(s,M)=t        %(range_def_Map)%
     .  M union N = O &#60;=&#62;
     . def lookup(s,M) &#60;=&#62; exists t:T . [t/s] eps M   %(lookup_dom)% %implied
     . M[t1/s][t2/s] = M[t2/s]                 %(overwrite_Map)% %implied
     . M[t1/s1][t2/s2]= M[t2/s2][t1/s1] if not s1=s2   
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="S2"/>
                </OMATP>
                <OMV name="s"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="Map_E1" name="lookup2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="S2"/>
                    </OMATP>
                    <OMV name="s"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMBIND>
                <OMS cd="casl" name="existential"/>
                <OMBVAR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="T1"/>
                    </OMATP>
                    <OMV name="t"/>
                  </OMATTR>
                </OMBVAR>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Set_E2" name="__eps__2"/>
                  <OMA>
                    <OMS cd="Map" name="SBrackOpen__Division__SBrackClose1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map_E1U2" name="T1"/>
                      </OMATP>
                      <OMV name="t"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map_E1U2" name="S2"/>
                      </OMATP>
                      <OMV name="s"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                </OMA>
              </OMBIND>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="lookup_dom">
      <use format="Hets">lookup_dom</use>
    </presentation>
    <axiom name="minusSource_empty_Map">
      <CMP>
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
            X: Set[S]; Y: Set[T]
     . isEmpty(M) &#60;=&#62; M=empty                           %(isEmpty_def_Map)%
     . [t/s] eps M &#60;=&#62; lookup(s,M)=t                      %(elemOf_def_Map)%
     .  M::X-&#62;Y &#60;=&#62; dom(M)=X /\ range(M) isSubsetOf Y   %(arrow_def_Map)%
     .  M+[t/s]=M[t/s]                                  %(overwrite2_def_Map)%
     .  empty-[t/s] = empty                             %(minus_empty_Map)%
     .  (M[t/s])-[t1/s1] = 
     . empty-s=empty                                %(minusSource_empty_Map)%
     . (M+e)-s=
     . empty-t=empty                             %(minusTarget_empty_Map)%
     . (M+e)-t = 
     . s eps dom(M)   &#60;=&#62; def lookup(s,M)                     %(dom_def_Map)%
     . t eps range(M) &#60;=&#62; exists s:S . lookup(s,M)=t        %(range_def_Map)%
     .  M union N = O &#60;=&#62;
     . def lookup(s,M) &#60;=&#62; exists t:T . [t/s] eps M   %(lookup_dom)% %implied
     . M[t1/s][t2/s] = M[t2/s]                 %(overwrite_Map)% %implied
     . M[t1/s1][t2/s2]= M[t2/s2][t1/s1] if not s1=s2   
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="S2"/>
                </OMATP>
                <OMV name="s"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__Minus__3"/>
                <OMS cd="Map_E1" name="empty2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Map_E1U2" name="S2"/>
                  </OMATP>
                  <OMV name="s"/>
                </OMATTR>
              </OMA>
              <OMS cd="Map_E1" name="empty2"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="minusSource_empty_Map">
      <use format="Hets">minusSource_empty_Map</use>
    </presentation>
    <axiom name="minusSource_nonEmpty_Map">
      <CMP>
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
            X: Set[S]; Y: Set[T]
     . isEmpty(M) &#60;=&#62; M=empty                           %(isEmpty_def_Map)%
     . [t/s] eps M &#60;=&#62; lookup(s,M)=t                      %(elemOf_def_Map)%
     .  M::X-&#62;Y &#60;=&#62; dom(M)=X /\ range(M) isSubsetOf Y   %(arrow_def_Map)%
     .  M+[t/s]=M[t/s]                                  %(overwrite2_def_Map)%
     .  empty-[t/s] = empty                             %(minus_empty_Map)%
     .  (M[t/s])-[t1/s1] = 
     . empty-s=empty                                %(minusSource_empty_Map)%
     . (M+e)-s=
     . empty-t=empty                             %(minusTarget_empty_Map)%
     . (M+e)-t = 
     . s eps dom(M)   &#60;=&#62; def lookup(s,M)                     %(dom_def_Map)%
     . t eps range(M) &#60;=&#62; exists s:S . lookup(s,M)=t        %(range_def_Map)%
     .  M union N = O &#60;=&#62;
     . def lookup(s,M) &#60;=&#62; exists t:T . [t/s] eps M   %(lookup_dom)% %implied
     . M[t1/s][t2/s] = M[t2/s]                 %(overwrite_Map)% %implied
     . M[t1/s1][t2/s2]= M[t2/s2][t1/s1] if not s1=s2   
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="S2"/>
                </OMATP>
                <OMV name="s"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map" name="EntrySBrackOpenSCommaTSBrackClose"/>
                </OMATP>
                <OMV name="e"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__Minus__3"/>
                <OMA>
                  <OMS cd="Nat" name="__Plus__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map" name="EntrySBrackOpenSCommaTSBrackClose"/>
                    </OMATP>
                    <OMV name="e"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Map_E1U2" name="S2"/>
                  </OMATP>
                  <OMV name="s"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="IfThenElse"/>
                <OMBIND>
                  <OMS cd="casl" name="existential"/>
                  <OMBVAR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map_E1U2" name="T1"/>
                      </OMATP>
                      <OMV name="t"/>
                    </OMATTR>
                  </OMBVAR>
                  <OMA>
                    <OMS cd="casl" name="strong-equation"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map" name="EntrySBrackOpenSCommaTSBrackClose"/>
                      </OMATP>
                      <OMV name="e"/>
                    </OMATTR>
                    <OMA>
                      <OMS cd="Map" name="SBrackOpen__Division__SBrackClose1"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Map_E1U2" name="T1"/>
                        </OMATP>
                        <OMV name="t"/>
                      </OMATTR>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Map_E1U2" name="S2"/>
                        </OMATP>
                        <OMV name="s"/>
                      </OMATTR>
                    </OMA>
                  </OMA>
                </OMBIND>
                <OMA>
                  <OMS cd="Set_E1" name="__Minus__3"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="S2"/>
                    </OMATP>
                    <OMV name="s"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat" name="__Plus__2"/>
                  <OMA>
                    <OMS cd="Set_E1" name="__Minus__3"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                      </OMATP>
                      <OMV name="M"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map_E1U2" name="S2"/>
                      </OMATP>
                      <OMV name="s"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map" name="EntrySBrackOpenSCommaTSBrackClose"/>
                    </OMATP>
                    <OMV name="e"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="minusSource_nonEmpty_Map">
      <use format="Hets">minusSource_nonEmpty_Map</use>
    </presentation>
    <axiom name="minusTarget_empty_Map">
      <CMP>
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
            X: Set[S]; Y: Set[T]
     . isEmpty(M) &#60;=&#62; M=empty                           %(isEmpty_def_Map)%
     . [t/s] eps M &#60;=&#62; lookup(s,M)=t                      %(elemOf_def_Map)%
     .  M::X-&#62;Y &#60;=&#62; dom(M)=X /\ range(M) isSubsetOf Y   %(arrow_def_Map)%
     .  M+[t/s]=M[t/s]                                  %(overwrite2_def_Map)%
     .  empty-[t/s] = empty                             %(minus_empty_Map)%
     .  (M[t/s])-[t1/s1] = 
     . empty-s=empty                                %(minusSource_empty_Map)%
     . (M+e)-s=
     . empty-t=empty                             %(minusTarget_empty_Map)%
     . (M+e)-t = 
     . s eps dom(M)   &#60;=&#62; def lookup(s,M)                     %(dom_def_Map)%
     . t eps range(M) &#60;=&#62; exists s:S . lookup(s,M)=t        %(range_def_Map)%
     .  M union N = O &#60;=&#62;
     . def lookup(s,M) &#60;=&#62; exists t:T . [t/s] eps M   %(lookup_dom)% %implied
     . M[t1/s][t2/s] = M[t2/s]                 %(overwrite_Map)% %implied
     . M[t1/s1][t2/s2]= M[t2/s2][t1/s1] if not s1=s2   
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="T1"/>
                </OMATP>
                <OMV name="t"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__Minus__3"/>
                <OMS cd="Map_E1" name="empty2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Map_E1U2" name="T1"/>
                  </OMATP>
                  <OMV name="t"/>
                </OMATTR>
              </OMA>
              <OMS cd="Map_E1" name="empty2"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="minusTarget_empty_Map">
      <use format="Hets">minusTarget_empty_Map</use>
    </presentation>
    <axiom name="minusTarget_nonEmpty_Map">
      <CMP>
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
            X: Set[S]; Y: Set[T]
     . isEmpty(M) &#60;=&#62; M=empty                           %(isEmpty_def_Map)%
     . [t/s] eps M &#60;=&#62; lookup(s,M)=t                      %(elemOf_def_Map)%
     .  M::X-&#62;Y &#60;=&#62; dom(M)=X /\ range(M) isSubsetOf Y   %(arrow_def_Map)%
     .  M+[t/s]=M[t/s]                                  %(overwrite2_def_Map)%
     .  empty-[t/s] = empty                             %(minus_empty_Map)%
     .  (M[t/s])-[t1/s1] = 
     . empty-s=empty                                %(minusSource_empty_Map)%
     . (M+e)-s=
     . empty-t=empty                             %(minusTarget_empty_Map)%
     . (M+e)-t = 
     . s eps dom(M)   &#60;=&#62; def lookup(s,M)                     %(dom_def_Map)%
     . t eps range(M) &#60;=&#62; exists s:S . lookup(s,M)=t        %(range_def_Map)%
     .  M union N = O &#60;=&#62;
     . def lookup(s,M) &#60;=&#62; exists t:T . [t/s] eps M   %(lookup_dom)% %implied
     . M[t1/s][t2/s] = M[t2/s]                 %(overwrite_Map)% %implied
     . M[t1/s1][t2/s2]= M[t2/s2][t1/s1] if not s1=s2   
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="T1"/>
                </OMATP>
                <OMV name="t"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map" name="EntrySBrackOpenSCommaTSBrackClose"/>
                </OMATP>
                <OMV name="e"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__Minus__3"/>
                <OMA>
                  <OMS cd="Nat" name="__Plus__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map" name="EntrySBrackOpenSCommaTSBrackClose"/>
                    </OMATP>
                    <OMV name="e"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Map_E1U2" name="T1"/>
                  </OMATP>
                  <OMV name="t"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="IfThenElse"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMA>
                    <OMS cd="Map" name="target1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map" name="EntrySBrackOpenSCommaTSBrackClose"/>
                      </OMATP>
                      <OMV name="e"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="T1"/>
                    </OMATP>
                    <OMV name="t"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Set_E1" name="__Minus__3"/>
                  <OMA>
                    <OMS cd="Set_E1" name="__Minus__3"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                      </OMATP>
                      <OMV name="M"/>
                    </OMATTR>
                    <OMA>
                      <OMS cd="Map" name="source1"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Map" name="EntrySBrackOpenSCommaTSBrackClose"/>
                        </OMATP>
                        <OMV name="e"/>
                      </OMATTR>
                    </OMA>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="T1"/>
                    </OMATP>
                    <OMV name="t"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat" name="__Plus__2"/>
                  <OMA>
                    <OMS cd="Set_E1" name="__Minus__3"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                      </OMATP>
                      <OMV name="M"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map_E1U2" name="T1"/>
                      </OMATP>
                      <OMV name="t"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map" name="EntrySBrackOpenSCommaTSBrackClose"/>
                    </OMATP>
                    <OMV name="e"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="minusTarget_nonEmpty_Map">
      <use format="Hets">minusTarget_nonEmpty_Map</use>
    </presentation>
    <axiom name="minus_empty_Map">
      <CMP>
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
            X: Set[S]; Y: Set[T]
     . isEmpty(M) &#60;=&#62; M=empty                           %(isEmpty_def_Map)%
     . [t/s] eps M &#60;=&#62; lookup(s,M)=t                      %(elemOf_def_Map)%
     .  M::X-&#62;Y &#60;=&#62; dom(M)=X /\ range(M) isSubsetOf Y   %(arrow_def_Map)%
     .  M+[t/s]=M[t/s]                                  %(overwrite2_def_Map)%
     .  empty-[t/s] = empty                             %(minus_empty_Map)%
     .  (M[t/s])-[t1/s1] = 
     . empty-s=empty                                %(minusSource_empty_Map)%
     . (M+e)-s=
     . empty-t=empty                             %(minusTarget_empty_Map)%
     . (M+e)-t = 
     . s eps dom(M)   &#60;=&#62; def lookup(s,M)                     %(dom_def_Map)%
     . t eps range(M) &#60;=&#62; exists s:S . lookup(s,M)=t        %(range_def_Map)%
     .  M union N = O &#60;=&#62;
     . def lookup(s,M) &#60;=&#62; exists t:T . [t/s] eps M   %(lookup_dom)% %implied
     . M[t1/s][t2/s] = M[t2/s]                 %(overwrite_Map)% %implied
     . M[t1/s1][t2/s2]= M[t2/s2][t1/s1] if not s1=s2   
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="S2"/>
                </OMATP>
                <OMV name="s"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="T1"/>
                </OMATP>
                <OMV name="t"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__Minus__3"/>
                <OMS cd="Map_E1" name="empty2"/>
                <OMA>
                  <OMS cd="Map" name="SBrackOpen__Division__SBrackClose1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="T1"/>
                    </OMATP>
                    <OMV name="t"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="S2"/>
                    </OMATP>
                    <OMV name="s"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMS cd="Map_E1" name="empty2"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="minus_empty_Map">
      <use format="Hets">minus_empty_Map</use>
    </presentation>
    <axiom name="minus_nonEmpty_Map">
      <CMP>
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
            X: Set[S]; Y: Set[T]
     . isEmpty(M) &#60;=&#62; M=empty                           %(isEmpty_def_Map)%
     . [t/s] eps M &#60;=&#62; lookup(s,M)=t                      %(elemOf_def_Map)%
     .  M::X-&#62;Y &#60;=&#62; dom(M)=X /\ range(M) isSubsetOf Y   %(arrow_def_Map)%
     .  M+[t/s]=M[t/s]                                  %(overwrite2_def_Map)%
     .  empty-[t/s] = empty                             %(minus_empty_Map)%
     .  (M[t/s])-[t1/s1] = 
     . empty-s=empty                                %(minusSource_empty_Map)%
     . (M+e)-s=
     . empty-t=empty                             %(minusTarget_empty_Map)%
     . (M+e)-t = 
     . s eps dom(M)   &#60;=&#62; def lookup(s,M)                     %(dom_def_Map)%
     . t eps range(M) &#60;=&#62; exists s:S . lookup(s,M)=t        %(range_def_Map)%
     .  M union N = O &#60;=&#62;
     . def lookup(s,M) &#60;=&#62; exists t:T . [t/s] eps M   %(lookup_dom)% %implied
     . M[t1/s][t2/s] = M[t2/s]                 %(overwrite_Map)% %implied
     . M[t1/s1][t2/s2]= M[t2/s2][t1/s1] if not s1=s2   
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="S2"/>
                </OMATP>
                <OMV name="s"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="S2"/>
                </OMATP>
                <OMV name="s1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="T1"/>
                </OMATP>
                <OMV name="t"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="T1"/>
                </OMATP>
                <OMV name="t1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Set_E1" name="__Minus__3"/>
                <OMA>
                  <OMS cd="Map_E1" name="__SBrackOpen__Division__SBrackClose2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="T1"/>
                    </OMATP>
                    <OMV name="t"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="S2"/>
                    </OMATP>
                    <OMV name="s"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Map" name="SBrackOpen__Division__SBrackClose1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="T1"/>
                    </OMATP>
                    <OMV name="t1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="S2"/>
                    </OMATP>
                    <OMV name="s1"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="IfThenElse"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMA>
                    <OMS cd="Map" name="SBrackOpen__Division__SBrackClose1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map_E1U2" name="T1"/>
                      </OMATP>
                      <OMV name="t"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map_E1U2" name="S2"/>
                      </OMATP>
                      <OMV name="s"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="Map" name="SBrackOpen__Division__SBrackClose1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map_E1U2" name="T1"/>
                      </OMATP>
                      <OMV name="t1"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map_E1U2" name="S2"/>
                      </OMATP>
                      <OMV name="s1"/>
                    </OMATTR>
                  </OMA>
                </OMA>
                <OMA>
                  <OMS cd="Set_E1" name="__Minus__3"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="S2"/>
                    </OMATP>
                    <OMV name="s"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat" name="__Plus__2"/>
                  <OMA>
                    <OMS cd="Set_E1" name="__Minus__3"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                      </OMATP>
                      <OMV name="M"/>
                    </OMATTR>
                    <OMA>
                      <OMS cd="Map" name="SBrackOpen__Division__SBrackClose1"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Map_E1U2" name="T1"/>
                        </OMATP>
                        <OMV name="t1"/>
                      </OMATTR>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Map_E1U2" name="S2"/>
                        </OMATP>
                        <OMV name="s1"/>
                      </OMATTR>
                    </OMA>
                  </OMA>
                  <OMA>
                    <OMS cd="Map" name="SBrackOpen__Division__SBrackClose1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map_E1U2" name="T1"/>
                      </OMATP>
                      <OMV name="t"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map_E1U2" name="S2"/>
                      </OMATP>
                      <OMV name="s"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="minus_nonEmpty_Map">
      <use format="Hets">minus_nonEmpty_Map</use>
    </presentation>
    <axiom name="overwrite2_def_Map">
      <CMP>
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
            X: Set[S]; Y: Set[T]
     . isEmpty(M) &#60;=&#62; M=empty                           %(isEmpty_def_Map)%
     . [t/s] eps M &#60;=&#62; lookup(s,M)=t                      %(elemOf_def_Map)%
     .  M::X-&#62;Y &#60;=&#62; dom(M)=X /\ range(M) isSubsetOf Y   %(arrow_def_Map)%
     .  M+[t/s]=M[t/s]                                  %(overwrite2_def_Map)%
     .  empty-[t/s] = empty                             %(minus_empty_Map)%
     .  (M[t/s])-[t1/s1] = 
     . empty-s=empty                                %(minusSource_empty_Map)%
     . (M+e)-s=
     . empty-t=empty                             %(minusTarget_empty_Map)%
     . (M+e)-t = 
     . s eps dom(M)   &#60;=&#62; def lookup(s,M)                     %(dom_def_Map)%
     . t eps range(M) &#60;=&#62; exists s:S . lookup(s,M)=t        %(range_def_Map)%
     .  M union N = O &#60;=&#62;
     . def lookup(s,M) &#60;=&#62; exists t:T . [t/s] eps M   %(lookup_dom)% %implied
     . M[t1/s][t2/s] = M[t2/s]                 %(overwrite_Map)% %implied
     . M[t1/s1][t2/s2]= M[t2/s2][t1/s1] if not s1=s2   
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="S2"/>
                </OMATP>
                <OMV name="s"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="T1"/>
                </OMATP>
                <OMV name="t"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__Plus__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Map" name="SBrackOpen__Division__SBrackClose1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="T1"/>
                    </OMATP>
                    <OMV name="t"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="S2"/>
                    </OMATP>
                    <OMV name="s"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Map_E1" name="__SBrackOpen__Division__SBrackClose2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Map_E1U2" name="T1"/>
                  </OMATP>
                  <OMV name="t"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Map_E1U2" name="S2"/>
                  </OMATP>
                  <OMV name="s"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="overwrite2_def_Map">
      <use format="Hets">overwrite2_def_Map</use>
    </presentation>
    <axiom name="overwrite_Map">
      <CMP>
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
            X: Set[S]; Y: Set[T]
     . isEmpty(M) &#60;=&#62; M=empty                           %(isEmpty_def_Map)%
     . [t/s] eps M &#60;=&#62; lookup(s,M)=t                      %(elemOf_def_Map)%
     .  M::X-&#62;Y &#60;=&#62; dom(M)=X /\ range(M) isSubsetOf Y   %(arrow_def_Map)%
     .  M+[t/s]=M[t/s]                                  %(overwrite2_def_Map)%
     .  empty-[t/s] = empty                             %(minus_empty_Map)%
     .  (M[t/s])-[t1/s1] = 
     . empty-s=empty                                %(minusSource_empty_Map)%
     . (M+e)-s=
     . empty-t=empty                             %(minusTarget_empty_Map)%
     . (M+e)-t = 
     . s eps dom(M)   &#60;=&#62; def lookup(s,M)                     %(dom_def_Map)%
     . t eps range(M) &#60;=&#62; exists s:S . lookup(s,M)=t        %(range_def_Map)%
     .  M union N = O &#60;=&#62;
     . def lookup(s,M) &#60;=&#62; exists t:T . [t/s] eps M   %(lookup_dom)% %implied
     . M[t1/s][t2/s] = M[t2/s]                 %(overwrite_Map)% %implied
     . M[t1/s1][t2/s2]= M[t2/s2][t1/s1] if not s1=s2   
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="S2"/>
                </OMATP>
                <OMV name="s"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="T1"/>
                </OMATP>
                <OMV name="t1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="T1"/>
                </OMATP>
                <OMV name="t2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Map_E1" name="__SBrackOpen__Division__SBrackClose2"/>
                <OMA>
                  <OMS cd="Map_E1" name="__SBrackOpen__Division__SBrackClose2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="T1"/>
                    </OMATP>
                    <OMV name="t1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="S2"/>
                    </OMATP>
                    <OMV name="s"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Map_E1U2" name="T1"/>
                  </OMATP>
                  <OMV name="t2"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Map_E1U2" name="S2"/>
                  </OMATP>
                  <OMV name="s"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Map_E1" name="__SBrackOpen__Division__SBrackClose2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Map_E1U2" name="T1"/>
                  </OMATP>
                  <OMV name="t2"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Map_E1U2" name="S2"/>
                  </OMATP>
                  <OMV name="s"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="overwrite_Map">
      <use format="Hets">overwrite_Map</use>
    </presentation>
    <axiom name="range_def_Map">
      <CMP>
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
            X: Set[S]; Y: Set[T]
     . isEmpty(M) &#60;=&#62; M=empty                           %(isEmpty_def_Map)%
     . [t/s] eps M &#60;=&#62; lookup(s,M)=t                      %(elemOf_def_Map)%
     .  M::X-&#62;Y &#60;=&#62; dom(M)=X /\ range(M) isSubsetOf Y   %(arrow_def_Map)%
     .  M+[t/s]=M[t/s]                                  %(overwrite2_def_Map)%
     .  empty-[t/s] = empty                             %(minus_empty_Map)%
     .  (M[t/s])-[t1/s1] = 
     . empty-s=empty                                %(minusSource_empty_Map)%
     . (M+e)-s=
     . empty-t=empty                             %(minusTarget_empty_Map)%
     . (M+e)-t = 
     . s eps dom(M)   &#60;=&#62; def lookup(s,M)                     %(dom_def_Map)%
     . t eps range(M) &#60;=&#62; exists s:S . lookup(s,M)=t        %(range_def_Map)%
     .  M union N = O &#60;=&#62;
     . def lookup(s,M) &#60;=&#62; exists t:T . [t/s] eps M   %(lookup_dom)% %implied
     . M[t1/s][t2/s] = M[t2/s]                 %(overwrite_Map)% %implied
     . M[t1/s1][t2/s2]= M[t2/s2][t1/s1] if not s1=s2   
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1U2" name="T1"/>
                </OMATP>
                <OMV name="t"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Set_E2" name="__eps__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Map_E1U2" name="T1"/>
                  </OMATP>
                  <OMV name="t"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Map" name="range1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMBIND>
                <OMS cd="casl" name="existential"/>
                <OMBVAR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="S2"/>
                    </OMATP>
                    <OMV name="s"/>
                  </OMATTR>
                </OMBVAR>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMA>
                    <OMS cd="Map_E1" name="lookup2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map_E1U2" name="S2"/>
                      </OMATP>
                      <OMV name="s"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                      </OMATP>
                      <OMV name="M"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="T1"/>
                    </OMATP>
                    <OMV name="t"/>
                  </OMATTR>
                </OMA>
              </OMBIND>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="range_def_Map">
      <use format="Hets">range_def_Map</use>
    </presentation>
    <axiom name="union_def_Map">
      <CMP>
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
     forall M,N,O: Map[S,T]; s,s1,s2:S; t,t1,t2: T; e: Entry[S,T];
            X: Set[S]; Y: Set[T]
     . isEmpty(M) &#60;=&#62; M=empty                           %(isEmpty_def_Map)%
     . [t/s] eps M &#60;=&#62; lookup(s,M)=t                      %(elemOf_def_Map)%
     .  M::X-&#62;Y &#60;=&#62; dom(M)=X /\ range(M) isSubsetOf Y   %(arrow_def_Map)%
     .  M+[t/s]=M[t/s]                                  %(overwrite2_def_Map)%
     .  empty-[t/s] = empty                             %(minus_empty_Map)%
     .  (M[t/s])-[t1/s1] = 
     . empty-s=empty                                %(minusSource_empty_Map)%
     . (M+e)-s=
     . empty-t=empty                             %(minusTarget_empty_Map)%
     . (M+e)-t = 
     . s eps dom(M)   &#60;=&#62; def lookup(s,M)                     %(dom_def_Map)%
     . t eps range(M) &#60;=&#62; exists s:S . lookup(s,M)=t        %(range_def_Map)%
     .  M union N = O &#60;=&#62;
     . def lookup(s,M) &#60;=&#62; exists t:T . [t/s] eps M   %(lookup_dom)% %implied
     . M[t1/s][t2/s] = M[t2/s]                 %(overwrite_Map)% %implied
     . M[t1/s1][t2/s2]= M[t2/s2][t1/s1] if not s1=s2   
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                </OMATP>
                <OMV name="N"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                </OMATP>
                <OMV name="O"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Set_E1" name="__union__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                    </OMATP>
                    <OMV name="N"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                  </OMATP>
                  <OMV name="O"/>
                </OMATTR>
              </OMA>
              <OMBIND>
                <OMS cd="casl" name="universal"/>
                <OMBVAR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map" name="EntrySBrackOpenSCommaTSBrackClose"/>
                    </OMATP>
                    <OMV name="e"/>
                  </OMATTR>
                </OMBVAR>
                <OMA>
                  <OMS cd="casl" name="equivalence"/>
                  <OMA>
                    <OMS cd="casl" name="predication"/>
                    <OMS cd="Set_E2" name="__eps__2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map" name="EntrySBrackOpenSCommaTSBrackClose"/>
                      </OMATP>
                      <OMV name="e"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                      </OMATP>
                      <OMV name="O"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="casl" name="disjunction"/>
                    <OMA>
                      <OMS cd="casl" name="predication"/>
                      <OMS cd="Set_E2" name="__eps__2"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Map" name="EntrySBrackOpenSCommaTSBrackClose"/>
                        </OMATP>
                        <OMV name="e"/>
                      </OMATTR>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                        </OMATP>
                        <OMV name="M"/>
                      </OMATTR>
                    </OMA>
                    <OMA>
                      <OMS cd="casl" name="predication"/>
                      <OMS cd="Set_E2" name="__eps__2"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Map" name="EntrySBrackOpenSCommaTSBrackClose"/>
                        </OMATP>
                        <OMV name="e"/>
                      </OMATTR>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                        </OMATP>
                        <OMV name="N"/>
                      </OMATTR>
                    </OMA>
                  </OMA>
                </OMA>
              </OMBIND>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="union_def_Map">
      <use format="Hets">union_def_Map</use>
    </presentation>
  </theory>
  <private for="Map">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Map_E1" Type:"GlobalDef" Origin:"DGExtension"
From:"Map_E1" Type:"GlobalThm Open Def Open" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Finite_P">
    <presentation for="Finite_P">
      <use format="Hets">[Finite,P,0]</use>
    </presentation>
    <symbol role="sort" name="Elem22"/>
    <presentation for="Elem22">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <theory xml:id="Finite_1E1">
    <presentation for="Finite_1E1">
      <use format="Hets">[Finite,1E,1]</use>
    </presentation>
    <imports from="#Finite_P"/>
    <imports from="Basic/Numbers.omdoc#Nat"/>
    <symbol role="sort" name="Elem21"/>
    <presentation for="Elem21">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="Finite_1E1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat" Type:"GlobalDef" Origin:"DGSpecInst Nat"
From:"Finite_P" Type:"GlobalDef" Origin:"DGSpecInst Nat"
]]></data>
  </private>
  <theory xml:id="Finite_1">
    <presentation for="Finite_1">
      <use format="Hets">[Finite,,1]</use>
    </presentation>
    <imports from="#Finite_1E1"/>
    <symbol name="f" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Nat" name="Nat3"/>
            <OMS cd="Finite_1E1" name="Elem21"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="f">
      <use format="Hets">[f]</use>
    </presentation>
    <axiom name="f_bounded">
      <CMP>
    . exists n:Nat . forall m:Nat . def f(m) =&#62; m&#60;n   %(f_bounded)%
    . exists n:Nat . forall m:Nat . def f(m) =&#62; m&#60;n   %(f_bounded)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="existential"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat" name="Nat3"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMBIND>
              <OMS cd="casl" name="universal"/>
              <OMBVAR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat" name="Nat3"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
              </OMBVAR>
              <OMA>
                <OMS cd="casl" name="implication"/>
                <OMA>
                  <OMS cd="casl" name="definedness"/>
                  <OMA>
                    <OMS cd="Finite_1" name="f"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat" name="Nat3"/>
                      </OMATP>
                      <OMV name="m"/>
                    </OMATTR>
                  </OMA>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Nat" name="__Lower__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat" name="Nat3"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat" name="Nat3"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
                <OMS cd="casl" name="true"/>
              </OMA>
            </OMBIND>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="f_bounded">
      <use format="Hets">f_bounded</use>
    </presentation>
    <axiom name="f_surjective">
      <CMP>
    . forall x:Elem . exists n:Nat . f(n)=x           %(f_surjective)%
    . forall x:Elem . exists n:Nat . f(n)=x           %(f_surjective)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Finite_1E1" name="Elem21"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMBIND>
              <OMS cd="casl" name="existential"/>
              <OMBVAR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat" name="Nat3"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMBVAR>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Finite_1" name="f"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat" name="Nat3"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Finite_1E1" name="Elem21"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMBIND>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="f_surjective">
      <use format="Hets">f_surjective</use>
    </presentation>
  </theory>
  <private for="Finite_1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Finite_1E1" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Finite">
    <presentation for="Finite">
      <use format="Hets">[Finite,,0]</use>
    </presentation>
    <symbol role="sort" name="Elem20"/>
    <presentation for="Elem20">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="Finite">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Finite_1" Type:"HidingDef" Origin:"DGRevealing"
]]></data>
  </private>
  <theory xml:id="TotalMap_P1A">
    <presentation for="TotalMap_P1A">
      <use format="Hets">[TotalMap,P1A,0]</use>
    </presentation>
    <symbol role="sort" name="S14"/>
    <presentation for="S14">
      <use format="Hets">[S]</use>
    </presentation>
  </theory>
  <private for="TotalMap_P1A">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Finite_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst Finite"
]]></data>
  </private>
  <theory xml:id="TotalMap_P1">
    <presentation for="TotalMap_P1">
      <use format="Hets">[TotalMap,P,1]</use>
    </presentation>
    <imports from="#Finite">
      <morphism hiding="Elem">
        <requation>
          <OMOBJ>
            <OMS cd="Finite" name="Elem20"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_P1" name="S14"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <imports from="#TotalMap_P1A"/>
  </theory>
  <private for="TotalMap_P1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"TotalMap_P1A" Type:"GlobalDef" Origin:"DGFitSpec"
From:"Finite" Type:"GlobalDef" Origin:"DGSpecInst Finite"
]]></data>
  </private>
  <theory xml:id="TotalMap_P2">
    <presentation for="TotalMap_P2">
      <use format="Hets">[TotalMap,P,2]</use>
    </presentation>
    <symbol role="sort" name="T9"/>
    <presentation for="T9">
      <use format="Hets">[T]</use>
    </presentation>
  </theory>
  <theory xml:id="TotalMap_P">
    <presentation for="TotalMap_P">
      <use format="Hets">[TotalMap,P,0]</use>
    </presentation>
    <imports from="#TotalMap_P1"/>
    <imports from="#TotalMap_P2"/>
    <symbol role="sort" name="S13"/>
    <presentation for="S13">
      <use format="Hets">[S]</use>
    </presentation>
  </theory>
  <private for="TotalMap_P">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"TotalMap_P2" Type:"GlobalDef" Origin:"DGFormalParams"
From:"TotalMap_P1" Type:"GlobalDef" Origin:"DGFormalParams"
]]></data>
  </private>
  <theory xml:id="TotalMap_1E1A">
    <presentation for="TotalMap_1E1A">
      <use format="Hets">[TotalMap,1E1A,0]</use>
    </presentation>
    <imports from="#Map_PI"/>
    <symbol role="sort" name="S12"/>
    <presentation for="S12">
      <use format="Hets">[S]</use>
    </presentation>
  </theory>
  <private for="TotalMap_1E1A">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Map_PI" Type:"GlobalDef" Origin:"DGExtension"
From:"Map_P1" Type:"GlobalThm Open None Open" Origin:"DGSpecInst Map"
]]></data>
  </private>
  <theory xml:id="TotalMap_1E1A1">
    <presentation for="TotalMap_1E1A1">
      <use format="Hets">[TotalMap,1E1A,1]</use>
    </presentation>
    <imports from="#Map_PI"/>
    <symbol role="sort" name="T8"/>
    <presentation for="T8">
      <use format="Hets">[T]</use>
    </presentation>
  </theory>
  <private for="TotalMap_1E1A1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Map_P2" Type:"GlobalThm Open None Open" Origin:"DGSpecInst Map"
From:"Map_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="TotalMap_1E1">
    <presentation for="TotalMap_1E1">
      <use format="Hets">[TotalMap,1E,1]</use>
    </presentation>
    <imports from="#Map">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="N02"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="N02"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="N12"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="N12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="N22"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="N22"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="N32"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="N32"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="N42"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="N42"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="N52"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="N52"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="N62"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="N62"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="N72"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="N72"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="N82"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="N82"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="N92"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="N92"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="__LowerEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="__Lower__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="__GreaterEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="__Greater__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="__Ast__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="__Ast__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="__AtAt__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="__AtAt__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="__DivisionQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="__DivisionQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="__Excla2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="__Excla2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="__MinusExcla__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="__MinusExcla__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="__MinusQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="__MinusQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="__Plus__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="__Plus__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="__Power__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="__Power__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="__div__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="__div__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="__mod__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="__mod__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="even2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="max2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="max2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="min2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="min2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="odd2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="pre2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="pre2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="suc2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalMap_1E1" name="suc2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <imports from="#TotalMap_1E1A"/>
    <imports from="#TotalMap_1E1A1"/>
    <imports from="#TotalMap_P"/>
  </theory>
  <private for="TotalMap_1E1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Map" Type:"GlobalDef" Origin:"DGSpecInst Map"
From:"TotalMap_1E1A" Type:"GlobalDef" Origin:"DGFitSpec"
From:"TotalMap_1E1A1" Type:"GlobalDef" Origin:"DGFitSpec"
From:"TotalMap_P" Type:"GlobalDef" Origin:"DGSpecInst Map"
]]></data>
  </private>
  <theory xml:id="TotalMap_1">
    <presentation for="TotalMap_1">
      <use format="Hets">[TotalMap,,1]</use>
    </presentation>
    <imports from="#TotalMap_1E1"/>
    <symbol role="sort" name="TotalMapSBrackOpenSCommaTSBrackClose1"/>
    <presentation for="TotalMapSBrackOpenSCommaTSBrackClose1">
      <use format="Hets">[TotalMap[S],[T]]</use>
    </presentation>
    <adt>
      <sortdef name="MapSBrackOpenSCommaTSBrackClose1" type="free">
        <insort for="#TotalMapSBrackOpenSCommaTSBrackClose1"/>
      </sortdef>
    </adt>
    <axiom name="Ax14">
      <CMP>
    sort TotalMap[S,T] = { M : Map[S,T] . forall x:S . def lookup(x,M) }
    sort TotalMap[S,T] = { M : Map[S,T] . forall x:S . def lookup(x,M) }
    sort TotalMap[S,T] = { M : Map[S,T] . forall x:S . def lookup(x,M) }
    sort TotalMap[S,T] = { M : Map[S,T] . forall x:S . def lookup(x,M) }
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="membership"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
                <OMS cd="TotalMap_1" name="TotalMapSBrackOpenSCommaTSBrackClose1"/>
              </OMA>
              <OMBIND>
                <OMS cd="casl" name="universal"/>
                <OMBVAR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Map_E1U2" name="S2"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMBVAR>
                <OMA>
                  <OMS cd="casl" name="definedness"/>
                  <OMA>
                    <OMS cd="Map_E1" name="lookup2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map_E1U2" name="S2"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Map_E1" name="MapSBrackOpenSCommaTSBrackClose1"/>
                      </OMATP>
                      <OMV name="M"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMBIND>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax14">
      <use format="Hets">Ax1</use>
    </presentation>
  </theory>
  <private for="TotalMap_1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"TotalMap_1E1" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="TotalMap">
    <presentation for="TotalMap">
      <use format="Hets">[TotalMap,,0]</use>
    </presentation>
    <symbol role="sort" name="TotalMapSBrackOpenSCommaTSBrackClose"/>
    <presentation for="TotalMapSBrackOpenSCommaTSBrackClose">
      <use format="Hets">[TotalMap[S],[T]]</use>
    </presentation>
    <symbol role="sort" name="T7"/>
    <presentation for="T7">
      <use format="Hets">[T]</use>
    </presentation>
    <symbol role="sort" name="SetSBrackOpenTSBrackClose1"/>
    <presentation for="SetSBrackOpenTSBrackClose1">
      <use format="Hets">[Set[T]]</use>
    </presentation>
    <symbol role="sort" name="SetSBrackOpenSSBrackClose2"/>
    <presentation for="SetSBrackOpenSSBrackClose2">
      <use format="Hets">[Set[S]]</use>
    </presentation>
    <symbol role="sort" name="S11"/>
    <presentation for="S11">
      <use format="Hets">[S]</use>
    </presentation>
    <symbol role="sort" name="Pos4"/>
    <presentation for="Pos4">
      <use format="Hets">[Pos]</use>
    </presentation>
    <symbol role="sort" name="Nat5"/>
    <presentation for="Nat5">
      <use format="Hets">[Nat]</use>
    </presentation>
    <symbol role="sort" name="EntrySBrackOpenSCommaTSBrackClose1"/>
    <presentation for="EntrySBrackOpenSCommaTSBrackClose1">
      <use format="Hets">[Entry[S],[T]]</use>
    </presentation>
    <adt>
      <sortdef name="Nat5" type="free">
        <insort for="#Pos4"/>
      </sortdef>
    </adt>
    <symbol name="__Lower__4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Lower__4">
      <use format="Hets">[__,&#60;,__]</use>
    </presentation>
    <symbol name="__LowerEquals__5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__LowerEquals__5">
      <use format="Hets">[__,&#60;=,__]</use>
    </presentation>
    <symbol name="__Greater__4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Greater__4">
      <use format="Hets">[__,&#62;,__]</use>
    </presentation>
    <symbol name="__GreaterEquals__4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__GreaterEquals__4">
      <use format="Hets">[__,&#62;=,__]</use>
    </presentation>
    <symbol name="__eps__12" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="TotalMap" name="EntrySBrackOpenSCommaTSBrackClose1"/>
            <OMS cd="TotalMap" name="TotalMapSBrackOpenSCommaTSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__eps__12">
      <use format="Hets">[__,eps,__]</use>
    </presentation>
    <symbol name="__eps__12" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="TotalMap" name="S11"/>
            <OMS cd="TotalMap" name="SetSBrackOpenSSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__eps__12">
      <use format="Hets">[__,eps,__]</use>
    </presentation>
    <symbol name="__eps__12" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="TotalMap" name="T7"/>
            <OMS cd="TotalMap" name="SetSBrackOpenTSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__eps__12">
      <use format="Hets">[__,eps,__]</use>
    </presentation>
    <symbol name="__isSubsetOf__10" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="TotalMap" name="SetSBrackOpenSSBrackClose2"/>
            <OMS cd="TotalMap" name="SetSBrackOpenSSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__isSubsetOf__10">
      <use format="Hets">[__,isSubsetOf,__]</use>
    </presentation>
    <symbol name="__isSubsetOf__10" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="TotalMap" name="SetSBrackOpenTSBrackClose1"/>
            <OMS cd="TotalMap" name="SetSBrackOpenTSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__isSubsetOf__10">
      <use format="Hets">[__,isSubsetOf,__]</use>
    </presentation>
    <symbol name="even4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="even4">
      <use format="Hets">[even]</use>
    </presentation>
    <symbol name="isNonEmpty8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="TotalMap" name="SetSBrackOpenSSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isNonEmpty8">
      <use format="Hets">[isNonEmpty]</use>
    </presentation>
    <symbol name="isNonEmpty8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="TotalMap" name="SetSBrackOpenTSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isNonEmpty8">
      <use format="Hets">[isNonEmpty]</use>
    </presentation>
    <symbol name="odd4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="odd4">
      <use format="Hets">[odd]</use>
    </presentation>
    <symbol name="Hash__9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="SetSBrackOpenSSBrackClose2"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="Hash__9">
      <use format="Hets">[#,__]</use>
    </presentation>
    <symbol name="Hash__9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="SetSBrackOpenTSBrackClose1"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="Hash__9">
      <use format="Hets">[#,__]</use>
    </presentation>
    <symbol name="N05" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N05">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N15" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N15">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="N15" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="Pos4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N15">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="N24" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N24">
      <use format="Hets">[2]</use>
    </presentation>
    <symbol name="N34" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N34">
      <use format="Hets">[3]</use>
    </presentation>
    <symbol name="N44" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N44">
      <use format="Hets">[4]</use>
    </presentation>
    <symbol name="N54" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N54">
      <use format="Hets">[5]</use>
    </presentation>
    <symbol name="N64" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N64">
      <use format="Hets">[6]</use>
    </presentation>
    <symbol name="N74" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N74">
      <use format="Hets">[7]</use>
    </presentation>
    <symbol name="N84" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N84">
      <use format="Hets">[8]</use>
    </presentation>
    <symbol name="N94" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N94">
      <use format="Hets">[9]</use>
    </presentation>
    <symbol name="SBrackOpen__Division__SBrackClose2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="T7"/>
            <OMS cd="TotalMap" name="S11"/>
            <OMS cd="TotalMap" name="EntrySBrackOpenSCommaTSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SBrackOpen__Division__SBrackClose2">
      <use format="Hets">[[,__,/,__,]]</use>
    </presentation>
    <symbol name="__Excla4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Excla4">
      <use format="Hets">[__,!]</use>
    </presentation>
    <symbol name="__Ast__6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Ast__6">
      <use format="Hets">[__,*,__]</use>
    </presentation>
    <symbol name="__Ast__6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="Pos4"/>
            <OMS cd="TotalMap" name="Pos4"/>
            <OMS cd="TotalMap" name="Pos4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Ast__6">
      <use format="Hets">[__,*,__]</use>
    </presentation>
    <symbol name="__Plus__5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__5">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__Plus__5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Pos4"/>
            <OMS cd="TotalMap" name="Pos4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__5">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__Plus__5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="Pos4"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Pos4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__5">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__Plus__5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="S11"/>
            <OMS cd="TotalMap" name="SetSBrackOpenSSBrackClose2"/>
            <OMS cd="TotalMap" name="SetSBrackOpenSSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__5">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__Plus__5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="SetSBrackOpenSSBrackClose2"/>
            <OMS cd="TotalMap" name="S11"/>
            <OMS cd="TotalMap" name="SetSBrackOpenSSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__5">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__Plus__5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="SetSBrackOpenTSBrackClose1"/>
            <OMS cd="TotalMap" name="T7"/>
            <OMS cd="TotalMap" name="SetSBrackOpenTSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__5">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__Plus__5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="T7"/>
            <OMS cd="TotalMap" name="SetSBrackOpenTSBrackClose1"/>
            <OMS cd="TotalMap" name="SetSBrackOpenTSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__5">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__Plus__5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="TotalMapSBrackOpenSCommaTSBrackClose"/>
            <OMS cd="TotalMap" name="EntrySBrackOpenSCommaTSBrackClose1"/>
            <OMS cd="TotalMap" name="TotalMapSBrackOpenSCommaTSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__5">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__Minus__11" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="SetSBrackOpenSSBrackClose2"/>
            <OMS cd="TotalMap" name="S11"/>
            <OMS cd="TotalMap" name="SetSBrackOpenSSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__11">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__Minus__11" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="SetSBrackOpenSSBrackClose2"/>
            <OMS cd="TotalMap" name="SetSBrackOpenSSBrackClose2"/>
            <OMS cd="TotalMap" name="SetSBrackOpenSSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__11">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__Minus__11" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="SetSBrackOpenTSBrackClose1"/>
            <OMS cd="TotalMap" name="SetSBrackOpenTSBrackClose1"/>
            <OMS cd="TotalMap" name="SetSBrackOpenTSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__11">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__Minus__11" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="SetSBrackOpenTSBrackClose1"/>
            <OMS cd="TotalMap" name="T7"/>
            <OMS cd="TotalMap" name="SetSBrackOpenTSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__11">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__MinusExcla__4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__MinusExcla__4">
      <use format="Hets">[__,-!,__]</use>
    </presentation>
    <symbol name="__MinusQuest__4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__MinusQuest__4">
      <use format="Hets">[__,-?,__]</use>
    </presentation>
    <symbol name="__DivisionQuest__4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__DivisionQuest__4">
      <use format="Hets">[__,/?,__]</use>
    </presentation>
    <symbol name="__AtAt__4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__AtAt__4">
      <use format="Hets">[__,@@,__]</use>
    </presentation>
    <symbol name="__SBrackOpen__Division__SBrackClose4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="TotalMapSBrackOpenSCommaTSBrackClose"/>
            <OMS cd="TotalMap" name="T7"/>
            <OMS cd="TotalMap" name="S11"/>
            <OMS cd="TotalMap" name="TotalMapSBrackOpenSCommaTSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__SBrackOpen__Division__SBrackClose4">
      <use format="Hets">[__,[,__,/,__,]]</use>
    </presentation>
    <symbol name="__Power__4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Power__4">
      <use format="Hets">[__,^,__]</use>
    </presentation>
    <symbol name="__div__4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__div__4">
      <use format="Hets">[__,div,__]</use>
    </presentation>
    <symbol name="__intersection__10" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="SetSBrackOpenSSBrackClose2"/>
            <OMS cd="TotalMap" name="SetSBrackOpenSSBrackClose2"/>
            <OMS cd="TotalMap" name="SetSBrackOpenSSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__intersection__10">
      <use format="Hets">[__,intersection,__]</use>
    </presentation>
    <symbol name="__intersection__10" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="SetSBrackOpenTSBrackClose1"/>
            <OMS cd="TotalMap" name="SetSBrackOpenTSBrackClose1"/>
            <OMS cd="TotalMap" name="SetSBrackOpenTSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__intersection__10">
      <use format="Hets">[__,intersection,__]</use>
    </presentation>
    <symbol name="__mod__4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__mod__4">
      <use format="Hets">[__,mod,__]</use>
    </presentation>
    <symbol name="__symDiff__8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="SetSBrackOpenSSBrackClose2"/>
            <OMS cd="TotalMap" name="SetSBrackOpenSSBrackClose2"/>
            <OMS cd="TotalMap" name="SetSBrackOpenSSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__symDiff__8">
      <use format="Hets">[__,symDiff,__]</use>
    </presentation>
    <symbol name="__symDiff__8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="SetSBrackOpenTSBrackClose1"/>
            <OMS cd="TotalMap" name="SetSBrackOpenTSBrackClose1"/>
            <OMS cd="TotalMap" name="SetSBrackOpenTSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__symDiff__8">
      <use format="Hets">[__,symDiff,__]</use>
    </presentation>
    <symbol name="__union__10" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="SetSBrackOpenSSBrackClose2"/>
            <OMS cd="TotalMap" name="SetSBrackOpenSSBrackClose2"/>
            <OMS cd="TotalMap" name="SetSBrackOpenSSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__union__10">
      <use format="Hets">[__,union,__]</use>
    </presentation>
    <symbol name="__union__10" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="SetSBrackOpenTSBrackClose1"/>
            <OMS cd="TotalMap" name="SetSBrackOpenTSBrackClose1"/>
            <OMS cd="TotalMap" name="SetSBrackOpenTSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__union__10">
      <use format="Hets">[__,union,__]</use>
    </presentation>
    <symbol name="__union__10" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="TotalMap" name="TotalMapSBrackOpenSCommaTSBrackClose"/>
            <OMS cd="TotalMap" name="TotalMapSBrackOpenSCommaTSBrackClose"/>
            <OMS cd="TotalMap" name="TotalMapSBrackOpenSCommaTSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__union__10">
      <use format="Hets">[__,union,__]</use>
    </presentation>
    <symbol name="lookup4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="S11"/>
            <OMS cd="TotalMap" name="TotalMapSBrackOpenSCommaTSBrackClose"/>
            <OMS cd="TotalMap" name="T7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="lookup4">
      <use format="Hets">[lookup]</use>
    </presentation>
    <symbol name="max4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="max4">
      <use format="Hets">[max]</use>
    </presentation>
    <symbol name="min4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="min4">
      <use format="Hets">[min]</use>
    </presentation>
    <symbol name="pre4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="pre4">
      <use format="Hets">[pre]</use>
    </presentation>
    <symbol name="range2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="TotalMapSBrackOpenSCommaTSBrackClose"/>
            <OMS cd="TotalMap" name="SetSBrackOpenTSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="range2">
      <use format="Hets">[range]</use>
    </presentation>
    <symbol name="source2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="EntrySBrackOpenSCommaTSBrackClose1"/>
            <OMS cd="TotalMap" name="S11"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="source2">
      <use format="Hets">[source]</use>
    </presentation>
    <symbol name="suc4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Nat5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="suc4">
      <use format="Hets">[suc]</use>
    </presentation>
    <symbol name="suc4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="Nat5"/>
            <OMS cd="TotalMap" name="Pos4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="suc4">
      <use format="Hets">[suc]</use>
    </presentation>
    <symbol name="target2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="EntrySBrackOpenSCommaTSBrackClose1"/>
            <OMS cd="TotalMap" name="T7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="target2">
      <use format="Hets">[target]</use>
    </presentation>
    <symbol name="BraceOpen__BraceClose10" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="S11"/>
            <OMS cd="TotalMap" name="SetSBrackOpenSSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BraceOpen__BraceClose10">
      <use format="Hets">[{,__,}]</use>
    </presentation>
    <symbol name="BraceOpen__BraceClose10" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="T7"/>
            <OMS cd="TotalMap" name="SetSBrackOpenTSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BraceOpen__BraceClose10">
      <use format="Hets">[{,__,}]</use>
    </presentation>
    <symbol name="BraceOpenBraceClose12" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="SetSBrackOpenSSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BraceOpenBraceClose12">
      <use format="Hets">[{,}]</use>
    </presentation>
    <symbol name="BraceOpenBraceClose12" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalMap" name="SetSBrackOpenTSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BraceOpenBraceClose12">
      <use format="Hets">[{,}]</use>
    </presentation>
  </theory>
  <private for="TotalMap">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"TotalMap_1" Type:"HidingDef" Origin:"DGHiding"
]]></data>
  </private>
  <theory xml:id="GenerateBag_PI">
    <presentation for="GenerateBag_PI">
      <use format="Hets">[GenerateBag,PI,0]</use>
    </presentation>
    <imports from="Basic/Numbers.omdoc#Nat"/>
  </theory>
  <private for="GenerateBag_PI">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="GenerateBag_P">
    <presentation for="GenerateBag_P">
      <use format="Hets">[GenerateBag,P,0]</use>
    </presentation>
    <imports from="#GenerateBag_PI"/>
    <symbol role="sort" name="Elem23"/>
    <presentation for="Elem23">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="GenerateBag_P">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"GenerateBag_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="GenerateBag">
    <presentation for="GenerateBag">
      <use format="Hets">[GenerateBag,,0]</use>
    </presentation>
    <imports from="#GenerateBag_P"/>
    <symbol role="sort" name="BagSBrackOpenElemSBrackClose1"/>
    <presentation for="BagSBrackOpenElemSBrackClose1">
      <use format="Hets">[Bag[Elem]]</use>
    </presentation>
    <symbol name="freq1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="GenerateBag" name="BagSBrackOpenElemSBrackClose1"/>
            <OMS cd="GenerateBag_P" name="Elem23"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="freq1">
      <use format="Hets">[freq]</use>
    </presentation>
    <symbol name="BraceOpenBraceClose5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="GenerateBag" name="BagSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BraceOpenBraceClose5">
      <use format="Hets">[{,}]</use>
    </presentation>
    <axiom name="equality_Bag">
      <CMP>
  forall x,y:Elem; M,N:Bag[Elem]
  forall x,y:Elem; M,N:Bag[Elem]
  . freq({} ,y) = 0                              %(freq_empty_Bag)%
  . freq(M+x,y) = suc(freq(M,y)) when x=y else  
  . M=N &#60;=&#62; forall x:Elem. freq(M,x)=freq(N,x)   %(equality_Bag)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBag" name="BagSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBag" name="BagSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="N"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="GenerateBag" name="BagSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="GenerateBag" name="BagSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="N"/>
                </OMATTR>
              </OMA>
              <OMBIND>
                <OMS cd="casl" name="universal"/>
                <OMBVAR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBag_P" name="Elem23"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMBVAR>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMA>
                    <OMS cd="GenerateBag" name="freq1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="GenerateBag" name="BagSBrackOpenElemSBrackClose1"/>
                      </OMATP>
                      <OMV name="M"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="GenerateBag_P" name="Elem23"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="GenerateBag" name="freq1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="GenerateBag" name="BagSBrackOpenElemSBrackClose1"/>
                      </OMATP>
                      <OMV name="N"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="GenerateBag_P" name="Elem23"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMBIND>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="equality_Bag">
      <use format="Hets">equality_Bag</use>
    </presentation>
    <axiom name="freq_empty_Bag">
      <CMP>
  forall x,y:Elem; M,N:Bag[Elem]
  forall x,y:Elem; M,N:Bag[Elem]
  . freq({} ,y) = 0                              %(freq_empty_Bag)%
  . freq(M+x,y) = suc(freq(M,y)) when x=y else  
  . M=N &#60;=&#62; forall x:Elem. freq(M,x)=freq(N,x)   %(equality_Bag)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBag_P" name="Elem23"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="GenerateBag" name="freq1"/>
                <OMS cd="GenerateBag" name="BraceOpenBraceClose5"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="GenerateBag_P" name="Elem23"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMS cd="Nat" name="N02"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="freq_empty_Bag">
      <use format="Hets">freq_empty_Bag</use>
    </presentation>
    <axiom name="freq_nonEmpty_Bag">
      <CMP>
  forall x,y:Elem; M,N:Bag[Elem]
  forall x,y:Elem; M,N:Bag[Elem]
  . freq({} ,y) = 0                              %(freq_empty_Bag)%
  . freq(M+x,y) = suc(freq(M,y)) when x=y else  
  . M=N &#60;=&#62; forall x:Elem. freq(M,x)=freq(N,x)   %(equality_Bag)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBag_P" name="Elem23"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBag_P" name="Elem23"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBag" name="BagSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="GenerateBag" name="freq1"/>
                <OMA>
                  <OMS cd="Nat" name="__Plus__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBag" name="BagSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBag_P" name="Elem23"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="GenerateBag_P" name="Elem23"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="IfThenElse"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBag_P" name="Elem23"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBag_P" name="Elem23"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat" name="suc2"/>
                  <OMA>
                    <OMS cd="GenerateBag" name="freq1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="GenerateBag" name="BagSBrackOpenElemSBrackClose1"/>
                      </OMATP>
                      <OMV name="M"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="GenerateBag_P" name="Elem23"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                  </OMA>
                </OMA>
                <OMA>
                  <OMS cd="GenerateBag" name="freq1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBag" name="BagSBrackOpenElemSBrackClose1"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBag_P" name="Elem23"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="freq_nonEmpty_Bag">
      <use format="Hets">freq_nonEmpty_Bag</use>
    </presentation>
    <axiom name="ga_generated_BagSBrackOpenElemSBrackClose">
      <CMP/>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="sort-gen-ax"/>
            <OMBIND>
              <OMS cd="casl" name="Bag[Elem]"/>
              <OMBVAR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="constraint-indices"/>
                    <OMSTR>0|-1|</OMSTR>
                  </OMATP>
                  <OMS cd="Nat" name="__Plus__2"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="constraint-indices"/>
                    <OMSTR/>
                  </OMATP>
                  <OMS cd="GenerateBag" name="BraceOpenBraceClose5"/>
                </OMATTR>
              </OMBVAR>
              <OMS cd="casl" name="Bag[Elem]"/>
            </OMBIND>
            <OMS cd="casl" name="false"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_generated_BagSBrackOpenElemSBrackClose">
      <use format="Hets">ga_generated_Bag[Elem]</use>
    </presentation>
  </theory>
  <private for="GenerateBag">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"GenerateBag_P" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Bag_PI">
    <presentation for="Bag_PI">
      <use format="Hets">[Bag,PI,0]</use>
    </presentation>
    <imports from="Basic/Numbers.omdoc#Nat"/>
  </theory>
  <private for="Bag_PI">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="Bag_P">
    <presentation for="Bag_P">
      <use format="Hets">[Bag,P,0]</use>
    </presentation>
    <imports from="#Bag_PI"/>
    <symbol role="sort" name="Elem3"/>
    <presentation for="Elem3">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="Bag_P">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Bag_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Bag_E1A">
    <presentation for="Bag_E1A">
      <use format="Hets">[Bag,E1A,0]</use>
    </presentation>
    <imports from="#GenerateBag_PI"/>
    <symbol role="sort" name="Elem4"/>
    <presentation for="Elem4">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="Bag_E1A">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"GenerateBag_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst GenerateBag"
From:"GenerateBag_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Bag_E1">
    <presentation for="Bag_E1">
      <use format="Hets">[Bag,E,1]</use>
    </presentation>
    <imports from="#Bag_E1A"/>
    <imports from="#Bag_P"/>
    <imports from="#GenerateBag">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="N02"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="N02"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="N12"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="N12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="N22"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="N22"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="N32"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="N32"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="N42"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="N42"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="N52"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="N52"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="N62"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="N62"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="N72"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="N72"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="N82"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="N82"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="N92"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="N92"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="__LowerEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="__Lower__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="__GreaterEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="__Greater__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="__Ast__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="__Ast__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="__AtAt__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="__AtAt__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="__DivisionQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="__DivisionQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="__Excla2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="__Excla2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="__MinusExcla__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="__MinusExcla__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="__MinusQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="__MinusQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="__Plus__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="__Plus__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="__Power__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="__Power__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="__div__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="__div__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="__mod__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="__mod__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="even2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="max2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="max2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="min2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="min2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="odd2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="pre2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="pre2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="GenerateBag" name="suc2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Bag_E1" name="suc2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <symbol role="sort" name="BagSBrackOpenElemSBrackClose"/>
    <presentation for="BagSBrackOpenElemSBrackClose">
      <use format="Hets">[Bag[Elem]]</use>
    </presentation>
    <symbol name="freq" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
            <OMS cd="Bag_P" name="Elem3"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="freq">
      <use format="Hets">[freq]</use>
    </presentation>
    <symbol name="BraceOpenBraceClose1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BraceOpenBraceClose1">
      <use format="Hets">[{,}]</use>
    </presentation>
  </theory>
  <private for="Bag_E1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Bag_P" Type:"GlobalDef" Origin:"DGSpecInst GenerateBag"
From:"Bag_E1A" Type:"GlobalDef" Origin:"DGFitSpec"
From:"GenerateBag" Type:"GlobalDef" Origin:"DGSpecInst GenerateBag"
]]></data>
  </private>
  <theory xml:id="Bag">
    <presentation for="Bag">
      <use format="Hets">[Bag,,0]</use>
    </presentation>
    <imports from="#Bag_E1"/>
    <symbol name="__eps__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Bag_P" name="Elem3"/>
            <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__eps__1">
      <use format="Hets">[__,eps,__]</use>
    </presentation>
    <symbol name="__isSubsetOf__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
            <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__isSubsetOf__1">
      <use format="Hets">[__,isSubsetOf,__]</use>
    </presentation>
    <symbol name="isEmpty1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isEmpty1">
      <use format="Hets">[isEmpty]</use>
    </presentation>
    <symbol name="__Minus__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
            <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
            <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__2">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__Minus__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
            <OMS cd="Bag_P" name="Elem3"/>
            <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__2">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__intersection__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
            <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
            <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__intersection__1">
      <use format="Hets">[__,intersection,__]</use>
    </presentation>
    <symbol name="__union__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
            <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
            <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__union__1">
      <use format="Hets">[__,union,__]</use>
    </presentation>
    <symbol name="BraceOpen__BraceClose1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Bag_P" name="Elem3"/>
            <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BraceOpen__BraceClose1">
      <use format="Hets">[{,__,}]</use>
    </presentation>
    <axiom name="addElem_def_Bag">
      <CMP>
  forall n,m: Nat; x,y: Elem; M,N,O: Bag[Elem]
  forall n,m: Nat; x,y: Elem; M,N,O: Bag[Elem]
  forall n,m: Nat; x,y: Elem; M,N,O: Bag[Elem]
  . isEmpty(M) &#60;=&#62; M={}                         %(isEmpty_def_Bag)%
  . x eps M   &#60;=&#62; freq(M,x) &#62; 0                %(elemOf_def_Bag)%
  . M isSubsetOf N &#60;=&#62; 
  . x + M = M + x                              %(addElem_def_Bag)%
  . M - x = N &#60;=&#62;
  . M - N = O &#60;=&#62;
  . M union N = O &#60;=&#62;
  . M intersection N = O &#60;=&#62;
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_P" name="Elem3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__Plus__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_P" name="Elem3"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat" name="__Plus__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_P" name="Elem3"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="addElem_def_Bag">
      <use format="Hets">addElem_def_Bag</use>
    </presentation>
    <axiom name="difference_def_Bag">
      <CMP>
  forall n,m: Nat; x,y: Elem; M,N,O: Bag[Elem]
  forall n,m: Nat; x,y: Elem; M,N,O: Bag[Elem]
  forall n,m: Nat; x,y: Elem; M,N,O: Bag[Elem]
  . isEmpty(M) &#60;=&#62; M={}                         %(isEmpty_def_Bag)%
  . x eps M   &#60;=&#62; freq(M,x) &#62; 0                %(elemOf_def_Bag)%
  . M isSubsetOf N &#60;=&#62; 
  . x + M = M + x                              %(addElem_def_Bag)%
  . M - x = N &#60;=&#62;
  . M - N = O &#60;=&#62;
  . M union N = O &#60;=&#62;
  . M intersection N = O &#60;=&#62;
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="N"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="O"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Bag" name="__Minus__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="N"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="O"/>
                </OMATTR>
              </OMA>
              <OMBIND>
                <OMS cd="casl" name="universal"/>
                <OMBVAR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Bag_P" name="Elem3"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMBVAR>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMA>
                    <OMS cd="Bag_E1" name="freq"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                      </OMATP>
                      <OMV name="O"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Bag_P" name="Elem3"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="Nat" name="__MinusExcla__2"/>
                    <OMA>
                      <OMS cd="Bag_E1" name="freq"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                        </OMATP>
                        <OMV name="M"/>
                      </OMATTR>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Bag_P" name="Elem3"/>
                        </OMATP>
                        <OMV name="x"/>
                      </OMATTR>
                    </OMA>
                    <OMA>
                      <OMS cd="Bag_E1" name="freq"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                        </OMATP>
                        <OMV name="N"/>
                      </OMATTR>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Bag_P" name="Elem3"/>
                        </OMATP>
                        <OMV name="x"/>
                      </OMATTR>
                    </OMA>
                  </OMA>
                </OMA>
              </OMBIND>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="difference_def_Bag">
      <use format="Hets">difference_def_Bag</use>
    </presentation>
    <axiom name="elemOf_def_Bag">
      <CMP>
  forall n,m: Nat; x,y: Elem; M,N,O: Bag[Elem]
  forall n,m: Nat; x,y: Elem; M,N,O: Bag[Elem]
  forall n,m: Nat; x,y: Elem; M,N,O: Bag[Elem]
  . isEmpty(M) &#60;=&#62; M={}                         %(isEmpty_def_Bag)%
  . x eps M   &#60;=&#62; freq(M,x) &#62; 0                %(elemOf_def_Bag)%
  . M isSubsetOf N &#60;=&#62; 
  . x + M = M + x                              %(addElem_def_Bag)%
  . M - x = N &#60;=&#62;
  . M - N = O &#60;=&#62;
  . M union N = O &#60;=&#62;
  . M intersection N = O &#60;=&#62;
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_P" name="Elem3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Bag" name="__eps__1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_P" name="Elem3"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat" name="__Greater__2"/>
                <OMA>
                  <OMS cd="Bag_E1" name="freq"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Bag_P" name="Elem3"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
                <OMS cd="Nat" name="N02"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="elemOf_def_Bag">
      <use format="Hets">elemOf_def_Bag</use>
    </presentation>
    <axiom name="ga_assoc___intersection__">
      <CMP>
           __ intersection __: Bag[Elem] * Bag[Elem] -&#62; Bag[Elem],
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="z"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Bag" name="__intersection__1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Bag" name="__intersection__1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="z"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Bag" name="__intersection__1"/>
                <OMA>
                  <OMS cd="Bag" name="__intersection__1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="z"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_assoc___intersection__">
      <use format="Hets">ga_assoc___intersection__</use>
    </presentation>
    <axiom name="ga_assoc___union__">
      <CMP>
  ops      __ union __: Bag[Elem] * Bag[Elem] -&#62; Bag[Elem],
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="z"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Bag" name="__union__1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Bag" name="__union__1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="z"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Bag" name="__union__1"/>
                <OMA>
                  <OMS cd="Bag" name="__union__1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="z"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_assoc___union__">
      <use format="Hets">ga_assoc___union__</use>
    </presentation>
    <axiom name="ga_comm___intersection__">
      <CMP>
           __ intersection __: Bag[Elem] * Bag[Elem] -&#62; Bag[Elem],
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Bag" name="__intersection__1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Bag" name="__intersection__1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_comm___intersection__">
      <use format="Hets">ga_comm___intersection__</use>
    </presentation>
    <axiom name="ga_comm___union__">
      <CMP>
  ops      __ union __: Bag[Elem] * Bag[Elem] -&#62; Bag[Elem],
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Bag" name="__union__1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Bag" name="__union__1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_comm___union__">
      <use format="Hets">ga_comm___union__</use>
    </presentation>
    <axiom name="ga_idem___intersection__">
      <CMP>
           __ intersection __: Bag[Elem] * Bag[Elem] -&#62; Bag[Elem],
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Bag" name="__intersection__1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_idem___intersection__">
      <use format="Hets">ga_idem___intersection__</use>
    </presentation>
    <axiom name="ga_left_unit___union__">
      <CMP>
  ops      __ union __: Bag[Elem] * Bag[Elem] -&#62; Bag[Elem],
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Bag" name="__union__1"/>
                <OMS cd="Bag_E1" name="BraceOpenBraceClose1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_left_unit___union__">
      <use format="Hets">ga_left_unit___union__</use>
    </presentation>
    <axiom name="ga_right_unit___union__">
      <CMP>
  ops      __ union __: Bag[Elem] * Bag[Elem] -&#62; Bag[Elem],
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Bag" name="__union__1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMS cd="Bag_E1" name="BraceOpenBraceClose1"/>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_right_unit___union__">
      <use format="Hets">ga_right_unit___union__</use>
    </presentation>
    <axiom name="intersection_def_Bag">
      <CMP>
  forall n,m: Nat; x,y: Elem; M,N,O: Bag[Elem]
  forall n,m: Nat; x,y: Elem; M,N,O: Bag[Elem]
  forall n,m: Nat; x,y: Elem; M,N,O: Bag[Elem]
  . isEmpty(M) &#60;=&#62; M={}                         %(isEmpty_def_Bag)%
  . x eps M   &#60;=&#62; freq(M,x) &#62; 0                %(elemOf_def_Bag)%
  . M isSubsetOf N &#60;=&#62; 
  . x + M = M + x                              %(addElem_def_Bag)%
  . M - x = N &#60;=&#62;
  . M - N = O &#60;=&#62;
  . M union N = O &#60;=&#62;
  . M intersection N = O &#60;=&#62;
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="N"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="O"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Bag" name="__intersection__1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="N"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="O"/>
                </OMATTR>
              </OMA>
              <OMBIND>
                <OMS cd="casl" name="universal"/>
                <OMBVAR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Bag_P" name="Elem3"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMBVAR>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMA>
                    <OMS cd="Bag_E1" name="freq"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                      </OMATP>
                      <OMV name="O"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Bag_P" name="Elem3"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="Nat" name="min2"/>
                    <OMA>
                      <OMS cd="Bag_E1" name="freq"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                        </OMATP>
                        <OMV name="M"/>
                      </OMATTR>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Bag_P" name="Elem3"/>
                        </OMATP>
                        <OMV name="x"/>
                      </OMATTR>
                    </OMA>
                    <OMA>
                      <OMS cd="Bag_E1" name="freq"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                        </OMATP>
                        <OMV name="N"/>
                      </OMATTR>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Bag_P" name="Elem3"/>
                        </OMATP>
                        <OMV name="x"/>
                      </OMATTR>
                    </OMA>
                  </OMA>
                </OMA>
              </OMBIND>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="intersection_def_Bag">
      <use format="Hets">intersection_def_Bag</use>
    </presentation>
    <axiom name="isEmpty_def_Bag">
      <CMP>
  forall n,m: Nat; x,y: Elem; M,N,O: Bag[Elem]
  forall n,m: Nat; x,y: Elem; M,N,O: Bag[Elem]
  forall n,m: Nat; x,y: Elem; M,N,O: Bag[Elem]
  . isEmpty(M) &#60;=&#62; M={}                         %(isEmpty_def_Bag)%
  . x eps M   &#60;=&#62; freq(M,x) &#62; 0                %(elemOf_def_Bag)%
  . M isSubsetOf N &#60;=&#62; 
  . x + M = M + x                              %(addElem_def_Bag)%
  . M - x = N &#60;=&#62;
  . M - N = O &#60;=&#62;
  . M union N = O &#60;=&#62;
  . M intersection N = O &#60;=&#62;
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Bag" name="isEmpty1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
                <OMS cd="Bag_E1" name="BraceOpenBraceClose1"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isEmpty_def_Bag">
      <use format="Hets">isEmpty_def_Bag</use>
    </presentation>
    <axiom name="isSubsetOf_def_Bag">
      <CMP>
  forall n,m: Nat; x,y: Elem; M,N,O: Bag[Elem]
  forall n,m: Nat; x,y: Elem; M,N,O: Bag[Elem]
  forall n,m: Nat; x,y: Elem; M,N,O: Bag[Elem]
  . isEmpty(M) &#60;=&#62; M={}                         %(isEmpty_def_Bag)%
  . x eps M   &#60;=&#62; freq(M,x) &#62; 0                %(elemOf_def_Bag)%
  . M isSubsetOf N &#60;=&#62; 
  . x + M = M + x                              %(addElem_def_Bag)%
  . M - x = N &#60;=&#62;
  . M - N = O &#60;=&#62;
  . M union N = O &#60;=&#62;
  . M intersection N = O &#60;=&#62;
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="N"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Bag" name="__isSubsetOf__1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="M"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="N"/>
                </OMATTR>
              </OMA>
              <OMBIND>
                <OMS cd="casl" name="universal"/>
                <OMBVAR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Bag_P" name="Elem3"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMBVAR>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Nat" name="__LowerEquals__2"/>
                  <OMA>
                    <OMS cd="Bag_E1" name="freq"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                      </OMATP>
                      <OMV name="M"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Bag_P" name="Elem3"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="Bag_E1" name="freq"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                      </OMATP>
                      <OMV name="N"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Bag_P" name="Elem3"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMBIND>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isSubsetOf_def_Bag">
      <use format="Hets">isSubsetOf_def_Bag</use>
    </presentation>
    <axiom name="removeElem_def_Bag">
      <CMP>
  forall n,m: Nat; x,y: Elem; M,N,O: Bag[Elem]
  forall n,m: Nat; x,y: Elem; M,N,O: Bag[Elem]
  forall n,m: Nat; x,y: Elem; M,N,O: Bag[Elem]
  . isEmpty(M) &#60;=&#62; M={}                         %(isEmpty_def_Bag)%
  . x eps M   &#60;=&#62; freq(M,x) &#62; 0                %(elemOf_def_Bag)%
  . M isSubsetOf N &#60;=&#62; 
  . x + M = M + x                              %(addElem_def_Bag)%
  . M - x = N &#60;=&#62;
  . M - N = O &#60;=&#62;
  . M union N = O &#60;=&#62;
  . M intersection N = O &#60;=&#62;
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_P" name="Elem3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="N"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Bag" name="__Minus__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Bag_P" name="Elem3"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="N"/>
                </OMATTR>
              </OMA>
              <OMBIND>
                <OMS cd="casl" name="universal"/>
                <OMBVAR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Bag_P" name="Elem3"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMBVAR>
                <OMA>
                  <OMS cd="casl" name="conjunction"/>
                  <OMA>
                    <OMS cd="casl" name="implication"/>
                    <OMA>
                      <OMS cd="casl" name="strong-equation"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Bag_P" name="Elem3"/>
                        </OMATP>
                        <OMV name="x"/>
                      </OMATTR>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Bag_P" name="Elem3"/>
                        </OMATP>
                        <OMV name="y"/>
                      </OMATTR>
                    </OMA>
                    <OMA>
                      <OMS cd="casl" name="strong-equation"/>
                      <OMA>
                        <OMS cd="Bag_E1" name="freq"/>
                        <OMATTR>
                          <OMATP>
                            <OMS cd="casl" name="type"/>
                            <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                          </OMATP>
                          <OMV name="N"/>
                        </OMATTR>
                        <OMATTR>
                          <OMATP>
                            <OMS cd="casl" name="type"/>
                            <OMS cd="Bag_P" name="Elem3"/>
                          </OMATP>
                          <OMV name="y"/>
                        </OMATTR>
                      </OMA>
                      <OMA>
                        <OMS cd="Nat" name="__MinusExcla__2"/>
                        <OMA>
                          <OMS cd="Bag_E1" name="freq"/>
                          <OMATTR>
                            <OMATP>
                              <OMS cd="casl" name="type"/>
                              <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                            </OMATP>
                            <OMV name="M"/>
                          </OMATTR>
                          <OMATTR>
                            <OMATP>
                              <OMS cd="casl" name="type"/>
                              <OMS cd="Bag_P" name="Elem3"/>
                            </OMATP>
                            <OMV name="x"/>
                          </OMATTR>
                        </OMA>
                        <OMS cd="Nat" name="N12"/>
                      </OMA>
                    </OMA>
                    <OMS cd="casl" name="true"/>
                  </OMA>
                  <OMA>
                    <OMS cd="casl" name="implication"/>
                    <OMA>
                      <OMS cd="casl" name="neg"/>
                      <OMA>
                        <OMS cd="casl" name="strong-equation"/>
                        <OMATTR>
                          <OMATP>
                            <OMS cd="casl" name="type"/>
                            <OMS cd="Bag_P" name="Elem3"/>
                          </OMATP>
                          <OMV name="x"/>
                        </OMATTR>
                        <OMATTR>
                          <OMATP>
                            <OMS cd="casl" name="type"/>
                            <OMS cd="Bag_P" name="Elem3"/>
                          </OMATP>
                          <OMV name="y"/>
                        </OMATTR>
                      </OMA>
                    </OMA>
                    <OMA>
                      <OMS cd="casl" name="strong-equation"/>
                      <OMA>
                        <OMS cd="Bag_E1" name="freq"/>
                        <OMATTR>
                          <OMATP>
                            <OMS cd="casl" name="type"/>
                            <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                          </OMATP>
                          <OMV name="N"/>
                        </OMATTR>
                        <OMATTR>
                          <OMATP>
                            <OMS cd="casl" name="type"/>
                            <OMS cd="Bag_P" name="Elem3"/>
                          </OMATP>
                          <OMV name="y"/>
                        </OMATTR>
                      </OMA>
                      <OMA>
                        <OMS cd="Bag_E1" name="freq"/>
                        <OMATTR>
                          <OMATP>
                            <OMS cd="casl" name="type"/>
                            <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                          </OMATP>
                          <OMV name="M"/>
                        </OMATTR>
                        <OMATTR>
                          <OMATP>
                            <OMS cd="casl" name="type"/>
                            <OMS cd="Bag_P" name="Elem3"/>
                          </OMATP>
                          <OMV name="y"/>
                        </OMATTR>
                      </OMA>
                    </OMA>
                    <OMS cd="casl" name="true"/>
                  </OMA>
                </OMA>
              </OMBIND>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="removeElem_def_Bag">
      <use format="Hets">removeElem_def_Bag</use>
    </presentation>
    <axiom name="singleton_def_Bag">
      <CMP>
           {__}(x:Elem): Bag[Elem] = {} + x	%(singleton_def_Bag)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_P" name="Elem3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Bag" name="BraceOpen__BraceClose1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_P" name="Elem3"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat" name="__Plus__2"/>
                <OMS cd="Bag_E1" name="BraceOpenBraceClose1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_P" name="Elem3"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="singleton_def_Bag">
      <use format="Hets">singleton_def_Bag</use>
    </presentation>
    <axiom name="union_def_Bag">
      <CMP>
  forall n,m: Nat; x,y: Elem; M,N,O: Bag[Elem]
  forall n,m: Nat; x,y: Elem; M,N,O: Bag[Elem]
  forall n,m: Nat; x,y: Elem; M,N,O: Bag[Elem]
  . isEmpty(M) &#60;=&#62; M={}                         %(isEmpty_def_Bag)%
  . x eps M   &#60;=&#62; freq(M,x) &#62; 0                %(elemOf_def_Bag)%
  . M isSubsetOf N &#60;=&#62; 
  . x + M = M + x                              %(addElem_def_Bag)%
  . M - x = N &#60;=&#62;
  . M - N = O &#60;=&#62;
  . M union N = O &#60;=&#62;
  . M intersection N = O &#60;=&#62;
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="M"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="N"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="O"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Bag" name="__union__1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="M"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="N"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="O"/>
                </OMATTR>
              </OMA>
              <OMBIND>
                <OMS cd="casl" name="universal"/>
                <OMBVAR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Bag_P" name="Elem3"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMBVAR>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMA>
                    <OMS cd="Bag_E1" name="freq"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                      </OMATP>
                      <OMV name="O"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Bag_P" name="Elem3"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="Nat" name="__Plus__2"/>
                    <OMA>
                      <OMS cd="Bag_E1" name="freq"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                        </OMATP>
                        <OMV name="M"/>
                      </OMATTR>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Bag_P" name="Elem3"/>
                        </OMATP>
                        <OMV name="x"/>
                      </OMATTR>
                    </OMA>
                    <OMA>
                      <OMS cd="Bag_E1" name="freq"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Bag_E1" name="BagSBrackOpenElemSBrackClose"/>
                        </OMATP>
                        <OMV name="N"/>
                      </OMATTR>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Bag_P" name="Elem3"/>
                        </OMATP>
                        <OMV name="x"/>
                      </OMATTR>
                    </OMA>
                  </OMA>
                </OMA>
              </OMBIND>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="union_def_Bag">
      <use format="Hets">union_def_Bag</use>
    </presentation>
  </theory>
  <private for="Bag">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Bag_E1" Type:"GlobalDef" Origin:"DGExtension"
From:"Bag_E1" Type:"GlobalThm Open Def Open" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="CommutativeMonoid_in_Bag_VGI">
    <presentation for="CommutativeMonoid_in_Bag_VGI">
      <use format="Hets">[CommutativeMonoid_in_Bag,VGI,0]</use>
    </presentation>
    <imports from="Basic/Numbers.omdoc#Nat"/>
  </theory>
  <private for="CommutativeMonoid_in_Bag_VGI">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="CommutativeMonoid_in_Bag_VG">
    <presentation for="CommutativeMonoid_in_Bag_VG">
      <use format="Hets">[CommutativeMonoid_in_Bag,VG,0]</use>
    </presentation>
    <imports from="#CommutativeMonoid_in_Bag_VGI"/>
    <symbol role="sort" name="Elem19"/>
    <presentation for="Elem19">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="CommutativeMonoid_in_Bag_VG">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"CommutativeMonoid_in_Bag_VGI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="CommutativeMonoid_in_Bag_TA">
    <presentation for="CommutativeMonoid_in_Bag_TA">
      <use format="Hets">[CommutativeMonoid_in_Bag,TA,0]</use>
    </presentation>
    <imports from="#Bag_PI"/>
    <symbol role="sort" name="Elem18"/>
    <presentation for="Elem18">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="CommutativeMonoid_in_Bag_TA">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Bag_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst Bag"
From:"Bag_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="CommutativeMonoid_in_Bag_T">
    <presentation for="CommutativeMonoid_in_Bag_T">
      <use format="Hets">[CommutativeMonoid_in_Bag,T,0]</use>
    </presentation>
    <imports from="#Bag">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="N02"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="N02"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="N12"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="N12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="N22"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="N22"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="N32"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="N32"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="N42"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="N42"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="N52"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="N52"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="N62"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="N62"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="N72"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="N72"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="N82"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="N82"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="N92"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="N92"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="__LowerEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="__Lower__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="__GreaterEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="__Greater__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="__Ast__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="__Ast__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="__AtAt__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="__AtAt__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="__DivisionQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="__DivisionQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="__Excla2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="__Excla2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="__MinusExcla__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="__MinusExcla__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="__MinusQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="__MinusQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="__Plus__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="__Plus__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="__Power__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="__Power__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="__div__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="__div__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="__mod__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="__mod__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="even2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="max2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="max2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="min2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="min2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="odd2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="pre2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="pre2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="suc2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="CommutativeMonoid_in_Bag_T" name="suc2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <imports from="#CommutativeMonoid_in_Bag_TA"/>
    <imports from="#CommutativeMonoid_in_Bag_VG"/>
  </theory>
  <private for="CommutativeMonoid_in_Bag_T">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Bag" Type:"GlobalDef" Origin:"DGSpecInst Bag"
From:"CommutativeMonoid" Type:"GlobalThm Open None Open" Origin:"DGView CommutativeMonoid_in_Bag"
From:"CommutativeMonoid_in_Bag_TA" Type:"GlobalDef" Origin:"DGFitSpec"
From:"CommutativeMonoid_in_Bag_VG" Type:"GlobalDef" Origin:"DGSpecInst Bag"
]]></data>
  </private>
  <theory xml:id="PartialOrder_in_Bag_VGI">
    <presentation for="PartialOrder_in_Bag_VGI">
      <use format="Hets">[PartialOrder_in_Bag,VGI,0]</use>
    </presentation>
    <imports from="Basic/Numbers.omdoc#Nat"/>
  </theory>
  <private for="PartialOrder_in_Bag_VGI">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="PartialOrder_in_Bag_VG">
    <presentation for="PartialOrder_in_Bag_VG">
      <use format="Hets">[PartialOrder_in_Bag,VG,0]</use>
    </presentation>
    <imports from="#PartialOrder_in_Bag_VGI"/>
    <symbol role="sort" name="Elem48"/>
    <presentation for="Elem48">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="PartialOrder_in_Bag_VG">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"PartialOrder_in_Bag_VGI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="PartialOrder_in_Bag_TA">
    <presentation for="PartialOrder_in_Bag_TA">
      <use format="Hets">[PartialOrder_in_Bag,TA,0]</use>
    </presentation>
    <imports from="#Bag_PI"/>
    <symbol role="sort" name="Elem47"/>
    <presentation for="Elem47">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="PartialOrder_in_Bag_TA">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Bag_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst Bag"
From:"Bag_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="PartialOrder_in_Bag_T">
    <presentation for="PartialOrder_in_Bag_T">
      <use format="Hets">[PartialOrder_in_Bag,T,0]</use>
    </presentation>
    <imports from="#Bag">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="N02"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="N02"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="N12"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="N12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="N22"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="N22"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="N32"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="N32"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="N42"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="N42"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="N52"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="N52"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="N62"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="N62"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="N72"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="N72"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="N82"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="N82"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="N92"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="N92"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="__LowerEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="__Lower__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="__GreaterEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="__Greater__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="__Ast__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="__Ast__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="__AtAt__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="__AtAt__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="__DivisionQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="__DivisionQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="__Excla2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="__Excla2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="__MinusExcla__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="__MinusExcla__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="__MinusQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="__MinusQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="__Plus__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="__Plus__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="__Power__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="__Power__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="__div__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="__div__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="__mod__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="__mod__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="even2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="max2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="max2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="min2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="min2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="odd2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="pre2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="pre2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Bag" name="suc2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="PartialOrder_in_Bag_T" name="suc2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <imports from="#PartialOrder_in_Bag_TA"/>
    <imports from="#PartialOrder_in_Bag_VG"/>
    <symbol role="sort" name="BagSBrackOpenElemSBrackClose2"/>
    <presentation for="BagSBrackOpenElemSBrackClose2">
      <use format="Hets">[Bag[Elem]]</use>
    </presentation>
    <symbol name="__eps__11" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="PartialOrder_in_Bag_TA" name="Elem47"/>
            <OMS cd="PartialOrder_in_Bag_T" name="BagSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__eps__11">
      <use format="Hets">[__,eps,__]</use>
    </presentation>
    <symbol name="__isSubsetOf__9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="PartialOrder_in_Bag_T" name="BagSBrackOpenElemSBrackClose2"/>
            <OMS cd="PartialOrder_in_Bag_T" name="BagSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__isSubsetOf__9">
      <use format="Hets">[__,isSubsetOf,__]</use>
    </presentation>
    <symbol name="isEmpty10" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="PartialOrder_in_Bag_T" name="BagSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isEmpty10">
      <use format="Hets">[isEmpty]</use>
    </presentation>
    <symbol name="__Minus__10" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="PartialOrder_in_Bag_T" name="BagSBrackOpenElemSBrackClose2"/>
            <OMS cd="PartialOrder_in_Bag_T" name="BagSBrackOpenElemSBrackClose2"/>
            <OMS cd="PartialOrder_in_Bag_T" name="BagSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__10">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__Minus__10" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="PartialOrder_in_Bag_T" name="BagSBrackOpenElemSBrackClose2"/>
            <OMS cd="PartialOrder_in_Bag_TA" name="Elem47"/>
            <OMS cd="PartialOrder_in_Bag_T" name="BagSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__10">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__intersection__9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="PartialOrder_in_Bag_T" name="BagSBrackOpenElemSBrackClose2"/>
            <OMS cd="PartialOrder_in_Bag_T" name="BagSBrackOpenElemSBrackClose2"/>
            <OMS cd="PartialOrder_in_Bag_T" name="BagSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__intersection__9">
      <use format="Hets">[__,intersection,__]</use>
    </presentation>
    <symbol name="__union__9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="PartialOrder_in_Bag_T" name="BagSBrackOpenElemSBrackClose2"/>
            <OMS cd="PartialOrder_in_Bag_T" name="BagSBrackOpenElemSBrackClose2"/>
            <OMS cd="PartialOrder_in_Bag_T" name="BagSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__union__9">
      <use format="Hets">[__,union,__]</use>
    </presentation>
    <symbol name="freq7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="PartialOrder_in_Bag_T" name="BagSBrackOpenElemSBrackClose2"/>
            <OMS cd="PartialOrder_in_Bag_TA" name="Elem47"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="freq7">
      <use format="Hets">[freq]</use>
    </presentation>
    <symbol name="BraceOpen__BraceClose9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="PartialOrder_in_Bag_TA" name="Elem47"/>
            <OMS cd="PartialOrder_in_Bag_T" name="BagSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BraceOpen__BraceClose9">
      <use format="Hets">[{,__,}]</use>
    </presentation>
    <symbol name="BraceOpenBraceClose11" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="PartialOrder_in_Bag_T" name="BagSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BraceOpenBraceClose11">
      <use format="Hets">[{,}]</use>
    </presentation>
  </theory>
  <private for="PartialOrder_in_Bag_T">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"PartialOrder" Type:"GlobalThm Open None Open" Origin:"DGView PartialOrder_in_Bag"
From:"PartialOrder_in_Bag_TA" Type:"GlobalDef" Origin:"DGFitSpec"
From:"PartialOrder_in_Bag_VG" Type:"GlobalDef" Origin:"DGSpecInst Bag"
From:"Bag" Type:"GlobalDef" Origin:"DGSpecInst Bag"
]]></data>
  </private>
  <theory xml:id="Array_PI">
    <presentation for="Array_PI">
      <use format="Hets">[Array,PI,0]</use>
    </presentation>
    <imports from="Basic/Numbers.omdoc#Int"/>
  </theory>
  <private for="Array_PI">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Int" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="Array_P1">
    <presentation for="Array_P1">
      <use format="Hets">[Array,P,1]</use>
    </presentation>
    <imports from="#Array_PI"/>
    <axiom name="Cond_nonEmptyIndex">
      <CMP>
  [ops min, max: Int axiom min &#60;= max %(Cond_nonEmptyIndex)%]
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Int" name="__LowerEquals__1"/>
            <OMS cd="Int" name="min1"/>
            <OMS cd="Int" name="max1"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Cond_nonEmptyIndex">
      <use format="Hets">Cond_nonEmptyIndex</use>
    </presentation>
  </theory>
  <private for="Array_P1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Array_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Array_P2">
    <presentation for="Array_P2">
      <use format="Hets">[Array,P,2]</use>
    </presentation>
    <imports from="#Array_PI"/>
    <symbol role="sort" name="Elem1"/>
    <presentation for="Elem1">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="Array_P2">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Array_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Array_P">
    <presentation for="Array_P">
      <use format="Hets">[Array,P,0]</use>
    </presentation>
    <imports from="#Array_P1"/>
    <imports from="#Array_P2"/>
  </theory>
  <private for="Array_P">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Array_P2" Type:"GlobalDef" Origin:"DGFormalParams"
From:"Array_P1" Type:"GlobalDef" Origin:"DGFormalParams"
]]></data>
  </private>
  <theory xml:id="Array_E2">
    <presentation for="Array_E2">
      <use format="Hets">[Array,E,2]</use>
    </presentation>
    <imports from="#Array_P"/>
    <symbol role="sort" name="Index1"/>
    <presentation for="Index1">
      <use format="Hets">[Index]</use>
    </presentation>
    <adt>
      <sortdef name="Int2" type="free">
        <insort for="#Index1"/>
      </sortdef>
    </adt>
    <axiom name="Ax1">
      <CMP>
  sort Index = { i : Int . min &#60;= i /\ i &#60;= max }
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int" name="Int2"/>
                </OMATP>
                <OMV name="i"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="membership"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int" name="Int2"/>
                  </OMATP>
                  <OMV name="i"/>
                </OMATTR>
                <OMS cd="Array_E2" name="Index1"/>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Int" name="__LowerEquals__1"/>
                  <OMS cd="Int" name="min1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int" name="Int2"/>
                    </OMATP>
                    <OMV name="i"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Int" name="__LowerEquals__1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int" name="Int2"/>
                    </OMATP>
                    <OMV name="i"/>
                  </OMATTR>
                  <OMS cd="Int" name="max1"/>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax1">
      <use format="Hets">Ax1</use>
    </presentation>
  </theory>
  <private for="Array_E2">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Array_P" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Array_E2E2A">
    <presentation for="Array_E2E2A">
      <use format="Hets">[Array,E2E2A,0]</use>
    </presentation>
    <imports from="#Map_PI"/>
    <symbol role="sort" name="Index2"/>
    <presentation for="Index2">
      <use format="Hets">[Index]</use>
    </presentation>
  </theory>
  <private for="Array_E2E2A">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Map_PI" Type:"GlobalDef" Origin:"DGExtension"
From:"Map_P1" Type:"GlobalThm Open None Open" Origin:"DGSpecInst Map"
]]></data>
  </private>
  <theory xml:id="Array_E2E2A1">
    <presentation for="Array_E2E2A1">
      <use format="Hets">[Array,E2E2A,1]</use>
    </presentation>
    <imports from="#Map_PI"/>
    <symbol role="sort" name="Elem2"/>
    <presentation for="Elem2">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="Array_E2E2A1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Map_P2" Type:"GlobalThm Open None Open" Origin:"DGSpecInst Map"
From:"Map_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Array_E2E2">
    <presentation for="Array_E2E2">
      <use format="Hets">[Array,E2E,2]</use>
    </presentation>
    <imports from="#Array_E2"/>
    <imports from="#Array_E2E2A"/>
    <imports from="#Array_E2E2A1"/>
    <imports from="#Map">
      <morphism hiding="#__ Entry[S,T] Map[S,T] S Set[S] Set[T] T [__/__] __+__ __-__ __::__-&#62;__ __[__/__] __eps__ __intersection__ __isSubsetOf__ __symDiff__ __union__ dom empty isEmpty isNonEmpty lookup range source target {__} {}">
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="EntrySBrackOpenSCommaTSBrackClose"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="EntrySBrackOpenIndexCommaElemSBrackClose"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="MapSBrackOpenSCommaTSBrackClose1"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="MapSBrackOpenIndexCommaElemSBrackClose"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="N02"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="N01"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="N12"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="N11"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="N22"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="N21"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="N32"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="N31"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="N42"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="N41"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="N52"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="N51"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="N62"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="N61"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="N72"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="N71"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="N82"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="N81"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="N92"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="N91"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="S2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="Index1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="SetSBrackOpenSSBrackClose"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="SetSBrackOpenIndexSBrackClose"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="SetSBrackOpenTSBrackClose"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="SetSBrackOpenElemSBrackClose"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="T1"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="Elem1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="__LowerEquals__1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="__Lower__1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="__GreaterEquals__1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="__Greater__1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="__Ast__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="__Ast__1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="__AtAt__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="__AtAt__1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="__DivisionQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="__DivisionQuest__1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="__Excla2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="__Excla1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="__MinusExcla__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="__MinusExcla__1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="__MinusQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="__MinusQuest__1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="__Plus__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="__Plus__1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="__Power__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="__Power__1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="__div__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="__div__1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="__mod__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="__mod__1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="even1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="max2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="max1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="min2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="min1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="odd1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="pre2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="pre1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Map" name="suc2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="suc1"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <symbol role="sort" name="SetSBrackOpenIndexSBrackClose"/>
    <presentation for="SetSBrackOpenIndexSBrackClose">
      <use format="Hets">[Set[Index]]</use>
    </presentation>
    <symbol role="sort" name="SetSBrackOpenElemSBrackClose"/>
    <presentation for="SetSBrackOpenElemSBrackClose">
      <use format="Hets">[Set[Elem]]</use>
    </presentation>
    <symbol role="sort" name="MapSBrackOpenIndexCommaElemSBrackClose"/>
    <presentation for="MapSBrackOpenIndexCommaElemSBrackClose">
      <use format="Hets">[Map[Index],[Elem]]</use>
    </presentation>
    <symbol role="sort" name="EntrySBrackOpenIndexCommaElemSBrackClose"/>
    <presentation for="EntrySBrackOpenIndexCommaElemSBrackClose">
      <use format="Hets">[Entry[Index],[Elem]]</use>
    </presentation>
    <symbol name="__::__MinusGreater__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Array_E2E2" name="MapSBrackOpenIndexCommaElemSBrackClose"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenIndexSBrackClose"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__::__MinusGreater__">
      <use format="Hets">[__,::,__,-&#62;,__]</use>
    </presentation>
    <symbol name="__eps__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Array_P2" name="Elem1"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__eps__">
      <use format="Hets">[__,eps,__]</use>
    </presentation>
    <symbol name="__eps__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Array_E2E2" name="EntrySBrackOpenIndexCommaElemSBrackClose"/>
            <OMS cd="Array_E2E2" name="MapSBrackOpenIndexCommaElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__eps__">
      <use format="Hets">[__,eps,__]</use>
    </presentation>
    <symbol name="__eps__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Array_E2" name="Index1"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenIndexSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__eps__">
      <use format="Hets">[__,eps,__]</use>
    </presentation>
    <symbol name="__isSubsetOf__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenElemSBrackClose"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__isSubsetOf__">
      <use format="Hets">[__,isSubsetOf,__]</use>
    </presentation>
    <symbol name="__isSubsetOf__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenIndexSBrackClose"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenIndexSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__isSubsetOf__">
      <use format="Hets">[__,isSubsetOf,__]</use>
    </presentation>
    <symbol name="isEmpty" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Array_E2E2" name="MapSBrackOpenIndexCommaElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isEmpty">
      <use format="Hets">[isEmpty]</use>
    </presentation>
    <symbol name="isNonEmpty" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isNonEmpty">
      <use format="Hets">[isNonEmpty]</use>
    </presentation>
    <symbol name="isNonEmpty" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenIndexSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isNonEmpty">
      <use format="Hets">[isNonEmpty]</use>
    </presentation>
    <symbol name="Hash__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenElemSBrackClose"/>
            <OMS cd="Int" name="Nat2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="Hash__">
      <use format="Hets">[#,__]</use>
    </presentation>
    <symbol name="Hash__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenIndexSBrackClose"/>
            <OMS cd="Int" name="Nat2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="Hash__">
      <use format="Hets">[#,__]</use>
    </presentation>
    <symbol name="SBrackOpen__Division__SBrackClose" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_P2" name="Elem1"/>
            <OMS cd="Array_E2" name="Index1"/>
            <OMS cd="Array_E2E2" name="EntrySBrackOpenIndexCommaElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SBrackOpen__Division__SBrackClose">
      <use format="Hets">[[,__,/,__,]]</use>
    </presentation>
    <symbol name="__SBrackOpen__Division__SBrackClose" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E2E2" name="MapSBrackOpenIndexCommaElemSBrackClose"/>
            <OMS cd="Array_P2" name="Elem1"/>
            <OMS cd="Array_E2" name="Index1"/>
            <OMS cd="Array_E2E2" name="MapSBrackOpenIndexCommaElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__SBrackOpen__Division__SBrackClose">
      <use format="Hets">[__,[,__,/,__,]]</use>
    </presentation>
    <symbol name="__intersection__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenElemSBrackClose"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenElemSBrackClose"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__intersection__">
      <use format="Hets">[__,intersection,__]</use>
    </presentation>
    <symbol name="__intersection__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenIndexSBrackClose"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenIndexSBrackClose"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenIndexSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__intersection__">
      <use format="Hets">[__,intersection,__]</use>
    </presentation>
    <symbol name="__symDiff__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenElemSBrackClose"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenElemSBrackClose"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__symDiff__">
      <use format="Hets">[__,symDiff,__]</use>
    </presentation>
    <symbol name="__symDiff__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenIndexSBrackClose"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenIndexSBrackClose"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenIndexSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__symDiff__">
      <use format="Hets">[__,symDiff,__]</use>
    </presentation>
    <symbol name="__union__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenElemSBrackClose"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenElemSBrackClose"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__union__">
      <use format="Hets">[__,union,__]</use>
    </presentation>
    <symbol name="__union__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenIndexSBrackClose"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenIndexSBrackClose"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenIndexSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__union__">
      <use format="Hets">[__,union,__]</use>
    </presentation>
    <symbol name="__union__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Array_E2E2" name="MapSBrackOpenIndexCommaElemSBrackClose"/>
            <OMS cd="Array_E2E2" name="MapSBrackOpenIndexCommaElemSBrackClose"/>
            <OMS cd="Array_E2E2" name="MapSBrackOpenIndexCommaElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__union__">
      <use format="Hets">[__,union,__]</use>
    </presentation>
    <symbol name="dom" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E2E2" name="MapSBrackOpenIndexCommaElemSBrackClose"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenIndexSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="dom">
      <use format="Hets">[dom]</use>
    </presentation>
    <symbol name="empty" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E2E2" name="MapSBrackOpenIndexCommaElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="empty">
      <use format="Hets">[empty]</use>
    </presentation>
    <symbol name="lookup" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Array_E2" name="Index1"/>
            <OMS cd="Array_E2E2" name="MapSBrackOpenIndexCommaElemSBrackClose"/>
            <OMS cd="Array_P2" name="Elem1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="lookup">
      <use format="Hets">[lookup]</use>
    </presentation>
    <symbol name="range" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E2E2" name="MapSBrackOpenIndexCommaElemSBrackClose"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="range">
      <use format="Hets">[range]</use>
    </presentation>
    <symbol name="source" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E2E2" name="EntrySBrackOpenIndexCommaElemSBrackClose"/>
            <OMS cd="Array_E2" name="Index1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="source">
      <use format="Hets">[source]</use>
    </presentation>
    <symbol name="target" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E2E2" name="EntrySBrackOpenIndexCommaElemSBrackClose"/>
            <OMS cd="Array_P2" name="Elem1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="target">
      <use format="Hets">[target]</use>
    </presentation>
    <symbol name="BraceOpen__BraceClose" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_P2" name="Elem1"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BraceOpen__BraceClose">
      <use format="Hets">[{,__,}]</use>
    </presentation>
    <symbol name="BraceOpen__BraceClose" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E2" name="Index1"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenIndexSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BraceOpen__BraceClose">
      <use format="Hets">[{,__,}]</use>
    </presentation>
    <symbol name="BraceOpenBraceClose" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BraceOpenBraceClose">
      <use format="Hets">[{,}]</use>
    </presentation>
    <symbol name="BraceOpenBraceClose" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E2E2" name="SetSBrackOpenIndexSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BraceOpenBraceClose">
      <use format="Hets">[{,}]</use>
    </presentation>
  </theory>
  <private for="Array_E2E2">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Array_E2" Type:"GlobalDef" Origin:"DGSpecInst Map"
From:"Array_E2E2A" Type:"GlobalDef" Origin:"DGFitSpec"
From:"Array_E2E2A1" Type:"GlobalDef" Origin:"DGFitSpec"
From:"Map" Type:"GlobalDef" Origin:"DGSpecInst Map"
]]></data>
  </private>
  <theory xml:id="Array_E2E1">
    <presentation for="Array_E2E1">
      <use format="Hets">[Array,E2E,1]</use>
    </presentation>
    <imports from="#Array_E2E2">
      <morphism hiding="Map[Index,Elem] __+__ __-__ __::__-&#62;__ __[__/__] __eps__ __union__ dom empty isEmpty lookup range">
        <requation>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="MapSBrackOpenIndexCommaElemSBrackClose"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E1" name="ArraySBrackOpenElemSBrackClose1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Array_E2E2" name="empty"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E2E1" name="init1"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <symbol role="sort" name="ArraySBrackOpenElemSBrackClose1"/>
    <presentation for="ArraySBrackOpenElemSBrackClose1">
      <use format="Hets">[Array[Elem]]</use>
    </presentation>
    <symbol name="init1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E2E1" name="ArraySBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="init1">
      <use format="Hets">[init]</use>
    </presentation>
  </theory>
  <private for="Array_E2E1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Array_E2E2" Type:"GlobalDef" Origin:"DGTranslation"
]]></data>
  </private>
  <theory xml:id="Array_E21">
    <presentation for="Array_E21">
      <use format="Hets">[Array,E,2]</use>
    </presentation>
    <imports from="#Array_E2E1"/>
    <symbol name="__Excla__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Array_E2E1" name="ArraySBrackOpenElemSBrackClose1"/>
            <OMS cd="Array_E2" name="Index1"/>
            <OMS cd="Array_P2" name="Elem1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Excla__1">
      <use format="Hets">[__,!,__]</use>
    </presentation>
    <symbol name="__Excla__:Equals__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E2E1" name="ArraySBrackOpenElemSBrackClose1"/>
            <OMS cd="Array_E2" name="Index1"/>
            <OMS cd="Array_P2" name="Elem1"/>
            <OMS cd="Array_E2E1" name="ArraySBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Excla__:Equals__1">
      <use format="Hets">[__,!,__,:=,__]</use>
    </presentation>
    <axiom name="assignment_def">
      <CMP>
          forall A: Array[Elem]; i: Index; e:Elem
          forall A: Array[Elem]; i: Index; e:Elem
          forall A: Array[Elem]; i: Index; e:Elem
          . A!i:=e = A[e/i]             %(assignment_def)%
          . A!i = lookup(i,A)             %(lookup_def)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Array_E2E1" name="ArraySBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="A"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Array_E2" name="Index1"/>
                </OMATP>
                <OMV name="i"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Array_P2" name="Elem1"/>
                </OMATP>
                <OMV name="e"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Array_E21" name="__Excla__:Equals__1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Array_E2E1" name="ArraySBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="A"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Array_E2" name="Index1"/>
                  </OMATP>
                  <OMV name="i"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Array_P2" name="Elem1"/>
                  </OMATP>
                  <OMV name="e"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Array_E2E2" name="__SBrackOpen__Division__SBrackClose"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Array_E2E1" name="ArraySBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="A"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Array_P2" name="Elem1"/>
                  </OMATP>
                  <OMV name="e"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Array_E2" name="Index1"/>
                  </OMATP>
                  <OMV name="i"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="assignment_def">
      <use format="Hets">assignment_def</use>
    </presentation>
    <axiom name="lookup_def">
      <CMP>
          forall A: Array[Elem]; i: Index; e:Elem
          forall A: Array[Elem]; i: Index; e:Elem
          forall A: Array[Elem]; i: Index; e:Elem
          . A!i:=e = A[e/i]             %(assignment_def)%
          . A!i = lookup(i,A)             %(lookup_def)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Array_E2E1" name="ArraySBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="A"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Array_E2" name="Index1"/>
                </OMATP>
                <OMV name="i"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Array_E21" name="__Excla__1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Array_E2E1" name="ArraySBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="A"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Array_E2" name="Index1"/>
                  </OMATP>
                  <OMV name="i"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Array_E2E2" name="lookup"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Array_E2" name="Index1"/>
                  </OMATP>
                  <OMV name="i"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Array_E2E1" name="ArraySBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="A"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="lookup_def">
      <use format="Hets">lookup_def</use>
    </presentation>
  </theory>
  <private for="Array_E21">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Array_E2E1" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Array_E1T">
    <presentation for="Array_E1T">
      <use format="Hets">[Array,E1T,0]</use>
    </presentation>
    <symbol role="sort" name="Pos"/>
    <presentation for="Pos">
      <use format="Hets">[Pos]</use>
    </presentation>
    <symbol role="sort" name="Nat1"/>
    <presentation for="Nat1">
      <use format="Hets">[Nat]</use>
    </presentation>
    <symbol role="sort" name="Int1"/>
    <presentation for="Int1">
      <use format="Hets">[Int]</use>
    </presentation>
    <symbol role="sort" name="Index"/>
    <presentation for="Index">
      <use format="Hets">[Index]</use>
    </presentation>
    <symbol role="sort" name="Elem"/>
    <presentation for="Elem">
      <use format="Hets">[Elem]</use>
    </presentation>
    <symbol role="sort" name="ArraySBrackOpenElemSBrackClose"/>
    <presentation for="ArraySBrackOpenElemSBrackClose">
      <use format="Hets">[Array[Elem]]</use>
    </presentation>
    <adt>
      <sortdef name="Int1" type="free">
        <insort for="#Index"/>
        <insort for="#Nat1"/>
        <insort for="#Pos"/>
      </sortdef>
    </adt>
    <adt>
      <sortdef name="Nat1" type="free">
        <insort for="#Pos"/>
      </sortdef>
    </adt>
    <symbol name="__Lower__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Array_E1T" name="Int1"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Lower__">
      <use format="Hets">[__,&#60;,__]</use>
    </presentation>
    <symbol name="__Lower__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Lower__">
      <use format="Hets">[__,&#60;,__]</use>
    </presentation>
    <symbol name="__LowerEquals__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Array_E1T" name="Int1"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__LowerEquals__">
      <use format="Hets">[__,&#60;=,__]</use>
    </presentation>
    <symbol name="__LowerEquals__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__LowerEquals__">
      <use format="Hets">[__,&#60;=,__]</use>
    </presentation>
    <symbol name="__Greater__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Array_E1T" name="Int1"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Greater__">
      <use format="Hets">[__,&#62;,__]</use>
    </presentation>
    <symbol name="__Greater__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Greater__">
      <use format="Hets">[__,&#62;,__]</use>
    </presentation>
    <symbol name="__GreaterEquals__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Array_E1T" name="Int1"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__GreaterEquals__">
      <use format="Hets">[__,&#62;=,__]</use>
    </presentation>
    <symbol name="__GreaterEquals__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__GreaterEquals__">
      <use format="Hets">[__,&#62;=,__]</use>
    </presentation>
    <symbol name="even" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="even">
      <use format="Hets">[even]</use>
    </presentation>
    <symbol name="even" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="even">
      <use format="Hets">[even]</use>
    </presentation>
    <symbol name="odd" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="odd">
      <use format="Hets">[odd]</use>
    </presentation>
    <symbol name="odd" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="odd">
      <use format="Hets">[odd]</use>
    </presentation>
    <symbol name="Minus__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Int1"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="Minus__">
      <use format="Hets">[-,__]</use>
    </presentation>
    <symbol name="N0" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N0">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N0" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N0">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N1">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="N1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N1">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="N1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Pos"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N1">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="N2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N2">
      <use format="Hets">[2]</use>
    </presentation>
    <symbol name="N2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N2">
      <use format="Hets">[2]</use>
    </presentation>
    <symbol name="N3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N3">
      <use format="Hets">[3]</use>
    </presentation>
    <symbol name="N3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N3">
      <use format="Hets">[3]</use>
    </presentation>
    <symbol name="N4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N4">
      <use format="Hets">[4]</use>
    </presentation>
    <symbol name="N4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N4">
      <use format="Hets">[4]</use>
    </presentation>
    <symbol name="N5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N5">
      <use format="Hets">[5]</use>
    </presentation>
    <symbol name="N5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N5">
      <use format="Hets">[5]</use>
    </presentation>
    <symbol name="N6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N6">
      <use format="Hets">[6]</use>
    </presentation>
    <symbol name="N6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N6">
      <use format="Hets">[6]</use>
    </presentation>
    <symbol name="N7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N7">
      <use format="Hets">[7]</use>
    </presentation>
    <symbol name="N7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N7">
      <use format="Hets">[7]</use>
    </presentation>
    <symbol name="N8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N8">
      <use format="Hets">[8]</use>
    </presentation>
    <symbol name="N8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N8">
      <use format="Hets">[8]</use>
    </presentation>
    <symbol name="N9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N9">
      <use format="Hets">[9]</use>
    </presentation>
    <symbol name="N9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N9">
      <use format="Hets">[9]</use>
    </presentation>
    <symbol name="__Excla" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Excla">
      <use format="Hets">[__,!]</use>
    </presentation>
    <symbol name="__Excla__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Array_E1T" name="ArraySBrackOpenElemSBrackClose"/>
            <OMS cd="Array_E1T" name="Index"/>
            <OMS cd="Array_E1T" name="Elem"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Excla__">
      <use format="Hets">[__,!,__]</use>
    </presentation>
    <symbol name="__Excla__:Equals__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="ArraySBrackOpenElemSBrackClose"/>
            <OMS cd="Array_E1T" name="Index"/>
            <OMS cd="Array_E1T" name="Elem"/>
            <OMS cd="Array_E1T" name="ArraySBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Excla__:Equals__">
      <use format="Hets">[__,!,__,:=,__]</use>
    </presentation>
    <symbol name="__Ast__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Int1"/>
            <OMS cd="Array_E1T" name="Int1"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Ast__">
      <use format="Hets">[__,*,__]</use>
    </presentation>
    <symbol name="__Ast__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Ast__">
      <use format="Hets">[__,*,__]</use>
    </presentation>
    <symbol name="__Ast__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Pos"/>
            <OMS cd="Array_E1T" name="Pos"/>
            <OMS cd="Array_E1T" name="Pos"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Ast__">
      <use format="Hets">[__,*,__]</use>
    </presentation>
    <symbol name="__Plus__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Int1"/>
            <OMS cd="Array_E1T" name="Int1"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__Plus__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__Plus__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Pos"/>
            <OMS cd="Array_E1T" name="Pos"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__Plus__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Pos"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Pos"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__Minus__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Int1"/>
            <OMS cd="Array_E1T" name="Int1"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__Minus__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__MinusExcla__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__MinusExcla__">
      <use format="Hets">[__,-!,__]</use>
    </presentation>
    <symbol name="__MinusQuest__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__MinusQuest__">
      <use format="Hets">[__,-?,__]</use>
    </presentation>
    <symbol name="__DivisionQuest__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Array_E1T" name="Int1"/>
            <OMS cd="Array_E1T" name="Int1"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__DivisionQuest__">
      <use format="Hets">[__,/?,__]</use>
    </presentation>
    <symbol name="__DivisionQuest__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__DivisionQuest__">
      <use format="Hets">[__,/?,__]</use>
    </presentation>
    <symbol name="__AtAt__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__AtAt__">
      <use format="Hets">[__,@@,__]</use>
    </presentation>
    <symbol name="__Power__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Int1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Power__">
      <use format="Hets">[__,^,__]</use>
    </presentation>
    <symbol name="__Power__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Power__">
      <use format="Hets">[__,^,__]</use>
    </presentation>
    <symbol name="__div__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Array_E1T" name="Int1"/>
            <OMS cd="Array_E1T" name="Int1"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__div__">
      <use format="Hets">[__,div,__]</use>
    </presentation>
    <symbol name="__div__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__div__">
      <use format="Hets">[__,div,__]</use>
    </presentation>
    <symbol name="__mod__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Array_E1T" name="Int1"/>
            <OMS cd="Array_E1T" name="Int1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__mod__">
      <use format="Hets">[__,mod,__]</use>
    </presentation>
    <symbol name="__mod__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__mod__">
      <use format="Hets">[__,mod,__]</use>
    </presentation>
    <symbol name="__quot__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Array_E1T" name="Int1"/>
            <OMS cd="Array_E1T" name="Int1"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__quot__">
      <use format="Hets">[__,quot,__]</use>
    </presentation>
    <symbol name="__rem__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Array_E1T" name="Int1"/>
            <OMS cd="Array_E1T" name="Int1"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__rem__">
      <use format="Hets">[__,rem,__]</use>
    </presentation>
    <symbol name="abs" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Int1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="abs">
      <use format="Hets">[abs]</use>
    </presentation>
    <symbol name="init" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="ArraySBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="init">
      <use format="Hets">[init]</use>
    </presentation>
    <symbol name="max" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="max">
      <use format="Hets">[max]</use>
    </presentation>
    <symbol name="max" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Int1"/>
            <OMS cd="Array_E1T" name="Int1"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="max">
      <use format="Hets">[max]</use>
    </presentation>
    <symbol name="max" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="max">
      <use format="Hets">[max]</use>
    </presentation>
    <symbol name="min" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="min">
      <use format="Hets">[min]</use>
    </presentation>
    <symbol name="min" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Int1"/>
            <OMS cd="Array_E1T" name="Int1"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="min">
      <use format="Hets">[min]</use>
    </presentation>
    <symbol name="min" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="min">
      <use format="Hets">[min]</use>
    </presentation>
    <symbol name="pre" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="pre">
      <use format="Hets">[pre]</use>
    </presentation>
    <symbol name="sign" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Int1"/>
            <OMS cd="Array_E1T" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="sign">
      <use format="Hets">[sign]</use>
    </presentation>
    <symbol name="suc" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="suc">
      <use format="Hets">[suc]</use>
    </presentation>
    <symbol name="suc" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Array_E1T" name="Nat1"/>
            <OMS cd="Array_E1T" name="Pos"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="suc">
      <use format="Hets">[suc]</use>
    </presentation>
  </theory>
  <private for="Array_E1T">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Array_E21" Type:"HidingDef" Origin:"DGRevealing"
]]></data>
  </private>
  <theory xml:id="Array_E1">
    <presentation for="Array_E1">
      <use format="Hets">[Array,E,1]</use>
    </presentation>
    <imports from="#Array_E1T">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="Array_E1T" name="__Excla__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E1" name="__Excla__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Array_E1T" name="__Excla__:Equals__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E1" name="__Excla__:Equals__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Array_E1T" name="init"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="Array_E1" name="init"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
  </theory>
  <private for="Array_E1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Array" Type:"GlobalThm Open None Open" Origin:"DGExtension"
From:"Array_E2" Type:"GlobalThm Open Mono Open" Origin:"DGExtension"
From:"Array_E1T" Type:"GlobalDef" Origin:"DGRevealTranslation"
]]></data>
  </private>
  <theory xml:id="Array">
    <presentation for="Array">
      <use format="Hets">[Array,,0]</use>
    </presentation>
    <imports from="#Array_E1"/>
    <axiom name="lookup_assignment1_Array">
      <CMP>
     forall A: Array[Elem]; i,j: Index; e,f: Elem
     forall A: Array[Elem]; i,j: Index; e,f: Elem
     forall A: Array[Elem]; i,j: Index; e,f: Elem
     . not def init!i                    %(lookup_domain1_Array)%
     . def (A!i:=e)!i                    %(lookup_domain2_Array)%
     . (A!i:=e)!j = e if i=j             %(lookup_assignment1_Array)%
     . (A!i:=e)!j = A!j if not (i=j)     %(lookup_assignment2_Array)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Array_E1T" name="ArraySBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="A"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Array_E1T" name="Index"/>
                </OMATP>
                <OMV name="i"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Array_E1T" name="Index"/>
                </OMATP>
                <OMV name="j"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Array_E1T" name="Elem"/>
                </OMATP>
                <OMV name="e"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Array_E1T" name="Index"/>
                  </OMATP>
                  <OMV name="i"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Array_E1T" name="Index"/>
                  </OMATP>
                  <OMV name="j"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Array_E1T" name="__Excla__"/>
                  <OMA>
                    <OMS cd="Array_E1T" name="__Excla__:Equals__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Array_E1T" name="ArraySBrackOpenElemSBrackClose"/>
                      </OMATP>
                      <OMV name="A"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Array_E1T" name="Index"/>
                      </OMATP>
                      <OMV name="i"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Array_E1T" name="Elem"/>
                      </OMATP>
                      <OMV name="e"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Array_E1T" name="Index"/>
                    </OMATP>
                    <OMV name="j"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Array_E1T" name="Elem"/>
                  </OMATP>
                  <OMV name="e"/>
                </OMATTR>
              </OMA>
              <OMS cd="casl" name="false"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="lookup_assignment1_Array">
      <use format="Hets">lookup_assignment1_Array</use>
    </presentation>
    <axiom name="lookup_assignment2_Array">
      <CMP>
     forall A: Array[Elem]; i,j: Index; e,f: Elem
     forall A: Array[Elem]; i,j: Index; e,f: Elem
     forall A: Array[Elem]; i,j: Index; e,f: Elem
     . not def init!i                    %(lookup_domain1_Array)%
     . def (A!i:=e)!i                    %(lookup_domain2_Array)%
     . (A!i:=e)!j = e if i=j             %(lookup_assignment1_Array)%
     . (A!i:=e)!j = A!j if not (i=j)     %(lookup_assignment2_Array)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Array_E1T" name="ArraySBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="A"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Array_E1T" name="Index"/>
                </OMATP>
                <OMV name="i"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Array_E1T" name="Index"/>
                </OMATP>
                <OMV name="j"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Array_E1T" name="Elem"/>
                </OMATP>
                <OMV name="e"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Array_E1T" name="Index"/>
                    </OMATP>
                    <OMV name="i"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Array_E1T" name="Index"/>
                    </OMATP>
                    <OMV name="j"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Array_E1T" name="__Excla__"/>
                  <OMA>
                    <OMS cd="Array_E1T" name="__Excla__:Equals__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Array_E1T" name="ArraySBrackOpenElemSBrackClose"/>
                      </OMATP>
                      <OMV name="A"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Array_E1T" name="Index"/>
                      </OMATP>
                      <OMV name="i"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Array_E1T" name="Elem"/>
                      </OMATP>
                      <OMV name="e"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Array_E1T" name="Index"/>
                    </OMATP>
                    <OMV name="j"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Array_E1T" name="__Excla__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Array_E1T" name="ArraySBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="A"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Array_E1T" name="Index"/>
                    </OMATP>
                    <OMV name="j"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMS cd="casl" name="false"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="lookup_assignment2_Array">
      <use format="Hets">lookup_assignment2_Array</use>
    </presentation>
    <axiom name="lookup_domain1_Array">
      <CMP>
     forall A: Array[Elem]; i,j: Index; e,f: Elem
     forall A: Array[Elem]; i,j: Index; e,f: Elem
     forall A: Array[Elem]; i,j: Index; e,f: Elem
     . not def init!i                    %(lookup_domain1_Array)%
     . def (A!i:=e)!i                    %(lookup_domain2_Array)%
     . (A!i:=e)!j = e if i=j             %(lookup_assignment1_Array)%
     . (A!i:=e)!j = A!j if not (i=j)     %(lookup_assignment2_Array)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Array_E1T" name="Index"/>
                </OMATP>
                <OMV name="i"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="Array_E1T" name="__Excla__"/>
                  <OMS cd="Array_E1T" name="init"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Array_E1T" name="Index"/>
                    </OMATP>
                    <OMV name="i"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="lookup_domain1_Array">
      <use format="Hets">lookup_domain1_Array</use>
    </presentation>
    <axiom name="lookup_domain2_Array">
      <CMP>
     forall A: Array[Elem]; i,j: Index; e,f: Elem
     forall A: Array[Elem]; i,j: Index; e,f: Elem
     forall A: Array[Elem]; i,j: Index; e,f: Elem
     . not def init!i                    %(lookup_domain1_Array)%
     . def (A!i:=e)!i                    %(lookup_domain2_Array)%
     . (A!i:=e)!j = e if i=j             %(lookup_assignment1_Array)%
     . (A!i:=e)!j = A!j if not (i=j)     %(lookup_assignment2_Array)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Array_E1T" name="ArraySBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="A"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Array_E1T" name="Index"/>
                </OMATP>
                <OMV name="i"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Array_E1T" name="Elem"/>
                </OMATP>
                <OMV name="e"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="definedness"/>
              <OMA>
                <OMS cd="Array_E1T" name="__Excla__"/>
                <OMA>
                  <OMS cd="Array_E1T" name="__Excla__:Equals__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Array_E1T" name="ArraySBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="A"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Array_E1T" name="Index"/>
                    </OMATP>
                    <OMV name="i"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Array_E1T" name="Elem"/>
                    </OMATP>
                    <OMV name="e"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Array_E1T" name="Index"/>
                  </OMATP>
                  <OMV name="i"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="lookup_domain2_Array">
      <use format="Hets">lookup_domain2_Array</use>
    </presentation>
  </theory>
  <private for="Array">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Array_E1" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="GenerateBinTree_P">
    <presentation for="GenerateBinTree_P">
      <use format="Hets">[GenerateBinTree,P,0]</use>
    </presentation>
    <symbol role="sort" name="Elem24"/>
    <presentation for="Elem24">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <theory xml:id="GenerateBinTree">
    <presentation for="GenerateBinTree">
      <use format="Hets">[GenerateBinTree,,0]</use>
    </presentation>
    <imports from="#GenerateBinTree_P"/>
    <symbol role="sort" name="BinTreeSBrackOpenElemSBrackClose2"/>
    <presentation for="BinTreeSBrackOpenElemSBrackClose2">
      <use format="Hets">[BinTree[Elem]]</use>
    </presentation>
    <adt>
      <sortdef name="BinTreeSBrackOpenElemSBrackClose2" type="free">
        <constructor name="binTree6">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="GenerateBinTree_P" name="Elem24"/>
              </OMOBJ>
            </type>
          </argument>
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
              </OMOBJ>
            </type>
          </argument>
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="nil14"/>
      </sortdef>
    </adt>
    <symbol name="binTree4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="GenerateBinTree_P" name="Elem24"/>
            <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
            <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
            <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="binTree4">
      <use format="Hets">[binTree]</use>
    </presentation>
    <symbol name="entry4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
            <OMS cd="GenerateBinTree_P" name="Elem24"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="entry4">
      <use format="Hets">[entry]</use>
    </presentation>
    <symbol name="left4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
            <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="left4">
      <use format="Hets">[left]</use>
    </presentation>
    <symbol name="nil4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="nil4">
      <use format="Hets">[nil]</use>
    </presentation>
    <symbol name="right4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
            <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="right4">
      <use format="Hets">[right]</use>
    </presentation>
    <axiom name="ga_disjoint_nil_binTree">
      <CMP>
    ::= nil 
      | binTree (entry:? Elem; left:?  BinTree[Elem]; 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree_P" name="Elem24"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="Y3"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMS cd="GenerateBinTree" name="nil4"/>
                <OMA>
                  <OMS cd="GenerateBinTree" name="binTree4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree_P" name="Elem24"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="Y3"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_nil_binTree">
      <use format="Hets">ga_disjoint_nil_binTree</use>
    </presentation>
    <axiom name="ga_injective_binTree">
      <CMP>
      | binTree (entry:? Elem; left:?  BinTree[Elem]; 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree_P" name="Elem24"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="X3"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree_P" name="Elem24"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="Y3"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="GenerateBinTree" name="binTree4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree_P" name="Elem24"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="X3"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="GenerateBinTree" name="binTree4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree_P" name="Elem24"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="Y3"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree_P" name="Elem24"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree_P" name="Elem24"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="X3"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="Y3"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective_binTree">
      <use format="Hets">ga_injective_binTree</use>
    </presentation>
    <axiom name="ga_selector_entry">
      <CMP>
      | binTree (entry:? Elem; left:?  BinTree[Elem]; 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree_P" name="Elem24"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="X3"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="GenerateBinTree" name="entry4"/>
                <OMA>
                  <OMS cd="GenerateBinTree" name="binTree4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree_P" name="Elem24"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="X3"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree_P" name="Elem24"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_entry">
      <use format="Hets">ga_selector_entry</use>
    </presentation>
    <axiom name="ga_selector_left">
      <CMP>
      | binTree (entry:? Elem; left:?  BinTree[Elem]; 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree_P" name="Elem24"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="X3"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="GenerateBinTree" name="left4"/>
                <OMA>
                  <OMS cd="GenerateBinTree" name="binTree4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree_P" name="Elem24"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="X3"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_left">
      <use format="Hets">ga_selector_left</use>
    </presentation>
    <axiom name="ga_selector_right">
      <CMP>
                               right:? BinTree[Elem])
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree_P" name="Elem24"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="X3"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="GenerateBinTree" name="right4"/>
                <OMA>
                  <OMS cd="GenerateBinTree" name="binTree4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree_P" name="Elem24"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="X3"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree" name="BinTreeSBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="X3"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_right">
      <use format="Hets">ga_selector_right</use>
    </presentation>
    <axiom name="ga_selector_undef_entry_nil">
      <CMP>
      | binTree (entry:? Elem; left:?  BinTree[Elem]; 
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="definedness"/>
              <OMA>
                <OMS cd="GenerateBinTree" name="entry4"/>
                <OMS cd="GenerateBinTree" name="nil4"/>
              </OMA>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_undef_entry_nil">
      <use format="Hets">ga_selector_undef_entry_nil</use>
    </presentation>
    <axiom name="ga_selector_undef_left_nil">
      <CMP>
      | binTree (entry:? Elem; left:?  BinTree[Elem]; 
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="definedness"/>
              <OMA>
                <OMS cd="GenerateBinTree" name="left4"/>
                <OMS cd="GenerateBinTree" name="nil4"/>
              </OMA>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_undef_left_nil">
      <use format="Hets">ga_selector_undef_left_nil</use>
    </presentation>
    <axiom name="ga_selector_undef_right_nil">
      <CMP>
                               right:? BinTree[Elem])
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="definedness"/>
              <OMA>
                <OMS cd="GenerateBinTree" name="right4"/>
                <OMS cd="GenerateBinTree" name="nil4"/>
              </OMA>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_undef_right_nil">
      <use format="Hets">ga_selector_undef_right_nil</use>
    </presentation>
  </theory>
  <private for="GenerateBinTree">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"GenerateBinTree_P" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="BinTree_PIU1A">
    <presentation for="BinTree_PIU1A">
      <use format="Hets">[BinTree,PIU1A,0]</use>
    </presentation>
    <imports from="#Set_PI"/>
    <symbol role="sort" name="Elem9"/>
    <presentation for="Elem9">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="BinTree_PIU1A">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst Set"
From:"Set_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="BinTree_PIU1">
    <presentation for="BinTree_PIU1">
      <use format="Hets">[BinTree,PIU,1]</use>
    </presentation>
    <imports from="#BinTree_PIU1A"/>
    <imports from="#Set">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N02"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="N02"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N12"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="N12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N22"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="N22"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N32"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="N32"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N42"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="N42"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N52"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="N52"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N62"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="N62"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N72"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="N72"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N82"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="N82"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N92"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="N92"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="__LowerEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="__Lower__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="__GreaterEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="__Greater__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Ast__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="__Ast__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__AtAt__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="__AtAt__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__DivisionQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="__DivisionQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Excla2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="__Excla2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusExcla__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="__MinusExcla__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="__MinusQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Plus__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="__Plus__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Power__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="__Power__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__div__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="__div__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__mod__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="__mod__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="even2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="max2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="max2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="min2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="min2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="odd2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="pre2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="pre2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="suc2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_PIU1" name="suc2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
  </theory>
  <private for="BinTree_PIU1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set" Type:"GlobalDef" Origin:"DGSpecInst Set"
From:"BinTree_PIU1A" Type:"GlobalDef" Origin:"DGFitSpec"
]]></data>
  </private>
  <theory xml:id="BinTree_PI">
    <presentation for="BinTree_PI">
      <use format="Hets">[BinTree,PI,0]</use>
    </presentation>
    <imports from="#BinTree_PIU1"/>
    <imports from="Basic/Numbers.omdoc#Nat"/>
    <symbol role="sort" name="SetSBrackOpenElemSBrackClose2"/>
    <presentation for="SetSBrackOpenElemSBrackClose2">
      <use format="Hets">[Set[Elem]]</use>
    </presentation>
    <symbol role="sort" name="Elem6"/>
    <presentation for="Elem6">
      <use format="Hets">[Elem]</use>
    </presentation>
    <symbol name="__eps__3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="BinTree_PI" name="Elem6"/>
            <OMS cd="BinTree_PI" name="SetSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__eps__3">
      <use format="Hets">[__,eps,__]</use>
    </presentation>
    <symbol name="__isSubsetOf__3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="BinTree_PI" name="SetSBrackOpenElemSBrackClose2"/>
            <OMS cd="BinTree_PI" name="SetSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__isSubsetOf__3">
      <use format="Hets">[__,isSubsetOf,__]</use>
    </presentation>
    <symbol name="isNonEmpty2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="BinTree_PI" name="SetSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isNonEmpty2">
      <use format="Hets">[isNonEmpty]</use>
    </presentation>
    <symbol name="Hash__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="BinTree_PI" name="SetSBrackOpenElemSBrackClose2"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="Hash__2">
      <use format="Hets">[#,__]</use>
    </presentation>
    <symbol name="__Minus__4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="BinTree_PI" name="SetSBrackOpenElemSBrackClose2"/>
            <OMS cd="BinTree_PI" name="Elem6"/>
            <OMS cd="BinTree_PI" name="SetSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__4">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__Minus__4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="BinTree_PI" name="SetSBrackOpenElemSBrackClose2"/>
            <OMS cd="BinTree_PI" name="SetSBrackOpenElemSBrackClose2"/>
            <OMS cd="BinTree_PI" name="SetSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__4">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__intersection__3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="BinTree_PI" name="SetSBrackOpenElemSBrackClose2"/>
            <OMS cd="BinTree_PI" name="SetSBrackOpenElemSBrackClose2"/>
            <OMS cd="BinTree_PI" name="SetSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__intersection__3">
      <use format="Hets">[__,intersection,__]</use>
    </presentation>
    <symbol name="__symDiff__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="BinTree_PI" name="SetSBrackOpenElemSBrackClose2"/>
            <OMS cd="BinTree_PI" name="SetSBrackOpenElemSBrackClose2"/>
            <OMS cd="BinTree_PI" name="SetSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__symDiff__2">
      <use format="Hets">[__,symDiff,__]</use>
    </presentation>
    <symbol name="__union__3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="BinTree_PI" name="SetSBrackOpenElemSBrackClose2"/>
            <OMS cd="BinTree_PI" name="SetSBrackOpenElemSBrackClose2"/>
            <OMS cd="BinTree_PI" name="SetSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__union__3">
      <use format="Hets">[__,union,__]</use>
    </presentation>
    <symbol name="BraceOpen__BraceClose3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="BinTree_PI" name="Elem6"/>
            <OMS cd="BinTree_PI" name="SetSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BraceOpen__BraceClose3">
      <use format="Hets">[{,__,}]</use>
    </presentation>
    <symbol name="BraceOpenBraceClose3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="BinTree_PI" name="SetSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BraceOpenBraceClose3">
      <use format="Hets">[{,}]</use>
    </presentation>
  </theory>
  <private for="BinTree_PI">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat" Type:"GlobalDef" Origin:"DGUnion"
From:"BinTree_PIU1" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="BinTree_P">
    <presentation for="BinTree_P">
      <use format="Hets">[BinTree,P,0]</use>
    </presentation>
    <imports from="#BinTree_PI"/>
  </theory>
  <private for="BinTree_P">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"BinTree_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="BinTree_E1UA">
    <presentation for="BinTree_E1UA">
      <use format="Hets">[BinTree,E1UA,0]</use>
    </presentation>
    <symbol role="sort" name="Elem8"/>
    <presentation for="Elem8">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="BinTree_E1UA">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"GenerateBinTree_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst GenerateBinTree"
]]></data>
  </private>
  <theory xml:id="BinTree_E1U">
    <presentation for="BinTree_E1U">
      <use format="Hets">[BinTree,E1U,0]</use>
    </presentation>
    <imports from="#BinTree_E1UA"/>
    <imports from="#BinTree_P"/>
    <imports from="#GenerateBinTree"/>
    <symbol role="sort" name="BinTreeSBrackOpenElemSBrackClose1"/>
    <presentation for="BinTreeSBrackOpenElemSBrackClose1">
      <use format="Hets">[BinTree[Elem]]</use>
    </presentation>
    <symbol name="binTree1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="BinTree_PI" name="Elem6"/>
            <OMS cd="BinTree_E1U" name="BinTreeSBrackOpenElemSBrackClose1"/>
            <OMS cd="BinTree_E1U" name="BinTreeSBrackOpenElemSBrackClose1"/>
            <OMS cd="BinTree_E1U" name="BinTreeSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="binTree1">
      <use format="Hets">[binTree]</use>
    </presentation>
    <symbol name="entry1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="BinTree_E1U" name="BinTreeSBrackOpenElemSBrackClose1"/>
            <OMS cd="BinTree_PI" name="Elem6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="entry1">
      <use format="Hets">[entry]</use>
    </presentation>
    <symbol name="left1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="BinTree_E1U" name="BinTreeSBrackOpenElemSBrackClose1"/>
            <OMS cd="BinTree_E1U" name="BinTreeSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="left1">
      <use format="Hets">[left]</use>
    </presentation>
    <symbol name="nil1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="BinTree_E1U" name="BinTreeSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="nil1">
      <use format="Hets">[nil]</use>
    </presentation>
    <symbol name="right1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="BinTree_E1U" name="BinTreeSBrackOpenElemSBrackClose1"/>
            <OMS cd="BinTree_E1U" name="BinTreeSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="right1">
      <use format="Hets">[right]</use>
    </presentation>
  </theory>
  <private for="BinTree_E1U">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"BinTree_P" Type:"GlobalDef" Origin:"DGSpecInst GenerateBinTree"
From:"BinTree_E1UA" Type:"GlobalDef" Origin:"DGFitSpec"
From:"GenerateBinTree" Type:"GlobalDef" Origin:"DGSpecInst GenerateBinTree"
]]></data>
  </private>
  <theory xml:id="BinTree_E1U1A">
    <presentation for="BinTree_E1U1A">
      <use format="Hets">[BinTree,E1U1A,0]</use>
    </presentation>
    <imports from="#Set_PI"/>
    <symbol role="sort" name="Elem7"/>
    <presentation for="Elem7">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="BinTree_E1U1A">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst Set"
From:"Set_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="BinTree_E1U1">
    <presentation for="BinTree_E1U1">
      <use format="Hets">[BinTree,E1U,1]</use>
    </presentation>
    <imports from="#BinTree_E1U1A"/>
    <imports from="#BinTree_P"/>
    <imports from="#Set">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N02"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="N02"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N12"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="N12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N22"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="N22"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N32"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="N32"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N42"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="N42"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N52"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="N52"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N62"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="N62"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N72"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="N72"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N82"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="N82"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N92"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="N92"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="__LowerEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="__Lower__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="__GreaterEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="__Greater__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Ast__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="__Ast__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__AtAt__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="__AtAt__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__DivisionQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="__DivisionQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Excla2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="__Excla2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusExcla__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="__MinusExcla__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="__MinusQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Plus__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="__Plus__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Power__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="__Power__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__div__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="__div__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__mod__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="__mod__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="even2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="max2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="max2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="min2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="min2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="odd2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="pre2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="pre2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="suc2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree_E1U1" name="suc2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
  </theory>
  <private for="BinTree_E1U1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set" Type:"GlobalDef" Origin:"DGSpecInst Set"
From:"BinTree_E1U1A" Type:"GlobalDef" Origin:"DGFitSpec"
From:"BinTree_P" Type:"GlobalDef" Origin:"DGSpecInst Set"
]]></data>
  </private>
  <theory xml:id="BinTree_E1">
    <presentation for="BinTree_E1">
      <use format="Hets">[BinTree,E,1]</use>
    </presentation>
    <imports from="#BinTree_E1U"/>
    <imports from="#BinTree_E1U1"/>
    <symbol role="sort" name="BinTreeSBrackOpenElemSBrackClose"/>
    <presentation for="BinTreeSBrackOpenElemSBrackClose">
      <use format="Hets">[BinTree[Elem]]</use>
    </presentation>
    <symbol name="binTree" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Set_P" name="Elem5"/>
            <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
            <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
            <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="binTree">
      <use format="Hets">[binTree]</use>
    </presentation>
    <symbol name="entry" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
            <OMS cd="Set_P" name="Elem5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="entry">
      <use format="Hets">[entry]</use>
    </presentation>
    <symbol name="left" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
            <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="left">
      <use format="Hets">[left]</use>
    </presentation>
    <symbol name="nil" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="nil">
      <use format="Hets">[nil]</use>
    </presentation>
    <symbol name="right" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
            <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="right">
      <use format="Hets">[right]</use>
    </presentation>
  </theory>
  <private for="BinTree_E1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"BinTree_E1U1" Type:"GlobalDef" Origin:"DGUnion"
From:"BinTree_E1U" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="BinTree">
    <presentation for="BinTree">
      <use format="Hets">[BinTree,,0]</use>
    </presentation>
    <imports from="#BinTree_E1"/>
    <symbol name="isCompoundTree" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isCompoundTree">
      <use format="Hets">[isCompoundTree]</use>
    </presentation>
    <symbol name="isEmpty2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isEmpty2">
      <use format="Hets">[isEmpty]</use>
    </presentation>
    <symbol name="isLeaf" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isLeaf">
      <use format="Hets">[isLeaf]</use>
    </presentation>
    <symbol name="height" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="height">
      <use format="Hets">[height]</use>
    </presentation>
    <symbol name="leaves" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
            <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="leaves">
      <use format="Hets">[leaves]</use>
    </presentation>
    <axiom name="eps_binTree">
      <CMP>
  forall x,y: Elem; T, T1,T2: BinTree[Elem]
  forall x,y: Elem; T, T1,T2: BinTree[Elem]
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_BinTree)%
  . not isLeaf(nil)                        %(isLeaf_nil_BinTree)%
  . isLeaf(binTree(x,T1,T2)) &#60;=&#62;  
  . not isCompoundTree(nil)                   %(isCompoundTree_nil_BinTree)%
  . isCompoundTree(binTree(x,T1,T2)) &#60;=&#62; 
  . not (x eps nil)                        %(eps_nil_BinTree)%
  . x eps binTree(y,T1,T2) &#60;=&#62;
  . height(nil) = 0                        %(height_nil_BinTree)%   
  . height(binTree(x,T1,T2)) = 
  . leaves(nil) = {}                        %(leaves_nil_BinTree)%
  . leaves(binTree(x,T1,T2)) 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_P" name="Elem5"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_P" name="Elem5"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="T1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="T2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Set_E2" name="__eps__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_P" name="Elem5"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="BinTree_E1" name="binTree"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="T1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="T2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="disjunction"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Set_E2" name="__eps__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="T1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Set_E2" name="__eps__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="T2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="eps_binTree">
      <use format="Hets">eps_binTree</use>
    </presentation>
    <axiom name="eps_nil_BinTree">
      <CMP>
  forall x,y: Elem; T, T1,T2: BinTree[Elem]
  forall x,y: Elem; T, T1,T2: BinTree[Elem]
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_BinTree)%
  . not isLeaf(nil)                        %(isLeaf_nil_BinTree)%
  . isLeaf(binTree(x,T1,T2)) &#60;=&#62;  
  . not isCompoundTree(nil)                   %(isCompoundTree_nil_BinTree)%
  . isCompoundTree(binTree(x,T1,T2)) &#60;=&#62; 
  . not (x eps nil)                        %(eps_nil_BinTree)%
  . x eps binTree(y,T1,T2) &#60;=&#62;
  . height(nil) = 0                        %(height_nil_BinTree)%   
  . height(binTree(x,T1,T2)) = 
  . leaves(nil) = {}                        %(leaves_nil_BinTree)%
  . leaves(binTree(x,T1,T2)) 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_P" name="Elem5"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Set_E2" name="__eps__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_P" name="Elem5"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMS cd="BinTree_E1" name="nil"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="eps_nil_BinTree">
      <use format="Hets">eps_nil_BinTree</use>
    </presentation>
    <axiom name="height_BinTree">
      <CMP>
  forall x,y: Elem; T, T1,T2: BinTree[Elem]
  forall x,y: Elem; T, T1,T2: BinTree[Elem]
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_BinTree)%
  . not isLeaf(nil)                        %(isLeaf_nil_BinTree)%
  . isLeaf(binTree(x,T1,T2)) &#60;=&#62;  
  . not isCompoundTree(nil)                   %(isCompoundTree_nil_BinTree)%
  . isCompoundTree(binTree(x,T1,T2)) &#60;=&#62; 
  . not (x eps nil)                        %(eps_nil_BinTree)%
  . x eps binTree(y,T1,T2) &#60;=&#62;
  . height(nil) = 0                        %(height_nil_BinTree)%   
  . height(binTree(x,T1,T2)) = 
  . leaves(nil) = {}                        %(leaves_nil_BinTree)%
  . leaves(binTree(x,T1,T2)) 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_P" name="Elem5"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="T1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="T2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="BinTree" name="height"/>
                <OMA>
                  <OMS cd="BinTree_E1" name="binTree"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="T1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="T2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat" name="__Plus__2"/>
                <OMA>
                  <OMS cd="Nat" name="max2"/>
                  <OMA>
                    <OMS cd="BinTree" name="height"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                      </OMATP>
                      <OMV name="T1"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="BinTree" name="height"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                      </OMATP>
                      <OMV name="T2"/>
                    </OMATTR>
                  </OMA>
                </OMA>
                <OMS cd="Nat" name="N12"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="height_BinTree">
      <use format="Hets">height_BinTree</use>
    </presentation>
    <axiom name="height_nil_BinTree">
      <CMP>
  . height(nil) = 0                        %(height_nil_BinTree)%   
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMA>
              <OMS cd="BinTree" name="height"/>
              <OMS cd="BinTree_E1" name="nil"/>
            </OMA>
            <OMS cd="Nat" name="N02"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="height_nil_BinTree">
      <use format="Hets">height_nil_BinTree</use>
    </presentation>
    <axiom name="isCompoundTree_binTree">
      <CMP>
  forall x,y: Elem; T, T1,T2: BinTree[Elem]
  forall x,y: Elem; T, T1,T2: BinTree[Elem]
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_BinTree)%
  . not isLeaf(nil)                        %(isLeaf_nil_BinTree)%
  . isLeaf(binTree(x,T1,T2)) &#60;=&#62;  
  . not isCompoundTree(nil)                   %(isCompoundTree_nil_BinTree)%
  . isCompoundTree(binTree(x,T1,T2)) &#60;=&#62; 
  . not (x eps nil)                        %(eps_nil_BinTree)%
  . x eps binTree(y,T1,T2) &#60;=&#62;
  . height(nil) = 0                        %(height_nil_BinTree)%   
  . height(binTree(x,T1,T2)) = 
  . leaves(nil) = {}                        %(leaves_nil_BinTree)%
  . leaves(binTree(x,T1,T2)) 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_P" name="Elem5"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="T1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="T2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="BinTree" name="isCompoundTree"/>
                <OMA>
                  <OMS cd="BinTree_E1" name="binTree"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="T1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="T2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="BinTree" name="isLeaf"/>
                  <OMA>
                    <OMS cd="BinTree_E1" name="binTree"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Set_P" name="Elem5"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                      </OMATP>
                      <OMV name="T1"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                      </OMATP>
                      <OMV name="T2"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isCompoundTree_binTree">
      <use format="Hets">isCompoundTree_binTree</use>
    </presentation>
    <axiom name="isCompoundTree_nil_BinTree">
      <CMP>
  . not isCompoundTree(nil)                   %(isCompoundTree_nil_BinTree)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="predication"/>
              <OMS cd="BinTree" name="isCompoundTree"/>
              <OMS cd="BinTree_E1" name="nil"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isCompoundTree_nil_BinTree">
      <use format="Hets">isCompoundTree_nil_BinTree</use>
    </presentation>
    <axiom name="isEmpty_def_BinTree">
      <CMP>
  forall x,y: Elem; T, T1,T2: BinTree[Elem]
  forall x,y: Elem; T, T1,T2: BinTree[Elem]
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_BinTree)%
  . not isLeaf(nil)                        %(isLeaf_nil_BinTree)%
  . isLeaf(binTree(x,T1,T2)) &#60;=&#62;  
  . not isCompoundTree(nil)                   %(isCompoundTree_nil_BinTree)%
  . isCompoundTree(binTree(x,T1,T2)) &#60;=&#62; 
  . not (x eps nil)                        %(eps_nil_BinTree)%
  . x eps binTree(y,T1,T2) &#60;=&#62;
  . height(nil) = 0                        %(height_nil_BinTree)%   
  . height(binTree(x,T1,T2)) = 
  . leaves(nil) = {}                        %(leaves_nil_BinTree)%
  . leaves(binTree(x,T1,T2)) 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="T"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="BinTree" name="isEmpty2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="T"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="T"/>
                </OMATTR>
                <OMS cd="BinTree_E1" name="nil"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isEmpty_def_BinTree">
      <use format="Hets">isEmpty_def_BinTree</use>
    </presentation>
    <axiom name="isLeaf_binTree">
      <CMP>
  forall x,y: Elem; T, T1,T2: BinTree[Elem]
  forall x,y: Elem; T, T1,T2: BinTree[Elem]
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_BinTree)%
  . not isLeaf(nil)                        %(isLeaf_nil_BinTree)%
  . isLeaf(binTree(x,T1,T2)) &#60;=&#62;  
  . not isCompoundTree(nil)                   %(isCompoundTree_nil_BinTree)%
  . isCompoundTree(binTree(x,T1,T2)) &#60;=&#62; 
  . not (x eps nil)                        %(eps_nil_BinTree)%
  . x eps binTree(y,T1,T2) &#60;=&#62;
  . height(nil) = 0                        %(height_nil_BinTree)%   
  . height(binTree(x,T1,T2)) = 
  . leaves(nil) = {}                        %(leaves_nil_BinTree)%
  . leaves(binTree(x,T1,T2)) 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_P" name="Elem5"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="T1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="T2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="BinTree" name="isLeaf"/>
                <OMA>
                  <OMS cd="BinTree_E1" name="binTree"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="T1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="T2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="T1"/>
                  </OMATTR>
                  <OMS cd="BinTree_E1" name="nil"/>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="T2"/>
                  </OMATTR>
                  <OMS cd="BinTree_E1" name="nil"/>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isLeaf_binTree">
      <use format="Hets">isLeaf_binTree</use>
    </presentation>
    <axiom name="isLeaf_nil_BinTree">
      <CMP>
  . not isLeaf(nil)                        %(isLeaf_nil_BinTree)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="predication"/>
              <OMS cd="BinTree" name="isLeaf"/>
              <OMS cd="BinTree_E1" name="nil"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isLeaf_nil_BinTree">
      <use format="Hets">isLeaf_nil_BinTree</use>
    </presentation>
    <axiom name="leaves_BinTree">
      <CMP>
  forall x,y: Elem; T, T1,T2: BinTree[Elem]
  forall x,y: Elem; T, T1,T2: BinTree[Elem]
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_BinTree)%
  . not isLeaf(nil)                        %(isLeaf_nil_BinTree)%
  . isLeaf(binTree(x,T1,T2)) &#60;=&#62;  
  . not isCompoundTree(nil)                   %(isCompoundTree_nil_BinTree)%
  . isCompoundTree(binTree(x,T1,T2)) &#60;=&#62; 
  . not (x eps nil)                        %(eps_nil_BinTree)%
  . x eps binTree(y,T1,T2) &#60;=&#62;
  . height(nil) = 0                        %(height_nil_BinTree)%   
  . height(binTree(x,T1,T2)) = 
  . leaves(nil) = {}                        %(leaves_nil_BinTree)%
  . leaves(binTree(x,T1,T2)) 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_P" name="Elem5"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="T1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="T2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="BinTree" name="leaves"/>
                <OMA>
                  <OMS cd="BinTree_E1" name="binTree"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="T1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="T2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="IfThenElse"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="BinTree" name="isLeaf"/>
                  <OMA>
                    <OMS cd="BinTree_E1" name="binTree"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Set_P" name="Elem5"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                      </OMATP>
                      <OMV name="T1"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                      </OMATP>
                      <OMV name="T2"/>
                    </OMATTR>
                  </OMA>
                </OMA>
                <OMA>
                  <OMS cd="Set_E1" name="BraceOpen__BraceClose2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Set_E1" name="__union__2"/>
                  <OMA>
                    <OMS cd="BinTree" name="leaves"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                      </OMATP>
                      <OMV name="T1"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="BinTree" name="leaves"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="BinTree_E1" name="BinTreeSBrackOpenElemSBrackClose"/>
                      </OMATP>
                      <OMV name="T2"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="leaves_BinTree">
      <use format="Hets">leaves_BinTree</use>
    </presentation>
    <axiom name="leaves_nil_BinTree">
      <CMP>
  . leaves(nil) = {}                        %(leaves_nil_BinTree)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMA>
              <OMS cd="BinTree" name="leaves"/>
              <OMS cd="BinTree_E1" name="nil"/>
            </OMA>
            <OMS cd="Set_E2" name="BraceOpenBraceClose2"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="leaves_nil_BinTree">
      <use format="Hets">leaves_nil_BinTree</use>
    </presentation>
  </theory>
  <private for="BinTree">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"BinTree_E1" Type:"GlobalDef" Origin:"DGExtension"
From:"BinTree_E1" Type:"GlobalThm Open Def Open" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="GenerateBinTree2_P">
    <presentation for="GenerateBinTree2_P">
      <use format="Hets">[GenerateBinTree2,P,0]</use>
    </presentation>
    <symbol role="sort" name="Elem25"/>
    <presentation for="Elem25">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <theory xml:id="GenerateBinTree2">
    <presentation for="GenerateBinTree2">
      <use format="Hets">[GenerateBinTree2,,0]</use>
    </presentation>
    <imports from="#GenerateBinTree2_P"/>
    <symbol role="sort" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
    <presentation for="NonEmptyBinTree2SBrackOpenElemSBrackClose2">
      <use format="Hets">[NonEmptyBinTree2[Elem]]</use>
    </presentation>
    <symbol role="sort" name="BinTree2SBrackOpenElemSBrackClose2"/>
    <presentation for="BinTree2SBrackOpenElemSBrackClose2">
      <use format="Hets">[BinTree2[Elem]]</use>
    </presentation>
    <adt>
      <sortdef name="BinTree2SBrackOpenElemSBrackClose2" type="free">
        <constructor name="binTree6">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
              </OMOBJ>
            </type>
          </argument>
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="g__inj">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="leaf7">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="GenerateBinTree2_P" name="Elem25"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="nil14"/>
        <insort for="#NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
      </sortdef>
    </adt>
    <adt>
      <sortdef name="BinTree2SBrackOpenElemSBrackClose2" type="free">
        <constructor name="binTree6">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
              </OMOBJ>
            </type>
          </argument>
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="g__inj">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="leaf7">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="GenerateBinTree2_P" name="Elem25"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="nil14"/>
        <insort for="#NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
      </sortdef>
    </adt>
    <symbol name="binTree5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
            <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
            <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="binTree5">
      <use format="Hets">[binTree]</use>
    </presentation>
    <symbol name="entry5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
            <OMS cd="GenerateBinTree2_P" name="Elem25"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="entry5">
      <use format="Hets">[entry]</use>
    </presentation>
    <symbol name="leaf2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="GenerateBinTree2_P" name="Elem25"/>
            <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="leaf2">
      <use format="Hets">[leaf]</use>
    </presentation>
    <symbol name="left5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
            <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="left5">
      <use format="Hets">[left]</use>
    </presentation>
    <symbol name="nil5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="GenerateBinTree2" name="BinTree2SBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="nil5">
      <use format="Hets">[nil]</use>
    </presentation>
    <symbol name="right5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
            <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="right5">
      <use format="Hets">[right]</use>
    </presentation>
    <axiom name="ga_disjoint_leaf_binTree">
      <CMP>
      ::= leaf (entry:? Elem)
        | binTree (left :? NonEmptyBinTree2[Elem]; 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree2_P" name="Elem25"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="GenerateBinTree2" name="leaf2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree2_P" name="Elem25"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="GenerateBinTree2" name="binTree5"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_leaf_binTree">
      <use format="Hets">ga_disjoint_leaf_binTree</use>
    </presentation>
    <axiom name="ga_disjoint_nil_sort_NonEmptyBinTree2SBrackOpenElemSBrackClose">
      <CMP>
    BinTree2[Elem] ::= nil | sort NonEmptyBinTree2[Elem]
    BinTree2[Elem] ::= nil | sort NonEmptyBinTree2[Elem]
    BinTree2[Elem] ::= nil | sort NonEmptyBinTree2[Elem]
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="membership"/>
              <OMS cd="GenerateBinTree2" name="nil5"/>
              <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_nil_sort_NonEmptyBinTree2SBrackOpenElemSBrackClose">
      <use format="Hets">ga_disjoint_nil_sort_NonEmptyBinTree2[Elem]</use>
    </presentation>
    <axiom name="ga_injective_binTree1">
      <CMP>
        | binTree (left :? NonEmptyBinTree2[Elem]; 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="GenerateBinTree2" name="binTree5"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="GenerateBinTree2" name="binTree5"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective_binTree1">
      <use format="Hets">ga_injective_binTree</use>
    </presentation>
    <axiom name="ga_injective_leaf">
      <CMP>
      ::= leaf (entry:? Elem)
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree2_P" name="Elem25"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree2_P" name="Elem25"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="GenerateBinTree2" name="leaf2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree2_P" name="Elem25"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="GenerateBinTree2" name="leaf2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree2_P" name="Elem25"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="GenerateBinTree2_P" name="Elem25"/>
                  </OMATP>
                  <OMV name="X1"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="GenerateBinTree2_P" name="Elem25"/>
                  </OMATP>
                  <OMV name="Y1"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective_leaf">
      <use format="Hets">ga_injective_leaf</use>
    </presentation>
    <axiom name="ga_selector_entry1">
      <CMP>
      ::= leaf (entry:? Elem)
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree2_P" name="Elem25"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="GenerateBinTree2" name="entry5"/>
                <OMA>
                  <OMS cd="GenerateBinTree2" name="leaf2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree2_P" name="Elem25"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree2_P" name="Elem25"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_entry1">
      <use format="Hets">ga_selector_entry</use>
    </presentation>
    <axiom name="ga_selector_left1">
      <CMP>
        | binTree (left :? NonEmptyBinTree2[Elem]; 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="GenerateBinTree2" name="left5"/>
                <OMA>
                  <OMS cd="GenerateBinTree2" name="binTree5"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_left1">
      <use format="Hets">ga_selector_left</use>
    </presentation>
    <axiom name="ga_selector_right1">
      <CMP>
                   right:? NonEmptyBinTree2[Elem]);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="GenerateBinTree2" name="right5"/>
                <OMA>
                  <OMS cd="GenerateBinTree2" name="binTree5"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_right1">
      <use format="Hets">ga_selector_right</use>
    </presentation>
    <axiom name="ga_selector_undef_entry_binTree">
      <CMP>
      ::= leaf (entry:? Elem)
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="GenerateBinTree2" name="entry5"/>
                  <OMA>
                    <OMS cd="GenerateBinTree2" name="binTree5"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                      </OMATP>
                      <OMV name="X1"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="GenerateBinTree2" name="NonEmptyBinTree2SBrackOpenElemSBrackClose2"/>
                      </OMATP>
                      <OMV name="X2"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_undef_entry_binTree">
      <use format="Hets">ga_selector_undef_entry_binTree</use>
    </presentation>
    <axiom name="ga_selector_undef_left_leaf">
      <CMP>
        | binTree (left :? NonEmptyBinTree2[Elem]; 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree2_P" name="Elem25"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="GenerateBinTree2" name="left5"/>
                  <OMA>
                    <OMS cd="GenerateBinTree2" name="leaf2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="GenerateBinTree2_P" name="Elem25"/>
                      </OMATP>
                      <OMV name="X1"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_undef_left_leaf">
      <use format="Hets">ga_selector_undef_left_leaf</use>
    </presentation>
    <axiom name="ga_selector_undef_right_leaf">
      <CMP>
                   right:? NonEmptyBinTree2[Elem]);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateBinTree2_P" name="Elem25"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="GenerateBinTree2" name="right5"/>
                  <OMA>
                    <OMS cd="GenerateBinTree2" name="leaf2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="GenerateBinTree2_P" name="Elem25"/>
                      </OMATP>
                      <OMV name="X1"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_undef_right_leaf">
      <use format="Hets">ga_selector_undef_right_leaf</use>
    </presentation>
  </theory>
  <private for="GenerateBinTree2">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"GenerateBinTree2_P" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="BinTree2_PIU1A">
    <presentation for="BinTree2_PIU1A">
      <use format="Hets">[BinTree2,PIU1A,0]</use>
    </presentation>
    <imports from="#Set_PI"/>
    <symbol role="sort" name="Elem13"/>
    <presentation for="Elem13">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="BinTree2_PIU1A">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst Set"
From:"Set_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="BinTree2_PIU1">
    <presentation for="BinTree2_PIU1">
      <use format="Hets">[BinTree2,PIU,1]</use>
    </presentation>
    <imports from="#BinTree2_PIU1A"/>
    <imports from="#Set">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N02"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="N02"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N12"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="N12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N22"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="N22"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N32"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="N32"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N42"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="N42"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N52"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="N52"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N62"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="N62"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N72"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="N72"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N82"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="N82"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N92"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="N92"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="__LowerEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="__Lower__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="__GreaterEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="__Greater__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Ast__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="__Ast__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__AtAt__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="__AtAt__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__DivisionQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="__DivisionQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Excla2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="__Excla2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusExcla__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="__MinusExcla__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="__MinusQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Plus__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="__Plus__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Power__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="__Power__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__div__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="__div__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__mod__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="__mod__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="even2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="max2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="max2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="min2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="min2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="odd2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="pre2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="pre2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="suc2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_PIU1" name="suc2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
  </theory>
  <private for="BinTree2_PIU1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set" Type:"GlobalDef" Origin:"DGSpecInst Set"
From:"BinTree2_PIU1A" Type:"GlobalDef" Origin:"DGFitSpec"
]]></data>
  </private>
  <theory xml:id="BinTree2_PI">
    <presentation for="BinTree2_PI">
      <use format="Hets">[BinTree2,PI,0]</use>
    </presentation>
    <imports from="#BinTree2_PIU1"/>
    <imports from="Basic/Numbers.omdoc#Nat"/>
    <symbol role="sort" name="SetSBrackOpenElemSBrackClose3"/>
    <presentation for="SetSBrackOpenElemSBrackClose3">
      <use format="Hets">[Set[Elem]]</use>
    </presentation>
    <symbol role="sort" name="Elem10"/>
    <presentation for="Elem10">
      <use format="Hets">[Elem]</use>
    </presentation>
    <symbol name="__eps__4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="BinTree2_PI" name="Elem10"/>
            <OMS cd="BinTree2_PI" name="SetSBrackOpenElemSBrackClose3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__eps__4">
      <use format="Hets">[__,eps,__]</use>
    </presentation>
    <symbol name="__isSubsetOf__4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="BinTree2_PI" name="SetSBrackOpenElemSBrackClose3"/>
            <OMS cd="BinTree2_PI" name="SetSBrackOpenElemSBrackClose3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__isSubsetOf__4">
      <use format="Hets">[__,isSubsetOf,__]</use>
    </presentation>
    <symbol name="isNonEmpty3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="BinTree2_PI" name="SetSBrackOpenElemSBrackClose3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isNonEmpty3">
      <use format="Hets">[isNonEmpty]</use>
    </presentation>
    <symbol name="Hash__3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="BinTree2_PI" name="SetSBrackOpenElemSBrackClose3"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="Hash__3">
      <use format="Hets">[#,__]</use>
    </presentation>
    <symbol name="__Minus__5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="BinTree2_PI" name="SetSBrackOpenElemSBrackClose3"/>
            <OMS cd="BinTree2_PI" name="Elem10"/>
            <OMS cd="BinTree2_PI" name="SetSBrackOpenElemSBrackClose3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__5">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__Minus__5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="BinTree2_PI" name="SetSBrackOpenElemSBrackClose3"/>
            <OMS cd="BinTree2_PI" name="SetSBrackOpenElemSBrackClose3"/>
            <OMS cd="BinTree2_PI" name="SetSBrackOpenElemSBrackClose3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__5">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__intersection__4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="BinTree2_PI" name="SetSBrackOpenElemSBrackClose3"/>
            <OMS cd="BinTree2_PI" name="SetSBrackOpenElemSBrackClose3"/>
            <OMS cd="BinTree2_PI" name="SetSBrackOpenElemSBrackClose3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__intersection__4">
      <use format="Hets">[__,intersection,__]</use>
    </presentation>
    <symbol name="__symDiff__3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="BinTree2_PI" name="SetSBrackOpenElemSBrackClose3"/>
            <OMS cd="BinTree2_PI" name="SetSBrackOpenElemSBrackClose3"/>
            <OMS cd="BinTree2_PI" name="SetSBrackOpenElemSBrackClose3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__symDiff__3">
      <use format="Hets">[__,symDiff,__]</use>
    </presentation>
    <symbol name="__union__4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="BinTree2_PI" name="SetSBrackOpenElemSBrackClose3"/>
            <OMS cd="BinTree2_PI" name="SetSBrackOpenElemSBrackClose3"/>
            <OMS cd="BinTree2_PI" name="SetSBrackOpenElemSBrackClose3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__union__4">
      <use format="Hets">[__,union,__]</use>
    </presentation>
    <symbol name="BraceOpen__BraceClose4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="BinTree2_PI" name="Elem10"/>
            <OMS cd="BinTree2_PI" name="SetSBrackOpenElemSBrackClose3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BraceOpen__BraceClose4">
      <use format="Hets">[{,__,}]</use>
    </presentation>
    <symbol name="BraceOpenBraceClose4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="BinTree2_PI" name="SetSBrackOpenElemSBrackClose3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BraceOpenBraceClose4">
      <use format="Hets">[{,}]</use>
    </presentation>
  </theory>
  <private for="BinTree2_PI">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat" Type:"GlobalDef" Origin:"DGUnion"
From:"BinTree2_PIU1" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="BinTree2_P">
    <presentation for="BinTree2_P">
      <use format="Hets">[BinTree2,P,0]</use>
    </presentation>
    <imports from="#BinTree2_PI"/>
  </theory>
  <private for="BinTree2_P">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"BinTree2_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="BinTree2_E1UA">
    <presentation for="BinTree2_E1UA">
      <use format="Hets">[BinTree2,E1UA,0]</use>
    </presentation>
    <symbol role="sort" name="Elem12"/>
    <presentation for="Elem12">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="BinTree2_E1UA">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"GenerateBinTree2_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst GenerateBinTree2"
]]></data>
  </private>
  <theory xml:id="BinTree2_E1U">
    <presentation for="BinTree2_E1U">
      <use format="Hets">[BinTree2,E1U,0]</use>
    </presentation>
    <imports from="#BinTree2_E1UA"/>
    <imports from="#BinTree2_P"/>
    <imports from="#GenerateBinTree2"/>
    <symbol role="sort" name="NonEmptyBinTree2SBrackOpenElemSBrackClose1"/>
    <presentation for="NonEmptyBinTree2SBrackOpenElemSBrackClose1">
      <use format="Hets">[NonEmptyBinTree2[Elem]]</use>
    </presentation>
    <symbol role="sort" name="BinTree2SBrackOpenElemSBrackClose1"/>
    <presentation for="BinTree2SBrackOpenElemSBrackClose1">
      <use format="Hets">[BinTree2[Elem]]</use>
    </presentation>
    <adt>
      <sortdef name="BinTree2SBrackOpenElemSBrackClose1" type="free">
        <insort for="#NonEmptyBinTree2SBrackOpenElemSBrackClose1"/>
      </sortdef>
    </adt>
    <symbol name="binTree3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="BinTree2_E1U" name="NonEmptyBinTree2SBrackOpenElemSBrackClose1"/>
            <OMS cd="BinTree2_E1U" name="NonEmptyBinTree2SBrackOpenElemSBrackClose1"/>
            <OMS cd="BinTree2_E1U" name="NonEmptyBinTree2SBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="binTree3">
      <use format="Hets">[binTree]</use>
    </presentation>
    <symbol name="entry3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="BinTree2_E1U" name="NonEmptyBinTree2SBrackOpenElemSBrackClose1"/>
            <OMS cd="BinTree2_PI" name="Elem10"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="entry3">
      <use format="Hets">[entry]</use>
    </presentation>
    <symbol name="leaf1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="BinTree2_PI" name="Elem10"/>
            <OMS cd="BinTree2_E1U" name="NonEmptyBinTree2SBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="leaf1">
      <use format="Hets">[leaf]</use>
    </presentation>
    <symbol name="left3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="BinTree2_E1U" name="NonEmptyBinTree2SBrackOpenElemSBrackClose1"/>
            <OMS cd="BinTree2_E1U" name="NonEmptyBinTree2SBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="left3">
      <use format="Hets">[left]</use>
    </presentation>
    <symbol name="nil3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="BinTree2_E1U" name="BinTree2SBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="nil3">
      <use format="Hets">[nil]</use>
    </presentation>
    <symbol name="right3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="BinTree2_E1U" name="NonEmptyBinTree2SBrackOpenElemSBrackClose1"/>
            <OMS cd="BinTree2_E1U" name="NonEmptyBinTree2SBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="right3">
      <use format="Hets">[right]</use>
    </presentation>
  </theory>
  <private for="BinTree2_E1U">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"BinTree2_P" Type:"GlobalDef" Origin:"DGSpecInst GenerateBinTree2"
From:"BinTree2_E1UA" Type:"GlobalDef" Origin:"DGFitSpec"
From:"GenerateBinTree2" Type:"GlobalDef" Origin:"DGSpecInst GenerateBinTree2"
]]></data>
  </private>
  <theory xml:id="BinTree2_E1U1A">
    <presentation for="BinTree2_E1U1A">
      <use format="Hets">[BinTree2,E1U1A,0]</use>
    </presentation>
    <imports from="#Set_PI"/>
    <symbol role="sort" name="Elem11"/>
    <presentation for="Elem11">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="BinTree2_E1U1A">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst Set"
From:"Set_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="BinTree2_E1U1">
    <presentation for="BinTree2_E1U1">
      <use format="Hets">[BinTree2,E1U,1]</use>
    </presentation>
    <imports from="#BinTree2_E1U1A"/>
    <imports from="#BinTree2_P"/>
    <imports from="#Set">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N02"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="N02"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N12"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="N12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N22"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="N22"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N32"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="N32"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N42"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="N42"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N52"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="N52"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N62"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="N62"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N72"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="N72"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N82"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="N82"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N92"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="N92"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="__LowerEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="__Lower__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="__GreaterEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="__Greater__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Ast__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="__Ast__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__AtAt__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="__AtAt__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__DivisionQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="__DivisionQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Excla2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="__Excla2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusExcla__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="__MinusExcla__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="__MinusQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Plus__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="__Plus__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Power__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="__Power__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__div__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="__div__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__mod__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="__mod__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="even2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="max2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="max2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="min2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="min2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="odd2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="pre2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="pre2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="suc2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="BinTree2_E1U1" name="suc2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
  </theory>
  <private for="BinTree2_E1U1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set" Type:"GlobalDef" Origin:"DGSpecInst Set"
From:"BinTree2_E1U1A" Type:"GlobalDef" Origin:"DGFitSpec"
From:"BinTree2_P" Type:"GlobalDef" Origin:"DGSpecInst Set"
]]></data>
  </private>
  <theory xml:id="BinTree2_E1">
    <presentation for="BinTree2_E1">
      <use format="Hets">[BinTree2,E,1]</use>
    </presentation>
    <imports from="#BinTree2_E1U"/>
    <imports from="#BinTree2_E1U1"/>
    <symbol role="sort" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
    <presentation for="NonEmptyBinTree2SBrackOpenElemSBrackClose">
      <use format="Hets">[NonEmptyBinTree2[Elem]]</use>
    </presentation>
    <symbol role="sort" name="BinTree2SBrackOpenElemSBrackClose"/>
    <presentation for="BinTree2SBrackOpenElemSBrackClose">
      <use format="Hets">[BinTree2[Elem]]</use>
    </presentation>
    <adt>
      <sortdef name="BinTree2SBrackOpenElemSBrackClose" type="free">
        <insort for="#NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
      </sortdef>
    </adt>
    <symbol name="binTree2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
            <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
            <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="binTree2">
      <use format="Hets">[binTree]</use>
    </presentation>
    <symbol name="entry2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
            <OMS cd="Set_P" name="Elem5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="entry2">
      <use format="Hets">[entry]</use>
    </presentation>
    <symbol name="leaf" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Set_P" name="Elem5"/>
            <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="leaf">
      <use format="Hets">[leaf]</use>
    </presentation>
    <symbol name="left2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
            <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="left2">
      <use format="Hets">[left]</use>
    </presentation>
    <symbol name="nil2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="BinTree2_E1" name="BinTree2SBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="nil2">
      <use format="Hets">[nil]</use>
    </presentation>
    <symbol name="right2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
            <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="right2">
      <use format="Hets">[right]</use>
    </presentation>
  </theory>
  <private for="BinTree2_E1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"BinTree2_E1U1" Type:"GlobalDef" Origin:"DGUnion"
From:"BinTree2_E1U" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="BinTree2">
    <presentation for="BinTree2">
      <use format="Hets">[BinTree2,,0]</use>
    </presentation>
    <imports from="#BinTree2_E1"/>
    <symbol name="isCompoundTree1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="BinTree2_E1" name="BinTree2SBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isCompoundTree1">
      <use format="Hets">[isCompoundTree]</use>
    </presentation>
    <symbol name="isEmpty3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="BinTree2_E1" name="BinTree2SBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isEmpty3">
      <use format="Hets">[isEmpty]</use>
    </presentation>
    <symbol name="isLeaf1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="BinTree2_E1" name="BinTree2SBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isLeaf1">
      <use format="Hets">[isLeaf]</use>
    </presentation>
    <symbol name="height1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="BinTree2_E1" name="BinTree2SBrackOpenElemSBrackClose"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="height1">
      <use format="Hets">[height]</use>
    </presentation>
    <symbol name="leaves1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="BinTree2_E1" name="BinTree2SBrackOpenElemSBrackClose"/>
            <OMS cd="Set_E2" name="SetSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="leaves1">
      <use format="Hets">[leaves]</use>
    </presentation>
    <axiom name="eps_binTree_BinTree2">
      <CMP>
  forall x,y: Elem; T: BinTree2[Elem];
  forall x,y: Elem; T: BinTree2[Elem];
  forall x,y: Elem; T: BinTree2[Elem];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_BinTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_BinTree2)%
  . not isLeaf(binTree(N1,N2))             %(isLeaf_binTree_BinTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_BinTree2)%
  . not isCompoundTree(leaf(x))               %(isCompoundTree_leaf_BinTree2)%
  . isCompoundTree(binTree(N1,N2))         %(isCompoundTree_binTree_BinTree2)%
  . not isCompoundTree(nil)                    %(isCompoundTree_nil_BinTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_BinTree2)%
  . x eps binTree(N1,N2) &#60;=&#62;
  . not (x eps nil)                        %(eps_nil_BinTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_binTree2)%
  . height(binTree(N1,N2)) =  
  . height(nil) = 0                        %(height_nil_BinTree2)%   
  . leaves(leaf(x)) = {x}                   %(leaves_leaf_BinTree2)%
  . leaves(binTree(N1,N2)) = 
  . leaves(nil) = {}                        %(leaves_nil_BinTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_P" name="Elem5"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="N1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="N2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Set_E2" name="__eps__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_P" name="Elem5"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="BinTree2_E1" name="binTree2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="N1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="N2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="disjunction"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Set_E2" name="__eps__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="N1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Set_E2" name="__eps__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="N2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="eps_binTree_BinTree2">
      <use format="Hets">eps_binTree_BinTree2</use>
    </presentation>
    <axiom name="eps_leaf_BinTree2">
      <CMP>
  forall x,y: Elem; T: BinTree2[Elem];
  forall x,y: Elem; T: BinTree2[Elem];
  forall x,y: Elem; T: BinTree2[Elem];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_BinTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_BinTree2)%
  . not isLeaf(binTree(N1,N2))             %(isLeaf_binTree_BinTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_BinTree2)%
  . not isCompoundTree(leaf(x))               %(isCompoundTree_leaf_BinTree2)%
  . isCompoundTree(binTree(N1,N2))         %(isCompoundTree_binTree_BinTree2)%
  . not isCompoundTree(nil)                    %(isCompoundTree_nil_BinTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_BinTree2)%
  . x eps binTree(N1,N2) &#60;=&#62;
  . not (x eps nil)                        %(eps_nil_BinTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_binTree2)%
  . height(binTree(N1,N2)) =  
  . height(nil) = 0                        %(height_nil_BinTree2)%   
  . leaves(leaf(x)) = {x}                   %(leaves_leaf_BinTree2)%
  . leaves(binTree(N1,N2)) = 
  . leaves(nil) = {}                        %(leaves_nil_BinTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_P" name="Elem5"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_P" name="Elem5"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Set_E2" name="__eps__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_P" name="Elem5"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="BinTree2_E1" name="leaf"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_P" name="Elem5"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_P" name="Elem5"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="eps_leaf_BinTree2">
      <use format="Hets">eps_leaf_BinTree2</use>
    </presentation>
    <axiom name="eps_nil_BinTree2">
      <CMP>
  forall x,y: Elem; T: BinTree2[Elem];
  forall x,y: Elem; T: BinTree2[Elem];
  forall x,y: Elem; T: BinTree2[Elem];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_BinTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_BinTree2)%
  . not isLeaf(binTree(N1,N2))             %(isLeaf_binTree_BinTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_BinTree2)%
  . not isCompoundTree(leaf(x))               %(isCompoundTree_leaf_BinTree2)%
  . isCompoundTree(binTree(N1,N2))         %(isCompoundTree_binTree_BinTree2)%
  . not isCompoundTree(nil)                    %(isCompoundTree_nil_BinTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_BinTree2)%
  . x eps binTree(N1,N2) &#60;=&#62;
  . not (x eps nil)                        %(eps_nil_BinTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_binTree2)%
  . height(binTree(N1,N2)) =  
  . height(nil) = 0                        %(height_nil_BinTree2)%   
  . leaves(leaf(x)) = {x}                   %(leaves_leaf_BinTree2)%
  . leaves(binTree(N1,N2)) = 
  . leaves(nil) = {}                        %(leaves_nil_BinTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_P" name="Elem5"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Set_E2" name="__eps__2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_P" name="Elem5"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMS cd="BinTree2_E1" name="nil2"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="eps_nil_BinTree2">
      <use format="Hets">eps_nil_BinTree2</use>
    </presentation>
    <axiom name="height_binTree_BinTree2">
      <CMP>
  forall x,y: Elem; T: BinTree2[Elem];
  forall x,y: Elem; T: BinTree2[Elem];
  forall x,y: Elem; T: BinTree2[Elem];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_BinTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_BinTree2)%
  . not isLeaf(binTree(N1,N2))             %(isLeaf_binTree_BinTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_BinTree2)%
  . not isCompoundTree(leaf(x))               %(isCompoundTree_leaf_BinTree2)%
  . isCompoundTree(binTree(N1,N2))         %(isCompoundTree_binTree_BinTree2)%
  . not isCompoundTree(nil)                    %(isCompoundTree_nil_BinTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_BinTree2)%
  . x eps binTree(N1,N2) &#60;=&#62;
  . not (x eps nil)                        %(eps_nil_BinTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_binTree2)%
  . height(binTree(N1,N2)) =  
  . height(nil) = 0                        %(height_nil_BinTree2)%   
  . leaves(leaf(x)) = {x}                   %(leaves_leaf_BinTree2)%
  . leaves(binTree(N1,N2)) = 
  . leaves(nil) = {}                        %(leaves_nil_BinTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="N1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="N2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="BinTree2" name="height1"/>
                <OMA>
                  <OMS cd="BinTree2_E1" name="binTree2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="N1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="N2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat" name="__Plus__2"/>
                <OMA>
                  <OMS cd="Nat" name="max2"/>
                  <OMA>
                    <OMS cd="BinTree2" name="height1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
                      </OMATP>
                      <OMV name="N1"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="BinTree2" name="height1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
                      </OMATP>
                      <OMV name="N2"/>
                    </OMATTR>
                  </OMA>
                </OMA>
                <OMS cd="Nat" name="N12"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="height_binTree_BinTree2">
      <use format="Hets">height_binTree_BinTree2</use>
    </presentation>
    <axiom name="height_leaf_binTree2">
      <CMP>
  forall x,y: Elem; T: BinTree2[Elem];
  forall x,y: Elem; T: BinTree2[Elem];
  forall x,y: Elem; T: BinTree2[Elem];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_BinTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_BinTree2)%
  . not isLeaf(binTree(N1,N2))             %(isLeaf_binTree_BinTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_BinTree2)%
  . not isCompoundTree(leaf(x))               %(isCompoundTree_leaf_BinTree2)%
  . isCompoundTree(binTree(N1,N2))         %(isCompoundTree_binTree_BinTree2)%
  . not isCompoundTree(nil)                    %(isCompoundTree_nil_BinTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_BinTree2)%
  . x eps binTree(N1,N2) &#60;=&#62;
  . not (x eps nil)                        %(eps_nil_BinTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_binTree2)%
  . height(binTree(N1,N2)) =  
  . height(nil) = 0                        %(height_nil_BinTree2)%   
  . leaves(leaf(x)) = {x}                   %(leaves_leaf_BinTree2)%
  . leaves(binTree(N1,N2)) = 
  . leaves(nil) = {}                        %(leaves_nil_BinTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_P" name="Elem5"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="BinTree2" name="height1"/>
                <OMA>
                  <OMS cd="BinTree2_E1" name="leaf"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMS cd="Nat" name="N12"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="height_leaf_binTree2">
      <use format="Hets">height_leaf_binTree2</use>
    </presentation>
    <axiom name="height_nil_BinTree2">
      <CMP>
  . height(nil) = 0                        %(height_nil_BinTree2)%   
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMA>
              <OMS cd="BinTree2" name="height1"/>
              <OMS cd="BinTree2_E1" name="nil2"/>
            </OMA>
            <OMS cd="Nat" name="N02"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="height_nil_BinTree2">
      <use format="Hets">height_nil_BinTree2</use>
    </presentation>
    <axiom name="isCompoundTree_binTree_BinTree2">
      <CMP>
  forall x,y: Elem; T: BinTree2[Elem];
  forall x,y: Elem; T: BinTree2[Elem];
  forall x,y: Elem; T: BinTree2[Elem];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_BinTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_BinTree2)%
  . not isLeaf(binTree(N1,N2))             %(isLeaf_binTree_BinTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_BinTree2)%
  . not isCompoundTree(leaf(x))               %(isCompoundTree_leaf_BinTree2)%
  . isCompoundTree(binTree(N1,N2))         %(isCompoundTree_binTree_BinTree2)%
  . not isCompoundTree(nil)                    %(isCompoundTree_nil_BinTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_BinTree2)%
  . x eps binTree(N1,N2) &#60;=&#62;
  . not (x eps nil)                        %(eps_nil_BinTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_binTree2)%
  . height(binTree(N1,N2)) =  
  . height(nil) = 0                        %(height_nil_BinTree2)%   
  . leaves(leaf(x)) = {x}                   %(leaves_leaf_BinTree2)%
  . leaves(binTree(N1,N2)) = 
  . leaves(nil) = {}                        %(leaves_nil_BinTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="N1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="N2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="predication"/>
              <OMS cd="BinTree2" name="isCompoundTree1"/>
              <OMA>
                <OMS cd="BinTree2_E1" name="binTree2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="N1"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="N2"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isCompoundTree_binTree_BinTree2">
      <use format="Hets">isCompoundTree_binTree_BinTree2</use>
    </presentation>
    <axiom name="isCompoundTree_leaf_BinTree2">
      <CMP>
  forall x,y: Elem; T: BinTree2[Elem];
  forall x,y: Elem; T: BinTree2[Elem];
  forall x,y: Elem; T: BinTree2[Elem];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_BinTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_BinTree2)%
  . not isLeaf(binTree(N1,N2))             %(isLeaf_binTree_BinTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_BinTree2)%
  . not isCompoundTree(leaf(x))               %(isCompoundTree_leaf_BinTree2)%
  . isCompoundTree(binTree(N1,N2))         %(isCompoundTree_binTree_BinTree2)%
  . not isCompoundTree(nil)                    %(isCompoundTree_nil_BinTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_BinTree2)%
  . x eps binTree(N1,N2) &#60;=&#62;
  . not (x eps nil)                        %(eps_nil_BinTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_binTree2)%
  . height(binTree(N1,N2)) =  
  . height(nil) = 0                        %(height_nil_BinTree2)%   
  . leaves(leaf(x)) = {x}                   %(leaves_leaf_BinTree2)%
  . leaves(binTree(N1,N2)) = 
  . leaves(nil) = {}                        %(leaves_nil_BinTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_P" name="Elem5"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="BinTree2" name="isCompoundTree1"/>
                <OMA>
                  <OMS cd="BinTree2_E1" name="leaf"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isCompoundTree_leaf_BinTree2">
      <use format="Hets">isCompoundTree_leaf_BinTree2</use>
    </presentation>
    <axiom name="isCompoundTree_nil_BinTree2">
      <CMP>
  . not isCompoundTree(nil)                    %(isCompoundTree_nil_BinTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="predication"/>
              <OMS cd="BinTree2" name="isCompoundTree1"/>
              <OMS cd="BinTree2_E1" name="nil2"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isCompoundTree_nil_BinTree2">
      <use format="Hets">isCompoundTree_nil_BinTree2</use>
    </presentation>
    <axiom name="isEmpty_def_BinTree2">
      <CMP>
  forall x,y: Elem; T: BinTree2[Elem];
  forall x,y: Elem; T: BinTree2[Elem];
  forall x,y: Elem; T: BinTree2[Elem];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_BinTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_BinTree2)%
  . not isLeaf(binTree(N1,N2))             %(isLeaf_binTree_BinTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_BinTree2)%
  . not isCompoundTree(leaf(x))               %(isCompoundTree_leaf_BinTree2)%
  . isCompoundTree(binTree(N1,N2))         %(isCompoundTree_binTree_BinTree2)%
  . not isCompoundTree(nil)                    %(isCompoundTree_nil_BinTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_BinTree2)%
  . x eps binTree(N1,N2) &#60;=&#62;
  . not (x eps nil)                        %(eps_nil_BinTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_binTree2)%
  . height(binTree(N1,N2)) =  
  . height(nil) = 0                        %(height_nil_BinTree2)%   
  . leaves(leaf(x)) = {x}                   %(leaves_leaf_BinTree2)%
  . leaves(binTree(N1,N2)) = 
  . leaves(nil) = {}                        %(leaves_nil_BinTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="BinTree2_E1" name="BinTree2SBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="T"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="BinTree2" name="isEmpty3"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="BinTree2_E1" name="BinTree2SBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="T"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="BinTree2_E1" name="BinTree2SBrackOpenElemSBrackClose"/>
                  </OMATP>
                  <OMV name="T"/>
                </OMATTR>
                <OMS cd="BinTree2_E1" name="nil2"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isEmpty_def_BinTree2">
      <use format="Hets">isEmpty_def_BinTree2</use>
    </presentation>
    <axiom name="isLeaf_binTree_BinTree2">
      <CMP>
  forall x,y: Elem; T: BinTree2[Elem];
  forall x,y: Elem; T: BinTree2[Elem];
  forall x,y: Elem; T: BinTree2[Elem];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_BinTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_BinTree2)%
  . not isLeaf(binTree(N1,N2))             %(isLeaf_binTree_BinTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_BinTree2)%
  . not isCompoundTree(leaf(x))               %(isCompoundTree_leaf_BinTree2)%
  . isCompoundTree(binTree(N1,N2))         %(isCompoundTree_binTree_BinTree2)%
  . not isCompoundTree(nil)                    %(isCompoundTree_nil_BinTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_BinTree2)%
  . x eps binTree(N1,N2) &#60;=&#62;
  . not (x eps nil)                        %(eps_nil_BinTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_binTree2)%
  . height(binTree(N1,N2)) =  
  . height(nil) = 0                        %(height_nil_BinTree2)%   
  . leaves(leaf(x)) = {x}                   %(leaves_leaf_BinTree2)%
  . leaves(binTree(N1,N2)) = 
  . leaves(nil) = {}                        %(leaves_nil_BinTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="N1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="N2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="BinTree2" name="isLeaf1"/>
                <OMA>
                  <OMS cd="BinTree2_E1" name="binTree2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="N1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="N2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isLeaf_binTree_BinTree2">
      <use format="Hets">isLeaf_binTree_BinTree2</use>
    </presentation>
    <axiom name="isLeaf_leaf_BinTree2">
      <CMP>
  forall x,y: Elem; T: BinTree2[Elem];
  forall x,y: Elem; T: BinTree2[Elem];
  forall x,y: Elem; T: BinTree2[Elem];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_BinTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_BinTree2)%
  . not isLeaf(binTree(N1,N2))             %(isLeaf_binTree_BinTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_BinTree2)%
  . not isCompoundTree(leaf(x))               %(isCompoundTree_leaf_BinTree2)%
  . isCompoundTree(binTree(N1,N2))         %(isCompoundTree_binTree_BinTree2)%
  . not isCompoundTree(nil)                    %(isCompoundTree_nil_BinTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_BinTree2)%
  . x eps binTree(N1,N2) &#60;=&#62;
  . not (x eps nil)                        %(eps_nil_BinTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_binTree2)%
  . height(binTree(N1,N2)) =  
  . height(nil) = 0                        %(height_nil_BinTree2)%   
  . leaves(leaf(x)) = {x}                   %(leaves_leaf_BinTree2)%
  . leaves(binTree(N1,N2)) = 
  . leaves(nil) = {}                        %(leaves_nil_BinTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_P" name="Elem5"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="predication"/>
              <OMS cd="BinTree2" name="isLeaf1"/>
              <OMA>
                <OMS cd="BinTree2_E1" name="leaf"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_P" name="Elem5"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isLeaf_leaf_BinTree2">
      <use format="Hets">isLeaf_leaf_BinTree2</use>
    </presentation>
    <axiom name="isLeaf_nil_BinTree2">
      <CMP>
  . not isLeaf(nil)                        %(isLeaf_nil_BinTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="predication"/>
              <OMS cd="BinTree2" name="isLeaf1"/>
              <OMS cd="BinTree2_E1" name="nil2"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isLeaf_nil_BinTree2">
      <use format="Hets">isLeaf_nil_BinTree2</use>
    </presentation>
    <axiom name="leaves_binTree_BinTree2">
      <CMP>
  forall x,y: Elem; T: BinTree2[Elem];
  forall x,y: Elem; T: BinTree2[Elem];
  forall x,y: Elem; T: BinTree2[Elem];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_BinTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_BinTree2)%
  . not isLeaf(binTree(N1,N2))             %(isLeaf_binTree_BinTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_BinTree2)%
  . not isCompoundTree(leaf(x))               %(isCompoundTree_leaf_BinTree2)%
  . isCompoundTree(binTree(N1,N2))         %(isCompoundTree_binTree_BinTree2)%
  . not isCompoundTree(nil)                    %(isCompoundTree_nil_BinTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_BinTree2)%
  . x eps binTree(N1,N2) &#60;=&#62;
  . not (x eps nil)                        %(eps_nil_BinTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_binTree2)%
  . height(binTree(N1,N2)) =  
  . height(nil) = 0                        %(height_nil_BinTree2)%   
  . leaves(leaf(x)) = {x}                   %(leaves_leaf_BinTree2)%
  . leaves(binTree(N1,N2)) = 
  . leaves(nil) = {}                        %(leaves_nil_BinTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="N1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="N2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="BinTree2" name="leaves1"/>
                <OMA>
                  <OMS cd="BinTree2_E1" name="binTree2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="N1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="N2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Set_E1" name="__union__2"/>
                <OMA>
                  <OMS cd="BinTree2" name="leaves1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="N1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="BinTree2" name="leaves1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="BinTree2_E1" name="NonEmptyBinTree2SBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="N2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="leaves_binTree_BinTree2">
      <use format="Hets">leaves_binTree_BinTree2</use>
    </presentation>
    <axiom name="leaves_leaf_BinTree2">
      <CMP>
  forall x,y: Elem; T: BinTree2[Elem];
  forall x,y: Elem; T: BinTree2[Elem];
  forall x,y: Elem; T: BinTree2[Elem];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_BinTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_BinTree2)%
  . not isLeaf(binTree(N1,N2))             %(isLeaf_binTree_BinTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_BinTree2)%
  . not isCompoundTree(leaf(x))               %(isCompoundTree_leaf_BinTree2)%
  . isCompoundTree(binTree(N1,N2))         %(isCompoundTree_binTree_BinTree2)%
  . not isCompoundTree(nil)                    %(isCompoundTree_nil_BinTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_BinTree2)%
  . x eps binTree(N1,N2) &#60;=&#62;
  . not (x eps nil)                        %(eps_nil_BinTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_binTree2)%
  . height(binTree(N1,N2)) =  
  . height(nil) = 0                        %(height_nil_BinTree2)%   
  . leaves(leaf(x)) = {x}                   %(leaves_leaf_BinTree2)%
  . leaves(binTree(N1,N2)) = 
  . leaves(nil) = {}                        %(leaves_nil_BinTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Set_P" name="Elem5"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="BinTree2" name="leaves1"/>
                <OMA>
                  <OMS cd="BinTree2_E1" name="leaf"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Set_P" name="Elem5"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Set_E1" name="BraceOpen__BraceClose2"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Set_P" name="Elem5"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="leaves_leaf_BinTree2">
      <use format="Hets">leaves_leaf_BinTree2</use>
    </presentation>
    <axiom name="leaves_nil_BinTree2">
      <CMP>
  . leaves(nil) = {}                        %(leaves_nil_BinTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMA>
              <OMS cd="BinTree2" name="leaves1"/>
              <OMS cd="BinTree2_E1" name="nil2"/>
            </OMA>
            <OMS cd="Set_E2" name="BraceOpenBraceClose2"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="leaves_nil_BinTree2">
      <use format="Hets">leaves_nil_BinTree2</use>
    </presentation>
  </theory>
  <private for="BinTree2">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"BinTree2_E1" Type:"GlobalDef" Origin:"DGExtension"
From:"BinTree2_E1" Type:"GlobalThm Open Def Open" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="GenerateNTree_P">
    <presentation for="GenerateNTree_P">
      <use format="Hets">[GenerateNTree,P,0]</use>
    </presentation>
    <symbol role="sort" name="Elem27"/>
    <presentation for="Elem27">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <theory xml:id="GenerateNTree">
    <presentation for="GenerateNTree">
      <use format="Hets">[GenerateNTree,,0]</use>
    </presentation>
    <imports from="#GenerateNTree_P"/>
    <symbol role="sort" name="NTreeSBrackOpenElemSBrackClose"/>
    <presentation for="NTreeSBrackOpenElemSBrackClose">
      <use format="Hets">[NTree[Elem]]</use>
    </presentation>
    <symbol role="sort" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
    <presentation for="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose">
      <use format="Hets">[List[NTree[Elem]]]</use>
    </presentation>
    <adt>
      <sortdef name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose" type="free">
        <constructor name="SBrackOpenSBrackClose10"/>
        <constructor name="__::__10">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="GenerateNTree" name="NTreeSBrackOpenElemSBrackClose"/>
              </OMOBJ>
            </type>
          </argument>
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="nTree8">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="GenerateNTree_P" name="Elem27"/>
              </OMOBJ>
            </type>
          </argument>
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="nil14"/>
      </sortdef>
    </adt>
    <symbol name="SBrackOpenSBrackClose1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SBrackOpenSBrackClose1">
      <use format="Hets">[[,]]</use>
    </presentation>
    <symbol name="__::__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="GenerateNTree" name="NTreeSBrackOpenElemSBrackClose"/>
            <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
            <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__::__1">
      <use format="Hets">[__,::,__]</use>
    </presentation>
    <symbol name="branches" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="GenerateNTree" name="NTreeSBrackOpenElemSBrackClose"/>
            <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="branches">
      <use format="Hets">[branches]</use>
    </presentation>
    <symbol name="entry6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="GenerateNTree" name="NTreeSBrackOpenElemSBrackClose"/>
            <OMS cd="GenerateNTree_P" name="Elem27"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="entry6">
      <use format="Hets">[entry]</use>
    </presentation>
    <symbol name="first1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
            <OMS cd="GenerateNTree" name="NTreeSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="first1">
      <use format="Hets">[first]</use>
    </presentation>
    <symbol name="nTree" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="GenerateNTree_P" name="Elem27"/>
            <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
            <OMS cd="GenerateNTree" name="NTreeSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="nTree">
      <use format="Hets">[nTree]</use>
    </presentation>
    <symbol name="nil6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="GenerateNTree" name="NTreeSBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="nil6">
      <use format="Hets">[nil]</use>
    </presentation>
    <symbol name="rest1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
            <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="rest1">
      <use format="Hets">[rest]</use>
    </presentation>
    <axiom name="ga_disjoint_SBrackOpenSBrackClose___::__1">
      <CMP>
     ::= [] 
     ::= [] 
       |  __ :: __ (first:? NTree[Elem]; rest:? List[NTree[Elem]]);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree" name="NTreeSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMS cd="GenerateNTree" name="SBrackOpenSBrackClose1"/>
                <OMA>
                  <OMS cd="GenerateNTree" name="__::__1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree" name="NTreeSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_SBrackOpenSBrackClose___::__1">
      <use format="Hets">ga_disjoint_[]___::__</use>
    </presentation>
    <axiom name="ga_disjoint_nil_nTree">
      <CMP>
     ::= nil
       | nTree(entry:? Elem; branches:? List[NTree[Elem]])
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree_P" name="Elem27"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMS cd="GenerateNTree" name="nil6"/>
                <OMA>
                  <OMS cd="GenerateNTree" name="nTree"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree_P" name="Elem27"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_nil_nTree">
      <use format="Hets">ga_disjoint_nil_nTree</use>
    </presentation>
    <axiom name="ga_injective___::__1">
      <CMP>
       |  __ :: __ (first:? NTree[Elem]; rest:? List[NTree[Elem]]);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree" name="NTreeSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree" name="NTreeSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="GenerateNTree" name="__::__1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree" name="NTreeSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="GenerateNTree" name="__::__1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree" name="NTreeSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree" name="NTreeSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree" name="NTreeSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective___::__1">
      <use format="Hets">ga_injective___::__</use>
    </presentation>
    <axiom name="ga_injective_nTree">
      <CMP>
       | nTree(entry:? Elem; branches:? List[NTree[Elem]])
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree_P" name="Elem27"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree_P" name="Elem27"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="GenerateNTree" name="nTree"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree_P" name="Elem27"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="GenerateNTree" name="nTree"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree_P" name="Elem27"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree_P" name="Elem27"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree_P" name="Elem27"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective_nTree">
      <use format="Hets">ga_injective_nTree</use>
    </presentation>
    <axiom name="ga_selector_branches">
      <CMP>
       | nTree(entry:? Elem; branches:? List[NTree[Elem]])
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree_P" name="Elem27"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="GenerateNTree" name="branches"/>
                <OMA>
                  <OMS cd="GenerateNTree" name="nTree"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree_P" name="Elem27"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_branches">
      <use format="Hets">ga_selector_branches</use>
    </presentation>
    <axiom name="ga_selector_entry2">
      <CMP>
       | nTree(entry:? Elem; branches:? List[NTree[Elem]])
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree_P" name="Elem27"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="GenerateNTree" name="entry6"/>
                <OMA>
                  <OMS cd="GenerateNTree" name="nTree"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree_P" name="Elem27"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree_P" name="Elem27"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_entry2">
      <use format="Hets">ga_selector_entry</use>
    </presentation>
    <axiom name="ga_selector_first1">
      <CMP>
       |  __ :: __ (first:? NTree[Elem]; rest:? List[NTree[Elem]]);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree" name="NTreeSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="GenerateNTree" name="first1"/>
                <OMA>
                  <OMS cd="GenerateNTree" name="__::__1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree" name="NTreeSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree" name="NTreeSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_first1">
      <use format="Hets">ga_selector_first</use>
    </presentation>
    <axiom name="ga_selector_rest1">
      <CMP>
       |  __ :: __ (first:? NTree[Elem]; rest:? List[NTree[Elem]]);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree" name="NTreeSBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="GenerateNTree" name="rest1"/>
                <OMA>
                  <OMS cd="GenerateNTree" name="__::__1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree" name="NTreeSBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_rest1">
      <use format="Hets">ga_selector_rest</use>
    </presentation>
    <axiom name="ga_selector_undef_branches_nil">
      <CMP>
       | nTree(entry:? Elem; branches:? List[NTree[Elem]])
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="definedness"/>
              <OMA>
                <OMS cd="GenerateNTree" name="branches"/>
                <OMS cd="GenerateNTree" name="nil6"/>
              </OMA>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_undef_branches_nil">
      <use format="Hets">ga_selector_undef_branches_nil</use>
    </presentation>
    <axiom name="ga_selector_undef_entry_nil1">
      <CMP>
       | nTree(entry:? Elem; branches:? List[NTree[Elem]])
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="definedness"/>
              <OMA>
                <OMS cd="GenerateNTree" name="entry6"/>
                <OMS cd="GenerateNTree" name="nil6"/>
              </OMA>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_undef_entry_nil1">
      <use format="Hets">ga_selector_undef_entry_nil</use>
    </presentation>
    <axiom name="ga_selector_undef_first_SBrackOpenSBrackClose1">
      <CMP>
       |  __ :: __ (first:? NTree[Elem]; rest:? List[NTree[Elem]]);
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="definedness"/>
              <OMA>
                <OMS cd="GenerateNTree" name="first1"/>
                <OMS cd="GenerateNTree" name="SBrackOpenSBrackClose1"/>
              </OMA>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_undef_first_SBrackOpenSBrackClose1">
      <use format="Hets">ga_selector_undef_first_[]</use>
    </presentation>
    <axiom name="ga_selector_undef_rest_SBrackOpenSBrackClose1">
      <CMP>
       |  __ :: __ (first:? NTree[Elem]; rest:? List[NTree[Elem]]);
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="definedness"/>
              <OMA>
                <OMS cd="GenerateNTree" name="rest1"/>
                <OMS cd="GenerateNTree" name="SBrackOpenSBrackClose1"/>
              </OMA>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_undef_rest_SBrackOpenSBrackClose1">
      <use format="Hets">ga_selector_undef_rest_[]</use>
    </presentation>
  </theory>
  <private for="GenerateNTree">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"GenerateNTree_P" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="NTree_PIU1A">
    <presentation for="NTree_PIU1A">
      <use format="Hets">[NTree,PIU1A,0]</use>
    </presentation>
    <imports from="#Set_PI"/>
    <symbol role="sort" name="Elem42"/>
    <presentation for="Elem42">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="NTree_PIU1A">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst Set"
From:"Set_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="NTree_PIU1">
    <presentation for="NTree_PIU1">
      <use format="Hets">[NTree,PIU,1]</use>
    </presentation>
    <imports from="#NTree_PIU1A"/>
    <imports from="#Set">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N02"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="N02"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N12"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="N12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N22"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="N22"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N32"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="N32"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N42"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="N42"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N52"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="N52"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N62"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="N62"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N72"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="N72"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N82"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="N82"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N92"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="N92"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="__LowerEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="__Lower__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="__GreaterEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="__Greater__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Ast__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="__Ast__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__AtAt__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="__AtAt__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__DivisionQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="__DivisionQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Excla2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="__Excla2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusExcla__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="__MinusExcla__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="__MinusQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Plus__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="__Plus__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Power__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="__Power__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__div__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="__div__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__mod__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="__mod__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="even2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="max2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="max2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="min2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="min2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="odd2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="pre2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="pre2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="suc2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_PIU1" name="suc2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
  </theory>
  <private for="NTree_PIU1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set" Type:"GlobalDef" Origin:"DGSpecInst Set"
From:"NTree_PIU1A" Type:"GlobalDef" Origin:"DGFitSpec"
]]></data>
  </private>
  <theory xml:id="NTree_PI">
    <presentation for="NTree_PI">
      <use format="Hets">[NTree,PI,0]</use>
    </presentation>
    <imports from="#NTree_PIU1"/>
    <imports from="Basic/Numbers.omdoc#Nat"/>
    <symbol role="sort" name="SetSBrackOpenElemSBrackClose5"/>
    <presentation for="SetSBrackOpenElemSBrackClose5">
      <use format="Hets">[Set[Elem]]</use>
    </presentation>
    <symbol role="sort" name="Elem30"/>
    <presentation for="Elem30">
      <use format="Hets">[Elem]</use>
    </presentation>
    <symbol name="__eps__6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="NTree_PI" name="Elem30"/>
            <OMS cd="NTree_PI" name="SetSBrackOpenElemSBrackClose5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__eps__6">
      <use format="Hets">[__,eps,__]</use>
    </presentation>
    <symbol name="__isSubsetOf__5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="NTree_PI" name="SetSBrackOpenElemSBrackClose5"/>
            <OMS cd="NTree_PI" name="SetSBrackOpenElemSBrackClose5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__isSubsetOf__5">
      <use format="Hets">[__,isSubsetOf,__]</use>
    </presentation>
    <symbol name="isNonEmpty4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="NTree_PI" name="SetSBrackOpenElemSBrackClose5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isNonEmpty4">
      <use format="Hets">[isNonEmpty]</use>
    </presentation>
    <symbol name="Hash__4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree_PI" name="SetSBrackOpenElemSBrackClose5"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="Hash__4">
      <use format="Hets">[#,__]</use>
    </presentation>
    <symbol name="__Minus__6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree_PI" name="SetSBrackOpenElemSBrackClose5"/>
            <OMS cd="NTree_PI" name="Elem30"/>
            <OMS cd="NTree_PI" name="SetSBrackOpenElemSBrackClose5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__6">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__Minus__6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree_PI" name="SetSBrackOpenElemSBrackClose5"/>
            <OMS cd="NTree_PI" name="SetSBrackOpenElemSBrackClose5"/>
            <OMS cd="NTree_PI" name="SetSBrackOpenElemSBrackClose5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__6">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__intersection__5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree_PI" name="SetSBrackOpenElemSBrackClose5"/>
            <OMS cd="NTree_PI" name="SetSBrackOpenElemSBrackClose5"/>
            <OMS cd="NTree_PI" name="SetSBrackOpenElemSBrackClose5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__intersection__5">
      <use format="Hets">[__,intersection,__]</use>
    </presentation>
    <symbol name="__symDiff__4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree_PI" name="SetSBrackOpenElemSBrackClose5"/>
            <OMS cd="NTree_PI" name="SetSBrackOpenElemSBrackClose5"/>
            <OMS cd="NTree_PI" name="SetSBrackOpenElemSBrackClose5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__symDiff__4">
      <use format="Hets">[__,symDiff,__]</use>
    </presentation>
    <symbol name="__union__5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree_PI" name="SetSBrackOpenElemSBrackClose5"/>
            <OMS cd="NTree_PI" name="SetSBrackOpenElemSBrackClose5"/>
            <OMS cd="NTree_PI" name="SetSBrackOpenElemSBrackClose5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__union__5">
      <use format="Hets">[__,union,__]</use>
    </presentation>
    <symbol name="BraceOpen__BraceClose5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree_PI" name="Elem30"/>
            <OMS cd="NTree_PI" name="SetSBrackOpenElemSBrackClose5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BraceOpen__BraceClose5">
      <use format="Hets">[{,__,}]</use>
    </presentation>
    <symbol name="BraceOpenBraceClose7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree_PI" name="SetSBrackOpenElemSBrackClose5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BraceOpenBraceClose7">
      <use format="Hets">[{,}]</use>
    </presentation>
  </theory>
  <private for="NTree_PI">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat" Type:"GlobalDef" Origin:"DGUnion"
From:"NTree_PIU1" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="NTree_P">
    <presentation for="NTree_P">
      <use format="Hets">[NTree,P,0]</use>
    </presentation>
    <imports from="#NTree_PI"/>
  </theory>
  <private for="NTree_P">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"NTree_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="NTree_E1UA">
    <presentation for="NTree_E1UA">
      <use format="Hets">[NTree,E1UA,0]</use>
    </presentation>
    <symbol role="sort" name="Elem41"/>
    <presentation for="Elem41">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="NTree_E1UA">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"GenerateNTree_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst GenerateNTree"
]]></data>
  </private>
  <theory xml:id="NTree_E1U">
    <presentation for="NTree_E1U">
      <use format="Hets">[NTree,E1U,0]</use>
    </presentation>
    <imports from="#GenerateNTree"/>
    <imports from="#NTree_E1UA"/>
    <imports from="#NTree_P"/>
    <symbol role="sort" name="NTreeSBrackOpenElemSBrackClose3"/>
    <presentation for="NTreeSBrackOpenElemSBrackClose3">
      <use format="Hets">[NTree[Elem]]</use>
    </presentation>
    <symbol role="sort" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose3"/>
    <presentation for="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose3">
      <use format="Hets">[List[NTree[Elem]]]</use>
    </presentation>
    <symbol name="SBrackOpenSBrackClose7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree_E1U" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SBrackOpenSBrackClose7">
      <use format="Hets">[[,]]</use>
    </presentation>
    <symbol name="__::__7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree_E1U" name="NTreeSBrackOpenElemSBrackClose3"/>
            <OMS cd="NTree_E1U" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose3"/>
            <OMS cd="NTree_E1U" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__::__7">
      <use format="Hets">[__,::,__]</use>
    </presentation>
    <symbol name="branches5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="NTree_E1U" name="NTreeSBrackOpenElemSBrackClose3"/>
            <OMS cd="NTree_E1U" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="branches5">
      <use format="Hets">[branches]</use>
    </presentation>
    <symbol name="entry11" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="NTree_E1U" name="NTreeSBrackOpenElemSBrackClose3"/>
            <OMS cd="NTree_PI" name="Elem30"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="entry11">
      <use format="Hets">[entry]</use>
    </presentation>
    <symbol name="first7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="NTree_E1U" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose3"/>
            <OMS cd="NTree_E1U" name="NTreeSBrackOpenElemSBrackClose3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="first7">
      <use format="Hets">[first]</use>
    </presentation>
    <symbol name="nTree5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree_PI" name="Elem30"/>
            <OMS cd="NTree_E1U" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose3"/>
            <OMS cd="NTree_E1U" name="NTreeSBrackOpenElemSBrackClose3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="nTree5">
      <use format="Hets">[nTree]</use>
    </presentation>
    <symbol name="nil11" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree_E1U" name="NTreeSBrackOpenElemSBrackClose3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="nil11">
      <use format="Hets">[nil]</use>
    </presentation>
    <symbol name="rest7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="NTree_E1U" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose3"/>
            <OMS cd="NTree_E1U" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="rest7">
      <use format="Hets">[rest]</use>
    </presentation>
  </theory>
  <private for="NTree_E1U">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"NTree_P" Type:"GlobalDef" Origin:"DGSpecInst GenerateNTree"
From:"NTree_E1UA" Type:"GlobalDef" Origin:"DGFitSpec"
From:"GenerateNTree" Type:"GlobalDef" Origin:"DGSpecInst GenerateNTree"
]]></data>
  </private>
  <theory xml:id="NTree_E1U1A">
    <presentation for="NTree_E1U1A">
      <use format="Hets">[NTree,E1U1A,0]</use>
    </presentation>
    <imports from="#Set_PI"/>
    <symbol role="sort" name="Elem40"/>
    <presentation for="Elem40">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="NTree_E1U1A">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst Set"
From:"Set_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="NTree_E1U1">
    <presentation for="NTree_E1U1">
      <use format="Hets">[NTree,E1U,1]</use>
    </presentation>
    <imports from="#NTree_E1U1A"/>
    <imports from="#NTree_P"/>
    <imports from="#Set">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N02"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="N02"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N12"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="N12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N22"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="N22"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N32"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="N32"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N42"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="N42"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N52"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="N52"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N62"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="N62"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N72"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="N72"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N82"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="N82"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N92"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="N92"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="__LowerEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="__Lower__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="__GreaterEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="__Greater__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Ast__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="__Ast__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__AtAt__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="__AtAt__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__DivisionQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="__DivisionQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Excla2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="__Excla2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusExcla__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="__MinusExcla__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="__MinusQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Plus__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="__Plus__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Power__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="__Power__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__div__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="__div__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__mod__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="__mod__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="even2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="max2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="max2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="min2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="min2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="odd2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="pre2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="pre2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="suc2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U1" name="suc2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
  </theory>
  <private for="NTree_E1U1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set" Type:"GlobalDef" Origin:"DGSpecInst Set"
From:"NTree_P" Type:"GlobalDef" Origin:"DGSpecInst Set"
From:"NTree_E1U1A" Type:"GlobalDef" Origin:"DGFitSpec"
]]></data>
  </private>
  <theory xml:id="NTree_E1U2A">
    <presentation for="NTree_E1U2A">
      <use format="Hets">[NTree,E1U2A,0]</use>
    </presentation>
    <imports from="#List_PI"/>
    <symbol role="sort" name="NTreeSBrackOpenElemSBrackClose4"/>
    <presentation for="NTreeSBrackOpenElemSBrackClose4">
      <use format="Hets">[NTree[Elem]]</use>
    </presentation>
  </theory>
  <private for="NTree_E1U2A">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"List_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst List"
From:"List_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="NTree_E1U2">
    <presentation for="NTree_E1U2">
      <use format="Hets">[NTree,E1U,2]</use>
    </presentation>
    <imports from="#List">
      <morphism hiding="#__ List[Elem] [] __!__ __++__ __+__ __::__ __eps__ drop first freq front isEmpty last rest reverse take">
        <requation>
          <OMOBJ>
            <OMS cd="List" name="Elem35"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="ListSBrackOpenElemSBrackClose1"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N02"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="N02"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N12"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="N12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N22"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="N22"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N32"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="N32"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N42"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="N42"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N52"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="N52"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N62"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="N62"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N72"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="N72"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N82"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="N82"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N92"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="N92"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="__LowerEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="__Lower__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="__GreaterEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="__Greater__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__Ast__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="__Ast__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__AtAt__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="__AtAt__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__DivisionQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="__DivisionQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__Excla2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="__Excla2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__MinusExcla__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="__MinusExcla__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__MinusQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="__MinusQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__Plus__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="__Plus__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__Power__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="__Power__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__div__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="__div__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__mod__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="__mod__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="even2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="max2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="max2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="min2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="min2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="odd2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="pre2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="pre2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="suc2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree_E1U2" name="suc2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <imports from="#NTree_E1U2A"/>
    <imports from="#NTree_P"/>
    <symbol role="sort" name="NTreeSBrackOpenElemSBrackClose2"/>
    <presentation for="NTreeSBrackOpenElemSBrackClose2">
      <use format="Hets">[NTree[Elem]]</use>
    </presentation>
    <symbol role="sort" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
    <presentation for="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2">
      <use format="Hets">[List[NTree[Elem]]]</use>
    </presentation>
    <symbol name="isEmpty8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isEmpty8">
      <use format="Hets">[isEmpty]</use>
    </presentation>
    <symbol name="SBrackOpenSBrackClose6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SBrackOpenSBrackClose6">
      <use format="Hets">[[,]]</use>
    </presentation>
    <symbol name="__Excla__5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="Nat" name="Nat3"/>
            <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Excla__5">
      <use format="Hets">[__,!,__]</use>
    </presentation>
    <symbol name="__PlusPlus__3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__PlusPlus__3">
      <use format="Hets">[__,++,__]</use>
    </presentation>
    <symbol name="__::__6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
            <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__::__6">
      <use format="Hets">[__,::,__]</use>
    </presentation>
    <symbol name="drop3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Nat" name="Nat3"/>
            <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="drop3">
      <use format="Hets">[drop]</use>
    </presentation>
    <symbol name="first6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="first6">
      <use format="Hets">[first]</use>
    </presentation>
    <symbol name="freq5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="freq5">
      <use format="Hets">[freq]</use>
    </presentation>
    <symbol name="front3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="front3">
      <use format="Hets">[front]</use>
    </presentation>
    <symbol name="last3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="last3">
      <use format="Hets">[last]</use>
    </presentation>
    <symbol name="rest6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="rest6">
      <use format="Hets">[rest]</use>
    </presentation>
    <symbol name="reverse3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="reverse3">
      <use format="Hets">[reverse]</use>
    </presentation>
    <symbol name="take3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Nat" name="Nat3"/>
            <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="take3">
      <use format="Hets">[take]</use>
    </presentation>
  </theory>
  <private for="NTree_E1U2">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"NTree_P" Type:"GlobalDef" Origin:"DGSpecInst List"
From:"List" Type:"GlobalDef" Origin:"DGSpecInst List"
From:"NTree_E1U2A" Type:"GlobalDef" Origin:"DGFitSpec"
]]></data>
  </private>
  <theory xml:id="NTree_E1">
    <presentation for="NTree_E1">
      <use format="Hets">[NTree,E,1]</use>
    </presentation>
    <imports from="#NTree_E1U"/>
    <imports from="#NTree_E1U1"/>
    <imports from="#NTree_E1U2"/>
    <symbol name="branches4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
            <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="branches4">
      <use format="Hets">[branches]</use>
    </presentation>
    <symbol name="entry10" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
            <OMS cd="NTree_PI" name="Elem30"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="entry10">
      <use format="Hets">[entry]</use>
    </presentation>
    <symbol name="nTree4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree_PI" name="Elem30"/>
            <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="nTree4">
      <use format="Hets">[nTree]</use>
    </presentation>
    <symbol name="nil10" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="nil10">
      <use format="Hets">[nil]</use>
    </presentation>
  </theory>
  <private for="NTree_E1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"NTree_E1U2" Type:"GlobalDef" Origin:"DGUnion"
From:"NTree_E1U1" Type:"GlobalDef" Origin:"DGUnion"
From:"NTree_E1U" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="NTree">
    <presentation for="NTree">
      <use format="Hets">[NTree,,0]</use>
    </presentation>
    <imports from="#NTree_E1"/>
    <symbol name="__is__branching2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__is__branching2">
      <use format="Hets">[__,is,__,branching]</use>
    </presentation>
    <symbol name="isCompoundTree4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isCompoundTree4">
      <use format="Hets">[isCompoundTree]</use>
    </presentation>
    <symbol name="isLeaf4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isLeaf4">
      <use format="Hets">[isLeaf]</use>
    </presentation>
    <symbol name="allLeaves1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="NTree_PI" name="SetSBrackOpenElemSBrackClose5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="allLeaves1">
      <use format="Hets">[allLeaves]</use>
    </presentation>
    <symbol name="height4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="height4">
      <use format="Hets">[height]</use>
    </presentation>
    <symbol name="leaves4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
            <OMS cd="NTree_PI" name="SetSBrackOpenElemSBrackClose5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="leaves4">
      <use format="Hets">[leaves]</use>
    </presentation>
    <symbol name="maxHeight1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="maxHeight1">
      <use format="Hets">[maxHeight]</use>
    </presentation>
    <axiom name="allLeaves_nil">
      <CMP>
  . allLeaves([]) = {}                      %(allLeaves_nil)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMA>
              <OMS cd="NTree" name="allLeaves1"/>
              <OMS cd="NTree_E1U2" name="SBrackOpenSBrackClose6"/>
            </OMA>
            <OMS cd="NTree_PI" name="BraceOpenBraceClose7"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="allLeaves_nil">
      <use format="Hets">allLeaves_nil</use>
    </presentation>
    <axiom name="allLeaves_nonEmptyList">
      <CMP>
  forall x,y: Elem; 
  forall x,y: Elem; 
         T: NTree[Elem];
         L: List[NTree[Elem]];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_NTree)%
  . not isLeaf(nil)                        %(isLeaf_nil_NTree)%
  . isLeaf(nTree(x,L)) &#60;=&#62;  
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree)%
  . isCompoundTree(nTree(x,L)) &#60;=&#62; 
  . not (x eps nil)                        %(eps_nil_NTree)%
  . x eps nTree(y,L) &#60;=&#62;
  . nil is n branching                     %(isKbranching_nil_NTree)%
  . nTree(x,L) is n branching &#60;=&#62;
  . height(nil) = 0                        %(height_nil_NTree)%   
  . height(nTree(x,L)) = 
  . maxHeight([]) = 0                      %(maxHeight_nil)%
  . maxHeight(T::L) = 
  . leaves(nil) = {}                        %(leaves_nil_NTree)%
  . leaves(nTree(x,L)) = 
  . allLeaves([]) = {}                      %(allLeaves_nil)%
  . allLeaves(T::L) =
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="T"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="NTree" name="allLeaves1"/>
                <OMA>
                  <OMS cd="NTree_E1U2" name="__::__6"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="T"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="NTree_PI" name="__union__5"/>
                <OMA>
                  <OMS cd="NTree" name="allLeaves1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="NTree" name="leaves4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="T"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="allLeaves_nonEmptyList">
      <use format="Hets">allLeaves_nonEmptyList</use>
    </presentation>
    <axiom name="eps_nTree">
      <CMP>
  forall x,y: Elem; 
  forall x,y: Elem; 
         T: NTree[Elem];
         L: List[NTree[Elem]];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_NTree)%
  . not isLeaf(nil)                        %(isLeaf_nil_NTree)%
  . isLeaf(nTree(x,L)) &#60;=&#62;  
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree)%
  . isCompoundTree(nTree(x,L)) &#60;=&#62; 
  . not (x eps nil)                        %(eps_nil_NTree)%
  . x eps nTree(y,L) &#60;=&#62;
  . nil is n branching                     %(isKbranching_nil_NTree)%
  . nTree(x,L) is n branching &#60;=&#62;
  . height(nil) = 0                        %(height_nil_NTree)%   
  . height(nTree(x,L)) = 
  . maxHeight([]) = 0                      %(maxHeight_nil)%
  . maxHeight(T::L) = 
  . leaves(nil) = {}                        %(leaves_nil_NTree)%
  . leaves(nTree(x,L)) = 
  . allLeaves([]) = {}                      %(allLeaves_nil)%
  . allLeaves(T::L) =
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree_PI" name="Elem30"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree_PI" name="Elem30"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="NTree_PI" name="__eps__6"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="NTree_PI" name="Elem30"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="NTree_E1" name="nTree4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree_PI" name="Elem30"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="disjunction"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree_PI" name="Elem30"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree_PI" name="Elem30"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMBIND>
                  <OMS cd="casl" name="existential"/>
                  <OMBVAR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
                      </OMATP>
                      <OMV name="T"/>
                    </OMATTR>
                  </OMBVAR>
                  <OMA>
                    <OMS cd="casl" name="conjunction"/>
                    <OMA>
                      <OMS cd="casl" name="predication"/>
                      <OMS cd="NTree_PI" name="__eps__6"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
                        </OMATP>
                        <OMV name="T"/>
                      </OMATTR>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
                        </OMATP>
                        <OMV name="L"/>
                      </OMATTR>
                    </OMA>
                    <OMA>
                      <OMS cd="casl" name="predication"/>
                      <OMS cd="NTree_PI" name="__eps__6"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="NTree_PI" name="Elem30"/>
                        </OMATP>
                        <OMV name="x"/>
                      </OMATTR>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
                        </OMATP>
                        <OMV name="T"/>
                      </OMATTR>
                    </OMA>
                  </OMA>
                </OMBIND>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="eps_nTree">
      <use format="Hets">eps_nTree</use>
    </presentation>
    <axiom name="eps_nil_NTree">
      <CMP>
  forall x,y: Elem; 
  forall x,y: Elem; 
         T: NTree[Elem];
         L: List[NTree[Elem]];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_NTree)%
  . not isLeaf(nil)                        %(isLeaf_nil_NTree)%
  . isLeaf(nTree(x,L)) &#60;=&#62;  
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree)%
  . isCompoundTree(nTree(x,L)) &#60;=&#62; 
  . not (x eps nil)                        %(eps_nil_NTree)%
  . x eps nTree(y,L) &#60;=&#62;
  . nil is n branching                     %(isKbranching_nil_NTree)%
  . nTree(x,L) is n branching &#60;=&#62;
  . height(nil) = 0                        %(height_nil_NTree)%   
  . height(nTree(x,L)) = 
  . maxHeight([]) = 0                      %(maxHeight_nil)%
  . maxHeight(T::L) = 
  . leaves(nil) = {}                        %(leaves_nil_NTree)%
  . leaves(nTree(x,L)) = 
  . allLeaves([]) = {}                      %(allLeaves_nil)%
  . allLeaves(T::L) =
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree_PI" name="Elem30"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="NTree_PI" name="__eps__6"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="NTree_PI" name="Elem30"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMS cd="NTree_E1" name="nil10"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="eps_nil_NTree">
      <use format="Hets">eps_nil_NTree</use>
    </presentation>
    <axiom name="height_nTree">
      <CMP>
  forall x,y: Elem; 
  forall x,y: Elem; 
         T: NTree[Elem];
         L: List[NTree[Elem]];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_NTree)%
  . not isLeaf(nil)                        %(isLeaf_nil_NTree)%
  . isLeaf(nTree(x,L)) &#60;=&#62;  
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree)%
  . isCompoundTree(nTree(x,L)) &#60;=&#62; 
  . not (x eps nil)                        %(eps_nil_NTree)%
  . x eps nTree(y,L) &#60;=&#62;
  . nil is n branching                     %(isKbranching_nil_NTree)%
  . nTree(x,L) is n branching &#60;=&#62;
  . height(nil) = 0                        %(height_nil_NTree)%   
  . height(nTree(x,L)) = 
  . maxHeight([]) = 0                      %(maxHeight_nil)%
  . maxHeight(T::L) = 
  . leaves(nil) = {}                        %(leaves_nil_NTree)%
  . leaves(nTree(x,L)) = 
  . allLeaves([]) = {}                      %(allLeaves_nil)%
  . allLeaves(T::L) =
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree_PI" name="Elem30"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="NTree" name="height4"/>
                <OMA>
                  <OMS cd="NTree_E1" name="nTree4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree_PI" name="Elem30"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat" name="__Plus__2"/>
                <OMA>
                  <OMS cd="NTree" name="maxHeight1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
                <OMS cd="Nat" name="N12"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="height_nTree">
      <use format="Hets">height_nTree</use>
    </presentation>
    <axiom name="height_nil_NTree">
      <CMP>
  . height(nil) = 0                        %(height_nil_NTree)%   
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMA>
              <OMS cd="NTree" name="height4"/>
              <OMS cd="NTree_E1" name="nil10"/>
            </OMA>
            <OMS cd="Nat" name="N02"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="height_nil_NTree">
      <use format="Hets">height_nil_NTree</use>
    </presentation>
    <axiom name="isCompoundTree_nTree">
      <CMP>
  forall x,y: Elem; 
  forall x,y: Elem; 
         T: NTree[Elem];
         L: List[NTree[Elem]];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_NTree)%
  . not isLeaf(nil)                        %(isLeaf_nil_NTree)%
  . isLeaf(nTree(x,L)) &#60;=&#62;  
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree)%
  . isCompoundTree(nTree(x,L)) &#60;=&#62; 
  . not (x eps nil)                        %(eps_nil_NTree)%
  . x eps nTree(y,L) &#60;=&#62;
  . nil is n branching                     %(isKbranching_nil_NTree)%
  . nTree(x,L) is n branching &#60;=&#62;
  . height(nil) = 0                        %(height_nil_NTree)%   
  . height(nTree(x,L)) = 
  . maxHeight([]) = 0                      %(maxHeight_nil)%
  . maxHeight(T::L) = 
  . leaves(nil) = {}                        %(leaves_nil_NTree)%
  . leaves(nTree(x,L)) = 
  . allLeaves([]) = {}                      %(allLeaves_nil)%
  . allLeaves(T::L) =
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree_PI" name="Elem30"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="NTree" name="isCompoundTree4"/>
                <OMA>
                  <OMS cd="NTree_E1" name="nTree4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree_PI" name="Elem30"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="NTree" name="isLeaf4"/>
                  <OMA>
                    <OMS cd="NTree_E1" name="nTree4"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="NTree_PI" name="Elem30"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
                      </OMATP>
                      <OMV name="L"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isCompoundTree_nTree">
      <use format="Hets">isCompoundTree_nTree</use>
    </presentation>
    <axiom name="isCompoundTree_nil_NTree">
      <CMP>
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="predication"/>
              <OMS cd="NTree" name="isCompoundTree4"/>
              <OMS cd="NTree_E1" name="nil10"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isCompoundTree_nil_NTree">
      <use format="Hets">isCompoundTree_nil_NTree</use>
    </presentation>
    <axiom name="isEmpty_def_NTree">
      <CMP>
  forall x,y: Elem; 
  forall x,y: Elem; 
         T: NTree[Elem];
         L: List[NTree[Elem]];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_NTree)%
  . not isLeaf(nil)                        %(isLeaf_nil_NTree)%
  . isLeaf(nTree(x,L)) &#60;=&#62;  
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree)%
  . isCompoundTree(nTree(x,L)) &#60;=&#62; 
  . not (x eps nil)                        %(eps_nil_NTree)%
  . x eps nTree(y,L) &#60;=&#62;
  . nil is n branching                     %(isKbranching_nil_NTree)%
  . nTree(x,L) is n branching &#60;=&#62;
  . height(nil) = 0                        %(height_nil_NTree)%   
  . height(nTree(x,L)) = 
  . maxHeight([]) = 0                      %(maxHeight_nil)%
  . maxHeight(T::L) = 
  . leaves(nil) = {}                        %(leaves_nil_NTree)%
  . leaves(nTree(x,L)) = 
  . allLeaves([]) = {}                      %(allLeaves_nil)%
  . allLeaves(T::L) =
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="T"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="NTree_E1U2" name="isEmpty8"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
                  </OMATP>
                  <OMV name="T"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
                  </OMATP>
                  <OMV name="T"/>
                </OMATTR>
                <OMS cd="NTree_E1" name="nil10"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isEmpty_def_NTree">
      <use format="Hets">isEmpty_def_NTree</use>
    </presentation>
    <axiom name="isKbranching_nTree_NTree">
      <CMP>
  forall x,y: Elem; 
  forall x,y: Elem; 
         T: NTree[Elem];
         L: List[NTree[Elem]];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_NTree)%
  . not isLeaf(nil)                        %(isLeaf_nil_NTree)%
  . isLeaf(nTree(x,L)) &#60;=&#62;  
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree)%
  . isCompoundTree(nTree(x,L)) &#60;=&#62; 
  . not (x eps nil)                        %(eps_nil_NTree)%
  . x eps nTree(y,L) &#60;=&#62;
  . nil is n branching                     %(isKbranching_nil_NTree)%
  . nTree(x,L) is n branching &#60;=&#62;
  . height(nil) = 0                        %(height_nil_NTree)%   
  . height(nTree(x,L)) = 
  . maxHeight([]) = 0                      %(maxHeight_nil)%
  . maxHeight(T::L) = 
  . leaves(nil) = {}                        %(leaves_nil_NTree)%
  . leaves(nTree(x,L)) = 
  . allLeaves([]) = {}                      %(allLeaves_nil)%
  . allLeaves(T::L) =
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree_PI" name="Elem30"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat" name="Nat3"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="NTree" name="__is__branching2"/>
                <OMA>
                  <OMS cd="NTree_E1" name="nTree4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree_PI" name="Elem30"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat" name="Nat3"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="disjunction"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                  <OMS cd="NTree_E1U2" name="SBrackOpenSBrackClose6"/>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="conjunction"/>
                  <OMA>
                    <OMS cd="casl" name="strong-equation"/>
                    <OMA>
                      <OMS cd="NTree_PI" name="Hash__4"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
                        </OMATP>
                        <OMV name="L"/>
                      </OMATTR>
                    </OMA>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat" name="Nat3"/>
                      </OMATP>
                      <OMV name="n"/>
                    </OMATTR>
                  </OMA>
                  <OMBIND>
                    <OMS cd="casl" name="universal"/>
                    <OMBVAR>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
                        </OMATP>
                        <OMV name="T"/>
                      </OMATTR>
                    </OMBVAR>
                    <OMA>
                      <OMS cd="casl" name="implication"/>
                      <OMA>
                        <OMS cd="casl" name="predication"/>
                        <OMS cd="NTree_PI" name="__eps__6"/>
                        <OMATTR>
                          <OMATP>
                            <OMS cd="casl" name="type"/>
                            <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
                          </OMATP>
                          <OMV name="T"/>
                        </OMATTR>
                        <OMATTR>
                          <OMATP>
                            <OMS cd="casl" name="type"/>
                            <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
                          </OMATP>
                          <OMV name="L"/>
                        </OMATTR>
                      </OMA>
                      <OMA>
                        <OMS cd="casl" name="predication"/>
                        <OMS cd="NTree" name="__is__branching2"/>
                        <OMATTR>
                          <OMATP>
                            <OMS cd="casl" name="type"/>
                            <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
                          </OMATP>
                          <OMV name="T"/>
                        </OMATTR>
                        <OMATTR>
                          <OMATP>
                            <OMS cd="casl" name="type"/>
                            <OMS cd="Nat" name="Nat3"/>
                          </OMATP>
                          <OMV name="n"/>
                        </OMATTR>
                      </OMA>
                      <OMS cd="casl" name="true"/>
                    </OMA>
                  </OMBIND>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isKbranching_nTree_NTree">
      <use format="Hets">isKbranching_nTree_NTree</use>
    </presentation>
    <axiom name="isKbranching_nil_NTree">
      <CMP>
  forall x,y: Elem; 
  forall x,y: Elem; 
         T: NTree[Elem];
         L: List[NTree[Elem]];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_NTree)%
  . not isLeaf(nil)                        %(isLeaf_nil_NTree)%
  . isLeaf(nTree(x,L)) &#60;=&#62;  
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree)%
  . isCompoundTree(nTree(x,L)) &#60;=&#62; 
  . not (x eps nil)                        %(eps_nil_NTree)%
  . x eps nTree(y,L) &#60;=&#62;
  . nil is n branching                     %(isKbranching_nil_NTree)%
  . nTree(x,L) is n branching &#60;=&#62;
  . height(nil) = 0                        %(height_nil_NTree)%   
  . height(nTree(x,L)) = 
  . maxHeight([]) = 0                      %(maxHeight_nil)%
  . maxHeight(T::L) = 
  . leaves(nil) = {}                        %(leaves_nil_NTree)%
  . leaves(nTree(x,L)) = 
  . allLeaves([]) = {}                      %(allLeaves_nil)%
  . allLeaves(T::L) =
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat" name="Nat3"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="predication"/>
              <OMS cd="NTree" name="__is__branching2"/>
              <OMS cd="NTree_E1" name="nil10"/>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat" name="Nat3"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isKbranching_nil_NTree">
      <use format="Hets">isKbranching_nil_NTree</use>
    </presentation>
    <axiom name="isLeaf_nTree">
      <CMP>
  forall x,y: Elem; 
  forall x,y: Elem; 
         T: NTree[Elem];
         L: List[NTree[Elem]];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_NTree)%
  . not isLeaf(nil)                        %(isLeaf_nil_NTree)%
  . isLeaf(nTree(x,L)) &#60;=&#62;  
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree)%
  . isCompoundTree(nTree(x,L)) &#60;=&#62; 
  . not (x eps nil)                        %(eps_nil_NTree)%
  . x eps nTree(y,L) &#60;=&#62;
  . nil is n branching                     %(isKbranching_nil_NTree)%
  . nTree(x,L) is n branching &#60;=&#62;
  . height(nil) = 0                        %(height_nil_NTree)%   
  . height(nTree(x,L)) = 
  . maxHeight([]) = 0                      %(maxHeight_nil)%
  . maxHeight(T::L) = 
  . leaves(nil) = {}                        %(leaves_nil_NTree)%
  . leaves(nTree(x,L)) = 
  . allLeaves([]) = {}                      %(allLeaves_nil)%
  . allLeaves(T::L) =
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree_PI" name="Elem30"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="NTree" name="isLeaf4"/>
                <OMA>
                  <OMS cd="NTree_E1" name="nTree4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree_PI" name="Elem30"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMBIND>
                <OMS cd="casl" name="universal"/>
                <OMBVAR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="T"/>
                  </OMATTR>
                </OMBVAR>
                <OMA>
                  <OMS cd="casl" name="implication"/>
                  <OMA>
                    <OMS cd="casl" name="predication"/>
                    <OMS cd="NTree_PI" name="__eps__6"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
                      </OMATP>
                      <OMV name="T"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
                      </OMATP>
                      <OMV name="L"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="casl" name="strong-equation"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
                      </OMATP>
                      <OMV name="T"/>
                    </OMATTR>
                    <OMS cd="NTree_E1" name="nil10"/>
                  </OMA>
                  <OMS cd="casl" name="true"/>
                </OMA>
              </OMBIND>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isLeaf_nTree">
      <use format="Hets">isLeaf_nTree</use>
    </presentation>
    <axiom name="isLeaf_nil_NTree">
      <CMP>
  . not isLeaf(nil)                        %(isLeaf_nil_NTree)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="predication"/>
              <OMS cd="NTree" name="isLeaf4"/>
              <OMS cd="NTree_E1" name="nil10"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isLeaf_nil_NTree">
      <use format="Hets">isLeaf_nil_NTree</use>
    </presentation>
    <axiom name="leaves_nTree">
      <CMP>
  forall x,y: Elem; 
  forall x,y: Elem; 
         T: NTree[Elem];
         L: List[NTree[Elem]];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_NTree)%
  . not isLeaf(nil)                        %(isLeaf_nil_NTree)%
  . isLeaf(nTree(x,L)) &#60;=&#62;  
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree)%
  . isCompoundTree(nTree(x,L)) &#60;=&#62; 
  . not (x eps nil)                        %(eps_nil_NTree)%
  . x eps nTree(y,L) &#60;=&#62;
  . nil is n branching                     %(isKbranching_nil_NTree)%
  . nTree(x,L) is n branching &#60;=&#62;
  . height(nil) = 0                        %(height_nil_NTree)%   
  . height(nTree(x,L)) = 
  . maxHeight([]) = 0                      %(maxHeight_nil)%
  . maxHeight(T::L) = 
  . leaves(nil) = {}                        %(leaves_nil_NTree)%
  . leaves(nTree(x,L)) = 
  . allLeaves([]) = {}                      %(allLeaves_nil)%
  . allLeaves(T::L) =
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree_PI" name="Elem30"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="NTree" name="leaves4"/>
                <OMA>
                  <OMS cd="NTree_E1" name="nTree4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree_PI" name="Elem30"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="IfThenElse"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="NTree" name="isLeaf4"/>
                  <OMA>
                    <OMS cd="NTree_E1" name="nTree4"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="NTree_PI" name="Elem30"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
                      </OMATP>
                      <OMV name="L"/>
                    </OMATTR>
                  </OMA>
                </OMA>
                <OMA>
                  <OMS cd="NTree_PI" name="BraceOpen__BraceClose5"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree_PI" name="Elem30"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="NTree" name="allLeaves1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="leaves_nTree">
      <use format="Hets">leaves_nTree</use>
    </presentation>
    <axiom name="leaves_nil_NTree">
      <CMP>
  . leaves(nil) = {}                        %(leaves_nil_NTree)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMA>
              <OMS cd="NTree" name="leaves4"/>
              <OMS cd="NTree_E1" name="nil10"/>
            </OMA>
            <OMS cd="NTree_PI" name="BraceOpenBraceClose7"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="leaves_nil_NTree">
      <use format="Hets">leaves_nil_NTree</use>
    </presentation>
    <axiom name="maxHeight_nil">
      <CMP>
  . maxHeight([]) = 0                      %(maxHeight_nil)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMA>
              <OMS cd="NTree" name="maxHeight1"/>
              <OMS cd="NTree_E1U2" name="SBrackOpenSBrackClose6"/>
            </OMA>
            <OMS cd="Nat" name="N02"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="maxHeight_nil">
      <use format="Hets">maxHeight_nil</use>
    </presentation>
    <axiom name="maxHeight_nonEmptyList">
      <CMP>
  forall x,y: Elem; 
  forall x,y: Elem; 
         T: NTree[Elem];
         L: List[NTree[Elem]];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_NTree)%
  . not isLeaf(nil)                        %(isLeaf_nil_NTree)%
  . isLeaf(nTree(x,L)) &#60;=&#62;  
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree)%
  . isCompoundTree(nTree(x,L)) &#60;=&#62; 
  . not (x eps nil)                        %(eps_nil_NTree)%
  . x eps nTree(y,L) &#60;=&#62;
  . nil is n branching                     %(isKbranching_nil_NTree)%
  . nTree(x,L) is n branching &#60;=&#62;
  . height(nil) = 0                        %(height_nil_NTree)%   
  . height(nTree(x,L)) = 
  . maxHeight([]) = 0                      %(maxHeight_nil)%
  . maxHeight(T::L) = 
  . leaves(nil) = {}                        %(leaves_nil_NTree)%
  . leaves(nTree(x,L)) = 
  . allLeaves([]) = {}                      %(allLeaves_nil)%
  . allLeaves(T::L) =
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="T"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="NTree" name="maxHeight1"/>
                <OMA>
                  <OMS cd="NTree_E1U2" name="__::__6"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="T"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat" name="max2"/>
                <OMA>
                  <OMS cd="NTree" name="maxHeight1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree_E1U2" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose2"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="NTree" name="height4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree_E1U2" name="NTreeSBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="T"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="maxHeight_nonEmptyList">
      <use format="Hets">maxHeight_nonEmptyList</use>
    </presentation>
  </theory>
  <private for="NTree">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"NTree_E1" Type:"GlobalDef" Origin:"DGExtension"
From:"NTree_E1" Type:"GlobalThm Open Def Open" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="GenerateNTree2_P">
    <presentation for="GenerateNTree2_P">
      <use format="Hets">[GenerateNTree2,P,0]</use>
    </presentation>
    <symbol role="sort" name="Elem28"/>
    <presentation for="Elem28">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <theory xml:id="GenerateNTree2">
    <presentation for="GenerateNTree2">
      <use format="Hets">[GenerateNTree2,,0]</use>
    </presentation>
    <imports from="#GenerateNTree2_P"/>
    <symbol role="sort" name="NonEmptyNTree2SBrackOpenElemSBrackClose"/>
    <presentation for="NonEmptyNTree2SBrackOpenElemSBrackClose">
      <use format="Hets">[NonEmptyNTree2[Elem]]</use>
    </presentation>
    <symbol role="sort" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
    <presentation for="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose">
      <use format="Hets">[NonEmptyList[NonEmptyNTree2[Elem]]]</use>
    </presentation>
    <symbol role="sort" name="NTree2SBrackOpenElemSBrackClose"/>
    <presentation for="NTree2SBrackOpenElemSBrackClose">
      <use format="Hets">[NTree2[Elem]]</use>
    </presentation>
    <symbol role="sort" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
    <presentation for="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose">
      <use format="Hets">[List[NonEmptyNTree2[Elem]]]</use>
    </presentation>
    <adt>
      <sortdef name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose" type="free">
        <constructor name="SBrackOpenSBrackClose10"/>
        <constructor name="__::__10">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="GenerateNTree2" name="NonEmptyNTree2SBrackOpenElemSBrackClose"/>
              </OMOBJ>
            </type>
          </argument>
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="GenerateNTree2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="g__inj">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="GenerateNTree2" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="g__inj">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="GenerateNTree2" name="NonEmptyNTree2SBrackOpenElemSBrackClose"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="leaf7">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="GenerateNTree2_P" name="Elem28"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="nTree8">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="GenerateNTree2" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="nil14"/>
        <insort for="#NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
      </sortdef>
    </adt>
    <adt>
      <sortdef name="NTree2SBrackOpenElemSBrackClose" type="free">
        <insort for="#NonEmptyNTree2SBrackOpenElemSBrackClose"/>
      </sortdef>
    </adt>
    <adt>
      <sortdef name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose" type="free">
        <constructor name="SBrackOpenSBrackClose10"/>
        <constructor name="__::__10">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="GenerateNTree2" name="NonEmptyNTree2SBrackOpenElemSBrackClose"/>
              </OMOBJ>
            </type>
          </argument>
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="GenerateNTree2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="g__inj">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="GenerateNTree2" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="g__inj">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="GenerateNTree2" name="NonEmptyNTree2SBrackOpenElemSBrackClose"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="leaf7">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="GenerateNTree2_P" name="Elem28"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="nTree8">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="GenerateNTree2" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
        <constructor name="nil14"/>
        <insort for="#NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
      </sortdef>
    </adt>
    <symbol name="SBrackOpenSBrackClose2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="GenerateNTree2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SBrackOpenSBrackClose2">
      <use format="Hets">[[,]]</use>
    </presentation>
    <symbol name="__::__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="GenerateNTree2" name="NonEmptyNTree2SBrackOpenElemSBrackClose"/>
            <OMS cd="GenerateNTree2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
            <OMS cd="GenerateNTree2" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__::__2">
      <use format="Hets">[__,::,__]</use>
    </presentation>
    <symbol name="branches1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="GenerateNTree2" name="NonEmptyNTree2SBrackOpenElemSBrackClose"/>
            <OMS cd="GenerateNTree2" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="branches1">
      <use format="Hets">[branches]</use>
    </presentation>
    <symbol name="entry7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="GenerateNTree2" name="NonEmptyNTree2SBrackOpenElemSBrackClose"/>
            <OMS cd="GenerateNTree2_P" name="Elem28"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="entry7">
      <use format="Hets">[entry]</use>
    </presentation>
    <symbol name="first2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="GenerateNTree2" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
            <OMS cd="GenerateNTree2" name="NonEmptyNTree2SBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="first2">
      <use format="Hets">[first]</use>
    </presentation>
    <symbol name="leaf3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="GenerateNTree2_P" name="Elem28"/>
            <OMS cd="GenerateNTree2" name="NonEmptyNTree2SBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="leaf3">
      <use format="Hets">[leaf]</use>
    </presentation>
    <symbol name="nTree1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="GenerateNTree2" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
            <OMS cd="GenerateNTree2" name="NonEmptyNTree2SBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="nTree1">
      <use format="Hets">[nTree]</use>
    </presentation>
    <symbol name="nil7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="GenerateNTree2" name="NTree2SBrackOpenElemSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="nil7">
      <use format="Hets">[nil]</use>
    </presentation>
    <symbol name="rest2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="GenerateNTree2" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
            <OMS cd="GenerateNTree2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="rest2">
      <use format="Hets">[rest]</use>
    </presentation>
    <axiom name="ga_disjoint_SBrackOpenSBrackClose_sort_NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose">
      <CMP>
       |  sort NonEmptyList[NonEmptyNTree2[Elem]];
       |  sort NonEmptyList[NonEmptyNTree2[Elem]];
       |  sort NonEmptyList[NonEmptyNTree2[Elem]];
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="membership"/>
              <OMS cd="GenerateNTree2" name="SBrackOpenSBrackClose2"/>
              <OMS cd="GenerateNTree2" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_SBrackOpenSBrackClose_sort_NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose">
      <use format="Hets">ga_disjoint_[]_sort_NonEmptyList[NonEmptyNTree2[Elem]]</use>
    </presentation>
    <axiom name="ga_disjoint_leaf_nTree">
      <CMP>
      ::= leaf (entry:? Elem)
        | nTree(branches:? NonEmptyList[NonEmptyNTree2[Elem]]);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree2_P" name="Elem28"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree2" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="GenerateNTree2" name="leaf3"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree2_P" name="Elem28"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="GenerateNTree2" name="nTree1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree2" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_leaf_nTree">
      <use format="Hets">ga_disjoint_leaf_nTree</use>
    </presentation>
    <axiom name="ga_disjoint_nil_sort_NonEmptyNTree2SBrackOpenElemSBrackClose">
      <CMP>
    NTree2[Elem] ::= nil | sort NonEmptyNTree2[Elem]
    NTree2[Elem] ::= nil | sort NonEmptyNTree2[Elem]
    NTree2[Elem] ::= nil | sort NonEmptyNTree2[Elem]
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="membership"/>
              <OMS cd="GenerateNTree2" name="nil7"/>
              <OMS cd="GenerateNTree2" name="NonEmptyNTree2SBrackOpenElemSBrackClose"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_nil_sort_NonEmptyNTree2SBrackOpenElemSBrackClose">
      <use format="Hets">ga_disjoint_nil_sort_NonEmptyNTree2[Elem]</use>
    </presentation>
    <axiom name="ga_injective___::__2">
      <CMP>
      __ :: __ (first: NonEmptyNTree2[Elem]; 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree2" name="NonEmptyNTree2SBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree2" name="NonEmptyNTree2SBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
                </OMATP>
                <OMV name="Y2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="GenerateNTree2" name="__::__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree2" name="NonEmptyNTree2SBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="GenerateNTree2" name="__::__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree2" name="NonEmptyNTree2SBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree2" name="NonEmptyNTree2SBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree2" name="NonEmptyNTree2SBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
                    </OMATP>
                    <OMV name="Y2"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective___::__2">
      <use format="Hets">ga_injective___::__</use>
    </presentation>
    <axiom name="ga_injective_leaf1">
      <CMP>
      ::= leaf (entry:? Elem)
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree2_P" name="Elem28"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree2_P" name="Elem28"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="GenerateNTree2" name="leaf3"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree2_P" name="Elem28"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="GenerateNTree2" name="leaf3"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree2_P" name="Elem28"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="GenerateNTree2_P" name="Elem28"/>
                  </OMATP>
                  <OMV name="X1"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="GenerateNTree2_P" name="Elem28"/>
                  </OMATP>
                  <OMV name="Y1"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective_leaf1">
      <use format="Hets">ga_injective_leaf</use>
    </presentation>
    <axiom name="ga_injective_nTree1">
      <CMP>
        | nTree(branches:? NonEmptyList[NonEmptyNTree2[Elem]]);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree2" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree2" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="GenerateNTree2" name="nTree1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree2" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="GenerateNTree2" name="nTree1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree2" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="GenerateNTree2" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
                  </OMATP>
                  <OMV name="X1"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="GenerateNTree2" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
                  </OMATP>
                  <OMV name="Y1"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective_nTree1">
      <use format="Hets">ga_injective_nTree</use>
    </presentation>
    <axiom name="ga_selector_branches1">
      <CMP>
        | nTree(branches:? NonEmptyList[NonEmptyNTree2[Elem]]);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree2" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="GenerateNTree2" name="branches1"/>
                <OMA>
                  <OMS cd="GenerateNTree2" name="nTree1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree2" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree2" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_branches1">
      <use format="Hets">ga_selector_branches</use>
    </presentation>
    <axiom name="ga_selector_entry3">
      <CMP>
      ::= leaf (entry:? Elem)
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree2_P" name="Elem28"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="GenerateNTree2" name="entry7"/>
                <OMA>
                  <OMS cd="GenerateNTree2" name="leaf3"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree2_P" name="Elem28"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree2_P" name="Elem28"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_entry3">
      <use format="Hets">ga_selector_entry</use>
    </presentation>
    <axiom name="ga_selector_first2">
      <CMP>
      __ :: __ (first: NonEmptyNTree2[Elem]; 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree2" name="NonEmptyNTree2SBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="GenerateNTree2" name="first2"/>
                <OMA>
                  <OMS cd="GenerateNTree2" name="__::__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree2" name="NonEmptyNTree2SBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree2" name="NonEmptyNTree2SBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_first2">
      <use format="Hets">ga_selector_first</use>
    </presentation>
    <axiom name="ga_selector_rest2">
      <CMP>
                rest:  List[NonEmptyNTree2[Elem]]);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree2" name="NonEmptyNTree2SBrackOpenElemSBrackClose"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="GenerateNTree2" name="rest2"/>
                <OMA>
                  <OMS cd="GenerateNTree2" name="__::__2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree2" name="NonEmptyNTree2SBrackOpenElemSBrackClose"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="GenerateNTree2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
                    </OMATP>
                    <OMV name="X2"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
                </OMATP>
                <OMV name="X2"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_rest2">
      <use format="Hets">ga_selector_rest</use>
    </presentation>
    <axiom name="ga_selector_undef_branches_leaf">
      <CMP>
        | nTree(branches:? NonEmptyList[NonEmptyNTree2[Elem]]);
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree2_P" name="Elem28"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="GenerateNTree2" name="branches1"/>
                  <OMA>
                    <OMS cd="GenerateNTree2" name="leaf3"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="GenerateNTree2_P" name="Elem28"/>
                      </OMATP>
                      <OMV name="X1"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_undef_branches_leaf">
      <use format="Hets">ga_selector_undef_branches_leaf</use>
    </presentation>
    <axiom name="ga_selector_undef_entry_nTree">
      <CMP>
      ::= leaf (entry:? Elem)
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="GenerateNTree2" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="GenerateNTree2" name="entry7"/>
                  <OMA>
                    <OMS cd="GenerateNTree2" name="nTree1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="GenerateNTree2" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose"/>
                      </OMATP>
                      <OMV name="X1"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_undef_entry_nTree">
      <use format="Hets">ga_selector_undef_entry_nTree</use>
    </presentation>
  </theory>
  <private for="GenerateNTree2">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"GenerateNTree2_P" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="NTree2_PIU1A">
    <presentation for="NTree2_PIU1A">
      <use format="Hets">[NTree2,PIU1A,0]</use>
    </presentation>
    <imports from="#Set_PI"/>
    <symbol role="sort" name="Elem45"/>
    <presentation for="Elem45">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="NTree2_PIU1A">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst Set"
From:"Set_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="NTree2_PIU1">
    <presentation for="NTree2_PIU1">
      <use format="Hets">[NTree2,PIU,1]</use>
    </presentation>
    <imports from="#NTree2_PIU1A"/>
    <imports from="#Set">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N02"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="N02"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N12"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="N12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N22"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="N22"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N32"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="N32"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N42"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="N42"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N52"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="N52"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N62"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="N62"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N72"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="N72"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N82"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="N82"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N92"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="N92"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="__LowerEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="__Lower__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="__GreaterEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="__Greater__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Ast__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="__Ast__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__AtAt__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="__AtAt__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__DivisionQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="__DivisionQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Excla2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="__Excla2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusExcla__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="__MinusExcla__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="__MinusQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Plus__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="__Plus__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Power__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="__Power__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__div__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="__div__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__mod__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="__mod__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="even2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="max2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="max2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="min2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="min2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="odd2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="pre2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="pre2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="suc2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_PIU1" name="suc2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
  </theory>
  <private for="NTree2_PIU1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set" Type:"GlobalDef" Origin:"DGSpecInst Set"
From:"NTree2_PIU1A" Type:"GlobalDef" Origin:"DGFitSpec"
]]></data>
  </private>
  <theory xml:id="NTree2_PI">
    <presentation for="NTree2_PI">
      <use format="Hets">[NTree2,PI,0]</use>
    </presentation>
    <imports from="#NTree2_PIU1"/>
    <imports from="Basic/Numbers.omdoc#Nat"/>
    <symbol role="sort" name="SetSBrackOpenElemSBrackClose7"/>
    <presentation for="SetSBrackOpenElemSBrackClose7">
      <use format="Hets">[Set[Elem]]</use>
    </presentation>
    <symbol role="sort" name="Elem33"/>
    <presentation for="Elem33">
      <use format="Hets">[Elem]</use>
    </presentation>
    <symbol name="__eps__8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="NTree2_PI" name="Elem33"/>
            <OMS cd="NTree2_PI" name="SetSBrackOpenElemSBrackClose7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__eps__8">
      <use format="Hets">[__,eps,__]</use>
    </presentation>
    <symbol name="__isSubsetOf__7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="NTree2_PI" name="SetSBrackOpenElemSBrackClose7"/>
            <OMS cd="NTree2_PI" name="SetSBrackOpenElemSBrackClose7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__isSubsetOf__7">
      <use format="Hets">[__,isSubsetOf,__]</use>
    </presentation>
    <symbol name="isNonEmpty6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="NTree2_PI" name="SetSBrackOpenElemSBrackClose7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isNonEmpty6">
      <use format="Hets">[isNonEmpty]</use>
    </presentation>
    <symbol name="Hash__6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree2_PI" name="SetSBrackOpenElemSBrackClose7"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="Hash__6">
      <use format="Hets">[#,__]</use>
    </presentation>
    <symbol name="__Minus__8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree2_PI" name="SetSBrackOpenElemSBrackClose7"/>
            <OMS cd="NTree2_PI" name="Elem33"/>
            <OMS cd="NTree2_PI" name="SetSBrackOpenElemSBrackClose7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__8">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__Minus__8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree2_PI" name="SetSBrackOpenElemSBrackClose7"/>
            <OMS cd="NTree2_PI" name="SetSBrackOpenElemSBrackClose7"/>
            <OMS cd="NTree2_PI" name="SetSBrackOpenElemSBrackClose7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__8">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__intersection__7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree2_PI" name="SetSBrackOpenElemSBrackClose7"/>
            <OMS cd="NTree2_PI" name="SetSBrackOpenElemSBrackClose7"/>
            <OMS cd="NTree2_PI" name="SetSBrackOpenElemSBrackClose7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__intersection__7">
      <use format="Hets">[__,intersection,__]</use>
    </presentation>
    <symbol name="__symDiff__6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree2_PI" name="SetSBrackOpenElemSBrackClose7"/>
            <OMS cd="NTree2_PI" name="SetSBrackOpenElemSBrackClose7"/>
            <OMS cd="NTree2_PI" name="SetSBrackOpenElemSBrackClose7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__symDiff__6">
      <use format="Hets">[__,symDiff,__]</use>
    </presentation>
    <symbol name="__union__7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree2_PI" name="SetSBrackOpenElemSBrackClose7"/>
            <OMS cd="NTree2_PI" name="SetSBrackOpenElemSBrackClose7"/>
            <OMS cd="NTree2_PI" name="SetSBrackOpenElemSBrackClose7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__union__7">
      <use format="Hets">[__,union,__]</use>
    </presentation>
    <symbol name="BraceOpen__BraceClose7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree2_PI" name="Elem33"/>
            <OMS cd="NTree2_PI" name="SetSBrackOpenElemSBrackClose7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BraceOpen__BraceClose7">
      <use format="Hets">[{,__,}]</use>
    </presentation>
    <symbol name="BraceOpenBraceClose9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree2_PI" name="SetSBrackOpenElemSBrackClose7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BraceOpenBraceClose9">
      <use format="Hets">[{,}]</use>
    </presentation>
  </theory>
  <private for="NTree2_PI">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat" Type:"GlobalDef" Origin:"DGUnion"
From:"NTree2_PIU1" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="NTree2_P">
    <presentation for="NTree2_P">
      <use format="Hets">[NTree2,P,0]</use>
    </presentation>
    <imports from="#NTree2_PI"/>
  </theory>
  <private for="NTree2_P">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"NTree2_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="NTree2_E1UA">
    <presentation for="NTree2_E1UA">
      <use format="Hets">[NTree2,E1UA,0]</use>
    </presentation>
    <symbol role="sort" name="Elem44"/>
    <presentation for="Elem44">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="NTree2_E1UA">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"GenerateNTree2_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst GenerateNTree2"
]]></data>
  </private>
  <theory xml:id="NTree2_E1U">
    <presentation for="NTree2_E1U">
      <use format="Hets">[NTree2,E1U,0]</use>
    </presentation>
    <imports from="#GenerateNTree2"/>
    <imports from="#NTree2_E1UA"/>
    <imports from="#NTree2_P"/>
    <symbol role="sort" name="NonEmptyNTree2SBrackOpenElemSBrackClose3"/>
    <presentation for="NonEmptyNTree2SBrackOpenElemSBrackClose3">
      <use format="Hets">[NonEmptyNTree2[Elem]]</use>
    </presentation>
    <symbol role="sort" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose3"/>
    <presentation for="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose3">
      <use format="Hets">[NonEmptyList[NonEmptyNTree2[Elem]]]</use>
    </presentation>
    <symbol role="sort" name="NTree2SBrackOpenElemSBrackClose3"/>
    <presentation for="NTree2SBrackOpenElemSBrackClose3">
      <use format="Hets">[NTree2[Elem]]</use>
    </presentation>
    <symbol role="sort" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose3"/>
    <presentation for="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose3">
      <use format="Hets">[List[NonEmptyNTree2[Elem]]]</use>
    </presentation>
    <adt>
      <sortdef name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose3" type="free">
        <insort for="#NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose3"/>
      </sortdef>
    </adt>
    <adt>
      <sortdef name="NTree2SBrackOpenElemSBrackClose3" type="free">
        <insort for="#NonEmptyNTree2SBrackOpenElemSBrackClose3"/>
      </sortdef>
    </adt>
    <symbol name="SBrackOpenSBrackClose9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree2_E1U" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SBrackOpenSBrackClose9">
      <use format="Hets">[[,]]</use>
    </presentation>
    <symbol name="__::__9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree2_E1U" name="NonEmptyNTree2SBrackOpenElemSBrackClose3"/>
            <OMS cd="NTree2_E1U" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose3"/>
            <OMS cd="NTree2_E1U" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__::__9">
      <use format="Hets">[__,::,__]</use>
    </presentation>
    <symbol name="branches7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="NTree2_E1U" name="NonEmptyNTree2SBrackOpenElemSBrackClose3"/>
            <OMS cd="NTree2_E1U" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="branches7">
      <use format="Hets">[branches]</use>
    </presentation>
    <symbol name="entry13" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="NTree2_E1U" name="NonEmptyNTree2SBrackOpenElemSBrackClose3"/>
            <OMS cd="NTree2_PI" name="Elem33"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="entry13">
      <use format="Hets">[entry]</use>
    </presentation>
    <symbol name="first9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree2_E1U" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose3"/>
            <OMS cd="NTree2_E1U" name="NonEmptyNTree2SBrackOpenElemSBrackClose3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="first9">
      <use format="Hets">[first]</use>
    </presentation>
    <symbol name="leaf6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree2_PI" name="Elem33"/>
            <OMS cd="NTree2_E1U" name="NonEmptyNTree2SBrackOpenElemSBrackClose3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="leaf6">
      <use format="Hets">[leaf]</use>
    </presentation>
    <symbol name="nTree7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree2_E1U" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose3"/>
            <OMS cd="NTree2_E1U" name="NonEmptyNTree2SBrackOpenElemSBrackClose3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="nTree7">
      <use format="Hets">[nTree]</use>
    </presentation>
    <symbol name="nil13" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree2_E1U" name="NTree2SBrackOpenElemSBrackClose3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="nil13">
      <use format="Hets">[nil]</use>
    </presentation>
    <symbol name="rest9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree2_E1U" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose3"/>
            <OMS cd="NTree2_E1U" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="rest9">
      <use format="Hets">[rest]</use>
    </presentation>
  </theory>
  <private for="NTree2_E1U">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"NTree2_P" Type:"GlobalDef" Origin:"DGSpecInst GenerateNTree2"
From:"NTree2_E1UA" Type:"GlobalDef" Origin:"DGFitSpec"
From:"GenerateNTree2" Type:"GlobalDef" Origin:"DGSpecInst GenerateNTree2"
]]></data>
  </private>
  <theory xml:id="NTree2_E1U1A">
    <presentation for="NTree2_E1U1A">
      <use format="Hets">[NTree2,E1U1A,0]</use>
    </presentation>
    <imports from="#Set_PI"/>
    <symbol role="sort" name="Elem43"/>
    <presentation for="Elem43">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="NTree2_E1U1A">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst Set"
From:"Set_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="NTree2_E1U1">
    <presentation for="NTree2_E1U1">
      <use format="Hets">[NTree2,E1U,1]</use>
    </presentation>
    <imports from="#NTree2_E1U1A"/>
    <imports from="#NTree2_P"/>
    <imports from="#Set">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N02"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="N02"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N12"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="N12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N22"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="N22"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N32"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="N32"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N42"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="N42"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N52"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="N52"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N62"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="N62"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N72"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="N72"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N82"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="N82"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N92"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="N92"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="__LowerEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="__Lower__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="__GreaterEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="__Greater__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Ast__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="__Ast__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__AtAt__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="__AtAt__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__DivisionQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="__DivisionQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Excla2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="__Excla2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusExcla__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="__MinusExcla__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="__MinusQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Plus__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="__Plus__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Power__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="__Power__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__div__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="__div__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__mod__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="__mod__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="even2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="max2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="max2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="min2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="min2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="odd2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="pre2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="pre2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="suc2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U1" name="suc2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
  </theory>
  <private for="NTree2_E1U1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"NTree2_P" Type:"GlobalDef" Origin:"DGSpecInst Set"
From:"Set" Type:"GlobalDef" Origin:"DGSpecInst Set"
From:"NTree2_E1U1A" Type:"GlobalDef" Origin:"DGFitSpec"
]]></data>
  </private>
  <theory xml:id="NTree2_E1U2A">
    <presentation for="NTree2_E1U2A">
      <use format="Hets">[NTree2,E1U2A,0]</use>
    </presentation>
    <imports from="#List_PI"/>
    <symbol role="sort" name="NonEmptyNTree2SBrackOpenElemSBrackClose4"/>
    <presentation for="NonEmptyNTree2SBrackOpenElemSBrackClose4">
      <use format="Hets">[NonEmptyNTree2[Elem]]</use>
    </presentation>
  </theory>
  <private for="NTree2_E1U2A">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"List_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst List"
From:"List_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="NTree2_E1U2">
    <presentation for="NTree2_E1U2">
      <use format="Hets">[NTree2,E1U,2]</use>
    </presentation>
    <imports from="#List">
      <morphism hiding="#__ List[Elem] [] __!__ __++__ __+__ __::__ __eps__ drop first freq front isEmpty last rest reverse take">
        <requation>
          <OMOBJ>
            <OMS cd="List" name="Elem35"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="NonEmptyNTree2SBrackOpenElemSBrackClose2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="ListSBrackOpenElemSBrackClose1"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N02"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="N02"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N12"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="N12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N22"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="N22"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N32"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="N32"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N42"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="N42"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N52"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="N52"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N62"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="N62"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N72"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="N72"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N82"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="N82"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="N92"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="N92"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="__LowerEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="__Lower__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="__GreaterEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="__Greater__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__Ast__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="__Ast__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__AtAt__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="__AtAt__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__DivisionQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="__DivisionQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__Excla2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="__Excla2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__MinusExcla__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="__MinusExcla__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__MinusQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="__MinusQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__Plus__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="__Plus__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__Power__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="__Power__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__div__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="__div__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="__mod__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="__mod__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="even2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="max2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="max2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="min2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="min2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="odd2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="pre2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="pre2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="List" name="suc2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="NTree2_E1U2" name="suc2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <imports from="#NTree2_E1U2A"/>
    <imports from="#NTree2_P"/>
    <symbol role="sort" name="NonEmptyNTree2SBrackOpenElemSBrackClose2"/>
    <presentation for="NonEmptyNTree2SBrackOpenElemSBrackClose2">
      <use format="Hets">[NonEmptyNTree2[Elem]]</use>
    </presentation>
    <symbol role="sort" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
    <presentation for="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2">
      <use format="Hets">[List[NonEmptyNTree2[Elem]]]</use>
    </presentation>
    <symbol name="isEmpty9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isEmpty9">
      <use format="Hets">[isEmpty]</use>
    </presentation>
    <symbol name="SBrackOpenSBrackClose8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SBrackOpenSBrackClose8">
      <use format="Hets">[[,]]</use>
    </presentation>
    <symbol name="__Excla__6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="Nat" name="Nat3"/>
            <OMS cd="NTree2_E1U2" name="NonEmptyNTree2SBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Excla__6">
      <use format="Hets">[__,!,__]</use>
    </presentation>
    <symbol name="__PlusPlus__4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__PlusPlus__4">
      <use format="Hets">[__,++,__]</use>
    </presentation>
    <symbol name="__::__8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree2_E1U2" name="NonEmptyNTree2SBrackOpenElemSBrackClose2"/>
            <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__::__8">
      <use format="Hets">[__,::,__]</use>
    </presentation>
    <symbol name="drop4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Nat" name="Nat3"/>
            <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="drop4">
      <use format="Hets">[drop]</use>
    </presentation>
    <symbol name="first8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="NTree2_E1U2" name="NonEmptyNTree2SBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="first8">
      <use format="Hets">[first]</use>
    </presentation>
    <symbol name="freq6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="NTree2_E1U2" name="NonEmptyNTree2SBrackOpenElemSBrackClose2"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="freq6">
      <use format="Hets">[freq]</use>
    </presentation>
    <symbol name="front4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="front4">
      <use format="Hets">[front]</use>
    </presentation>
    <symbol name="last4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="NTree2_E1U2" name="NonEmptyNTree2SBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="last4">
      <use format="Hets">[last]</use>
    </presentation>
    <symbol name="rest8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="rest8">
      <use format="Hets">[rest]</use>
    </presentation>
    <symbol name="reverse4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="reverse4">
      <use format="Hets">[reverse]</use>
    </presentation>
    <symbol name="take4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Nat" name="Nat3"/>
            <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="take4">
      <use format="Hets">[take]</use>
    </presentation>
  </theory>
  <private for="NTree2_E1U2">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"NTree2_P" Type:"GlobalDef" Origin:"DGSpecInst List"
From:"NTree2_E1U2A" Type:"GlobalDef" Origin:"DGFitSpec"
From:"List" Type:"GlobalDef" Origin:"DGSpecInst List"
]]></data>
  </private>
  <theory xml:id="NTree2_E1">
    <presentation for="NTree2_E1">
      <use format="Hets">[NTree2,E,1]</use>
    </presentation>
    <imports from="#NTree2_E1U"/>
    <imports from="#NTree2_E1U1"/>
    <imports from="#NTree2_E1U2"/>
    <symbol role="sort" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
    <presentation for="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2">
      <use format="Hets">[NonEmptyList[NonEmptyNTree2[Elem]]]</use>
    </presentation>
    <symbol role="sort" name="NTree2SBrackOpenElemSBrackClose2"/>
    <presentation for="NTree2SBrackOpenElemSBrackClose2">
      <use format="Hets">[NTree2[Elem]]</use>
    </presentation>
    <adt>
      <sortdef name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2" type="free">
        <insort for="#NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
      </sortdef>
    </adt>
    <adt>
      <sortdef name="NTree2SBrackOpenElemSBrackClose2" type="free">
        <insort for="#NonEmptyNTree2SBrackOpenElemSBrackClose2"/>
      </sortdef>
    </adt>
    <symbol name="branches6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="NTree2_E1U2" name="NonEmptyNTree2SBrackOpenElemSBrackClose2"/>
            <OMS cd="NTree2_E1" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="branches6">
      <use format="Hets">[branches]</use>
    </presentation>
    <symbol name="entry12" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="NTree2_E1U2" name="NonEmptyNTree2SBrackOpenElemSBrackClose2"/>
            <OMS cd="NTree2_PI" name="Elem33"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="entry12">
      <use format="Hets">[entry]</use>
    </presentation>
    <symbol name="leaf5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree2_PI" name="Elem33"/>
            <OMS cd="NTree2_E1U2" name="NonEmptyNTree2SBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="leaf5">
      <use format="Hets">[leaf]</use>
    </presentation>
    <symbol name="nTree6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree2_E1" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="NTree2_E1U2" name="NonEmptyNTree2SBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="nTree6">
      <use format="Hets">[nTree]</use>
    </presentation>
    <symbol name="nil12" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree2_E1" name="NTree2SBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="nil12">
      <use format="Hets">[nil]</use>
    </presentation>
  </theory>
  <private for="NTree2_E1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"NTree2_E1U2" Type:"GlobalDef" Origin:"DGUnion"
From:"NTree2_E1U1" Type:"GlobalDef" Origin:"DGUnion"
From:"NTree2_E1U" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="NTree2">
    <presentation for="NTree2">
      <use format="Hets">[NTree2,,0]</use>
    </presentation>
    <imports from="#NTree2_E1"/>
    <symbol name="__is__branching3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="NTree2_E1" name="NTree2SBrackOpenElemSBrackClose2"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__is__branching3">
      <use format="Hets">[__,is,__,branching]</use>
    </presentation>
    <symbol name="isCompoundTree5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="NTree2_E1" name="NTree2SBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isCompoundTree5">
      <use format="Hets">[isCompoundTree]</use>
    </presentation>
    <symbol name="isLeaf5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="NTree2_E1" name="NTree2SBrackOpenElemSBrackClose2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isLeaf5">
      <use format="Hets">[isLeaf]</use>
    </presentation>
    <symbol name="h1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="Nat" name="Nat3"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="h1">
      <use format="Hets">[h]</use>
    </presentation>
    <symbol name="height5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree2_E1" name="NTree2SBrackOpenElemSBrackClose2"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="height5">
      <use format="Hets">[height]</use>
    </presentation>
    <symbol name="l1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
            <OMS cd="NTree2_PI" name="SetSBrackOpenElemSBrackClose7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="l1">
      <use format="Hets">[l]</use>
    </presentation>
    <symbol name="leaves5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree2_E1" name="NTree2SBrackOpenElemSBrackClose2"/>
            <OMS cd="NTree2_PI" name="SetSBrackOpenElemSBrackClose7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="leaves5">
      <use format="Hets">[leaves]</use>
    </presentation>
    <axiom name="branches_nil_nTree2">
      <CMP>
  . not def branches(nil)                  %(branches_nil_nTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="definedness"/>
              <OMA>
                <OMS cd="NTree2_E1" name="branches6"/>
                <OMS cd="NTree2_E1" name="nil12"/>
              </OMA>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="branches_nil_nTree2">
      <use format="Hets">branches_nil_nTree2</use>
    </presentation>
    <axiom name="eps_leaf_NTree2">
      <CMP>
  forall x,y: Elem; 
  forall x,y: Elem; 
         n: Nat;
         T: NTree2[Elem];
         NT: NonEmptyNTree2[Elem];
         L: NonEmptyList[NonEmptyNTree2[Elem]];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_NTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_NTree2)%
  . not isLeaf(nTree(L))                   %(isLeaf_nTree_NTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_NTree2)%
  . not isCompoundTree(leaf(x))            %(isCompoundTree_leaf_NTree2)%
  . isCompoundTree(nTree(L))               %(isCompoundTree_nTree_NTree2)%
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_NTree2)%
  . x eps nTree(L) &#60;=&#62;
  . not x eps nil                          %(eps_nil_NTree2)%
  . leaf(x) is n branching                 %(isKbranching_leaf_NTree2)%
  . nTree(L) is n branching &#60;=&#62;
  . nil is n branching                     %(isKbranching_nil_NTree2)%
  . not def branches(nil)                  %(branches_nil_nTree2)%
  . h([],n)  = n                           %(h_nil_nTree2)%
  . h(NT::K,n) = max(height(NT), h(K,n))   %(n_cons_nTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_nTree2)%
  . height(nTree(L))= h(L,0) + 1           %(height_nTree_nTree2)%
  . height(nil) = 0                        %(height_nil_nTree2)%   
  . l([])  = {}                            %(l_nil_nTree2)%
  . l(NT::K) = leaves(NT) union l(K)       %(l_cons_nTree2)%
  . leaves(leaf(x)) = {x}                  %(leaves_leaf_nTree2)%
  . leaves(nTree(L)) = l(L)                %(leaves_nTree_nTree2)%
  . leaves(nil) = {}                       %(leaves_nil_nTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree2_PI" name="Elem33"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree2_PI" name="Elem33"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="NTree2_PI" name="__eps__8"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="NTree2_PI" name="Elem33"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="NTree2_E1" name="leaf5"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree2_PI" name="Elem33"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="NTree2_PI" name="Elem33"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="NTree2_PI" name="Elem33"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="eps_leaf_NTree2">
      <use format="Hets">eps_leaf_NTree2</use>
    </presentation>
    <axiom name="eps_nTree_NTree2">
      <CMP>
  forall x,y: Elem; 
  forall x,y: Elem; 
         n: Nat;
         T: NTree2[Elem];
         NT: NonEmptyNTree2[Elem];
         L: NonEmptyList[NonEmptyNTree2[Elem]];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_NTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_NTree2)%
  . not isLeaf(nTree(L))                   %(isLeaf_nTree_NTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_NTree2)%
  . not isCompoundTree(leaf(x))            %(isCompoundTree_leaf_NTree2)%
  . isCompoundTree(nTree(L))               %(isCompoundTree_nTree_NTree2)%
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_NTree2)%
  . x eps nTree(L) &#60;=&#62;
  . not x eps nil                          %(eps_nil_NTree2)%
  . leaf(x) is n branching                 %(isKbranching_leaf_NTree2)%
  . nTree(L) is n branching &#60;=&#62;
  . nil is n branching                     %(isKbranching_nil_NTree2)%
  . not def branches(nil)                  %(branches_nil_nTree2)%
  . h([],n)  = n                           %(h_nil_nTree2)%
  . h(NT::K,n) = max(height(NT), h(K,n))   %(n_cons_nTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_nTree2)%
  . height(nTree(L))= h(L,0) + 1           %(height_nTree_nTree2)%
  . height(nil) = 0                        %(height_nil_nTree2)%   
  . l([])  = {}                            %(l_nil_nTree2)%
  . l(NT::K) = leaves(NT) union l(K)       %(l_cons_nTree2)%
  . leaves(leaf(x)) = {x}                  %(leaves_leaf_nTree2)%
  . leaves(nTree(L)) = l(L)                %(leaves_nTree_nTree2)%
  . leaves(nil) = {}                       %(leaves_nil_nTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree2_PI" name="Elem33"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree2_E1" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="NTree2_PI" name="__eps__8"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="NTree2_PI" name="Elem33"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="NTree2_E1" name="nTree6"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree2_E1" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMBIND>
                <OMS cd="casl" name="existential"/>
                <OMBVAR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree2_E1U2" name="NonEmptyNTree2SBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="T"/>
                  </OMATTR>
                </OMBVAR>
                <OMA>
                  <OMS cd="casl" name="conjunction"/>
                  <OMA>
                    <OMS cd="casl" name="predication"/>
                    <OMS cd="NTree2_PI" name="__eps__8"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="NTree2_E1U2" name="NonEmptyNTree2SBrackOpenElemSBrackClose2"/>
                      </OMATP>
                      <OMV name="T"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="NTree2_E1" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
                      </OMATP>
                      <OMV name="L"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="casl" name="predication"/>
                    <OMS cd="NTree2_PI" name="__eps__8"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="NTree2_PI" name="Elem33"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="NTree2_E1U2" name="NonEmptyNTree2SBrackOpenElemSBrackClose2"/>
                      </OMATP>
                      <OMV name="T"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMBIND>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="eps_nTree_NTree2">
      <use format="Hets">eps_nTree_NTree2</use>
    </presentation>
    <axiom name="eps_nil_NTree2">
      <CMP>
  forall x,y: Elem; 
  forall x,y: Elem; 
         n: Nat;
         T: NTree2[Elem];
         NT: NonEmptyNTree2[Elem];
         L: NonEmptyList[NonEmptyNTree2[Elem]];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_NTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_NTree2)%
  . not isLeaf(nTree(L))                   %(isLeaf_nTree_NTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_NTree2)%
  . not isCompoundTree(leaf(x))            %(isCompoundTree_leaf_NTree2)%
  . isCompoundTree(nTree(L))               %(isCompoundTree_nTree_NTree2)%
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_NTree2)%
  . x eps nTree(L) &#60;=&#62;
  . not x eps nil                          %(eps_nil_NTree2)%
  . leaf(x) is n branching                 %(isKbranching_leaf_NTree2)%
  . nTree(L) is n branching &#60;=&#62;
  . nil is n branching                     %(isKbranching_nil_NTree2)%
  . not def branches(nil)                  %(branches_nil_nTree2)%
  . h([],n)  = n                           %(h_nil_nTree2)%
  . h(NT::K,n) = max(height(NT), h(K,n))   %(n_cons_nTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_nTree2)%
  . height(nTree(L))= h(L,0) + 1           %(height_nTree_nTree2)%
  . height(nil) = 0                        %(height_nil_nTree2)%   
  . l([])  = {}                            %(l_nil_nTree2)%
  . l(NT::K) = leaves(NT) union l(K)       %(l_cons_nTree2)%
  . leaves(leaf(x)) = {x}                  %(leaves_leaf_nTree2)%
  . leaves(nTree(L)) = l(L)                %(leaves_nTree_nTree2)%
  . leaves(nil) = {}                       %(leaves_nil_nTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree2_PI" name="Elem33"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="NTree2_PI" name="__eps__8"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="NTree2_PI" name="Elem33"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMS cd="NTree2_E1" name="nil12"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="eps_nil_NTree2">
      <use format="Hets">eps_nil_NTree2</use>
    </presentation>
    <axiom name="h_nil_nTree2">
      <CMP>
  forall x,y: Elem; 
  forall x,y: Elem; 
         n: Nat;
         T: NTree2[Elem];
         NT: NonEmptyNTree2[Elem];
         L: NonEmptyList[NonEmptyNTree2[Elem]];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_NTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_NTree2)%
  . not isLeaf(nTree(L))                   %(isLeaf_nTree_NTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_NTree2)%
  . not isCompoundTree(leaf(x))            %(isCompoundTree_leaf_NTree2)%
  . isCompoundTree(nTree(L))               %(isCompoundTree_nTree_NTree2)%
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_NTree2)%
  . x eps nTree(L) &#60;=&#62;
  . not x eps nil                          %(eps_nil_NTree2)%
  . leaf(x) is n branching                 %(isKbranching_leaf_NTree2)%
  . nTree(L) is n branching &#60;=&#62;
  . nil is n branching                     %(isKbranching_nil_NTree2)%
  . not def branches(nil)                  %(branches_nil_nTree2)%
  . h([],n)  = n                           %(h_nil_nTree2)%
  . h(NT::K,n) = max(height(NT), h(K,n))   %(n_cons_nTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_nTree2)%
  . height(nTree(L))= h(L,0) + 1           %(height_nTree_nTree2)%
  . height(nil) = 0                        %(height_nil_nTree2)%   
  . l([])  = {}                            %(l_nil_nTree2)%
  . l(NT::K) = leaves(NT) union l(K)       %(l_cons_nTree2)%
  . leaves(leaf(x)) = {x}                  %(leaves_leaf_nTree2)%
  . leaves(nTree(L)) = l(L)                %(leaves_nTree_nTree2)%
  . leaves(nil) = {}                       %(leaves_nil_nTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat" name="Nat3"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="NTree2" name="h1"/>
                <OMS cd="NTree2_E1U2" name="SBrackOpenSBrackClose8"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat" name="Nat3"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat" name="Nat3"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="h_nil_nTree2">
      <use format="Hets">h_nil_nTree2</use>
    </presentation>
    <axiom name="height_leaf_nTree2">
      <CMP>
  forall x,y: Elem; 
  forall x,y: Elem; 
         n: Nat;
         T: NTree2[Elem];
         NT: NonEmptyNTree2[Elem];
         L: NonEmptyList[NonEmptyNTree2[Elem]];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_NTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_NTree2)%
  . not isLeaf(nTree(L))                   %(isLeaf_nTree_NTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_NTree2)%
  . not isCompoundTree(leaf(x))            %(isCompoundTree_leaf_NTree2)%
  . isCompoundTree(nTree(L))               %(isCompoundTree_nTree_NTree2)%
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_NTree2)%
  . x eps nTree(L) &#60;=&#62;
  . not x eps nil                          %(eps_nil_NTree2)%
  . leaf(x) is n branching                 %(isKbranching_leaf_NTree2)%
  . nTree(L) is n branching &#60;=&#62;
  . nil is n branching                     %(isKbranching_nil_NTree2)%
  . not def branches(nil)                  %(branches_nil_nTree2)%
  . h([],n)  = n                           %(h_nil_nTree2)%
  . h(NT::K,n) = max(height(NT), h(K,n))   %(n_cons_nTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_nTree2)%
  . height(nTree(L))= h(L,0) + 1           %(height_nTree_nTree2)%
  . height(nil) = 0                        %(height_nil_nTree2)%   
  . l([])  = {}                            %(l_nil_nTree2)%
  . l(NT::K) = leaves(NT) union l(K)       %(l_cons_nTree2)%
  . leaves(leaf(x)) = {x}                  %(leaves_leaf_nTree2)%
  . leaves(nTree(L)) = l(L)                %(leaves_nTree_nTree2)%
  . leaves(nil) = {}                       %(leaves_nil_nTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree2_PI" name="Elem33"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="NTree2" name="height5"/>
                <OMA>
                  <OMS cd="NTree2_E1" name="leaf5"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree2_PI" name="Elem33"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMS cd="Nat" name="N12"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="height_leaf_nTree2">
      <use format="Hets">height_leaf_nTree2</use>
    </presentation>
    <axiom name="height_nTree_nTree2">
      <CMP>
  forall x,y: Elem; 
  forall x,y: Elem; 
         n: Nat;
         T: NTree2[Elem];
         NT: NonEmptyNTree2[Elem];
         L: NonEmptyList[NonEmptyNTree2[Elem]];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_NTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_NTree2)%
  . not isLeaf(nTree(L))                   %(isLeaf_nTree_NTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_NTree2)%
  . not isCompoundTree(leaf(x))            %(isCompoundTree_leaf_NTree2)%
  . isCompoundTree(nTree(L))               %(isCompoundTree_nTree_NTree2)%
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_NTree2)%
  . x eps nTree(L) &#60;=&#62;
  . not x eps nil                          %(eps_nil_NTree2)%
  . leaf(x) is n branching                 %(isKbranching_leaf_NTree2)%
  . nTree(L) is n branching &#60;=&#62;
  . nil is n branching                     %(isKbranching_nil_NTree2)%
  . not def branches(nil)                  %(branches_nil_nTree2)%
  . h([],n)  = n                           %(h_nil_nTree2)%
  . h(NT::K,n) = max(height(NT), h(K,n))   %(n_cons_nTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_nTree2)%
  . height(nTree(L))= h(L,0) + 1           %(height_nTree_nTree2)%
  . height(nil) = 0                        %(height_nil_nTree2)%   
  . l([])  = {}                            %(l_nil_nTree2)%
  . l(NT::K) = leaves(NT) union l(K)       %(l_cons_nTree2)%
  . leaves(leaf(x)) = {x}                  %(leaves_leaf_nTree2)%
  . leaves(nTree(L)) = l(L)                %(leaves_nTree_nTree2)%
  . leaves(nil) = {}                       %(leaves_nil_nTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree2_E1" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="NTree2" name="height5"/>
                <OMA>
                  <OMS cd="NTree2_E1" name="nTree6"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree2_E1" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat" name="__Plus__2"/>
                <OMA>
                  <OMS cd="NTree2" name="h1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree2_E1" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                  <OMS cd="Nat" name="N02"/>
                </OMA>
                <OMS cd="Nat" name="N12"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="height_nTree_nTree2">
      <use format="Hets">height_nTree_nTree2</use>
    </presentation>
    <axiom name="height_nil_nTree2">
      <CMP>
  . height(nil) = 0                        %(height_nil_nTree2)%   
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMA>
              <OMS cd="NTree2" name="height5"/>
              <OMS cd="NTree2_E1" name="nil12"/>
            </OMA>
            <OMS cd="Nat" name="N02"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="height_nil_nTree2">
      <use format="Hets">height_nil_nTree2</use>
    </presentation>
    <axiom name="isCompoundTree_leaf_NTree2">
      <CMP>
  forall x,y: Elem; 
  forall x,y: Elem; 
         n: Nat;
         T: NTree2[Elem];
         NT: NonEmptyNTree2[Elem];
         L: NonEmptyList[NonEmptyNTree2[Elem]];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_NTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_NTree2)%
  . not isLeaf(nTree(L))                   %(isLeaf_nTree_NTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_NTree2)%
  . not isCompoundTree(leaf(x))            %(isCompoundTree_leaf_NTree2)%
  . isCompoundTree(nTree(L))               %(isCompoundTree_nTree_NTree2)%
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_NTree2)%
  . x eps nTree(L) &#60;=&#62;
  . not x eps nil                          %(eps_nil_NTree2)%
  . leaf(x) is n branching                 %(isKbranching_leaf_NTree2)%
  . nTree(L) is n branching &#60;=&#62;
  . nil is n branching                     %(isKbranching_nil_NTree2)%
  . not def branches(nil)                  %(branches_nil_nTree2)%
  . h([],n)  = n                           %(h_nil_nTree2)%
  . h(NT::K,n) = max(height(NT), h(K,n))   %(n_cons_nTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_nTree2)%
  . height(nTree(L))= h(L,0) + 1           %(height_nTree_nTree2)%
  . height(nil) = 0                        %(height_nil_nTree2)%   
  . l([])  = {}                            %(l_nil_nTree2)%
  . l(NT::K) = leaves(NT) union l(K)       %(l_cons_nTree2)%
  . leaves(leaf(x)) = {x}                  %(leaves_leaf_nTree2)%
  . leaves(nTree(L)) = l(L)                %(leaves_nTree_nTree2)%
  . leaves(nil) = {}                       %(leaves_nil_nTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree2_PI" name="Elem33"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="NTree2" name="isCompoundTree5"/>
                <OMA>
                  <OMS cd="NTree2_E1" name="leaf5"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree2_PI" name="Elem33"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isCompoundTree_leaf_NTree2">
      <use format="Hets">isCompoundTree_leaf_NTree2</use>
    </presentation>
    <axiom name="isCompoundTree_nTree_NTree2">
      <CMP>
  forall x,y: Elem; 
  forall x,y: Elem; 
         n: Nat;
         T: NTree2[Elem];
         NT: NonEmptyNTree2[Elem];
         L: NonEmptyList[NonEmptyNTree2[Elem]];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_NTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_NTree2)%
  . not isLeaf(nTree(L))                   %(isLeaf_nTree_NTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_NTree2)%
  . not isCompoundTree(leaf(x))            %(isCompoundTree_leaf_NTree2)%
  . isCompoundTree(nTree(L))               %(isCompoundTree_nTree_NTree2)%
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_NTree2)%
  . x eps nTree(L) &#60;=&#62;
  . not x eps nil                          %(eps_nil_NTree2)%
  . leaf(x) is n branching                 %(isKbranching_leaf_NTree2)%
  . nTree(L) is n branching &#60;=&#62;
  . nil is n branching                     %(isKbranching_nil_NTree2)%
  . not def branches(nil)                  %(branches_nil_nTree2)%
  . h([],n)  = n                           %(h_nil_nTree2)%
  . h(NT::K,n) = max(height(NT), h(K,n))   %(n_cons_nTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_nTree2)%
  . height(nTree(L))= h(L,0) + 1           %(height_nTree_nTree2)%
  . height(nil) = 0                        %(height_nil_nTree2)%   
  . l([])  = {}                            %(l_nil_nTree2)%
  . l(NT::K) = leaves(NT) union l(K)       %(l_cons_nTree2)%
  . leaves(leaf(x)) = {x}                  %(leaves_leaf_nTree2)%
  . leaves(nTree(L)) = l(L)                %(leaves_nTree_nTree2)%
  . leaves(nil) = {}                       %(leaves_nil_nTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree2_E1" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="predication"/>
              <OMS cd="NTree2" name="isCompoundTree5"/>
              <OMA>
                <OMS cd="NTree2_E1" name="nTree6"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="NTree2_E1" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
                  </OMATP>
                  <OMV name="L"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isCompoundTree_nTree_NTree2">
      <use format="Hets">isCompoundTree_nTree_NTree2</use>
    </presentation>
    <axiom name="isCompoundTree_nil_NTree2">
      <CMP>
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="predication"/>
              <OMS cd="NTree2" name="isCompoundTree5"/>
              <OMS cd="NTree2_E1" name="nil12"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isCompoundTree_nil_NTree2">
      <use format="Hets">isCompoundTree_nil_NTree2</use>
    </presentation>
    <axiom name="isEmpty_def_NTree2">
      <CMP>
  forall x,y: Elem; 
  forall x,y: Elem; 
         n: Nat;
         T: NTree2[Elem];
         NT: NonEmptyNTree2[Elem];
         L: NonEmptyList[NonEmptyNTree2[Elem]];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_NTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_NTree2)%
  . not isLeaf(nTree(L))                   %(isLeaf_nTree_NTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_NTree2)%
  . not isCompoundTree(leaf(x))            %(isCompoundTree_leaf_NTree2)%
  . isCompoundTree(nTree(L))               %(isCompoundTree_nTree_NTree2)%
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_NTree2)%
  . x eps nTree(L) &#60;=&#62;
  . not x eps nil                          %(eps_nil_NTree2)%
  . leaf(x) is n branching                 %(isKbranching_leaf_NTree2)%
  . nTree(L) is n branching &#60;=&#62;
  . nil is n branching                     %(isKbranching_nil_NTree2)%
  . not def branches(nil)                  %(branches_nil_nTree2)%
  . h([],n)  = n                           %(h_nil_nTree2)%
  . h(NT::K,n) = max(height(NT), h(K,n))   %(n_cons_nTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_nTree2)%
  . height(nTree(L))= h(L,0) + 1           %(height_nTree_nTree2)%
  . height(nil) = 0                        %(height_nil_nTree2)%   
  . l([])  = {}                            %(l_nil_nTree2)%
  . l(NT::K) = leaves(NT) union l(K)       %(l_cons_nTree2)%
  . leaves(leaf(x)) = {x}                  %(leaves_leaf_nTree2)%
  . leaves(nTree(L)) = l(L)                %(leaves_nTree_nTree2)%
  . leaves(nil) = {}                       %(leaves_nil_nTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree2_E1" name="NTree2SBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="T"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="NTree2_E1U2" name="isEmpty9"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="NTree2_E1" name="NTree2SBrackOpenElemSBrackClose2"/>
                  </OMATP>
                  <OMV name="T"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="NTree2_E1" name="NTree2SBrackOpenElemSBrackClose2"/>
                  </OMATP>
                  <OMV name="T"/>
                </OMATTR>
                <OMS cd="NTree2_E1" name="nil12"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isEmpty_def_NTree2">
      <use format="Hets">isEmpty_def_NTree2</use>
    </presentation>
    <axiom name="isKbranching_leaf_NTree2">
      <CMP>
  forall x,y: Elem; 
  forall x,y: Elem; 
         n: Nat;
         T: NTree2[Elem];
         NT: NonEmptyNTree2[Elem];
         L: NonEmptyList[NonEmptyNTree2[Elem]];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_NTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_NTree2)%
  . not isLeaf(nTree(L))                   %(isLeaf_nTree_NTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_NTree2)%
  . not isCompoundTree(leaf(x))            %(isCompoundTree_leaf_NTree2)%
  . isCompoundTree(nTree(L))               %(isCompoundTree_nTree_NTree2)%
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_NTree2)%
  . x eps nTree(L) &#60;=&#62;
  . not x eps nil                          %(eps_nil_NTree2)%
  . leaf(x) is n branching                 %(isKbranching_leaf_NTree2)%
  . nTree(L) is n branching &#60;=&#62;
  . nil is n branching                     %(isKbranching_nil_NTree2)%
  . not def branches(nil)                  %(branches_nil_nTree2)%
  . h([],n)  = n                           %(h_nil_nTree2)%
  . h(NT::K,n) = max(height(NT), h(K,n))   %(n_cons_nTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_nTree2)%
  . height(nTree(L))= h(L,0) + 1           %(height_nTree_nTree2)%
  . height(nil) = 0                        %(height_nil_nTree2)%   
  . l([])  = {}                            %(l_nil_nTree2)%
  . l(NT::K) = leaves(NT) union l(K)       %(l_cons_nTree2)%
  . leaves(leaf(x)) = {x}                  %(leaves_leaf_nTree2)%
  . leaves(nTree(L)) = l(L)                %(leaves_nTree_nTree2)%
  . leaves(nil) = {}                       %(leaves_nil_nTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree2_PI" name="Elem33"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat" name="Nat3"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="predication"/>
              <OMS cd="NTree2" name="__is__branching3"/>
              <OMA>
                <OMS cd="NTree2_E1" name="leaf5"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="NTree2_PI" name="Elem33"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat" name="Nat3"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isKbranching_leaf_NTree2">
      <use format="Hets">isKbranching_leaf_NTree2</use>
    </presentation>
    <axiom name="isKbranching_nTree_NTree2">
      <CMP>
  forall x,y: Elem; 
  forall x,y: Elem; 
         n: Nat;
         T: NTree2[Elem];
         NT: NonEmptyNTree2[Elem];
         L: NonEmptyList[NonEmptyNTree2[Elem]];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_NTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_NTree2)%
  . not isLeaf(nTree(L))                   %(isLeaf_nTree_NTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_NTree2)%
  . not isCompoundTree(leaf(x))            %(isCompoundTree_leaf_NTree2)%
  . isCompoundTree(nTree(L))               %(isCompoundTree_nTree_NTree2)%
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_NTree2)%
  . x eps nTree(L) &#60;=&#62;
  . not x eps nil                          %(eps_nil_NTree2)%
  . leaf(x) is n branching                 %(isKbranching_leaf_NTree2)%
  . nTree(L) is n branching &#60;=&#62;
  . nil is n branching                     %(isKbranching_nil_NTree2)%
  . not def branches(nil)                  %(branches_nil_nTree2)%
  . h([],n)  = n                           %(h_nil_nTree2)%
  . h(NT::K,n) = max(height(NT), h(K,n))   %(n_cons_nTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_nTree2)%
  . height(nTree(L))= h(L,0) + 1           %(height_nTree_nTree2)%
  . height(nil) = 0                        %(height_nil_nTree2)%   
  . l([])  = {}                            %(l_nil_nTree2)%
  . l(NT::K) = leaves(NT) union l(K)       %(l_cons_nTree2)%
  . leaves(leaf(x)) = {x}                  %(leaves_leaf_nTree2)%
  . leaves(nTree(L)) = l(L)                %(leaves_nTree_nTree2)%
  . leaves(nil) = {}                       %(leaves_nil_nTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat" name="Nat3"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree2_E1" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="NTree2" name="__is__branching3"/>
                <OMA>
                  <OMS cd="NTree2_E1" name="nTree6"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree2_E1" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat" name="Nat3"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMA>
                    <OMS cd="NTree2_PI" name="Hash__6"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="NTree2_E1" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
                      </OMATP>
                      <OMV name="L"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat" name="Nat3"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
                <OMBIND>
                  <OMS cd="casl" name="universal"/>
                  <OMBVAR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="NTree2_E1U2" name="NonEmptyNTree2SBrackOpenElemSBrackClose2"/>
                      </OMATP>
                      <OMV name="T"/>
                    </OMATTR>
                  </OMBVAR>
                  <OMA>
                    <OMS cd="casl" name="implication"/>
                    <OMA>
                      <OMS cd="casl" name="predication"/>
                      <OMS cd="NTree2_PI" name="__eps__8"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="NTree2_E1U2" name="NonEmptyNTree2SBrackOpenElemSBrackClose2"/>
                        </OMATP>
                        <OMV name="T"/>
                      </OMATTR>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="NTree2_E1" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
                        </OMATP>
                        <OMV name="L"/>
                      </OMATTR>
                    </OMA>
                    <OMA>
                      <OMS cd="casl" name="predication"/>
                      <OMS cd="NTree2" name="__is__branching3"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="NTree2_E1U2" name="NonEmptyNTree2SBrackOpenElemSBrackClose2"/>
                        </OMATP>
                        <OMV name="T"/>
                      </OMATTR>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Nat" name="Nat3"/>
                        </OMATP>
                        <OMV name="n"/>
                      </OMATTR>
                    </OMA>
                    <OMS cd="casl" name="true"/>
                  </OMA>
                </OMBIND>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isKbranching_nTree_NTree2">
      <use format="Hets">isKbranching_nTree_NTree2</use>
    </presentation>
    <axiom name="isKbranching_nil_NTree2">
      <CMP>
  forall x,y: Elem; 
  forall x,y: Elem; 
         n: Nat;
         T: NTree2[Elem];
         NT: NonEmptyNTree2[Elem];
         L: NonEmptyList[NonEmptyNTree2[Elem]];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_NTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_NTree2)%
  . not isLeaf(nTree(L))                   %(isLeaf_nTree_NTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_NTree2)%
  . not isCompoundTree(leaf(x))            %(isCompoundTree_leaf_NTree2)%
  . isCompoundTree(nTree(L))               %(isCompoundTree_nTree_NTree2)%
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_NTree2)%
  . x eps nTree(L) &#60;=&#62;
  . not x eps nil                          %(eps_nil_NTree2)%
  . leaf(x) is n branching                 %(isKbranching_leaf_NTree2)%
  . nTree(L) is n branching &#60;=&#62;
  . nil is n branching                     %(isKbranching_nil_NTree2)%
  . not def branches(nil)                  %(branches_nil_nTree2)%
  . h([],n)  = n                           %(h_nil_nTree2)%
  . h(NT::K,n) = max(height(NT), h(K,n))   %(n_cons_nTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_nTree2)%
  . height(nTree(L))= h(L,0) + 1           %(height_nTree_nTree2)%
  . height(nil) = 0                        %(height_nil_nTree2)%   
  . l([])  = {}                            %(l_nil_nTree2)%
  . l(NT::K) = leaves(NT) union l(K)       %(l_cons_nTree2)%
  . leaves(leaf(x)) = {x}                  %(leaves_leaf_nTree2)%
  . leaves(nTree(L)) = l(L)                %(leaves_nTree_nTree2)%
  . leaves(nil) = {}                       %(leaves_nil_nTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat" name="Nat3"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="predication"/>
              <OMS cd="NTree2" name="__is__branching3"/>
              <OMS cd="NTree2_E1" name="nil12"/>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat" name="Nat3"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isKbranching_nil_NTree2">
      <use format="Hets">isKbranching_nil_NTree2</use>
    </presentation>
    <axiom name="isLeaf_leaf_NTree2">
      <CMP>
  forall x,y: Elem; 
  forall x,y: Elem; 
         n: Nat;
         T: NTree2[Elem];
         NT: NonEmptyNTree2[Elem];
         L: NonEmptyList[NonEmptyNTree2[Elem]];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_NTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_NTree2)%
  . not isLeaf(nTree(L))                   %(isLeaf_nTree_NTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_NTree2)%
  . not isCompoundTree(leaf(x))            %(isCompoundTree_leaf_NTree2)%
  . isCompoundTree(nTree(L))               %(isCompoundTree_nTree_NTree2)%
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_NTree2)%
  . x eps nTree(L) &#60;=&#62;
  . not x eps nil                          %(eps_nil_NTree2)%
  . leaf(x) is n branching                 %(isKbranching_leaf_NTree2)%
  . nTree(L) is n branching &#60;=&#62;
  . nil is n branching                     %(isKbranching_nil_NTree2)%
  . not def branches(nil)                  %(branches_nil_nTree2)%
  . h([],n)  = n                           %(h_nil_nTree2)%
  . h(NT::K,n) = max(height(NT), h(K,n))   %(n_cons_nTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_nTree2)%
  . height(nTree(L))= h(L,0) + 1           %(height_nTree_nTree2)%
  . height(nil) = 0                        %(height_nil_nTree2)%   
  . l([])  = {}                            %(l_nil_nTree2)%
  . l(NT::K) = leaves(NT) union l(K)       %(l_cons_nTree2)%
  . leaves(leaf(x)) = {x}                  %(leaves_leaf_nTree2)%
  . leaves(nTree(L)) = l(L)                %(leaves_nTree_nTree2)%
  . leaves(nil) = {}                       %(leaves_nil_nTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree2_PI" name="Elem33"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="predication"/>
              <OMS cd="NTree2" name="isLeaf5"/>
              <OMA>
                <OMS cd="NTree2_E1" name="leaf5"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="NTree2_PI" name="Elem33"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isLeaf_leaf_NTree2">
      <use format="Hets">isLeaf_leaf_NTree2</use>
    </presentation>
    <axiom name="isLeaf_nTree_NTree2">
      <CMP>
  forall x,y: Elem; 
  forall x,y: Elem; 
         n: Nat;
         T: NTree2[Elem];
         NT: NonEmptyNTree2[Elem];
         L: NonEmptyList[NonEmptyNTree2[Elem]];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_NTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_NTree2)%
  . not isLeaf(nTree(L))                   %(isLeaf_nTree_NTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_NTree2)%
  . not isCompoundTree(leaf(x))            %(isCompoundTree_leaf_NTree2)%
  . isCompoundTree(nTree(L))               %(isCompoundTree_nTree_NTree2)%
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_NTree2)%
  . x eps nTree(L) &#60;=&#62;
  . not x eps nil                          %(eps_nil_NTree2)%
  . leaf(x) is n branching                 %(isKbranching_leaf_NTree2)%
  . nTree(L) is n branching &#60;=&#62;
  . nil is n branching                     %(isKbranching_nil_NTree2)%
  . not def branches(nil)                  %(branches_nil_nTree2)%
  . h([],n)  = n                           %(h_nil_nTree2)%
  . h(NT::K,n) = max(height(NT), h(K,n))   %(n_cons_nTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_nTree2)%
  . height(nTree(L))= h(L,0) + 1           %(height_nTree_nTree2)%
  . height(nil) = 0                        %(height_nil_nTree2)%   
  . l([])  = {}                            %(l_nil_nTree2)%
  . l(NT::K) = leaves(NT) union l(K)       %(l_cons_nTree2)%
  . leaves(leaf(x)) = {x}                  %(leaves_leaf_nTree2)%
  . leaves(nTree(L)) = l(L)                %(leaves_nTree_nTree2)%
  . leaves(nil) = {}                       %(leaves_nil_nTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree2_E1" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="NTree2" name="isLeaf5"/>
                <OMA>
                  <OMS cd="NTree2_E1" name="nTree6"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree2_E1" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isLeaf_nTree_NTree2">
      <use format="Hets">isLeaf_nTree_NTree2</use>
    </presentation>
    <axiom name="isLeaf_nil_NTree2">
      <CMP>
  . not isLeaf(nil)                        %(isLeaf_nil_NTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="predication"/>
              <OMS cd="NTree2" name="isLeaf5"/>
              <OMS cd="NTree2_E1" name="nil12"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="isLeaf_nil_NTree2">
      <use format="Hets">isLeaf_nil_NTree2</use>
    </presentation>
    <axiom name="l_cons_nTree2">
      <CMP>
  forall x,y: Elem; 
  forall x,y: Elem; 
         n: Nat;
         T: NTree2[Elem];
         NT: NonEmptyNTree2[Elem];
         L: NonEmptyList[NonEmptyNTree2[Elem]];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_NTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_NTree2)%
  . not isLeaf(nTree(L))                   %(isLeaf_nTree_NTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_NTree2)%
  . not isCompoundTree(leaf(x))            %(isCompoundTree_leaf_NTree2)%
  . isCompoundTree(nTree(L))               %(isCompoundTree_nTree_NTree2)%
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_NTree2)%
  . x eps nTree(L) &#60;=&#62;
  . not x eps nil                          %(eps_nil_NTree2)%
  . leaf(x) is n branching                 %(isKbranching_leaf_NTree2)%
  . nTree(L) is n branching &#60;=&#62;
  . nil is n branching                     %(isKbranching_nil_NTree2)%
  . not def branches(nil)                  %(branches_nil_nTree2)%
  . h([],n)  = n                           %(h_nil_nTree2)%
  . h(NT::K,n) = max(height(NT), h(K,n))   %(n_cons_nTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_nTree2)%
  . height(nTree(L))= h(L,0) + 1           %(height_nTree_nTree2)%
  . height(nil) = 0                        %(height_nil_nTree2)%   
  . l([])  = {}                            %(l_nil_nTree2)%
  . l(NT::K) = leaves(NT) union l(K)       %(l_cons_nTree2)%
  . leaves(leaf(x)) = {x}                  %(leaves_leaf_nTree2)%
  . leaves(nTree(L)) = l(L)                %(leaves_nTree_nTree2)%
  . leaves(nil) = {}                       %(leaves_nil_nTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree2_E1U2" name="NonEmptyNTree2SBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="NT"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
                </OMATP>
                <OMV name="K"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="NTree2" name="l1"/>
                <OMA>
                  <OMS cd="NTree2_E1U2" name="__::__8"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree2_E1U2" name="NonEmptyNTree2SBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="NT"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
                    </OMATP>
                    <OMV name="K"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="NTree2_PI" name="__union__7"/>
                <OMA>
                  <OMS cd="NTree2" name="leaves5"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree2_E1U2" name="NonEmptyNTree2SBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="NT"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="NTree2" name="l1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
                    </OMATP>
                    <OMV name="K"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="l_cons_nTree2">
      <use format="Hets">l_cons_nTree2</use>
    </presentation>
    <axiom name="l_nil_nTree2">
      <CMP>
  . l([])  = {}                            %(l_nil_nTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMA>
              <OMS cd="NTree2" name="l1"/>
              <OMS cd="NTree2_E1U2" name="SBrackOpenSBrackClose8"/>
            </OMA>
            <OMS cd="NTree2_PI" name="BraceOpenBraceClose9"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="l_nil_nTree2">
      <use format="Hets">l_nil_nTree2</use>
    </presentation>
    <axiom name="leaves_leaf_nTree2">
      <CMP>
  forall x,y: Elem; 
  forall x,y: Elem; 
         n: Nat;
         T: NTree2[Elem];
         NT: NonEmptyNTree2[Elem];
         L: NonEmptyList[NonEmptyNTree2[Elem]];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_NTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_NTree2)%
  . not isLeaf(nTree(L))                   %(isLeaf_nTree_NTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_NTree2)%
  . not isCompoundTree(leaf(x))            %(isCompoundTree_leaf_NTree2)%
  . isCompoundTree(nTree(L))               %(isCompoundTree_nTree_NTree2)%
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_NTree2)%
  . x eps nTree(L) &#60;=&#62;
  . not x eps nil                          %(eps_nil_NTree2)%
  . leaf(x) is n branching                 %(isKbranching_leaf_NTree2)%
  . nTree(L) is n branching &#60;=&#62;
  . nil is n branching                     %(isKbranching_nil_NTree2)%
  . not def branches(nil)                  %(branches_nil_nTree2)%
  . h([],n)  = n                           %(h_nil_nTree2)%
  . h(NT::K,n) = max(height(NT), h(K,n))   %(n_cons_nTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_nTree2)%
  . height(nTree(L))= h(L,0) + 1           %(height_nTree_nTree2)%
  . height(nil) = 0                        %(height_nil_nTree2)%   
  . l([])  = {}                            %(l_nil_nTree2)%
  . l(NT::K) = leaves(NT) union l(K)       %(l_cons_nTree2)%
  . leaves(leaf(x)) = {x}                  %(leaves_leaf_nTree2)%
  . leaves(nTree(L)) = l(L)                %(leaves_nTree_nTree2)%
  . leaves(nil) = {}                       %(leaves_nil_nTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree2_PI" name="Elem33"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="NTree2" name="leaves5"/>
                <OMA>
                  <OMS cd="NTree2_E1" name="leaf5"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree2_PI" name="Elem33"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="NTree2_PI" name="BraceOpen__BraceClose7"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="NTree2_PI" name="Elem33"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="leaves_leaf_nTree2">
      <use format="Hets">leaves_leaf_nTree2</use>
    </presentation>
    <axiom name="leaves_nTree_nTree2">
      <CMP>
  forall x,y: Elem; 
  forall x,y: Elem; 
         n: Nat;
         T: NTree2[Elem];
         NT: NonEmptyNTree2[Elem];
         L: NonEmptyList[NonEmptyNTree2[Elem]];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_NTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_NTree2)%
  . not isLeaf(nTree(L))                   %(isLeaf_nTree_NTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_NTree2)%
  . not isCompoundTree(leaf(x))            %(isCompoundTree_leaf_NTree2)%
  . isCompoundTree(nTree(L))               %(isCompoundTree_nTree_NTree2)%
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_NTree2)%
  . x eps nTree(L) &#60;=&#62;
  . not x eps nil                          %(eps_nil_NTree2)%
  . leaf(x) is n branching                 %(isKbranching_leaf_NTree2)%
  . nTree(L) is n branching &#60;=&#62;
  . nil is n branching                     %(isKbranching_nil_NTree2)%
  . not def branches(nil)                  %(branches_nil_nTree2)%
  . h([],n)  = n                           %(h_nil_nTree2)%
  . h(NT::K,n) = max(height(NT), h(K,n))   %(n_cons_nTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_nTree2)%
  . height(nTree(L))= h(L,0) + 1           %(height_nTree_nTree2)%
  . height(nil) = 0                        %(height_nil_nTree2)%   
  . l([])  = {}                            %(l_nil_nTree2)%
  . l(NT::K) = leaves(NT) union l(K)       %(l_cons_nTree2)%
  . leaves(leaf(x)) = {x}                  %(leaves_leaf_nTree2)%
  . leaves(nTree(L)) = l(L)                %(leaves_nTree_nTree2)%
  . leaves(nil) = {}                       %(leaves_nil_nTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree2_E1" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
                </OMATP>
                <OMV name="L"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="NTree2" name="leaves5"/>
                <OMA>
                  <OMS cd="NTree2_E1" name="nTree6"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree2_E1" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
                    </OMATP>
                    <OMV name="L"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="NTree2" name="l1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="NTree2_E1" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
                  </OMATP>
                  <OMV name="L"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="leaves_nTree_nTree2">
      <use format="Hets">leaves_nTree_nTree2</use>
    </presentation>
    <axiom name="leaves_nil_nTree2">
      <CMP>
  . leaves(nil) = {}                       %(leaves_nil_nTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMA>
              <OMS cd="NTree2" name="leaves5"/>
              <OMS cd="NTree2_E1" name="nil12"/>
            </OMA>
            <OMS cd="NTree2_PI" name="BraceOpenBraceClose9"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="leaves_nil_nTree2">
      <use format="Hets">leaves_nil_nTree2</use>
    </presentation>
    <axiom name="n_cons_nTree2">
      <CMP>
  forall x,y: Elem; 
  forall x,y: Elem; 
         n: Nat;
         T: NTree2[Elem];
         NT: NonEmptyNTree2[Elem];
         L: NonEmptyList[NonEmptyNTree2[Elem]];
  . isEmpty(T) &#60;=&#62; T = nil                 %(isEmpty_def_NTree2)%
  . isLeaf(leaf(x))                        %(isLeaf_leaf_NTree2)%
  . not isLeaf(nTree(L))                   %(isLeaf_nTree_NTree2)%
  . not isLeaf(nil)                        %(isLeaf_nil_NTree2)%
  . not isCompoundTree(leaf(x))            %(isCompoundTree_leaf_NTree2)%
  . isCompoundTree(nTree(L))               %(isCompoundTree_nTree_NTree2)%
  . not isCompoundTree(nil)                %(isCompoundTree_nil_NTree2)%
  . x eps leaf(y) &#60;=&#62; x=y                  %(eps_leaf_NTree2)%
  . x eps nTree(L) &#60;=&#62;
  . not x eps nil                          %(eps_nil_NTree2)%
  . leaf(x) is n branching                 %(isKbranching_leaf_NTree2)%
  . nTree(L) is n branching &#60;=&#62;
  . nil is n branching                     %(isKbranching_nil_NTree2)%
  . not def branches(nil)                  %(branches_nil_nTree2)%
  . h([],n)  = n                           %(h_nil_nTree2)%
  . h(NT::K,n) = max(height(NT), h(K,n))   %(n_cons_nTree2)%
  . height(leaf(x)) = 1                    %(height_leaf_nTree2)%
  . height(nTree(L))= h(L,0) + 1           %(height_nTree_nTree2)%
  . height(nil) = 0                        %(height_nil_nTree2)%   
  . l([])  = {}                            %(l_nil_nTree2)%
  . l(NT::K) = leaves(NT) union l(K)       %(l_cons_nTree2)%
  . leaves(leaf(x)) = {x}                  %(leaves_leaf_nTree2)%
  . leaves(nTree(L)) = l(L)                %(leaves_nTree_nTree2)%
  . leaves(nil) = {}                       %(leaves_nil_nTree2)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat" name="Nat3"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree2_E1U2" name="NonEmptyNTree2SBrackOpenElemSBrackClose2"/>
                </OMATP>
                <OMV name="NT"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
                </OMATP>
                <OMV name="K"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="NTree2" name="h1"/>
                <OMA>
                  <OMS cd="NTree2_E1U2" name="__::__8"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree2_E1U2" name="NonEmptyNTree2SBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="NT"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
                    </OMATP>
                    <OMV name="K"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat" name="Nat3"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat" name="max2"/>
                <OMA>
                  <OMS cd="NTree2" name="height5"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree2_E1U2" name="NonEmptyNTree2SBrackOpenElemSBrackClose2"/>
                    </OMATP>
                    <OMV name="NT"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="NTree2" name="h1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="NTree2_E1U2" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose2"/>
                    </OMATP>
                    <OMV name="K"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat" name="Nat3"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="n_cons_nTree2">
      <use format="Hets">n_cons_nTree2</use>
    </presentation>
  </theory>
  <private for="NTree2">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"NTree2_E1" Type:"GlobalDef" Origin:"DGExtension"
From:"NTree2_E1" Type:"GlobalThm Open Def Open" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="KTree_PIU1A">
    <presentation for="KTree_PIU1A">
      <use format="Hets">[KTree,PIU1A,0]</use>
    </presentation>
    <imports from="#Set_PI"/>
    <symbol role="sort" name="Elem32"/>
    <presentation for="Elem32">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="KTree_PIU1A">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst Set"
From:"Set_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="KTree_PIU1">
    <presentation for="KTree_PIU1">
      <use format="Hets">[KTree,PIU,1]</use>
    </presentation>
    <imports from="#KTree_PIU1A"/>
    <imports from="#Set">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N02"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="N02"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N12"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="N12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N22"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="N22"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N32"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="N32"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N42"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="N42"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N52"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="N52"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N62"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="N62"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N72"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="N72"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N82"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="N82"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N92"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="N92"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="__LowerEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="__Lower__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="__GreaterEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="__Greater__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Ast__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="__Ast__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__AtAt__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="__AtAt__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__DivisionQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="__DivisionQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Excla2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="__Excla2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusExcla__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="__MinusExcla__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="__MinusQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Plus__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="__Plus__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Power__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="__Power__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__div__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="__div__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__mod__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="__mod__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="even2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="max2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="max2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="min2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="min2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="odd2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="pre2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="pre2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="suc2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_PIU1" name="suc2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
  </theory>
  <private for="KTree_PIU1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set" Type:"GlobalDef" Origin:"DGSpecInst Set"
From:"KTree_PIU1A" Type:"GlobalDef" Origin:"DGFitSpec"
]]></data>
  </private>
  <theory xml:id="KTree_PI">
    <presentation for="KTree_PI">
      <use format="Hets">[KTree,PI,0]</use>
    </presentation>
    <imports from="#KTree_PIU1"/>
    <imports from="Basic/Numbers.omdoc#Nat"/>
    <symbol role="sort" name="SetSBrackOpenElemSBrackClose6"/>
    <presentation for="SetSBrackOpenElemSBrackClose6">
      <use format="Hets">[Set[Elem]]</use>
    </presentation>
    <symbol role="sort" name="Elem31"/>
    <presentation for="Elem31">
      <use format="Hets">[Elem]</use>
    </presentation>
    <symbol name="__eps__7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="KTree_PI" name="Elem31"/>
            <OMS cd="KTree_PI" name="SetSBrackOpenElemSBrackClose6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__eps__7">
      <use format="Hets">[__,eps,__]</use>
    </presentation>
    <symbol name="__isSubsetOf__6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="KTree_PI" name="SetSBrackOpenElemSBrackClose6"/>
            <OMS cd="KTree_PI" name="SetSBrackOpenElemSBrackClose6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__isSubsetOf__6">
      <use format="Hets">[__,isSubsetOf,__]</use>
    </presentation>
    <symbol name="isNonEmpty5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="KTree_PI" name="SetSBrackOpenElemSBrackClose6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isNonEmpty5">
      <use format="Hets">[isNonEmpty]</use>
    </presentation>
    <symbol name="Hash__5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree_PI" name="SetSBrackOpenElemSBrackClose6"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="Hash__5">
      <use format="Hets">[#,__]</use>
    </presentation>
    <symbol name="__Minus__7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree_PI" name="SetSBrackOpenElemSBrackClose6"/>
            <OMS cd="KTree_PI" name="Elem31"/>
            <OMS cd="KTree_PI" name="SetSBrackOpenElemSBrackClose6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__7">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__Minus__7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree_PI" name="SetSBrackOpenElemSBrackClose6"/>
            <OMS cd="KTree_PI" name="SetSBrackOpenElemSBrackClose6"/>
            <OMS cd="KTree_PI" name="SetSBrackOpenElemSBrackClose6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__7">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__intersection__6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree_PI" name="SetSBrackOpenElemSBrackClose6"/>
            <OMS cd="KTree_PI" name="SetSBrackOpenElemSBrackClose6"/>
            <OMS cd="KTree_PI" name="SetSBrackOpenElemSBrackClose6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__intersection__6">
      <use format="Hets">[__,intersection,__]</use>
    </presentation>
    <symbol name="__symDiff__5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree_PI" name="SetSBrackOpenElemSBrackClose6"/>
            <OMS cd="KTree_PI" name="SetSBrackOpenElemSBrackClose6"/>
            <OMS cd="KTree_PI" name="SetSBrackOpenElemSBrackClose6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__symDiff__5">
      <use format="Hets">[__,symDiff,__]</use>
    </presentation>
    <symbol name="__union__6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree_PI" name="SetSBrackOpenElemSBrackClose6"/>
            <OMS cd="KTree_PI" name="SetSBrackOpenElemSBrackClose6"/>
            <OMS cd="KTree_PI" name="SetSBrackOpenElemSBrackClose6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__union__6">
      <use format="Hets">[__,union,__]</use>
    </presentation>
    <symbol name="BraceOpen__BraceClose6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree_PI" name="Elem31"/>
            <OMS cd="KTree_PI" name="SetSBrackOpenElemSBrackClose6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BraceOpen__BraceClose6">
      <use format="Hets">[{,__,}]</use>
    </presentation>
    <symbol name="BraceOpenBraceClose8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree_PI" name="SetSBrackOpenElemSBrackClose6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BraceOpenBraceClose8">
      <use format="Hets">[{,}]</use>
    </presentation>
  </theory>
  <private for="KTree_PI">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat" Type:"GlobalDef" Origin:"DGUnion"
From:"KTree_PIU1" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="KTree_P1">
    <presentation for="KTree_P1">
      <use format="Hets">[KTree,P,1]</use>
    </presentation>
    <imports from="#KTree_PI"/>
  </theory>
  <private for="KTree_P1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"KTree_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="KTree_P2">
    <presentation for="KTree_P2">
      <use format="Hets">[KTree,P,2]</use>
    </presentation>
    <imports from="#KTree_PI"/>
    <symbol name="k1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="k1">
      <use format="Hets">[k]</use>
    </presentation>
  </theory>
  <private for="KTree_P2">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"KTree_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="KTree_P">
    <presentation for="KTree_P">
      <use format="Hets">[KTree,P,0]</use>
    </presentation>
    <imports from="#KTree_P1"/>
    <imports from="#KTree_P2"/>
  </theory>
  <private for="KTree_P">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"KTree_P2" Type:"GlobalDef" Origin:"DGFormalParams"
From:"KTree_P1" Type:"GlobalDef" Origin:"DGFormalParams"
]]></data>
  </private>
  <theory xml:id="KTree_E1A">
    <presentation for="KTree_E1A">
      <use format="Hets">[KTree,E1A,0]</use>
    </presentation>
    <imports from="#NTree_PI"/>
  </theory>
  <private for="KTree_E1A">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"NTree_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst NTree"
From:"NTree_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="KTree_E1">
    <presentation for="KTree_E1">
      <use format="Hets">[KTree,E,1]</use>
    </presentation>
    <imports from="#KTree_E1A"/>
    <imports from="#KTree_P"/>
    <imports from="#NTree">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="BraceOpenBraceClose7"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="BraceOpenBraceClose7"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="BraceOpen__BraceClose5"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="BraceOpen__BraceClose5"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="Hash__4"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="Hash__4"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="N02"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="N02"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="N12"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="N12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="N22"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="N22"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="N32"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="N32"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="N42"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="N42"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="N52"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="N52"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="N62"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="N62"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="N72"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="N72"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="N82"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="N82"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="N92"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="N92"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="__LowerEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="__Lower__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="__GreaterEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="__Greater__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="__Ast__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="__Ast__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="__AtAt__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="__AtAt__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="__DivisionQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="__DivisionQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="__Excla2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="__Excla2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="__MinusExcla__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="__MinusExcla__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="__MinusQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="__MinusQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="__Minus__6"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="__Minus__6"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="__Plus__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="__Plus__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="__Power__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="__Power__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="__div__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="__div__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="__eps__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="__eps__6"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="__intersection__5"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="__intersection__5"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="__isSubsetOf__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="__isSubsetOf__5"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="__mod__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="__mod__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="__symDiff__4"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="__symDiff__4"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="__union__5"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="__union__5"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="even2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="isNonEmpty"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="isNonEmpty4"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="max2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="max2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="min2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="min2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="odd2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="pre2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="pre2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree" name="suc2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree_E1" name="suc2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <symbol role="sort" name="NTreeSBrackOpenElemSBrackClose1"/>
    <presentation for="NTreeSBrackOpenElemSBrackClose1">
      <use format="Hets">[NTree[Elem]]</use>
    </presentation>
    <symbol role="sort" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose1"/>
    <presentation for="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose1">
      <use format="Hets">[List[NTree[Elem]]]</use>
    </presentation>
    <symbol name="__is__branching" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="KTree_E1" name="NTreeSBrackOpenElemSBrackClose1"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__is__branching">
      <use format="Hets">[__,is,__,branching]</use>
    </presentation>
    <symbol name="isCompoundTree2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="KTree_E1" name="NTreeSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isCompoundTree2">
      <use format="Hets">[isCompoundTree]</use>
    </presentation>
    <symbol name="isEmpty4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="KTree_E1" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isEmpty4">
      <use format="Hets">[isEmpty]</use>
    </presentation>
    <symbol name="isEmpty4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="KTree_E1" name="NTreeSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isEmpty4">
      <use format="Hets">[isEmpty]</use>
    </presentation>
    <symbol name="isLeaf2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="KTree_E1" name="NTreeSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isLeaf2">
      <use format="Hets">[isLeaf]</use>
    </presentation>
    <symbol name="SBrackOpenSBrackClose3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree_E1" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SBrackOpenSBrackClose3">
      <use format="Hets">[[,]]</use>
    </presentation>
    <symbol name="__Excla__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="KTree_E1" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="Nat" name="Nat3"/>
            <OMS cd="KTree_E1" name="NTreeSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Excla__2">
      <use format="Hets">[__,!,__]</use>
    </presentation>
    <symbol name="__PlusPlus__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree_E1" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="KTree_E1" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="KTree_E1" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__PlusPlus__">
      <use format="Hets">[__,++,__]</use>
    </presentation>
    <symbol name="__::__3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree_E1" name="NTreeSBrackOpenElemSBrackClose1"/>
            <OMS cd="KTree_E1" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="KTree_E1" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__::__3">
      <use format="Hets">[__,::,__]</use>
    </presentation>
    <symbol name="allLeaves" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree_E1" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="NTree_PI" name="SetSBrackOpenElemSBrackClose5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="allLeaves">
      <use format="Hets">[allLeaves]</use>
    </presentation>
    <symbol name="branches2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="KTree_E1" name="NTreeSBrackOpenElemSBrackClose1"/>
            <OMS cd="KTree_E1" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="branches2">
      <use format="Hets">[branches]</use>
    </presentation>
    <symbol name="drop" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Nat" name="Nat3"/>
            <OMS cd="KTree_E1" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="KTree_E1" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="drop">
      <use format="Hets">[drop]</use>
    </presentation>
    <symbol name="entry8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="KTree_E1" name="NTreeSBrackOpenElemSBrackClose1"/>
            <OMS cd="NTree_PI" name="Elem30"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="entry8">
      <use format="Hets">[entry]</use>
    </presentation>
    <symbol name="first3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="KTree_E1" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="KTree_E1" name="NTreeSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="first3">
      <use format="Hets">[first]</use>
    </presentation>
    <symbol name="freq2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree_E1" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="KTree_E1" name="NTreeSBrackOpenElemSBrackClose1"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="freq2">
      <use format="Hets">[freq]</use>
    </presentation>
    <symbol name="front" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="KTree_E1" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="KTree_E1" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="front">
      <use format="Hets">[front]</use>
    </presentation>
    <symbol name="height2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree_E1" name="NTreeSBrackOpenElemSBrackClose1"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="height2">
      <use format="Hets">[height]</use>
    </presentation>
    <symbol name="k" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="k">
      <use format="Hets">[k]</use>
    </presentation>
    <symbol name="last" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="KTree_E1" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="KTree_E1" name="NTreeSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="last">
      <use format="Hets">[last]</use>
    </presentation>
    <symbol name="leaves2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree_E1" name="NTreeSBrackOpenElemSBrackClose1"/>
            <OMS cd="NTree_PI" name="SetSBrackOpenElemSBrackClose5"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="leaves2">
      <use format="Hets">[leaves]</use>
    </presentation>
    <symbol name="maxHeight" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree_E1" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="maxHeight">
      <use format="Hets">[maxHeight]</use>
    </presentation>
    <symbol name="nTree2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree_PI" name="Elem30"/>
            <OMS cd="KTree_E1" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="KTree_E1" name="NTreeSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="nTree2">
      <use format="Hets">[nTree]</use>
    </presentation>
    <symbol name="nil8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree_E1" name="NTreeSBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="nil8">
      <use format="Hets">[nil]</use>
    </presentation>
    <symbol name="rest3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="KTree_E1" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="KTree_E1" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="rest3">
      <use format="Hets">[rest]</use>
    </presentation>
    <symbol name="reverse" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree_E1" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="KTree_E1" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="reverse">
      <use format="Hets">[reverse]</use>
    </presentation>
    <symbol name="take" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Nat" name="Nat3"/>
            <OMS cd="KTree_E1" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="KTree_E1" name="ListSBrackOpenNTreeSBrackOpenElemSBrackCloseSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="take">
      <use format="Hets">[take]</use>
    </presentation>
  </theory>
  <private for="KTree_E1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"KTree_E1A" Type:"GlobalDef" Origin:"DGFitSpec"
From:"KTree_P" Type:"GlobalDef" Origin:"DGSpecInst NTree"
From:"NTree" Type:"GlobalDef" Origin:"DGSpecInst NTree"
]]></data>
  </private>
  <theory xml:id="KTree">
    <presentation for="KTree">
      <use format="Hets">[KTree,,0]</use>
    </presentation>
    <imports from="#KTree_E1"/>
    <symbol role="sort" name="KTreeSBrackOpenElemSBrackClose"/>
    <presentation for="KTreeSBrackOpenElemSBrackClose">
      <use format="Hets">[KTree[Elem]]</use>
    </presentation>
    <adt>
      <sortdef name="NTreeSBrackOpenElemSBrackClose1" type="free">
        <insort for="#KTreeSBrackOpenElemSBrackClose"/>
      </sortdef>
    </adt>
    <axiom name="Ax11">
      <CMP>
  sort KTree[Elem] = { T : NTree[Elem] . T is k branching}
  sort KTree[Elem] = { T : NTree[Elem] . T is k branching}
  sort KTree[Elem] = { T : NTree[Elem] . T is k branching}
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="KTree_E1" name="NTreeSBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="T"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="membership"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="KTree_E1" name="NTreeSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="T"/>
                </OMATTR>
                <OMS cd="KTree" name="KTreeSBrackOpenElemSBrackClose"/>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="KTree_E1" name="__is__branching"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="KTree_E1" name="NTreeSBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="T"/>
                </OMATTR>
                <OMS cd="KTree_E1" name="k"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax11">
      <use format="Hets">Ax1</use>
    </presentation>
  </theory>
  <private for="KTree">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"KTree_E1" Type:"GlobalDef" Origin:"DGExtension"
From:"KTree_E1" Type:"GlobalThm Open Mono Open" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="KTree2_PIU1A">
    <presentation for="KTree2_PIU1A">
      <use format="Hets">[KTree2,PIU1A,0]</use>
    </presentation>
    <imports from="#Set_PI"/>
    <symbol role="sort" name="Elem34"/>
    <presentation for="Elem34">
      <use format="Hets">[Elem]</use>
    </presentation>
  </theory>
  <private for="KTree2_PIU1A">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Set_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst Set"
From:"Set_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="KTree2_PIU1">
    <presentation for="KTree2_PIU1">
      <use format="Hets">[KTree2,PIU,1]</use>
    </presentation>
    <imports from="#KTree2_PIU1A"/>
    <imports from="#Set">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N02"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="N02"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N12"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="N12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N22"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="N22"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N32"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="N32"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N42"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="N42"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N52"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="N52"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N62"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="N62"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N72"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="N72"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N82"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="N82"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="N92"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="N92"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="__LowerEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="__Lower__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="__GreaterEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="__Greater__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Ast__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="__Ast__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__AtAt__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="__AtAt__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__DivisionQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="__DivisionQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Excla2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="__Excla2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusExcla__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="__MinusExcla__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__MinusQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="__MinusQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Plus__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="__Plus__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__Power__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="__Power__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__div__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="__div__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="__mod__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="__mod__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="even2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="max2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="max2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="min2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="min2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="odd2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="pre2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="pre2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="Set" name="suc2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_PIU1" name="suc2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <symbol role="sort" name="SetSBrackOpenElemSBrackClose8"/>
    <presentation for="SetSBrackOpenElemSBrackClose8">
      <use format="Hets">[Set[Elem]]</use>
    </presentation>
    <symbol name="__eps__9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="KTree2_PIU1A" name="Elem34"/>
            <OMS cd="KTree2_PIU1" name="SetSBrackOpenElemSBrackClose8"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__eps__9">
      <use format="Hets">[__,eps,__]</use>
    </presentation>
    <symbol name="__isSubsetOf__8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="KTree2_PIU1" name="SetSBrackOpenElemSBrackClose8"/>
            <OMS cd="KTree2_PIU1" name="SetSBrackOpenElemSBrackClose8"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__isSubsetOf__8">
      <use format="Hets">[__,isSubsetOf,__]</use>
    </presentation>
    <symbol name="isNonEmpty7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="KTree2_PIU1" name="SetSBrackOpenElemSBrackClose8"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isNonEmpty7">
      <use format="Hets">[isNonEmpty]</use>
    </presentation>
    <symbol name="Hash__7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree2_PIU1" name="SetSBrackOpenElemSBrackClose8"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="Hash__7">
      <use format="Hets">[#,__]</use>
    </presentation>
    <symbol name="__Minus__9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree2_PIU1" name="SetSBrackOpenElemSBrackClose8"/>
            <OMS cd="KTree2_PIU1A" name="Elem34"/>
            <OMS cd="KTree2_PIU1" name="SetSBrackOpenElemSBrackClose8"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__9">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__Minus__9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree2_PIU1" name="SetSBrackOpenElemSBrackClose8"/>
            <OMS cd="KTree2_PIU1" name="SetSBrackOpenElemSBrackClose8"/>
            <OMS cd="KTree2_PIU1" name="SetSBrackOpenElemSBrackClose8"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__9">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__intersection__8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree2_PIU1" name="SetSBrackOpenElemSBrackClose8"/>
            <OMS cd="KTree2_PIU1" name="SetSBrackOpenElemSBrackClose8"/>
            <OMS cd="KTree2_PIU1" name="SetSBrackOpenElemSBrackClose8"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__intersection__8">
      <use format="Hets">[__,intersection,__]</use>
    </presentation>
    <symbol name="__symDiff__7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree2_PIU1" name="SetSBrackOpenElemSBrackClose8"/>
            <OMS cd="KTree2_PIU1" name="SetSBrackOpenElemSBrackClose8"/>
            <OMS cd="KTree2_PIU1" name="SetSBrackOpenElemSBrackClose8"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__symDiff__7">
      <use format="Hets">[__,symDiff,__]</use>
    </presentation>
    <symbol name="__union__8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree2_PIU1" name="SetSBrackOpenElemSBrackClose8"/>
            <OMS cd="KTree2_PIU1" name="SetSBrackOpenElemSBrackClose8"/>
            <OMS cd="KTree2_PIU1" name="SetSBrackOpenElemSBrackClose8"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__union__8">
      <use format="Hets">[__,union,__]</use>
    </presentation>
    <symbol name="BraceOpen__BraceClose8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree2_PIU1A" name="Elem34"/>
            <OMS cd="KTree2_PIU1" name="SetSBrackOpenElemSBrackClose8"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BraceOpen__BraceClose8">
      <use format="Hets">[{,__,}]</use>
    </presentation>
    <symbol name="BraceOpenBraceClose10" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree2_PIU1" name="SetSBrackOpenElemSBrackClose8"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="BraceOpenBraceClose10">
      <use format="Hets">[{,}]</use>
    </presentation>
  </theory>
  <private for="KTree2_PIU1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"KTree2_PIU1A" Type:"GlobalDef" Origin:"DGFitSpec"
From:"Set" Type:"GlobalDef" Origin:"DGSpecInst Set"
]]></data>
  </private>
  <theory xml:id="KTree2_PI">
    <presentation for="KTree2_PI">
      <use format="Hets">[KTree2,PI,0]</use>
    </presentation>
    <imports from="#KTree2_PIU1"/>
    <imports from="Basic/Numbers.omdoc#Nat"/>
  </theory>
  <private for="KTree2_PI">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"KTree2_PIU1" Type:"GlobalDef" Origin:"DGUnion"
From:"Nat" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="KTree2_P1">
    <presentation for="KTree2_P1">
      <use format="Hets">[KTree2,P,1]</use>
    </presentation>
    <imports from="#KTree2_PI"/>
  </theory>
  <private for="KTree2_P1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"KTree2_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="KTree2_P2">
    <presentation for="KTree2_P2">
      <use format="Hets">[KTree2,P,2]</use>
    </presentation>
    <imports from="#KTree2_PI"/>
    <symbol name="k3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="k3">
      <use format="Hets">[k]</use>
    </presentation>
  </theory>
  <private for="KTree2_P2">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"KTree2_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="KTree2_P">
    <presentation for="KTree2_P">
      <use format="Hets">[KTree2,P,0]</use>
    </presentation>
    <imports from="#KTree2_P1"/>
    <imports from="#KTree2_P2"/>
  </theory>
  <private for="KTree2_P">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"KTree2_P2" Type:"GlobalDef" Origin:"DGFormalParams"
From:"KTree2_P1" Type:"GlobalDef" Origin:"DGFormalParams"
]]></data>
  </private>
  <theory xml:id="KTree2_E1A">
    <presentation for="KTree2_E1A">
      <use format="Hets">[KTree2,E1A,0]</use>
    </presentation>
    <imports from="#NTree2_PI"/>
  </theory>
  <private for="KTree2_E1A">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"NTree2_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst NTree2"
From:"NTree2_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="KTree2_E1">
    <presentation for="KTree2_E1">
      <use format="Hets">[KTree2,E,1]</use>
    </presentation>
    <imports from="#KTree2_E1A"/>
    <imports from="#KTree2_P"/>
    <imports from="#NTree2">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="BraceOpenBraceClose9"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="BraceOpenBraceClose9"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="BraceOpen__BraceClose7"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="BraceOpen__BraceClose7"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="Hash__6"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="Hash__6"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="N02"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="N02"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="N12"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="N12"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="N22"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="N22"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="N32"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="N32"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="N42"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="N42"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="N52"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="N52"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="N62"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="N62"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="N72"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="N72"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="N82"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="N82"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="N92"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="N92"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="__LowerEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="__Lower__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="__GreaterEquals__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="__Greater__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="__Ast__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="__Ast__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="__AtAt__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="__AtAt__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="__DivisionQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="__DivisionQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="__Excla2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="__Excla2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="__MinusExcla__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="__MinusExcla__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="__MinusQuest__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="__MinusQuest__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="__Minus__8"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="__Minus__8"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="__Plus__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="__Plus__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="__Power__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="__Power__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="__div__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="__div__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="__eps__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="__eps__8"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="__intersection__7"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="__intersection__7"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="__isSubsetOf__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="__isSubsetOf__7"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="__mod__2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="__mod__2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="__symDiff__6"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="__symDiff__6"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="__union__7"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="__union__7"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="even2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="isNonEmpty"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="isNonEmpty6"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="max2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="max2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="min2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="min2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="odd2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="pre2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="pre2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="NTree2" name="suc2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="KTree2_E1" name="suc2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <symbol role="sort" name="NonEmptyNTree2SBrackOpenElemSBrackClose1"/>
    <presentation for="NonEmptyNTree2SBrackOpenElemSBrackClose1">
      <use format="Hets">[NonEmptyNTree2[Elem]]</use>
    </presentation>
    <symbol role="sort" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
    <presentation for="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1">
      <use format="Hets">[NonEmptyList[NonEmptyNTree2[Elem]]]</use>
    </presentation>
    <symbol role="sort" name="NTree2SBrackOpenElemSBrackClose1"/>
    <presentation for="NTree2SBrackOpenElemSBrackClose1">
      <use format="Hets">[NTree2[Elem]]</use>
    </presentation>
    <symbol role="sort" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
    <presentation for="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1">
      <use format="Hets">[List[NonEmptyNTree2[Elem]]]</use>
    </presentation>
    <adt>
      <sortdef name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1" type="free">
        <insort for="#NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
      </sortdef>
    </adt>
    <adt>
      <sortdef name="NTree2SBrackOpenElemSBrackClose1" type="free">
        <insort for="#NonEmptyNTree2SBrackOpenElemSBrackClose1"/>
      </sortdef>
    </adt>
    <symbol name="__is__branching1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="KTree2_E1" name="NTree2SBrackOpenElemSBrackClose1"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__is__branching1">
      <use format="Hets">[__,is,__,branching]</use>
    </presentation>
    <symbol name="isCompoundTree3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="KTree2_E1" name="NTree2SBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isCompoundTree3">
      <use format="Hets">[isCompoundTree]</use>
    </presentation>
    <symbol name="isEmpty5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="KTree2_E1" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isEmpty5">
      <use format="Hets">[isEmpty]</use>
    </presentation>
    <symbol name="isEmpty5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="KTree2_E1" name="NTree2SBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isEmpty5">
      <use format="Hets">[isEmpty]</use>
    </presentation>
    <symbol name="isLeaf3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="KTree2_E1" name="NTree2SBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="isLeaf3">
      <use format="Hets">[isLeaf]</use>
    </presentation>
    <symbol name="SBrackOpenSBrackClose4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree2_E1" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="SBrackOpenSBrackClose4">
      <use format="Hets">[[,]]</use>
    </presentation>
    <symbol name="__Excla__3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="KTree2_E1" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="Nat" name="Nat3"/>
            <OMS cd="KTree2_E1" name="NonEmptyNTree2SBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Excla__3">
      <use format="Hets">[__,!,__]</use>
    </presentation>
    <symbol name="__PlusPlus__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree2_E1" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="KTree2_E1" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="KTree2_E1" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__PlusPlus__1">
      <use format="Hets">[__,++,__]</use>
    </presentation>
    <symbol name="__::__4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree2_E1" name="NonEmptyNTree2SBrackOpenElemSBrackClose1"/>
            <OMS cd="KTree2_E1" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="KTree2_E1" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__::__4">
      <use format="Hets">[__,::,__]</use>
    </presentation>
    <symbol name="__::__4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree2_E1" name="NonEmptyNTree2SBrackOpenElemSBrackClose1"/>
            <OMS cd="KTree2_E1" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="KTree2_E1" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__::__4">
      <use format="Hets">[__,::,__]</use>
    </presentation>
    <symbol name="branches3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="KTree2_E1" name="NTree2SBrackOpenElemSBrackClose1"/>
            <OMS cd="KTree2_E1" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="branches3">
      <use format="Hets">[branches]</use>
    </presentation>
    <symbol name="branches3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="KTree2_E1" name="NonEmptyNTree2SBrackOpenElemSBrackClose1"/>
            <OMS cd="KTree2_E1" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="branches3">
      <use format="Hets">[branches]</use>
    </presentation>
    <symbol name="drop1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Nat" name="Nat3"/>
            <OMS cd="KTree2_E1" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="KTree2_E1" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="drop1">
      <use format="Hets">[drop]</use>
    </presentation>
    <symbol name="entry9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="KTree2_E1" name="NonEmptyNTree2SBrackOpenElemSBrackClose1"/>
            <OMS cd="NTree2_PI" name="Elem33"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="entry9">
      <use format="Hets">[entry]</use>
    </presentation>
    <symbol name="first4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree2_E1" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="KTree2_E1" name="NonEmptyNTree2SBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="first4">
      <use format="Hets">[first]</use>
    </presentation>
    <symbol name="first4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="KTree2_E1" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="KTree2_E1" name="NonEmptyNTree2SBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="first4">
      <use format="Hets">[first]</use>
    </presentation>
    <symbol name="freq3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree2_E1" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="KTree2_E1" name="NonEmptyNTree2SBrackOpenElemSBrackClose1"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="freq3">
      <use format="Hets">[freq]</use>
    </presentation>
    <symbol name="front1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="KTree2_E1" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="KTree2_E1" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="front1">
      <use format="Hets">[front]</use>
    </presentation>
    <symbol name="h" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree2_E1" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="Nat" name="Nat3"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="h">
      <use format="Hets">[h]</use>
    </presentation>
    <symbol name="height3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree2_E1" name="NTree2SBrackOpenElemSBrackClose1"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="height3">
      <use format="Hets">[height]</use>
    </presentation>
    <symbol name="k2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="k2">
      <use format="Hets">[k]</use>
    </presentation>
    <symbol name="l" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree2_E1" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="NTree2_PI" name="SetSBrackOpenElemSBrackClose7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="l">
      <use format="Hets">[l]</use>
    </presentation>
    <symbol name="last1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="KTree2_E1" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="KTree2_E1" name="NonEmptyNTree2SBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="last1">
      <use format="Hets">[last]</use>
    </presentation>
    <symbol name="leaf4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="NTree2_PI" name="Elem33"/>
            <OMS cd="KTree2_E1" name="NonEmptyNTree2SBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="leaf4">
      <use format="Hets">[leaf]</use>
    </presentation>
    <symbol name="leaves3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree2_E1" name="NTree2SBrackOpenElemSBrackClose1"/>
            <OMS cd="NTree2_PI" name="SetSBrackOpenElemSBrackClose7"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="leaves3">
      <use format="Hets">[leaves]</use>
    </presentation>
    <symbol name="nTree3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree2_E1" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="KTree2_E1" name="NonEmptyNTree2SBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="nTree3">
      <use format="Hets">[nTree]</use>
    </presentation>
    <symbol name="nil9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree2_E1" name="NTree2SBrackOpenElemSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="nil9">
      <use format="Hets">[nil]</use>
    </presentation>
    <symbol name="rest4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree2_E1" name="NonEmptyListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="KTree2_E1" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="rest4">
      <use format="Hets">[rest]</use>
    </presentation>
    <symbol name="rest4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="KTree2_E1" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="KTree2_E1" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="rest4">
      <use format="Hets">[rest]</use>
    </presentation>
    <symbol name="reverse1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="KTree2_E1" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="KTree2_E1" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="reverse1">
      <use format="Hets">[reverse]</use>
    </presentation>
    <symbol name="take1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Nat" name="Nat3"/>
            <OMS cd="KTree2_E1" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
            <OMS cd="KTree2_E1" name="ListSBrackOpenNonEmptyNTree2SBrackOpenElemSBrackCloseSBrackClose1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="take1">
      <use format="Hets">[take]</use>
    </presentation>
  </theory>
  <private for="KTree2_E1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"KTree2_E1A" Type:"GlobalDef" Origin:"DGFitSpec"
From:"KTree2_P" Type:"GlobalDef" Origin:"DGSpecInst NTree2"
From:"NTree2" Type:"GlobalDef" Origin:"DGSpecInst NTree2"
]]></data>
  </private>
  <theory xml:id="KTree2">
    <presentation for="KTree2">
      <use format="Hets">[KTree2,,0]</use>
    </presentation>
    <imports from="#KTree2_E1"/>
    <symbol role="sort" name="KTree2SBrackOpenElemSBrackClose"/>
    <presentation for="KTree2SBrackOpenElemSBrackClose">
      <use format="Hets">[KTree2[Elem]]</use>
    </presentation>
    <adt>
      <sortdef name="NTree2SBrackOpenElemSBrackClose1" type="free">
        <insort for="#KTree2SBrackOpenElemSBrackClose"/>
      </sortdef>
    </adt>
    <axiom name="Ax12">
      <CMP>
  sort KTree2[Elem] = { T : NTree2[Elem] . T is k branching}
  sort KTree2[Elem] = { T : NTree2[Elem] . T is k branching}
  sort KTree2[Elem] = { T : NTree2[Elem] . T is k branching}
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="KTree2_E1" name="NTree2SBrackOpenElemSBrackClose1"/>
                </OMATP>
                <OMV name="T"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="membership"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="KTree2_E1" name="NTree2SBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="T"/>
                </OMATTR>
                <OMS cd="KTree2" name="KTree2SBrackOpenElemSBrackClose"/>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="KTree2_E1" name="__is__branching1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="KTree2_E1" name="NTree2SBrackOpenElemSBrackClose1"/>
                  </OMATP>
                  <OMV name="T"/>
                </OMATTR>
                <OMS cd="KTree2_E1" name="k2"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax12">
      <use format="Hets">Ax1</use>
    </presentation>
  </theory>
  <private for="KTree2">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"KTree2_E1" Type:"GlobalDef" Origin:"DGExtension"
From:"KTree2_E1" Type:"GlobalThm Open Mono Open" Origin:"DGExtension"
]]></data>
  </private>
</omdoc>
