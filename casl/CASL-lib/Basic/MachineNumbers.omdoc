<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE omdoc PUBLIC "-//OMDoc//DTD OMDoc V1.2//EN" "http://www.tzi.de/~hiben/omdoc/dtd/omdoc.dtd">
<omdoc xml:id="MachineNumbers">
  <theory xml:id="CARDINAL_PI">
    <presentation for="CARDINAL_PI">
      <use format="Hets">[CARDINAL,PI,0]</use>
    </presentation>
    <imports from="Basic/Numbers.omdoc#Nat"/>
  </theory>
  <private for="CARDINAL_PI">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="CARDINAL_P">
    <presentation for="CARDINAL_P">
      <use format="Hets">[CARDINAL,P,0]</use>
    </presentation>
    <imports from="#CARDINAL_PI"/>
    <symbol name="WordLength1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="WordLength1">
      <use format="Hets">[WordLength]</use>
    </presentation>
  </theory>
  <private for="CARDINAL_P">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"CARDINAL_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="CARDINAL_E4">
    <presentation for="CARDINAL_E4">
      <use format="Hets">[CARDINAL,E,4]</use>
    </presentation>
    <imports from="#CARDINAL_P"/>
    <imports from="Basic/Numbers.omdoc#Nat"/>
    <symbol name="WordLength" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="WordLength">
      <use format="Hets">[WordLength]</use>
    </presentation>
  </theory>
  <private for="CARDINAL_E4">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat" Type:"GlobalDef" Origin:"DGSpecInst Nat"
From:"CARDINAL_P" Type:"GlobalDef" Origin:"DGSpecInst Nat"
]]></data>
  </private>
  <theory xml:id="CARDINAL_E3">
    <presentation for="CARDINAL_E3">
      <use format="Hets">[CARDINAL,E,3]</use>
    </presentation>
    <imports from="#CARDINAL_E4"/>
    <symbol role="sort" name="CARDINAL1"/>
    <presentation for="CARDINAL1">
      <use format="Hets">[CARDINAL]</use>
    </presentation>
    <symbol name="cardToNat" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
            <OMS cd="Nat" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="cardToNat">
      <use format="Hets">[cardToNat]</use>
    </presentation>
    <symbol name="natToCard" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Nat" name="Nat1"/>
            <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="natToCard">
      <use format="Hets">[natToCard]</use>
    </presentation>
    <axiom name="ga_selector_cardToNat">
      <CMP>
  type CARDINAL ::= natToCard (cardToNat : Nat)?
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat" name="Nat1"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="CARDINAL_E3" name="cardToNat"/>
                <OMA>
                  <OMS cd="CARDINAL_E3" name="natToCard"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat" name="Nat1"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat" name="Nat1"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_cardToNat">
      <use format="Hets">ga_selector_cardToNat</use>
    </presentation>
    <axiom name="natToCard_def">
      <CMP>
  forall x : Nat; c:CARDINAL
  forall x : Nat; c:CARDINAL
  . def natToCard(x) &#60;=&#62; x &#60;= (2 ^ WordLength) -? 1           %(natToCard_dom)%
  . natToCard (cardToNat(c)) = c                              %(natToCard_def)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="c"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="CARDINAL_E3" name="natToCard"/>
                <OMA>
                  <OMS cd="CARDINAL_E3" name="cardToNat"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                    </OMATP>
                    <OMV name="c"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="c"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="natToCard_def">
      <use format="Hets">natToCard_def</use>
    </presentation>
    <axiom name="natToCard_dom">
      <CMP>
  forall x : Nat; c:CARDINAL
  forall x : Nat; c:CARDINAL
  . def natToCard(x) &#60;=&#62; x &#60;= (2 ^ WordLength) -? 1           %(natToCard_dom)%
  . natToCard (cardToNat(c)) = c                              %(natToCard_def)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat" name="Nat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="CARDINAL_E3" name="natToCard"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat" name="Nat1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat" name="__LowerEquals__1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat" name="Nat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat" name="__MinusQuest__"/>
                  <OMA>
                    <OMS cd="Nat" name="__Power__"/>
                    <OMS cd="Nat" name="N2"/>
                    <OMS cd="CARDINAL_E4" name="WordLength"/>
                  </OMA>
                  <OMS cd="Nat" name="N1"/>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="natToCard_dom">
      <use format="Hets">natToCard_dom</use>
    </presentation>
  </theory>
  <private for="CARDINAL_E3">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"CARDINAL_E4" Type:"GlobalDef" Origin:"DGExtension"
From:"CARDINAL_E4" Type:"GlobalThm Open Mono Open" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="CARDINAL_E2">
    <presentation for="CARDINAL_E2">
      <use format="Hets">[CARDINAL,E,2]</use>
    </presentation>
    <imports from="#CARDINAL_E3"/>
    <axiom name="leq_CARDINAL">
      <CMP>
  forall x,y: CARDINAL 
  . x &#60;= y &#60;=&#62; cardToNat(x) &#60;= cardToNat(y)                    %(leq_CARDINAL)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat" name="__LowerEquals__1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat" name="__LowerEquals__1"/>
                <OMA>
                  <OMS cd="CARDINAL_E3" name="cardToNat"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="CARDINAL_E3" name="cardToNat"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="leq_CARDINAL">
      <use format="Hets">leq_CARDINAL</use>
    </presentation>
  </theory>
  <private for="CARDINAL_E2">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"CARDINAL_E3" Type:"GlobalDef" Origin:"DGExtension"
From:"CARDINAL_E3" Type:"GlobalThm Open Def Open" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="CARDINAL_E1">
    <presentation for="CARDINAL_E1">
      <use format="Hets">[CARDINAL,E,1]</use>
    </presentation>
    <imports from="#CARDINAL_E2"/>
    <symbol name="__Minus__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
            <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
            <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="maxCardinal" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="maxCardinal">
      <use format="Hets">[maxCardinal]</use>
    </presentation>
    <symbol name="maxCardinal" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="maxCardinal">
      <use format="Hets">[maxCardinal]</use>
    </presentation>
    <axiom name="add_CARDINAL">
      <CMP>
  forall x,y: CARDINAL
  . natToCard(0) = 0                                      %(def_0_CARDINAL)%
  . natToCard(1) = 1                                      %(def_1_CARDINAL)%
  . x + y = natToCard(cardToNat(x) + cardToNat(y))          %(add_CARDINAL)%
  . x-y = natToCard(cardToNat(x) -? cardToNat(y))           %(sub_CARDINAL)%
  . x*y = natToCard(cardToNat(x) * cardToNat(y))           %(mult_CARDINAL)%
  . x div y = natToCard(cardToNat(x) div cardToNat(y))      %(div_CARDINAL)%
  . x mod y = natToCard(cardToNat(x) mod cardToNat(y))      %(mod_CARDINAL)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__Plus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="CARDINAL_E3" name="natToCard"/>
                <OMA>
                  <OMS cd="Nat" name="__Plus__"/>
                  <OMA>
                    <OMS cd="CARDINAL_E3" name="cardToNat"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="CARDINAL_E3" name="cardToNat"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="add_CARDINAL">
      <use format="Hets">add_CARDINAL</use>
    </presentation>
    <axiom name="def_0_CARDINAL">
      <CMP>
  . natToCard(0) = 0                                      %(def_0_CARDINAL)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMA>
              <OMS cd="CARDINAL_E3" name="natToCard"/>
              <OMS cd="Nat" name="N0"/>
            </OMA>
            <OMS cd="Nat" name="N0"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="def_0_CARDINAL">
      <use format="Hets">def_0_CARDINAL</use>
    </presentation>
    <axiom name="def_1_CARDINAL">
      <CMP>
  . natToCard(1) = 1                                      %(def_1_CARDINAL)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMA>
              <OMS cd="CARDINAL_E3" name="natToCard"/>
              <OMS cd="Nat" name="N1"/>
            </OMA>
            <OMS cd="Nat" name="N1"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="def_1_CARDINAL">
      <use format="Hets">def_1_CARDINAL</use>
    </presentation>
    <axiom name="div_CARDINAL">
      <CMP>
  forall x,y: CARDINAL
  . natToCard(0) = 0                                      %(def_0_CARDINAL)%
  . natToCard(1) = 1                                      %(def_1_CARDINAL)%
  . x + y = natToCard(cardToNat(x) + cardToNat(y))          %(add_CARDINAL)%
  . x-y = natToCard(cardToNat(x) -? cardToNat(y))           %(sub_CARDINAL)%
  . x*y = natToCard(cardToNat(x) * cardToNat(y))           %(mult_CARDINAL)%
  . x div y = natToCard(cardToNat(x) div cardToNat(y))      %(div_CARDINAL)%
  . x mod y = natToCard(cardToNat(x) mod cardToNat(y))      %(mod_CARDINAL)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__div__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="CARDINAL_E3" name="natToCard"/>
                <OMA>
                  <OMS cd="Nat" name="__div__"/>
                  <OMA>
                    <OMS cd="CARDINAL_E3" name="cardToNat"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="CARDINAL_E3" name="cardToNat"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="div_CARDINAL">
      <use format="Hets">div_CARDINAL</use>
    </presentation>
    <axiom name="maxCardinal_CARDINAL">
      <CMP>
  . maxCardinal = natToCard(maxCardinal)            %(maxCardinal_CARDINAL)%   
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMS cd="CARDINAL_E1" name="maxCardinal"/>
            <OMA>
              <OMS cd="CARDINAL_E3" name="natToCard"/>
              <OMS cd="CARDINAL_E1" name="maxCardinal"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="maxCardinal_CARDINAL">
      <use format="Hets">maxCardinal_CARDINAL</use>
    </presentation>
    <axiom name="maxCardinal_Nat">
      <CMP>
  . maxCardinal = (2 ^ WordLength) -? 1                  %(maxCardinal_Nat)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMS cd="CARDINAL_E1" name="maxCardinal"/>
            <OMA>
              <OMS cd="Nat" name="__MinusQuest__"/>
              <OMA>
                <OMS cd="Nat" name="__Power__"/>
                <OMS cd="Nat" name="N2"/>
                <OMS cd="CARDINAL_E4" name="WordLength"/>
              </OMA>
              <OMS cd="Nat" name="N1"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="maxCardinal_Nat">
      <use format="Hets">maxCardinal_Nat</use>
    </presentation>
    <axiom name="mod_CARDINAL">
      <CMP>
  forall x,y: CARDINAL
  . natToCard(0) = 0                                      %(def_0_CARDINAL)%
  . natToCard(1) = 1                                      %(def_1_CARDINAL)%
  . x + y = natToCard(cardToNat(x) + cardToNat(y))          %(add_CARDINAL)%
  . x-y = natToCard(cardToNat(x) -? cardToNat(y))           %(sub_CARDINAL)%
  . x*y = natToCard(cardToNat(x) * cardToNat(y))           %(mult_CARDINAL)%
  . x div y = natToCard(cardToNat(x) div cardToNat(y))      %(div_CARDINAL)%
  . x mod y = natToCard(cardToNat(x) mod cardToNat(y))      %(mod_CARDINAL)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__mod__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="CARDINAL_E3" name="natToCard"/>
                <OMA>
                  <OMS cd="Nat" name="__mod__"/>
                  <OMA>
                    <OMS cd="CARDINAL_E3" name="cardToNat"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="CARDINAL_E3" name="cardToNat"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="mod_CARDINAL">
      <use format="Hets">mod_CARDINAL</use>
    </presentation>
    <axiom name="mult_CARDINAL">
      <CMP>
  forall x,y: CARDINAL
  . natToCard(0) = 0                                      %(def_0_CARDINAL)%
  . natToCard(1) = 1                                      %(def_1_CARDINAL)%
  . x + y = natToCard(cardToNat(x) + cardToNat(y))          %(add_CARDINAL)%
  . x-y = natToCard(cardToNat(x) -? cardToNat(y))           %(sub_CARDINAL)%
  . x*y = natToCard(cardToNat(x) * cardToNat(y))           %(mult_CARDINAL)%
  . x div y = natToCard(cardToNat(x) div cardToNat(y))      %(div_CARDINAL)%
  . x mod y = natToCard(cardToNat(x) mod cardToNat(y))      %(mod_CARDINAL)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__Ast__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="CARDINAL_E3" name="natToCard"/>
                <OMA>
                  <OMS cd="Nat" name="__Ast__"/>
                  <OMA>
                    <OMS cd="CARDINAL_E3" name="cardToNat"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="CARDINAL_E3" name="cardToNat"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="mult_CARDINAL">
      <use format="Hets">mult_CARDINAL</use>
    </presentation>
    <axiom name="sub_CARDINAL">
      <CMP>
  forall x,y: CARDINAL
  . natToCard(0) = 0                                      %(def_0_CARDINAL)%
  . natToCard(1) = 1                                      %(def_1_CARDINAL)%
  . x + y = natToCard(cardToNat(x) + cardToNat(y))          %(add_CARDINAL)%
  . x-y = natToCard(cardToNat(x) -? cardToNat(y))           %(sub_CARDINAL)%
  . x*y = natToCard(cardToNat(x) * cardToNat(y))           %(mult_CARDINAL)%
  . x div y = natToCard(cardToNat(x) div cardToNat(y))      %(div_CARDINAL)%
  . x mod y = natToCard(cardToNat(x) mod cardToNat(y))      %(mod_CARDINAL)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="CARDINAL_E1" name="__Minus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="CARDINAL_E3" name="natToCard"/>
                <OMA>
                  <OMS cd="Nat" name="__MinusQuest__"/>
                  <OMA>
                    <OMS cd="CARDINAL_E3" name="cardToNat"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="CARDINAL_E3" name="cardToNat"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="sub_CARDINAL">
      <use format="Hets">sub_CARDINAL</use>
    </presentation>
  </theory>
  <private for="CARDINAL_E1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"CARDINAL" Type:"GlobalThm Open None Open" Origin:"DGExtension"
From:"CARDINAL_E2" Type:"GlobalDef" Origin:"DGExtension"
From:"CARDINAL_E2" Type:"GlobalThm Open Def Open" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="CARDINAL">
    <presentation for="CARDINAL">
      <use format="Hets">[CARDINAL,,0]</use>
    </presentation>
    <imports from="#CARDINAL_E1"/>
    <axiom name="add_CARDINAL_dom">
      <CMP>
  forall x,y: CARDINAL
  . def x+y &#60;=&#62; cardToNat(x) + cardToNat(y) &#60;= maxCardinal   
  . def x-y &#60;=&#62; y &#60;= x                                     %(sub_CARDINAL_dom)%
  . def x*y &#60;=&#62; cardToNat(x) * cardToNat(y) &#60;= maxCardinal 
  . def x div y &#60;=&#62; not y=0                                %(div_CARDINAL_dom)%
  . def x mod y &#60;=&#62; not y=0                                %(mod_CARDINAL_dom)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="Nat" name="__Plus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat" name="__LowerEquals__1"/>
                <OMA>
                  <OMS cd="Nat" name="__Plus__"/>
                  <OMA>
                    <OMS cd="CARDINAL_E3" name="cardToNat"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="CARDINAL_E3" name="cardToNat"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                  </OMA>
                </OMA>
                <OMS cd="CARDINAL_E1" name="maxCardinal"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="add_CARDINAL_dom">
      <use format="Hets">add_CARDINAL_dom</use>
    </presentation>
    <axiom name="div_CARDINAL_dom">
      <CMP>
  forall x,y: CARDINAL
  . def x+y &#60;=&#62; cardToNat(x) + cardToNat(y) &#60;= maxCardinal   
  . def x-y &#60;=&#62; y &#60;= x                                     %(sub_CARDINAL_dom)%
  . def x*y &#60;=&#62; cardToNat(x) * cardToNat(y) &#60;= maxCardinal 
  . def x div y &#60;=&#62; not y=0                                %(div_CARDINAL_dom)%
  . def x mod y &#60;=&#62; not y=0                                %(mod_CARDINAL_dom)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="Nat" name="__div__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMS cd="Nat" name="N0"/>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="div_CARDINAL_dom">
      <use format="Hets">div_CARDINAL_dom</use>
    </presentation>
    <axiom name="ga_assoc___Ast__">
      <CMP>
      __ * __: CARDINAL * CARDINAL -&#62;? CARDINAL,
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="z"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__Ast__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                    </OMATP>
                    <OMV name="z"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat" name="__Ast__"/>
                <OMA>
                  <OMS cd="Nat" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="z"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_assoc___Ast__">
      <use format="Hets">ga_assoc___*__</use>
    </presentation>
    <axiom name="ga_assoc___Plus__">
      <CMP>
  ops __ + __: CARDINAL * CARDINAL -&#62;? CARDINAL,
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="z"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__Plus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat" name="__Plus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                    </OMATP>
                    <OMV name="z"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat" name="__Plus__"/>
                <OMA>
                  <OMS cd="Nat" name="__Plus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="z"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_assoc___Plus__">
      <use format="Hets">ga_assoc___+__</use>
    </presentation>
    <axiom name="ga_comm___Ast__">
      <CMP>
      __ * __: CARDINAL * CARDINAL -&#62;? CARDINAL,
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__Ast__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat" name="__Ast__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_comm___Ast__">
      <use format="Hets">ga_comm___*__</use>
    </presentation>
    <axiom name="ga_comm___Plus__">
      <CMP>
  ops __ + __: CARDINAL * CARDINAL -&#62;? CARDINAL,
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__Plus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat" name="__Plus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_comm___Plus__">
      <use format="Hets">ga_comm___+__</use>
    </presentation>
    <axiom name="ga_left_unit___Ast__">
      <CMP>
      __ * __: CARDINAL * CARDINAL -&#62;? CARDINAL,
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__Ast__"/>
                <OMS cd="Nat" name="N1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_left_unit___Ast__">
      <use format="Hets">ga_left_unit___*__</use>
    </presentation>
    <axiom name="ga_left_unit___Plus__">
      <CMP>
  ops __ + __: CARDINAL * CARDINAL -&#62;? CARDINAL,
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__Plus__"/>
                <OMS cd="Nat" name="N0"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_left_unit___Plus__">
      <use format="Hets">ga_left_unit___+__</use>
    </presentation>
    <axiom name="ga_right_unit___Ast__">
      <CMP>
      __ * __: CARDINAL * CARDINAL -&#62;? CARDINAL,
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__Ast__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMS cd="Nat" name="N1"/>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_right_unit___Ast__">
      <use format="Hets">ga_right_unit___*__</use>
    </presentation>
    <axiom name="ga_right_unit___Plus__">
      <CMP>
  ops __ + __: CARDINAL * CARDINAL -&#62;? CARDINAL,
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__Plus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMS cd="Nat" name="N0"/>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_right_unit___Plus__">
      <use format="Hets">ga_right_unit___+__</use>
    </presentation>
    <axiom name="mod_CARDINAL_dom">
      <CMP>
  forall x,y: CARDINAL
  . def x+y &#60;=&#62; cardToNat(x) + cardToNat(y) &#60;= maxCardinal   
  . def x-y &#60;=&#62; y &#60;= x                                     %(sub_CARDINAL_dom)%
  . def x*y &#60;=&#62; cardToNat(x) * cardToNat(y) &#60;= maxCardinal 
  . def x div y &#60;=&#62; not y=0                                %(div_CARDINAL_dom)%
  . def x mod y &#60;=&#62; not y=0                                %(mod_CARDINAL_dom)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="Nat" name="__mod__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMS cd="Nat" name="N0"/>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="mod_CARDINAL_dom">
      <use format="Hets">mod_CARDINAL_dom</use>
    </presentation>
    <axiom name="mult_CARDINAL_dom">
      <CMP>
  forall x,y: CARDINAL
  . def x+y &#60;=&#62; cardToNat(x) + cardToNat(y) &#60;= maxCardinal   
  . def x-y &#60;=&#62; y &#60;= x                                     %(sub_CARDINAL_dom)%
  . def x*y &#60;=&#62; cardToNat(x) * cardToNat(y) &#60;= maxCardinal 
  . def x div y &#60;=&#62; not y=0                                %(div_CARDINAL_dom)%
  . def x mod y &#60;=&#62; not y=0                                %(mod_CARDINAL_dom)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="Nat" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat" name="__LowerEquals__1"/>
                <OMA>
                  <OMS cd="Nat" name="__Ast__"/>
                  <OMA>
                    <OMS cd="CARDINAL_E3" name="cardToNat"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="CARDINAL_E3" name="cardToNat"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                  </OMA>
                </OMA>
                <OMS cd="CARDINAL_E1" name="maxCardinal"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="mult_CARDINAL_dom">
      <use format="Hets">mult_CARDINAL_dom</use>
    </presentation>
    <axiom name="sub_CARDINAL_dom">
      <CMP>
  forall x,y: CARDINAL
  . def x+y &#60;=&#62; cardToNat(x) + cardToNat(y) &#60;= maxCardinal   
  . def x-y &#60;=&#62; y &#60;= x                                     %(sub_CARDINAL_dom)%
  . def x*y &#60;=&#62; cardToNat(x) * cardToNat(y) &#60;= maxCardinal 
  . def x div y &#60;=&#62; not y=0                                %(div_CARDINAL_dom)%
  . def x mod y &#60;=&#62; not y=0                                %(mod_CARDINAL_dom)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="CARDINAL_E1" name="__Minus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat" name="__LowerEquals__1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="CARDINAL_E3" name="CARDINAL1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="sub_CARDINAL_dom">
      <use format="Hets">sub_CARDINAL_dom</use>
    </presentation>
  </theory>
  <private for="CARDINAL">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"CARDINAL_E1" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="INTEGER_PI">
    <presentation for="INTEGER_PI">
      <use format="Hets">[INTEGER,PI,0]</use>
    </presentation>
    <imports from="Basic/Numbers.omdoc#Nat"/>
  </theory>
  <private for="INTEGER_PI">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="INTEGER_P">
    <presentation for="INTEGER_P">
      <use format="Hets">[INTEGER,P,0]</use>
    </presentation>
    <imports from="#INTEGER_PI"/>
    <symbol name="WordLength13" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="WordLength13">
      <use format="Hets">[WordLength]</use>
    </presentation>
  </theory>
  <private for="INTEGER_P">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"INTEGER_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="INTEGER_E4">
    <presentation for="INTEGER_E4">
      <use format="Hets">[INTEGER,E,4]</use>
    </presentation>
    <imports from="#INTEGER_P"/>
    <imports from="Basic/Numbers.omdoc#Int"/>
    <symbol role="sort" name="Int4"/>
    <presentation for="Int4">
      <use format="Hets">[Int]</use>
    </presentation>
    <adt>
      <sortdef name="Int4" type="free">
        <insort for="#Nat1"/>
        <insort for="#Pos"/>
      </sortdef>
    </adt>
    <symbol name="Minus__3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="INTEGER_E4" name="Int4"/>
            <OMS cd="INTEGER_E4" name="Int4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="Minus__3">
      <use format="Hets">[-,__]</use>
    </presentation>
    <symbol name="__Minus__6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="INTEGER_E4" name="Int4"/>
            <OMS cd="INTEGER_E4" name="Int4"/>
            <OMS cd="INTEGER_E4" name="Int4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__6">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__Minus__6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat" name="Nat1"/>
            <OMS cd="Nat" name="Nat1"/>
            <OMS cd="INTEGER_E4" name="Int4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__6">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__quot__3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="INTEGER_E4" name="Int4"/>
            <OMS cd="INTEGER_E4" name="Int4"/>
            <OMS cd="INTEGER_E4" name="Int4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__quot__3">
      <use format="Hets">[__,quot,__]</use>
    </presentation>
    <symbol name="__rem__3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="INTEGER_E4" name="Int4"/>
            <OMS cd="INTEGER_E4" name="Int4"/>
            <OMS cd="INTEGER_E4" name="Int4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__rem__3">
      <use format="Hets">[__,rem,__]</use>
    </presentation>
    <symbol name="abs3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="INTEGER_E4" name="Int4"/>
            <OMS cd="Nat" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="abs3">
      <use format="Hets">[abs]</use>
    </presentation>
    <symbol name="sign3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="INTEGER_E4" name="Int4"/>
            <OMS cd="INTEGER_E4" name="Int4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="sign3">
      <use format="Hets">[sign]</use>
    </presentation>
  </theory>
  <private for="INTEGER_E4">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"INTEGER_P" Type:"GlobalDef" Origin:"DGSpecInst Int"
From:"Int" Type:"GlobalDef" Origin:"DGSpecInst Int"
]]></data>
  </private>
  <theory xml:id="INTEGER_E3">
    <presentation for="INTEGER_E3">
      <use format="Hets">[INTEGER,E,3]</use>
    </presentation>
    <imports from="#INTEGER_E4"/>
    <symbol role="sort" name="INTEGER3"/>
    <presentation for="INTEGER3">
      <use format="Hets">[INTEGER]</use>
    </presentation>
    <symbol name="intToInteger2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="INTEGER_E4" name="Int4"/>
            <OMS cd="INTEGER_E3" name="INTEGER3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="intToInteger2">
      <use format="Hets">[intToInteger]</use>
    </presentation>
    <symbol name="integerToInt2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="INTEGER_E3" name="INTEGER3"/>
            <OMS cd="INTEGER_E4" name="Int4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="integerToInt2">
      <use format="Hets">[integerToInt]</use>
    </presentation>
    <axiom name="ga_selector_integerToInt">
      <CMP>
  type INTEGER ::= intToInteger (integerToInt: Int)?
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E4" name="Int4"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="INTEGER_E3" name="integerToInt2"/>
                <OMA>
                  <OMS cd="INTEGER_E3" name="intToInteger2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E4" name="Int4"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E4" name="Int4"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_integerToInt">
      <use format="Hets">ga_selector_integerToInt</use>
    </presentation>
    <axiom name="intToInteger_def">
      <CMP>
  forall x:Int; i:INTEGER
  forall x:Int; i:INTEGER
  . def intToInteger(x) &#60;=&#62;
  . intToInteger (integerToInt(i)) = i            %(intToInteger_def)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="i"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="INTEGER_E3" name="intToInteger2"/>
                <OMA>
                  <OMS cd="INTEGER_E3" name="integerToInt2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="i"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="i"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="intToInteger_def">
      <use format="Hets">intToInteger_def</use>
    </presentation>
    <axiom name="intToInteger_dom">
      <CMP>
  forall x:Int; i:INTEGER
  forall x:Int; i:INTEGER
  . def intToInteger(x) &#60;=&#62;
  . intToInteger (integerToInt(i)) = i            %(intToInteger_def)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E4" name="Int4"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="INTEGER_E3" name="intToInteger2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E4" name="Int4"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Nat" name="__LowerEquals__1"/>
                  <OMA>
                    <OMS cd="INTEGER_E4" name="Minus__3"/>
                    <OMA>
                      <OMS cd="Nat" name="__Power__"/>
                      <OMS cd="Nat" name="N2"/>
                      <OMA>
                        <OMS cd="Nat" name="__MinusQuest__"/>
                        <OMS cd="INTEGER_P" name="WordLength13"/>
                        <OMS cd="Nat" name="N1"/>
                      </OMA>
                    </OMA>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E4" name="Int4"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Nat" name="__LowerEquals__1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E4" name="Int4"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMA>
                    <OMS cd="INTEGER_E4" name="__Minus__6"/>
                    <OMA>
                      <OMS cd="Nat" name="__Power__"/>
                      <OMS cd="Nat" name="N2"/>
                      <OMA>
                        <OMS cd="Nat" name="__MinusQuest__"/>
                        <OMS cd="INTEGER_P" name="WordLength13"/>
                        <OMS cd="Nat" name="N1"/>
                      </OMA>
                    </OMA>
                    <OMS cd="Nat" name="N1"/>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="intToInteger_dom">
      <use format="Hets">intToInteger_dom</use>
    </presentation>
  </theory>
  <private for="INTEGER_E3">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"INTEGER_E4" Type:"GlobalDef" Origin:"DGExtension"
From:"INTEGER_E4" Type:"GlobalThm Open Mono Open" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="INTEGER_E2">
    <presentation for="INTEGER_E2">
      <use format="Hets">[INTEGER,E,2]</use>
    </presentation>
    <imports from="#INTEGER_E3"/>
    <axiom name="leq_INTEGER">
      <CMP>
  forall x,y:INTEGER 
  . x &#60;= y &#60;=&#62; integerToInt(x) &#60;= integerToInt(y)      %(leq_INTEGER)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat" name="__LowerEquals__1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat" name="__LowerEquals__1"/>
                <OMA>
                  <OMS cd="INTEGER_E3" name="integerToInt2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="INTEGER_E3" name="integerToInt2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="leq_INTEGER">
      <use format="Hets">leq_INTEGER</use>
    </presentation>
  </theory>
  <private for="INTEGER_E2">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"INTEGER_E3" Type:"GlobalDef" Origin:"DGExtension"
From:"INTEGER_E3" Type:"GlobalThm Open Def Open" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="INTEGER_E1">
    <presentation for="INTEGER_E1">
      <use format="Hets">[INTEGER,E,1]</use>
    </presentation>
    <imports from="#INTEGER_E2"/>
    <symbol name="__Division__3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="INTEGER_E3" name="INTEGER3"/>
            <OMS cd="INTEGER_E3" name="INTEGER3"/>
            <OMS cd="INTEGER_E3" name="INTEGER3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Division__3">
      <use format="Hets">[__,/,__]</use>
    </presentation>
    <symbol name="maxInteger3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="INTEGER_E3" name="INTEGER3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="maxInteger3">
      <use format="Hets">[maxInteger]</use>
    </presentation>
    <symbol name="maxInteger3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="INTEGER_E4" name="Int4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="maxInteger3">
      <use format="Hets">[maxInteger]</use>
    </presentation>
    <symbol name="minInteger3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="INTEGER_E3" name="INTEGER3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="minInteger3">
      <use format="Hets">[minInteger]</use>
    </presentation>
    <symbol name="minInteger3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="INTEGER_E4" name="Int4"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="minInteger3">
      <use format="Hets">[minInteger]</use>
    </presentation>
    <axiom name="abs_INTEGER">
      <CMP>
  forall x,y: INTEGER
  . intToInteger(0) = 0                                       %(def_0_INTEGER)%
  . intToInteger(1) = 1                                       %(def_1_INTEGER)%
  . - x = intToInteger( - integerToInt(x) )                   %(minus_INTEGER)%
  . abs(x) = intToInteger( abs( integerToInt(x)) )              %(abs_INTEGER)%
  . x + y = intToInteger(integerToInt(x) + integerToInt(y))     %(add_INTEGER)%
  . x - y = intToInteger(integerToInt(x) - integerToInt(y))     %(sub_INTEGER)%
  . x * y = intToInteger(integerToInt(x) * integerToInt(y))    %(mult_INTEGER)%
  . x / y = intToInteger(integerToInt(x) /? integerToInt(y)) %(divide_INTEGER)%
  . x div y = intToInteger(integerToInt(x) div integerToInt(y)) %(div_INTEGER)%
  . x mod y = intToInteger(integerToInt(x) mod integerToInt(y)) %(mod_INTEGER)%
  . x quot y = intToInteger(integerToInt(x) quot integerToInt(y)) 
  . x rem y = intToInteger(integerToInt(x) rem integerToInt(y)) %(rem_INTEGER)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="INTEGER_E4" name="abs3"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="INTEGER_E3" name="intToInteger2"/>
                <OMA>
                  <OMS cd="INTEGER_E4" name="abs3"/>
                  <OMA>
                    <OMS cd="INTEGER_E3" name="integerToInt2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="INTEGER_E3" name="INTEGER3"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="abs_INTEGER">
      <use format="Hets">abs_INTEGER</use>
    </presentation>
    <axiom name="add_INTEGER">
      <CMP>
  forall x,y: INTEGER
  . intToInteger(0) = 0                                       %(def_0_INTEGER)%
  . intToInteger(1) = 1                                       %(def_1_INTEGER)%
  . - x = intToInteger( - integerToInt(x) )                   %(minus_INTEGER)%
  . abs(x) = intToInteger( abs( integerToInt(x)) )              %(abs_INTEGER)%
  . x + y = intToInteger(integerToInt(x) + integerToInt(y))     %(add_INTEGER)%
  . x - y = intToInteger(integerToInt(x) - integerToInt(y))     %(sub_INTEGER)%
  . x * y = intToInteger(integerToInt(x) * integerToInt(y))    %(mult_INTEGER)%
  . x / y = intToInteger(integerToInt(x) /? integerToInt(y)) %(divide_INTEGER)%
  . x div y = intToInteger(integerToInt(x) div integerToInt(y)) %(div_INTEGER)%
  . x mod y = intToInteger(integerToInt(x) mod integerToInt(y)) %(mod_INTEGER)%
  . x quot y = intToInteger(integerToInt(x) quot integerToInt(y)) 
  . x rem y = intToInteger(integerToInt(x) rem integerToInt(y)) %(rem_INTEGER)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__Plus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="INTEGER_E3" name="intToInteger2"/>
                <OMA>
                  <OMS cd="Nat" name="__Plus__"/>
                  <OMA>
                    <OMS cd="INTEGER_E3" name="integerToInt2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="INTEGER_E3" name="INTEGER3"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="INTEGER_E3" name="integerToInt2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="INTEGER_E3" name="INTEGER3"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="add_INTEGER">
      <use format="Hets">add_INTEGER</use>
    </presentation>
    <axiom name="def_0_INTEGER">
      <CMP>
  . intToInteger(0) = 0                                       %(def_0_INTEGER)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMA>
              <OMS cd="INTEGER_E3" name="intToInteger2"/>
              <OMS cd="Nat" name="N0"/>
            </OMA>
            <OMS cd="Nat" name="N0"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="def_0_INTEGER">
      <use format="Hets">def_0_INTEGER</use>
    </presentation>
    <axiom name="def_1_INTEGER">
      <CMP>
  . intToInteger(1) = 1                                       %(def_1_INTEGER)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMA>
              <OMS cd="INTEGER_E3" name="intToInteger2"/>
              <OMS cd="Nat" name="N1"/>
            </OMA>
            <OMS cd="Nat" name="N1"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="def_1_INTEGER">
      <use format="Hets">def_1_INTEGER</use>
    </presentation>
    <axiom name="div_INTEGER">
      <CMP>
  forall x,y: INTEGER
  . intToInteger(0) = 0                                       %(def_0_INTEGER)%
  . intToInteger(1) = 1                                       %(def_1_INTEGER)%
  . - x = intToInteger( - integerToInt(x) )                   %(minus_INTEGER)%
  . abs(x) = intToInteger( abs( integerToInt(x)) )              %(abs_INTEGER)%
  . x + y = intToInteger(integerToInt(x) + integerToInt(y))     %(add_INTEGER)%
  . x - y = intToInteger(integerToInt(x) - integerToInt(y))     %(sub_INTEGER)%
  . x * y = intToInteger(integerToInt(x) * integerToInt(y))    %(mult_INTEGER)%
  . x / y = intToInteger(integerToInt(x) /? integerToInt(y)) %(divide_INTEGER)%
  . x div y = intToInteger(integerToInt(x) div integerToInt(y)) %(div_INTEGER)%
  . x mod y = intToInteger(integerToInt(x) mod integerToInt(y)) %(mod_INTEGER)%
  . x quot y = intToInteger(integerToInt(x) quot integerToInt(y)) 
  . x rem y = intToInteger(integerToInt(x) rem integerToInt(y)) %(rem_INTEGER)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__div__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="INTEGER_E3" name="intToInteger2"/>
                <OMA>
                  <OMS cd="Nat" name="__div__"/>
                  <OMA>
                    <OMS cd="INTEGER_E3" name="integerToInt2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="INTEGER_E3" name="INTEGER3"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="INTEGER_E3" name="integerToInt2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="INTEGER_E3" name="INTEGER3"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="div_INTEGER">
      <use format="Hets">div_INTEGER</use>
    </presentation>
    <axiom name="divide_INTEGER">
      <CMP>
  forall x,y: INTEGER
  . intToInteger(0) = 0                                       %(def_0_INTEGER)%
  . intToInteger(1) = 1                                       %(def_1_INTEGER)%
  . - x = intToInteger( - integerToInt(x) )                   %(minus_INTEGER)%
  . abs(x) = intToInteger( abs( integerToInt(x)) )              %(abs_INTEGER)%
  . x + y = intToInteger(integerToInt(x) + integerToInt(y))     %(add_INTEGER)%
  . x - y = intToInteger(integerToInt(x) - integerToInt(y))     %(sub_INTEGER)%
  . x * y = intToInteger(integerToInt(x) * integerToInt(y))    %(mult_INTEGER)%
  . x / y = intToInteger(integerToInt(x) /? integerToInt(y)) %(divide_INTEGER)%
  . x div y = intToInteger(integerToInt(x) div integerToInt(y)) %(div_INTEGER)%
  . x mod y = intToInteger(integerToInt(x) mod integerToInt(y)) %(mod_INTEGER)%
  . x quot y = intToInteger(integerToInt(x) quot integerToInt(y)) 
  . x rem y = intToInteger(integerToInt(x) rem integerToInt(y)) %(rem_INTEGER)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="INTEGER_E1" name="__Division__3"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="INTEGER_E3" name="intToInteger2"/>
                <OMA>
                  <OMS cd="Nat" name="__DivisionQuest__"/>
                  <OMA>
                    <OMS cd="INTEGER_E3" name="integerToInt2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="INTEGER_E3" name="INTEGER3"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="INTEGER_E3" name="integerToInt2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="INTEGER_E3" name="INTEGER3"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="divide_INTEGER">
      <use format="Hets">divide_INTEGER</use>
    </presentation>
    <axiom name="maxInteger_INTEGER">
      <CMP>
  . maxInteger=intToInteger(maxInteger)                  %(maxInteger_INTEGER)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMS cd="INTEGER_E1" name="maxInteger3"/>
            <OMA>
              <OMS cd="INTEGER_E3" name="intToInteger2"/>
              <OMS cd="INTEGER_E1" name="maxInteger3"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="maxInteger_INTEGER">
      <use format="Hets">maxInteger_INTEGER</use>
    </presentation>
    <axiom name="maxInteger_Int">
      <CMP>
  . maxInteger= (2 ^ (WordLength-?1))-1                      %(maxInteger_Int)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMS cd="INTEGER_E1" name="maxInteger3"/>
            <OMA>
              <OMS cd="INTEGER_E4" name="__Minus__6"/>
              <OMA>
                <OMS cd="Nat" name="__Power__"/>
                <OMS cd="Nat" name="N2"/>
                <OMA>
                  <OMS cd="Nat" name="__MinusQuest__"/>
                  <OMS cd="INTEGER_P" name="WordLength13"/>
                  <OMS cd="Nat" name="N1"/>
                </OMA>
              </OMA>
              <OMS cd="Nat" name="N1"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="maxInteger_Int">
      <use format="Hets">maxInteger_Int</use>
    </presentation>
    <axiom name="minInteger_INTEGER">
      <CMP>
  . minInteger=intToInteger(minInteger)                  %(minInteger_INTEGER)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMS cd="INTEGER_E1" name="minInteger3"/>
            <OMA>
              <OMS cd="INTEGER_E3" name="intToInteger2"/>
              <OMS cd="INTEGER_E1" name="minInteger3"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="minInteger_INTEGER">
      <use format="Hets">minInteger_INTEGER</use>
    </presentation>
    <axiom name="minInteger_Int">
      <CMP>
  . minInteger= -(2 ^ (WordLength-?1))                       %(minInteger_Int)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMS cd="INTEGER_E1" name="minInteger3"/>
            <OMA>
              <OMS cd="INTEGER_E4" name="Minus__3"/>
              <OMA>
                <OMS cd="Nat" name="__Power__"/>
                <OMS cd="Nat" name="N2"/>
                <OMA>
                  <OMS cd="Nat" name="__MinusQuest__"/>
                  <OMS cd="INTEGER_P" name="WordLength13"/>
                  <OMS cd="Nat" name="N1"/>
                </OMA>
              </OMA>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="minInteger_Int">
      <use format="Hets">minInteger_Int</use>
    </presentation>
    <axiom name="minus_INTEGER">
      <CMP>
  forall x,y: INTEGER
  . intToInteger(0) = 0                                       %(def_0_INTEGER)%
  . intToInteger(1) = 1                                       %(def_1_INTEGER)%
  . - x = intToInteger( - integerToInt(x) )                   %(minus_INTEGER)%
  . abs(x) = intToInteger( abs( integerToInt(x)) )              %(abs_INTEGER)%
  . x + y = intToInteger(integerToInt(x) + integerToInt(y))     %(add_INTEGER)%
  . x - y = intToInteger(integerToInt(x) - integerToInt(y))     %(sub_INTEGER)%
  . x * y = intToInteger(integerToInt(x) * integerToInt(y))    %(mult_INTEGER)%
  . x / y = intToInteger(integerToInt(x) /? integerToInt(y)) %(divide_INTEGER)%
  . x div y = intToInteger(integerToInt(x) div integerToInt(y)) %(div_INTEGER)%
  . x mod y = intToInteger(integerToInt(x) mod integerToInt(y)) %(mod_INTEGER)%
  . x quot y = intToInteger(integerToInt(x) quot integerToInt(y)) 
  . x rem y = intToInteger(integerToInt(x) rem integerToInt(y)) %(rem_INTEGER)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="INTEGER_E4" name="Minus__3"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="INTEGER_E3" name="intToInteger2"/>
                <OMA>
                  <OMS cd="INTEGER_E4" name="Minus__3"/>
                  <OMA>
                    <OMS cd="INTEGER_E3" name="integerToInt2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="INTEGER_E3" name="INTEGER3"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="minus_INTEGER">
      <use format="Hets">minus_INTEGER</use>
    </presentation>
    <axiom name="mod_INTEGER">
      <CMP>
  forall x,y: INTEGER
  . intToInteger(0) = 0                                       %(def_0_INTEGER)%
  . intToInteger(1) = 1                                       %(def_1_INTEGER)%
  . - x = intToInteger( - integerToInt(x) )                   %(minus_INTEGER)%
  . abs(x) = intToInteger( abs( integerToInt(x)) )              %(abs_INTEGER)%
  . x + y = intToInteger(integerToInt(x) + integerToInt(y))     %(add_INTEGER)%
  . x - y = intToInteger(integerToInt(x) - integerToInt(y))     %(sub_INTEGER)%
  . x * y = intToInteger(integerToInt(x) * integerToInt(y))    %(mult_INTEGER)%
  . x / y = intToInteger(integerToInt(x) /? integerToInt(y)) %(divide_INTEGER)%
  . x div y = intToInteger(integerToInt(x) div integerToInt(y)) %(div_INTEGER)%
  . x mod y = intToInteger(integerToInt(x) mod integerToInt(y)) %(mod_INTEGER)%
  . x quot y = intToInteger(integerToInt(x) quot integerToInt(y)) 
  . x rem y = intToInteger(integerToInt(x) rem integerToInt(y)) %(rem_INTEGER)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__mod__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="INTEGER_E3" name="intToInteger2"/>
                <OMA>
                  <OMS cd="Nat" name="__mod__"/>
                  <OMA>
                    <OMS cd="INTEGER_E3" name="integerToInt2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="INTEGER_E3" name="INTEGER3"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="INTEGER_E3" name="integerToInt2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="INTEGER_E3" name="INTEGER3"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="mod_INTEGER">
      <use format="Hets">mod_INTEGER</use>
    </presentation>
    <axiom name="mult_INTEGER">
      <CMP>
  forall x,y: INTEGER
  . intToInteger(0) = 0                                       %(def_0_INTEGER)%
  . intToInteger(1) = 1                                       %(def_1_INTEGER)%
  . - x = intToInteger( - integerToInt(x) )                   %(minus_INTEGER)%
  . abs(x) = intToInteger( abs( integerToInt(x)) )              %(abs_INTEGER)%
  . x + y = intToInteger(integerToInt(x) + integerToInt(y))     %(add_INTEGER)%
  . x - y = intToInteger(integerToInt(x) - integerToInt(y))     %(sub_INTEGER)%
  . x * y = intToInteger(integerToInt(x) * integerToInt(y))    %(mult_INTEGER)%
  . x / y = intToInteger(integerToInt(x) /? integerToInt(y)) %(divide_INTEGER)%
  . x div y = intToInteger(integerToInt(x) div integerToInt(y)) %(div_INTEGER)%
  . x mod y = intToInteger(integerToInt(x) mod integerToInt(y)) %(mod_INTEGER)%
  . x quot y = intToInteger(integerToInt(x) quot integerToInt(y)) 
  . x rem y = intToInteger(integerToInt(x) rem integerToInt(y)) %(rem_INTEGER)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__Ast__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="INTEGER_E3" name="intToInteger2"/>
                <OMA>
                  <OMS cd="Nat" name="__Ast__"/>
                  <OMA>
                    <OMS cd="INTEGER_E3" name="integerToInt2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="INTEGER_E3" name="INTEGER3"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="INTEGER_E3" name="integerToInt2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="INTEGER_E3" name="INTEGER3"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="mult_INTEGER">
      <use format="Hets">mult_INTEGER</use>
    </presentation>
    <axiom name="quot_INTEGER">
      <CMP>
  forall x,y: INTEGER
  . intToInteger(0) = 0                                       %(def_0_INTEGER)%
  . intToInteger(1) = 1                                       %(def_1_INTEGER)%
  . - x = intToInteger( - integerToInt(x) )                   %(minus_INTEGER)%
  . abs(x) = intToInteger( abs( integerToInt(x)) )              %(abs_INTEGER)%
  . x + y = intToInteger(integerToInt(x) + integerToInt(y))     %(add_INTEGER)%
  . x - y = intToInteger(integerToInt(x) - integerToInt(y))     %(sub_INTEGER)%
  . x * y = intToInteger(integerToInt(x) * integerToInt(y))    %(mult_INTEGER)%
  . x / y = intToInteger(integerToInt(x) /? integerToInt(y)) %(divide_INTEGER)%
  . x div y = intToInteger(integerToInt(x) div integerToInt(y)) %(div_INTEGER)%
  . x mod y = intToInteger(integerToInt(x) mod integerToInt(y)) %(mod_INTEGER)%
  . x quot y = intToInteger(integerToInt(x) quot integerToInt(y)) 
  . x rem y = intToInteger(integerToInt(x) rem integerToInt(y)) %(rem_INTEGER)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="INTEGER_E4" name="__quot__3"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="INTEGER_E3" name="intToInteger2"/>
                <OMA>
                  <OMS cd="INTEGER_E4" name="__quot__3"/>
                  <OMA>
                    <OMS cd="INTEGER_E3" name="integerToInt2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="INTEGER_E3" name="INTEGER3"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="INTEGER_E3" name="integerToInt2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="INTEGER_E3" name="INTEGER3"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="quot_INTEGER">
      <use format="Hets">quot_INTEGER</use>
    </presentation>
    <axiom name="rem_INTEGER">
      <CMP>
  forall x,y: INTEGER
  . intToInteger(0) = 0                                       %(def_0_INTEGER)%
  . intToInteger(1) = 1                                       %(def_1_INTEGER)%
  . - x = intToInteger( - integerToInt(x) )                   %(minus_INTEGER)%
  . abs(x) = intToInteger( abs( integerToInt(x)) )              %(abs_INTEGER)%
  . x + y = intToInteger(integerToInt(x) + integerToInt(y))     %(add_INTEGER)%
  . x - y = intToInteger(integerToInt(x) - integerToInt(y))     %(sub_INTEGER)%
  . x * y = intToInteger(integerToInt(x) * integerToInt(y))    %(mult_INTEGER)%
  . x / y = intToInteger(integerToInt(x) /? integerToInt(y)) %(divide_INTEGER)%
  . x div y = intToInteger(integerToInt(x) div integerToInt(y)) %(div_INTEGER)%
  . x mod y = intToInteger(integerToInt(x) mod integerToInt(y)) %(mod_INTEGER)%
  . x quot y = intToInteger(integerToInt(x) quot integerToInt(y)) 
  . x rem y = intToInteger(integerToInt(x) rem integerToInt(y)) %(rem_INTEGER)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="INTEGER_E4" name="__rem__3"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="INTEGER_E3" name="intToInteger2"/>
                <OMA>
                  <OMS cd="INTEGER_E4" name="__rem__3"/>
                  <OMA>
                    <OMS cd="INTEGER_E3" name="integerToInt2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="INTEGER_E3" name="INTEGER3"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="INTEGER_E3" name="integerToInt2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="INTEGER_E3" name="INTEGER3"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="rem_INTEGER">
      <use format="Hets">rem_INTEGER</use>
    </presentation>
    <axiom name="sub_INTEGER">
      <CMP>
  forall x,y: INTEGER
  . intToInteger(0) = 0                                       %(def_0_INTEGER)%
  . intToInteger(1) = 1                                       %(def_1_INTEGER)%
  . - x = intToInteger( - integerToInt(x) )                   %(minus_INTEGER)%
  . abs(x) = intToInteger( abs( integerToInt(x)) )              %(abs_INTEGER)%
  . x + y = intToInteger(integerToInt(x) + integerToInt(y))     %(add_INTEGER)%
  . x - y = intToInteger(integerToInt(x) - integerToInt(y))     %(sub_INTEGER)%
  . x * y = intToInteger(integerToInt(x) * integerToInt(y))    %(mult_INTEGER)%
  . x / y = intToInteger(integerToInt(x) /? integerToInt(y)) %(divide_INTEGER)%
  . x div y = intToInteger(integerToInt(x) div integerToInt(y)) %(div_INTEGER)%
  . x mod y = intToInteger(integerToInt(x) mod integerToInt(y)) %(mod_INTEGER)%
  . x quot y = intToInteger(integerToInt(x) quot integerToInt(y)) 
  . x rem y = intToInteger(integerToInt(x) rem integerToInt(y)) %(rem_INTEGER)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="INTEGER_E4" name="__Minus__6"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="INTEGER_E3" name="intToInteger2"/>
                <OMA>
                  <OMS cd="INTEGER_E4" name="__Minus__6"/>
                  <OMA>
                    <OMS cd="INTEGER_E3" name="integerToInt2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="INTEGER_E3" name="INTEGER3"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="INTEGER_E3" name="integerToInt2"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="INTEGER_E3" name="INTEGER3"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="sub_INTEGER">
      <use format="Hets">sub_INTEGER</use>
    </presentation>
  </theory>
  <private for="INTEGER_E1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"INTEGER" Type:"GlobalThm Open None Open" Origin:"DGExtension"
From:"INTEGER_E2" Type:"GlobalDef" Origin:"DGExtension"
From:"INTEGER_E2" Type:"GlobalThm Open Def Open" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="INTEGER">
    <presentation for="INTEGER">
      <use format="Hets">[INTEGER,,0]</use>
    </presentation>
    <imports from="#INTEGER_E1"/>
    <axiom name="abs_INTEGER_dom">
      <CMP>
  forall x,y:INTEGER
  . def - x &#60;=&#62; minInteger + 1 &#60;= integerToInt(x)         %(minus_INTEGER_dom)%
  . def abs(x) &#60;=&#62; minInteger + 1 &#60;= integerToInt(x)        %(abs_INTEGER_dom)%
  . def x + y &#60;=&#62; minInteger &#60;= integerToInt(x) + integerToInt(y) /\
  . def x - y &#60;=&#62; minInteger &#60;= integerToInt(x) - integerToInt(y) /\
  . def x * y &#60;=&#62; minInteger &#60;= integerToInt(x) * integerToInt(y) /\
  . def x / y &#60;=&#62; def intToInteger(integerToInt(x)/?integerToInt(y))   
  . def x div y &#60;=&#62; not y=0                                 %(div_INTEGER_dom)%
  . def x mod y &#60;=&#62; not y=0                                 %(mod_INTEGER_dom)%
  . def x quot y &#60;=&#62; not y=0                               %(quot_INTEGER_dom)%
  . def x rem y &#60;=&#62; not y=0                                 %(rem_INTEGER_dom)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="INTEGER_E4" name="abs3"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat" name="__LowerEquals__1"/>
                <OMA>
                  <OMS cd="Nat" name="__Plus__"/>
                  <OMS cd="INTEGER_E1" name="minInteger3"/>
                  <OMS cd="Nat" name="N1"/>
                </OMA>
                <OMA>
                  <OMS cd="INTEGER_E3" name="integerToInt2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="abs_INTEGER_dom">
      <use format="Hets">abs_INTEGER_dom</use>
    </presentation>
    <axiom name="add_INTEGER_dom">
      <CMP>
  forall x,y:INTEGER
  . def - x &#60;=&#62; minInteger + 1 &#60;= integerToInt(x)         %(minus_INTEGER_dom)%
  . def abs(x) &#60;=&#62; minInteger + 1 &#60;= integerToInt(x)        %(abs_INTEGER_dom)%
  . def x + y &#60;=&#62; minInteger &#60;= integerToInt(x) + integerToInt(y) /\
  . def x - y &#60;=&#62; minInteger &#60;= integerToInt(x) - integerToInt(y) /\
  . def x * y &#60;=&#62; minInteger &#60;= integerToInt(x) * integerToInt(y) /\
  . def x / y &#60;=&#62; def intToInteger(integerToInt(x)/?integerToInt(y))   
  . def x div y &#60;=&#62; not y=0                                 %(div_INTEGER_dom)%
  . def x mod y &#60;=&#62; not y=0                                 %(mod_INTEGER_dom)%
  . def x quot y &#60;=&#62; not y=0                               %(quot_INTEGER_dom)%
  . def x rem y &#60;=&#62; not y=0                                 %(rem_INTEGER_dom)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="Nat" name="__Plus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Nat" name="__LowerEquals__1"/>
                  <OMS cd="INTEGER_E1" name="minInteger3"/>
                  <OMA>
                    <OMS cd="Nat" name="__Plus__"/>
                    <OMA>
                      <OMS cd="INTEGER_E3" name="integerToInt2"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="INTEGER_E3" name="INTEGER3"/>
                        </OMATP>
                        <OMV name="x"/>
                      </OMATTR>
                    </OMA>
                    <OMA>
                      <OMS cd="INTEGER_E3" name="integerToInt2"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="INTEGER_E3" name="INTEGER3"/>
                        </OMATP>
                        <OMV name="y"/>
                      </OMATTR>
                    </OMA>
                  </OMA>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Nat" name="__LowerEquals__1"/>
                  <OMA>
                    <OMS cd="Nat" name="__Plus__"/>
                    <OMA>
                      <OMS cd="INTEGER_E3" name="integerToInt2"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="INTEGER_E3" name="INTEGER3"/>
                        </OMATP>
                        <OMV name="x"/>
                      </OMATTR>
                    </OMA>
                    <OMA>
                      <OMS cd="INTEGER_E3" name="integerToInt2"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="INTEGER_E3" name="INTEGER3"/>
                        </OMATP>
                        <OMV name="y"/>
                      </OMATTR>
                    </OMA>
                  </OMA>
                  <OMS cd="INTEGER_E1" name="maxInteger3"/>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="add_INTEGER_dom">
      <use format="Hets">add_INTEGER_dom</use>
    </presentation>
    <axiom name="div_INTEGER_dom">
      <CMP>
  forall x,y:INTEGER
  . def - x &#60;=&#62; minInteger + 1 &#60;= integerToInt(x)         %(minus_INTEGER_dom)%
  . def abs(x) &#60;=&#62; minInteger + 1 &#60;= integerToInt(x)        %(abs_INTEGER_dom)%
  . def x + y &#60;=&#62; minInteger &#60;= integerToInt(x) + integerToInt(y) /\
  . def x - y &#60;=&#62; minInteger &#60;= integerToInt(x) - integerToInt(y) /\
  . def x * y &#60;=&#62; minInteger &#60;= integerToInt(x) * integerToInt(y) /\
  . def x / y &#60;=&#62; def intToInteger(integerToInt(x)/?integerToInt(y))   
  . def x div y &#60;=&#62; not y=0                                 %(div_INTEGER_dom)%
  . def x mod y &#60;=&#62; not y=0                                 %(mod_INTEGER_dom)%
  . def x quot y &#60;=&#62; not y=0                               %(quot_INTEGER_dom)%
  . def x rem y &#60;=&#62; not y=0                                 %(rem_INTEGER_dom)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="Nat" name="__div__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMS cd="Nat" name="N0"/>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="div_INTEGER_dom">
      <use format="Hets">div_INTEGER_dom</use>
    </presentation>
    <axiom name="divide_INTEGER_dom">
      <CMP>
  forall x,y:INTEGER
  . def - x &#60;=&#62; minInteger + 1 &#60;= integerToInt(x)         %(minus_INTEGER_dom)%
  . def abs(x) &#60;=&#62; minInteger + 1 &#60;= integerToInt(x)        %(abs_INTEGER_dom)%
  . def x + y &#60;=&#62; minInteger &#60;= integerToInt(x) + integerToInt(y) /\
  . def x - y &#60;=&#62; minInteger &#60;= integerToInt(x) - integerToInt(y) /\
  . def x * y &#60;=&#62; minInteger &#60;= integerToInt(x) * integerToInt(y) /\
  . def x / y &#60;=&#62; def intToInteger(integerToInt(x)/?integerToInt(y))   
  . def x div y &#60;=&#62; not y=0                                 %(div_INTEGER_dom)%
  . def x mod y &#60;=&#62; not y=0                                 %(mod_INTEGER_dom)%
  . def x quot y &#60;=&#62; not y=0                               %(quot_INTEGER_dom)%
  . def x rem y &#60;=&#62; not y=0                                 %(rem_INTEGER_dom)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="INTEGER_E1" name="__Division__3"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="INTEGER_E3" name="intToInteger2"/>
                  <OMA>
                    <OMS cd="Nat" name="__DivisionQuest__"/>
                    <OMA>
                      <OMS cd="INTEGER_E3" name="integerToInt2"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="INTEGER_E3" name="INTEGER3"/>
                        </OMATP>
                        <OMV name="x"/>
                      </OMATTR>
                    </OMA>
                    <OMA>
                      <OMS cd="INTEGER_E3" name="integerToInt2"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="INTEGER_E3" name="INTEGER3"/>
                        </OMATP>
                        <OMV name="y"/>
                      </OMATTR>
                    </OMA>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="divide_INTEGER_dom">
      <use format="Hets">divide_INTEGER_dom</use>
    </presentation>
    <axiom name="ga_assoc___Ast__1">
      <CMP>
      __ * __: INTEGER * INTEGER -&#62;? INTEGER,
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="z"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__Ast__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="z"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat" name="__Ast__"/>
                <OMA>
                  <OMS cd="Nat" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="z"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_assoc___Ast__1">
      <use format="Hets">ga_assoc___*__</use>
    </presentation>
    <axiom name="ga_assoc___Plus__1">
      <CMP>
  ops __ + __: INTEGER * INTEGER -&#62;? INTEGER,
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="z"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__Plus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat" name="__Plus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="z"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat" name="__Plus__"/>
                <OMA>
                  <OMS cd="Nat" name="__Plus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="z"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_assoc___Plus__1">
      <use format="Hets">ga_assoc___+__</use>
    </presentation>
    <axiom name="ga_comm___Ast__1">
      <CMP>
      __ * __: INTEGER * INTEGER -&#62;? INTEGER,
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__Ast__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat" name="__Ast__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_comm___Ast__1">
      <use format="Hets">ga_comm___*__</use>
    </presentation>
    <axiom name="ga_comm___Plus__1">
      <CMP>
  ops __ + __: INTEGER * INTEGER -&#62;? INTEGER,
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__Plus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat" name="__Plus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_comm___Plus__1">
      <use format="Hets">ga_comm___+__</use>
    </presentation>
    <axiom name="ga_left_unit___Ast__1">
      <CMP>
      __ * __: INTEGER * INTEGER -&#62;? INTEGER,
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__Ast__"/>
                <OMS cd="Nat" name="N1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_left_unit___Ast__1">
      <use format="Hets">ga_left_unit___*__</use>
    </presentation>
    <axiom name="ga_left_unit___Plus__1">
      <CMP>
  ops __ + __: INTEGER * INTEGER -&#62;? INTEGER,
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__Plus__"/>
                <OMS cd="Nat" name="N0"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_left_unit___Plus__1">
      <use format="Hets">ga_left_unit___+__</use>
    </presentation>
    <axiom name="ga_right_unit___Ast__1">
      <CMP>
      __ * __: INTEGER * INTEGER -&#62;? INTEGER,
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__Ast__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMS cd="Nat" name="N1"/>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_right_unit___Ast__1">
      <use format="Hets">ga_right_unit___*__</use>
    </presentation>
    <axiom name="ga_right_unit___Plus__1">
      <CMP>
  ops __ + __: INTEGER * INTEGER -&#62;? INTEGER,
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__Plus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="INTEGER_E3" name="INTEGER3"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMS cd="Nat" name="N0"/>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_right_unit___Plus__1">
      <use format="Hets">ga_right_unit___+__</use>
    </presentation>
    <axiom name="minus_INTEGER_dom">
      <CMP>
  forall x,y:INTEGER
  . def - x &#60;=&#62; minInteger + 1 &#60;= integerToInt(x)         %(minus_INTEGER_dom)%
  . def abs(x) &#60;=&#62; minInteger + 1 &#60;= integerToInt(x)        %(abs_INTEGER_dom)%
  . def x + y &#60;=&#62; minInteger &#60;= integerToInt(x) + integerToInt(y) /\
  . def x - y &#60;=&#62; minInteger &#60;= integerToInt(x) - integerToInt(y) /\
  . def x * y &#60;=&#62; minInteger &#60;= integerToInt(x) * integerToInt(y) /\
  . def x / y &#60;=&#62; def intToInteger(integerToInt(x)/?integerToInt(y))   
  . def x div y &#60;=&#62; not y=0                                 %(div_INTEGER_dom)%
  . def x mod y &#60;=&#62; not y=0                                 %(mod_INTEGER_dom)%
  . def x quot y &#60;=&#62; not y=0                               %(quot_INTEGER_dom)%
  . def x rem y &#60;=&#62; not y=0                                 %(rem_INTEGER_dom)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="INTEGER_E4" name="Minus__3"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat" name="__LowerEquals__1"/>
                <OMA>
                  <OMS cd="Nat" name="__Plus__"/>
                  <OMS cd="INTEGER_E1" name="minInteger3"/>
                  <OMS cd="Nat" name="N1"/>
                </OMA>
                <OMA>
                  <OMS cd="INTEGER_E3" name="integerToInt2"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="minus_INTEGER_dom">
      <use format="Hets">minus_INTEGER_dom</use>
    </presentation>
    <axiom name="mod_INTEGER_dom">
      <CMP>
  forall x,y:INTEGER
  . def - x &#60;=&#62; minInteger + 1 &#60;= integerToInt(x)         %(minus_INTEGER_dom)%
  . def abs(x) &#60;=&#62; minInteger + 1 &#60;= integerToInt(x)        %(abs_INTEGER_dom)%
  . def x + y &#60;=&#62; minInteger &#60;= integerToInt(x) + integerToInt(y) /\
  . def x - y &#60;=&#62; minInteger &#60;= integerToInt(x) - integerToInt(y) /\
  . def x * y &#60;=&#62; minInteger &#60;= integerToInt(x) * integerToInt(y) /\
  . def x / y &#60;=&#62; def intToInteger(integerToInt(x)/?integerToInt(y))   
  . def x div y &#60;=&#62; not y=0                                 %(div_INTEGER_dom)%
  . def x mod y &#60;=&#62; not y=0                                 %(mod_INTEGER_dom)%
  . def x quot y &#60;=&#62; not y=0                               %(quot_INTEGER_dom)%
  . def x rem y &#60;=&#62; not y=0                                 %(rem_INTEGER_dom)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="Nat" name="__mod__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMS cd="Nat" name="N0"/>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="mod_INTEGER_dom">
      <use format="Hets">mod_INTEGER_dom</use>
    </presentation>
    <axiom name="mult_INTEGER_dom">
      <CMP>
  forall x,y:INTEGER
  . def - x &#60;=&#62; minInteger + 1 &#60;= integerToInt(x)         %(minus_INTEGER_dom)%
  . def abs(x) &#60;=&#62; minInteger + 1 &#60;= integerToInt(x)        %(abs_INTEGER_dom)%
  . def x + y &#60;=&#62; minInteger &#60;= integerToInt(x) + integerToInt(y) /\
  . def x - y &#60;=&#62; minInteger &#60;= integerToInt(x) - integerToInt(y) /\
  . def x * y &#60;=&#62; minInteger &#60;= integerToInt(x) * integerToInt(y) /\
  . def x / y &#60;=&#62; def intToInteger(integerToInt(x)/?integerToInt(y))   
  . def x div y &#60;=&#62; not y=0                                 %(div_INTEGER_dom)%
  . def x mod y &#60;=&#62; not y=0                                 %(mod_INTEGER_dom)%
  . def x quot y &#60;=&#62; not y=0                               %(quot_INTEGER_dom)%
  . def x rem y &#60;=&#62; not y=0                                 %(rem_INTEGER_dom)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="Nat" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Nat" name="__LowerEquals__1"/>
                  <OMS cd="INTEGER_E1" name="minInteger3"/>
                  <OMA>
                    <OMS cd="Nat" name="__Ast__"/>
                    <OMA>
                      <OMS cd="INTEGER_E3" name="integerToInt2"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="INTEGER_E3" name="INTEGER3"/>
                        </OMATP>
                        <OMV name="x"/>
                      </OMATTR>
                    </OMA>
                    <OMA>
                      <OMS cd="INTEGER_E3" name="integerToInt2"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="INTEGER_E3" name="INTEGER3"/>
                        </OMATP>
                        <OMV name="y"/>
                      </OMATTR>
                    </OMA>
                  </OMA>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Nat" name="__LowerEquals__1"/>
                  <OMA>
                    <OMS cd="Nat" name="__Ast__"/>
                    <OMA>
                      <OMS cd="INTEGER_E3" name="integerToInt2"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="INTEGER_E3" name="INTEGER3"/>
                        </OMATP>
                        <OMV name="x"/>
                      </OMATTR>
                    </OMA>
                    <OMA>
                      <OMS cd="INTEGER_E3" name="integerToInt2"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="INTEGER_E3" name="INTEGER3"/>
                        </OMATP>
                        <OMV name="y"/>
                      </OMATTR>
                    </OMA>
                  </OMA>
                  <OMS cd="INTEGER_E1" name="maxInteger3"/>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="mult_INTEGER_dom">
      <use format="Hets">mult_INTEGER_dom</use>
    </presentation>
    <axiom name="quot_INTEGER_dom">
      <CMP>
  forall x,y:INTEGER
  . def - x &#60;=&#62; minInteger + 1 &#60;= integerToInt(x)         %(minus_INTEGER_dom)%
  . def abs(x) &#60;=&#62; minInteger + 1 &#60;= integerToInt(x)        %(abs_INTEGER_dom)%
  . def x + y &#60;=&#62; minInteger &#60;= integerToInt(x) + integerToInt(y) /\
  . def x - y &#60;=&#62; minInteger &#60;= integerToInt(x) - integerToInt(y) /\
  . def x * y &#60;=&#62; minInteger &#60;= integerToInt(x) * integerToInt(y) /\
  . def x / y &#60;=&#62; def intToInteger(integerToInt(x)/?integerToInt(y))   
  . def x div y &#60;=&#62; not y=0                                 %(div_INTEGER_dom)%
  . def x mod y &#60;=&#62; not y=0                                 %(mod_INTEGER_dom)%
  . def x quot y &#60;=&#62; not y=0                               %(quot_INTEGER_dom)%
  . def x rem y &#60;=&#62; not y=0                                 %(rem_INTEGER_dom)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="INTEGER_E4" name="__quot__3"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMS cd="Nat" name="N0"/>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="quot_INTEGER_dom">
      <use format="Hets">quot_INTEGER_dom</use>
    </presentation>
    <axiom name="rem_INTEGER_dom">
      <CMP>
  forall x,y:INTEGER
  . def - x &#60;=&#62; minInteger + 1 &#60;= integerToInt(x)         %(minus_INTEGER_dom)%
  . def abs(x) &#60;=&#62; minInteger + 1 &#60;= integerToInt(x)        %(abs_INTEGER_dom)%
  . def x + y &#60;=&#62; minInteger &#60;= integerToInt(x) + integerToInt(y) /\
  . def x - y &#60;=&#62; minInteger &#60;= integerToInt(x) - integerToInt(y) /\
  . def x * y &#60;=&#62; minInteger &#60;= integerToInt(x) * integerToInt(y) /\
  . def x / y &#60;=&#62; def intToInteger(integerToInt(x)/?integerToInt(y))   
  . def x div y &#60;=&#62; not y=0                                 %(div_INTEGER_dom)%
  . def x mod y &#60;=&#62; not y=0                                 %(mod_INTEGER_dom)%
  . def x quot y &#60;=&#62; not y=0                               %(quot_INTEGER_dom)%
  . def x rem y &#60;=&#62; not y=0                                 %(rem_INTEGER_dom)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="INTEGER_E4" name="__rem__3"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMS cd="Nat" name="N0"/>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="rem_INTEGER_dom">
      <use format="Hets">rem_INTEGER_dom</use>
    </presentation>
    <axiom name="sub_INTEGER_dom">
      <CMP>
  forall x,y:INTEGER
  . def - x &#60;=&#62; minInteger + 1 &#60;= integerToInt(x)         %(minus_INTEGER_dom)%
  . def abs(x) &#60;=&#62; minInteger + 1 &#60;= integerToInt(x)        %(abs_INTEGER_dom)%
  . def x + y &#60;=&#62; minInteger &#60;= integerToInt(x) + integerToInt(y) /\
  . def x - y &#60;=&#62; minInteger &#60;= integerToInt(x) - integerToInt(y) /\
  . def x * y &#60;=&#62; minInteger &#60;= integerToInt(x) * integerToInt(y) /\
  . def x / y &#60;=&#62; def intToInteger(integerToInt(x)/?integerToInt(y))   
  . def x div y &#60;=&#62; not y=0                                 %(div_INTEGER_dom)%
  . def x mod y &#60;=&#62; not y=0                                 %(mod_INTEGER_dom)%
  . def x quot y &#60;=&#62; not y=0                               %(quot_INTEGER_dom)%
  . def x rem y &#60;=&#62; not y=0                                 %(rem_INTEGER_dom)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="INTEGER_E3" name="INTEGER3"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="INTEGER_E4" name="__Minus__6"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="INTEGER_E3" name="INTEGER3"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Nat" name="__LowerEquals__1"/>
                  <OMS cd="INTEGER_E1" name="minInteger3"/>
                  <OMA>
                    <OMS cd="INTEGER_E4" name="__Minus__6"/>
                    <OMA>
                      <OMS cd="INTEGER_E3" name="integerToInt2"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="INTEGER_E3" name="INTEGER3"/>
                        </OMATP>
                        <OMV name="x"/>
                      </OMATTR>
                    </OMA>
                    <OMA>
                      <OMS cd="INTEGER_E3" name="integerToInt2"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="INTEGER_E3" name="INTEGER3"/>
                        </OMATP>
                        <OMV name="y"/>
                      </OMATTR>
                    </OMA>
                  </OMA>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Nat" name="__LowerEquals__1"/>
                  <OMA>
                    <OMS cd="INTEGER_E4" name="__Minus__6"/>
                    <OMA>
                      <OMS cd="INTEGER_E3" name="integerToInt2"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="INTEGER_E3" name="INTEGER3"/>
                        </OMATP>
                        <OMV name="x"/>
                      </OMATTR>
                    </OMA>
                    <OMA>
                      <OMS cd="INTEGER_E3" name="integerToInt2"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="INTEGER_E3" name="INTEGER3"/>
                        </OMATP>
                        <OMV name="y"/>
                      </OMATTR>
                    </OMA>
                  </OMA>
                  <OMS cd="INTEGER_E1" name="maxInteger3"/>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="sub_INTEGER_dom">
      <use format="Hets">sub_INTEGER_dom</use>
    </presentation>
  </theory>
  <private for="INTEGER">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"INTEGER_E1" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="TwoComplement_PI">
    <presentation for="TwoComplement_PI">
      <use format="Hets">[TwoComplement,PI,0]</use>
    </presentation>
    <imports from="Basic/Numbers.omdoc#Nat"/>
  </theory>
  <private for="TwoComplement_PI">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="TwoComplement_P">
    <presentation for="TwoComplement_P">
      <use format="Hets">[TwoComplement,P,0]</use>
    </presentation>
    <imports from="#TwoComplement_PI"/>
    <symbol name="WordLength17" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="WordLength17">
      <use format="Hets">[WordLength]</use>
    </presentation>
  </theory>
  <private for="TwoComplement_P">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"TwoComplement_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="TwoComplement_E3">
    <presentation for="TwoComplement_E3">
      <use format="Hets">[TwoComplement,E,3]</use>
    </presentation>
    <imports from="Basic/Numbers.omdoc#Int"/>
    <imports from="#TwoComplement_P"/>
    <symbol role="sort" name="Int6"/>
    <presentation for="Int6">
      <use format="Hets">[Int]</use>
    </presentation>
    <adt>
      <sortdef name="Int6" type="free">
        <insort for="#Nat1"/>
        <insort for="#Pos"/>
      </sortdef>
    </adt>
    <symbol name="Minus__5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TwoComplement_E3" name="Int6"/>
            <OMS cd="TwoComplement_E3" name="Int6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="Minus__5">
      <use format="Hets">[-,__]</use>
    </presentation>
    <symbol name="__Minus__8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TwoComplement_E3" name="Int6"/>
            <OMS cd="TwoComplement_E3" name="Int6"/>
            <OMS cd="TwoComplement_E3" name="Int6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__8">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__Minus__8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat" name="Nat1"/>
            <OMS cd="Nat" name="Nat1"/>
            <OMS cd="TwoComplement_E3" name="Int6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__8">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__quot__5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="TwoComplement_E3" name="Int6"/>
            <OMS cd="TwoComplement_E3" name="Int6"/>
            <OMS cd="TwoComplement_E3" name="Int6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__quot__5">
      <use format="Hets">[__,quot,__]</use>
    </presentation>
    <symbol name="__rem__5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="TwoComplement_E3" name="Int6"/>
            <OMS cd="TwoComplement_E3" name="Int6"/>
            <OMS cd="TwoComplement_E3" name="Int6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__rem__5">
      <use format="Hets">[__,rem,__]</use>
    </presentation>
    <symbol name="abs5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TwoComplement_E3" name="Int6"/>
            <OMS cd="Nat" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="abs5">
      <use format="Hets">[abs]</use>
    </presentation>
    <symbol name="sign5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TwoComplement_E3" name="Int6"/>
            <OMS cd="TwoComplement_E3" name="Int6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="sign5">
      <use format="Hets">[sign]</use>
    </presentation>
  </theory>
  <private for="TwoComplement_E3">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"TwoComplement_P" Type:"GlobalDef" Origin:"DGSpecInst Int"
From:"Int" Type:"GlobalDef" Origin:"DGSpecInst Int"
]]></data>
  </private>
  <theory xml:id="TwoComplement_E2">
    <presentation for="TwoComplement_E2">
      <use format="Hets">[TwoComplement,E,2]</use>
    </presentation>
    <imports from="#TwoComplement_E3"/>
    <symbol role="sort" name="TwoComplement2"/>
    <presentation for="TwoComplement2">
      <use format="Hets">[TwoComplement]</use>
    </presentation>
    <symbol name="TCtoInt1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
            <OMS cd="TwoComplement_E3" name="Int6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="TCtoInt1">
      <use format="Hets">[TCtoInt]</use>
    </presentation>
    <symbol name="intToTC1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TwoComplement_E3" name="Int6"/>
            <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="intToTC1">
      <use format="Hets">[intToTC]</use>
    </presentation>
    <symbol name="maxInteger4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TwoComplement_E3" name="Int6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="maxInteger4">
      <use format="Hets">[maxInteger]</use>
    </presentation>
    <symbol name="minInteger4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TwoComplement_E3" name="Int6"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="minInteger4">
      <use format="Hets">[minInteger]</use>
    </presentation>
    <axiom name="Ax6">
      <CMP>
  forall x,y:Int; i:TwoComplement
  forall x,y:Int; i:TwoComplement
  . intToTC(x) = intToTC(x+ 2^WordLength)               %(cycle_max)%
  . intToTC(x) = intToTC(y) =&#62; x-y mod 2^WordLength = 0 %(cycle_min)%
  . TCtoInt(intToTC(x)) = x if minInteger&#60;=x /\ x&#60;=maxInteger
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TwoComplement_E3" name="Int6"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Nat" name="__LowerEquals__1"/>
                  <OMS cd="TwoComplement_E2" name="minInteger4"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="TwoComplement_E3" name="Int6"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Nat" name="__LowerEquals__1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="TwoComplement_E3" name="Int6"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMS cd="TwoComplement_E2" name="maxInteger4"/>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="TwoComplement_E2" name="TCtoInt1"/>
                  <OMA>
                    <OMS cd="TwoComplement_E2" name="intToTC1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="TwoComplement_E3" name="Int6"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TwoComplement_E3" name="Int6"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMS cd="casl" name="false"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Ax6">
      <use format="Hets">Ax6</use>
    </presentation>
    <axiom name="cycle_max">
      <CMP>
  forall x,y:Int; i:TwoComplement
  forall x,y:Int; i:TwoComplement
  . intToTC(x) = intToTC(x+ 2^WordLength)               %(cycle_max)%
  . intToTC(x) = intToTC(y) =&#62; x-y mod 2^WordLength = 0 %(cycle_min)%
  . TCtoInt(intToTC(x)) = x if minInteger&#60;=x /\ x&#60;=maxInteger
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TwoComplement_E3" name="Int6"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="TwoComplement_E2" name="intToTC1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TwoComplement_E3" name="Int6"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="TwoComplement_E2" name="intToTC1"/>
                <OMA>
                  <OMS cd="Nat" name="__Plus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="TwoComplement_E3" name="Int6"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMA>
                    <OMS cd="Nat" name="__Power__"/>
                    <OMS cd="Nat" name="N2"/>
                    <OMS cd="TwoComplement_P" name="WordLength17"/>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="cycle_max">
      <use format="Hets">cycle_max</use>
    </presentation>
    <axiom name="cycle_min">
      <CMP>
  forall x,y:Int; i:TwoComplement
  forall x,y:Int; i:TwoComplement
  . intToTC(x) = intToTC(x+ 2^WordLength)               %(cycle_max)%
  . intToTC(x) = intToTC(y) =&#62; x-y mod 2^WordLength = 0 %(cycle_min)%
  . TCtoInt(intToTC(x)) = x if minInteger&#60;=x /\ x&#60;=maxInteger
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TwoComplement_E3" name="Int6"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TwoComplement_E3" name="Int6"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="TwoComplement_E2" name="intToTC1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="TwoComplement_E3" name="Int6"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="TwoComplement_E2" name="intToTC1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="TwoComplement_E3" name="Int6"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="TwoComplement_E3" name="__Minus__8"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="TwoComplement_E3" name="Int6"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMA>
                    <OMS cd="Nat" name="__mod__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="TwoComplement_E3" name="Int6"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                    <OMA>
                      <OMS cd="Nat" name="__Power__"/>
                      <OMS cd="Nat" name="N2"/>
                      <OMS cd="TwoComplement_P" name="WordLength17"/>
                    </OMA>
                  </OMA>
                </OMA>
                <OMS cd="Nat" name="N0"/>
              </OMA>
              <OMS cd="casl" name="true"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="cycle_min">
      <use format="Hets">cycle_min</use>
    </presentation>
    <axiom name="ga_generated_TwoComplement">
      <CMP/>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="sort-gen-ax"/>
            <OMBIND>
              <OMS cd="casl" name="TwoComplement"/>
              <OMBVAR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="constraint-indices"/>
                    <OMSTR>-1|</OMSTR>
                  </OMATP>
                  <OMS cd="TwoComplement_E2" name="intToTC1"/>
                </OMATTR>
              </OMBVAR>
              <OMS cd="casl" name="TwoComplement"/>
            </OMBIND>
            <OMS cd="casl" name="false"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_generated_TwoComplement">
      <use format="Hets">ga_generated_TwoComplement</use>
    </presentation>
    <axiom name="maxInteger_Int1">
      <CMP>
  . maxInteger= (2 ^ (WordLength-?1))-1            %(maxInteger_Int)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMS cd="TwoComplement_E2" name="maxInteger4"/>
            <OMA>
              <OMS cd="TwoComplement_E3" name="__Minus__8"/>
              <OMA>
                <OMS cd="Nat" name="__Power__"/>
                <OMS cd="Nat" name="N2"/>
                <OMA>
                  <OMS cd="Nat" name="__MinusQuest__"/>
                  <OMS cd="TwoComplement_P" name="WordLength17"/>
                  <OMS cd="Nat" name="N1"/>
                </OMA>
              </OMA>
              <OMS cd="Nat" name="N1"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="maxInteger_Int1">
      <use format="Hets">maxInteger_Int</use>
    </presentation>
    <axiom name="minInteger_Int1">
      <CMP>
  . minInteger= -(2 ^ (WordLength-?1))             %(minInteger_Int)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMS cd="TwoComplement_E2" name="minInteger4"/>
            <OMA>
              <OMS cd="TwoComplement_E3" name="Minus__5"/>
              <OMA>
                <OMS cd="Nat" name="__Power__"/>
                <OMS cd="Nat" name="N2"/>
                <OMA>
                  <OMS cd="Nat" name="__MinusQuest__"/>
                  <OMS cd="TwoComplement_P" name="WordLength17"/>
                  <OMS cd="Nat" name="N1"/>
                </OMA>
              </OMA>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="minInteger_Int1">
      <use format="Hets">minInteger_Int</use>
    </presentation>
  </theory>
  <private for="TwoComplement_E2">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"TwoComplement_E3" Type:"GlobalDef" Origin:"DGExtension"
From:"TwoComplement_E3" Type:"GlobalThm Open Mono Open" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="TwoComplement_E1">
    <presentation for="TwoComplement_E1">
      <use format="Hets">[TwoComplement,E,1]</use>
    </presentation>
    <imports from="#TwoComplement_E2"/>
    <axiom name="leq_TwoComplement">
      <CMP>
  forall x,y:TwoComplement 
  . x &#60;= y &#60;=&#62; TCtoInt(x) &#60;= TCtoInt(y)         %(leq_TwoComplement)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat" name="__LowerEquals__1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat" name="__LowerEquals__1"/>
                <OMA>
                  <OMS cd="TwoComplement_E2" name="TCtoInt1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="TwoComplement_E2" name="TCtoInt1"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="leq_TwoComplement">
      <use format="Hets">leq_TwoComplement</use>
    </presentation>
  </theory>
  <private for="TwoComplement_E1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"TwoComplement_E2" Type:"GlobalDef" Origin:"DGExtension"
From:"TwoComplement_E2" Type:"GlobalThm Open Def Open" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="TwoComplement">
    <presentation for="TwoComplement">
      <use format="Hets">[TwoComplement,,0]</use>
    </presentation>
    <imports from="#TwoComplement_E1"/>
    <symbol name="__Division__4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
            <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
            <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Division__4">
      <use format="Hets">[__,/,__]</use>
    </presentation>
    <axiom name="abs_TwoComplement">
      <CMP>
  forall x,y: TwoComplement
  . intToTC(0) = 0                                   %(def_0_TwoComplement)%
  . intToTC(1) = 1                                   %(def_1_TwoComplement)%
  . - x = intToTC( - TCtoInt(x) )                    %(minus_TwoComplement)%
  . abs(x) = intToTC( abs( TCtoInt(x)) )               %(abs_TwoComplement)%
  . x + y = intToTC( TCtoInt(x) + TCtoInt(y))          %(add_TwoComplement)%
  . x - y = intToTC( TCtoInt(x) - TCtoInt(y))          %(sub_TwoComplement)%
  . x * y = intToTC( TCtoInt(x) * TCtoInt(y))         %(mult_TwoComplement)%
  . x / y = intToTC( TCtoInt(x) /? TCtoInt(y))      %(divide_TwoComplement)%
  . x div y = intToTC (TCtoInt(x) div TCtoInt(y))      %(div_TwoComplement)%
  . x mod y = intToTC( TCtoInt(x) mod TCtoInt(y))      %(mod_TwoComplement)%
  . x quot y = intToTC( TCtoInt(x) quot TCtoInt(y))   %(quot_TwoComplement)%
  . x rem y = intToTC( TCtoInt(x) rem TCtoInt(y))      %(rem_TwoComplement)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="TwoComplement_E3" name="abs5"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="TwoComplement_E2" name="intToTC1"/>
                <OMA>
                  <OMS cd="TwoComplement_E3" name="abs5"/>
                  <OMA>
                    <OMS cd="TwoComplement_E2" name="TCtoInt1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="abs_TwoComplement">
      <use format="Hets">abs_TwoComplement</use>
    </presentation>
    <axiom name="add_TwoComplement">
      <CMP>
  forall x,y: TwoComplement
  . intToTC(0) = 0                                   %(def_0_TwoComplement)%
  . intToTC(1) = 1                                   %(def_1_TwoComplement)%
  . - x = intToTC( - TCtoInt(x) )                    %(minus_TwoComplement)%
  . abs(x) = intToTC( abs( TCtoInt(x)) )               %(abs_TwoComplement)%
  . x + y = intToTC( TCtoInt(x) + TCtoInt(y))          %(add_TwoComplement)%
  . x - y = intToTC( TCtoInt(x) - TCtoInt(y))          %(sub_TwoComplement)%
  . x * y = intToTC( TCtoInt(x) * TCtoInt(y))         %(mult_TwoComplement)%
  . x / y = intToTC( TCtoInt(x) /? TCtoInt(y))      %(divide_TwoComplement)%
  . x div y = intToTC (TCtoInt(x) div TCtoInt(y))      %(div_TwoComplement)%
  . x mod y = intToTC( TCtoInt(x) mod TCtoInt(y))      %(mod_TwoComplement)%
  . x quot y = intToTC( TCtoInt(x) quot TCtoInt(y))   %(quot_TwoComplement)%
  . x rem y = intToTC( TCtoInt(x) rem TCtoInt(y))      %(rem_TwoComplement)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__Plus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="TwoComplement_E2" name="intToTC1"/>
                <OMA>
                  <OMS cd="Nat" name="__Plus__"/>
                  <OMA>
                    <OMS cd="TwoComplement_E2" name="TCtoInt1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="TwoComplement_E2" name="TCtoInt1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="add_TwoComplement">
      <use format="Hets">add_TwoComplement</use>
    </presentation>
    <axiom name="def_0_TwoComplement">
      <CMP>
  . intToTC(0) = 0                                   %(def_0_TwoComplement)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMA>
              <OMS cd="TwoComplement_E2" name="intToTC1"/>
              <OMS cd="Nat" name="N0"/>
            </OMA>
            <OMS cd="Nat" name="N0"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="def_0_TwoComplement">
      <use format="Hets">def_0_TwoComplement</use>
    </presentation>
    <axiom name="def_1_TwoComplement">
      <CMP>
  . intToTC(1) = 1                                   %(def_1_TwoComplement)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMA>
              <OMS cd="TwoComplement_E2" name="intToTC1"/>
              <OMS cd="Nat" name="N1"/>
            </OMA>
            <OMS cd="Nat" name="N1"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="def_1_TwoComplement">
      <use format="Hets">def_1_TwoComplement</use>
    </presentation>
    <axiom name="div_TwoComplement">
      <CMP>
  forall x,y: TwoComplement
  . intToTC(0) = 0                                   %(def_0_TwoComplement)%
  . intToTC(1) = 1                                   %(def_1_TwoComplement)%
  . - x = intToTC( - TCtoInt(x) )                    %(minus_TwoComplement)%
  . abs(x) = intToTC( abs( TCtoInt(x)) )               %(abs_TwoComplement)%
  . x + y = intToTC( TCtoInt(x) + TCtoInt(y))          %(add_TwoComplement)%
  . x - y = intToTC( TCtoInt(x) - TCtoInt(y))          %(sub_TwoComplement)%
  . x * y = intToTC( TCtoInt(x) * TCtoInt(y))         %(mult_TwoComplement)%
  . x / y = intToTC( TCtoInt(x) /? TCtoInt(y))      %(divide_TwoComplement)%
  . x div y = intToTC (TCtoInt(x) div TCtoInt(y))      %(div_TwoComplement)%
  . x mod y = intToTC( TCtoInt(x) mod TCtoInt(y))      %(mod_TwoComplement)%
  . x quot y = intToTC( TCtoInt(x) quot TCtoInt(y))   %(quot_TwoComplement)%
  . x rem y = intToTC( TCtoInt(x) rem TCtoInt(y))      %(rem_TwoComplement)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__div__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="TwoComplement_E2" name="intToTC1"/>
                <OMA>
                  <OMS cd="Nat" name="__div__"/>
                  <OMA>
                    <OMS cd="TwoComplement_E2" name="TCtoInt1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="TwoComplement_E2" name="TCtoInt1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="div_TwoComplement">
      <use format="Hets">div_TwoComplement</use>
    </presentation>
    <axiom name="divide_TwoComplement">
      <CMP>
  forall x,y: TwoComplement
  . intToTC(0) = 0                                   %(def_0_TwoComplement)%
  . intToTC(1) = 1                                   %(def_1_TwoComplement)%
  . - x = intToTC( - TCtoInt(x) )                    %(minus_TwoComplement)%
  . abs(x) = intToTC( abs( TCtoInt(x)) )               %(abs_TwoComplement)%
  . x + y = intToTC( TCtoInt(x) + TCtoInt(y))          %(add_TwoComplement)%
  . x - y = intToTC( TCtoInt(x) - TCtoInt(y))          %(sub_TwoComplement)%
  . x * y = intToTC( TCtoInt(x) * TCtoInt(y))         %(mult_TwoComplement)%
  . x / y = intToTC( TCtoInt(x) /? TCtoInt(y))      %(divide_TwoComplement)%
  . x div y = intToTC (TCtoInt(x) div TCtoInt(y))      %(div_TwoComplement)%
  . x mod y = intToTC( TCtoInt(x) mod TCtoInt(y))      %(mod_TwoComplement)%
  . x quot y = intToTC( TCtoInt(x) quot TCtoInt(y))   %(quot_TwoComplement)%
  . x rem y = intToTC( TCtoInt(x) rem TCtoInt(y))      %(rem_TwoComplement)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="TwoComplement" name="__Division__4"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="TwoComplement_E2" name="intToTC1"/>
                <OMA>
                  <OMS cd="Nat" name="__DivisionQuest__"/>
                  <OMA>
                    <OMS cd="TwoComplement_E2" name="TCtoInt1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="TwoComplement_E2" name="TCtoInt1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="divide_TwoComplement">
      <use format="Hets">divide_TwoComplement</use>
    </presentation>
    <axiom name="maxInteger_TwoComplement">
      <CMP>
  . maxInteger=intToTC(maxInteger)              %(maxInteger_TwoComplement)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMS cd="TwoComplement_E2" name="maxInteger4"/>
            <OMA>
              <OMS cd="TwoComplement_E2" name="intToTC1"/>
              <OMS cd="TwoComplement_E2" name="maxInteger4"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="maxInteger_TwoComplement">
      <use format="Hets">maxInteger_TwoComplement</use>
    </presentation>
    <axiom name="minInteger_TwoComplement">
      <CMP>
  . minInteger=intToTC(minInteger)              %(minInteger_TwoComplement)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMS cd="TwoComplement_E2" name="minInteger4"/>
            <OMA>
              <OMS cd="TwoComplement_E2" name="intToTC1"/>
              <OMS cd="TwoComplement_E2" name="minInteger4"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="minInteger_TwoComplement">
      <use format="Hets">minInteger_TwoComplement</use>
    </presentation>
    <axiom name="minus_TwoComplement">
      <CMP>
  forall x,y: TwoComplement
  . intToTC(0) = 0                                   %(def_0_TwoComplement)%
  . intToTC(1) = 1                                   %(def_1_TwoComplement)%
  . - x = intToTC( - TCtoInt(x) )                    %(minus_TwoComplement)%
  . abs(x) = intToTC( abs( TCtoInt(x)) )               %(abs_TwoComplement)%
  . x + y = intToTC( TCtoInt(x) + TCtoInt(y))          %(add_TwoComplement)%
  . x - y = intToTC( TCtoInt(x) - TCtoInt(y))          %(sub_TwoComplement)%
  . x * y = intToTC( TCtoInt(x) * TCtoInt(y))         %(mult_TwoComplement)%
  . x / y = intToTC( TCtoInt(x) /? TCtoInt(y))      %(divide_TwoComplement)%
  . x div y = intToTC (TCtoInt(x) div TCtoInt(y))      %(div_TwoComplement)%
  . x mod y = intToTC( TCtoInt(x) mod TCtoInt(y))      %(mod_TwoComplement)%
  . x quot y = intToTC( TCtoInt(x) quot TCtoInt(y))   %(quot_TwoComplement)%
  . x rem y = intToTC( TCtoInt(x) rem TCtoInt(y))      %(rem_TwoComplement)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="TwoComplement_E3" name="Minus__5"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="TwoComplement_E2" name="intToTC1"/>
                <OMA>
                  <OMS cd="TwoComplement_E3" name="Minus__5"/>
                  <OMA>
                    <OMS cd="TwoComplement_E2" name="TCtoInt1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="minus_TwoComplement">
      <use format="Hets">minus_TwoComplement</use>
    </presentation>
    <axiom name="mod_TwoComplement">
      <CMP>
  forall x,y: TwoComplement
  . intToTC(0) = 0                                   %(def_0_TwoComplement)%
  . intToTC(1) = 1                                   %(def_1_TwoComplement)%
  . - x = intToTC( - TCtoInt(x) )                    %(minus_TwoComplement)%
  . abs(x) = intToTC( abs( TCtoInt(x)) )               %(abs_TwoComplement)%
  . x + y = intToTC( TCtoInt(x) + TCtoInt(y))          %(add_TwoComplement)%
  . x - y = intToTC( TCtoInt(x) - TCtoInt(y))          %(sub_TwoComplement)%
  . x * y = intToTC( TCtoInt(x) * TCtoInt(y))         %(mult_TwoComplement)%
  . x / y = intToTC( TCtoInt(x) /? TCtoInt(y))      %(divide_TwoComplement)%
  . x div y = intToTC (TCtoInt(x) div TCtoInt(y))      %(div_TwoComplement)%
  . x mod y = intToTC( TCtoInt(x) mod TCtoInt(y))      %(mod_TwoComplement)%
  . x quot y = intToTC( TCtoInt(x) quot TCtoInt(y))   %(quot_TwoComplement)%
  . x rem y = intToTC( TCtoInt(x) rem TCtoInt(y))      %(rem_TwoComplement)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__mod__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="TwoComplement_E2" name="intToTC1"/>
                <OMA>
                  <OMS cd="Nat" name="__mod__"/>
                  <OMA>
                    <OMS cd="TwoComplement_E2" name="TCtoInt1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="TwoComplement_E2" name="TCtoInt1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="mod_TwoComplement">
      <use format="Hets">mod_TwoComplement</use>
    </presentation>
    <axiom name="mult_TwoComplement">
      <CMP>
  forall x,y: TwoComplement
  . intToTC(0) = 0                                   %(def_0_TwoComplement)%
  . intToTC(1) = 1                                   %(def_1_TwoComplement)%
  . - x = intToTC( - TCtoInt(x) )                    %(minus_TwoComplement)%
  . abs(x) = intToTC( abs( TCtoInt(x)) )               %(abs_TwoComplement)%
  . x + y = intToTC( TCtoInt(x) + TCtoInt(y))          %(add_TwoComplement)%
  . x - y = intToTC( TCtoInt(x) - TCtoInt(y))          %(sub_TwoComplement)%
  . x * y = intToTC( TCtoInt(x) * TCtoInt(y))         %(mult_TwoComplement)%
  . x / y = intToTC( TCtoInt(x) /? TCtoInt(y))      %(divide_TwoComplement)%
  . x div y = intToTC (TCtoInt(x) div TCtoInt(y))      %(div_TwoComplement)%
  . x mod y = intToTC( TCtoInt(x) mod TCtoInt(y))      %(mod_TwoComplement)%
  . x quot y = intToTC( TCtoInt(x) quot TCtoInt(y))   %(quot_TwoComplement)%
  . x rem y = intToTC( TCtoInt(x) rem TCtoInt(y))      %(rem_TwoComplement)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat" name="__Ast__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="TwoComplement_E2" name="intToTC1"/>
                <OMA>
                  <OMS cd="Nat" name="__Ast__"/>
                  <OMA>
                    <OMS cd="TwoComplement_E2" name="TCtoInt1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="TwoComplement_E2" name="TCtoInt1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="mult_TwoComplement">
      <use format="Hets">mult_TwoComplement</use>
    </presentation>
    <axiom name="quot_TwoComplement">
      <CMP>
  forall x,y: TwoComplement
  . intToTC(0) = 0                                   %(def_0_TwoComplement)%
  . intToTC(1) = 1                                   %(def_1_TwoComplement)%
  . - x = intToTC( - TCtoInt(x) )                    %(minus_TwoComplement)%
  . abs(x) = intToTC( abs( TCtoInt(x)) )               %(abs_TwoComplement)%
  . x + y = intToTC( TCtoInt(x) + TCtoInt(y))          %(add_TwoComplement)%
  . x - y = intToTC( TCtoInt(x) - TCtoInt(y))          %(sub_TwoComplement)%
  . x * y = intToTC( TCtoInt(x) * TCtoInt(y))         %(mult_TwoComplement)%
  . x / y = intToTC( TCtoInt(x) /? TCtoInt(y))      %(divide_TwoComplement)%
  . x div y = intToTC (TCtoInt(x) div TCtoInt(y))      %(div_TwoComplement)%
  . x mod y = intToTC( TCtoInt(x) mod TCtoInt(y))      %(mod_TwoComplement)%
  . x quot y = intToTC( TCtoInt(x) quot TCtoInt(y))   %(quot_TwoComplement)%
  . x rem y = intToTC( TCtoInt(x) rem TCtoInt(y))      %(rem_TwoComplement)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="TwoComplement_E3" name="__quot__5"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="TwoComplement_E2" name="intToTC1"/>
                <OMA>
                  <OMS cd="TwoComplement_E3" name="__quot__5"/>
                  <OMA>
                    <OMS cd="TwoComplement_E2" name="TCtoInt1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="TwoComplement_E2" name="TCtoInt1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="quot_TwoComplement">
      <use format="Hets">quot_TwoComplement</use>
    </presentation>
    <axiom name="rem_TwoComplement">
      <CMP>
  forall x,y: TwoComplement
  . intToTC(0) = 0                                   %(def_0_TwoComplement)%
  . intToTC(1) = 1                                   %(def_1_TwoComplement)%
  . - x = intToTC( - TCtoInt(x) )                    %(minus_TwoComplement)%
  . abs(x) = intToTC( abs( TCtoInt(x)) )               %(abs_TwoComplement)%
  . x + y = intToTC( TCtoInt(x) + TCtoInt(y))          %(add_TwoComplement)%
  . x - y = intToTC( TCtoInt(x) - TCtoInt(y))          %(sub_TwoComplement)%
  . x * y = intToTC( TCtoInt(x) * TCtoInt(y))         %(mult_TwoComplement)%
  . x / y = intToTC( TCtoInt(x) /? TCtoInt(y))      %(divide_TwoComplement)%
  . x div y = intToTC (TCtoInt(x) div TCtoInt(y))      %(div_TwoComplement)%
  . x mod y = intToTC( TCtoInt(x) mod TCtoInt(y))      %(mod_TwoComplement)%
  . x quot y = intToTC( TCtoInt(x) quot TCtoInt(y))   %(quot_TwoComplement)%
  . x rem y = intToTC( TCtoInt(x) rem TCtoInt(y))      %(rem_TwoComplement)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="TwoComplement_E3" name="__rem__5"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="TwoComplement_E2" name="intToTC1"/>
                <OMA>
                  <OMS cd="TwoComplement_E3" name="__rem__5"/>
                  <OMA>
                    <OMS cd="TwoComplement_E2" name="TCtoInt1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="TwoComplement_E2" name="TCtoInt1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="rem_TwoComplement">
      <use format="Hets">rem_TwoComplement</use>
    </presentation>
    <axiom name="sub_TwoComplement">
      <CMP>
  forall x,y: TwoComplement
  . intToTC(0) = 0                                   %(def_0_TwoComplement)%
  . intToTC(1) = 1                                   %(def_1_TwoComplement)%
  . - x = intToTC( - TCtoInt(x) )                    %(minus_TwoComplement)%
  . abs(x) = intToTC( abs( TCtoInt(x)) )               %(abs_TwoComplement)%
  . x + y = intToTC( TCtoInt(x) + TCtoInt(y))          %(add_TwoComplement)%
  . x - y = intToTC( TCtoInt(x) - TCtoInt(y))          %(sub_TwoComplement)%
  . x * y = intToTC( TCtoInt(x) * TCtoInt(y))         %(mult_TwoComplement)%
  . x / y = intToTC( TCtoInt(x) /? TCtoInt(y))      %(divide_TwoComplement)%
  . x div y = intToTC (TCtoInt(x) div TCtoInt(y))      %(div_TwoComplement)%
  . x mod y = intToTC( TCtoInt(x) mod TCtoInt(y))      %(mod_TwoComplement)%
  . x quot y = intToTC( TCtoInt(x) quot TCtoInt(y))   %(quot_TwoComplement)%
  . x rem y = intToTC( TCtoInt(x) rem TCtoInt(y))      %(rem_TwoComplement)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="TwoComplement_E3" name="__Minus__8"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="TwoComplement_E2" name="intToTC1"/>
                <OMA>
                  <OMS cd="TwoComplement_E3" name="__Minus__8"/>
                  <OMA>
                    <OMS cd="TwoComplement_E2" name="TCtoInt1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="TwoComplement_E2" name="TCtoInt1"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="TwoComplement_E2" name="TwoComplement2"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="sub_TwoComplement">
      <use format="Hets">sub_TwoComplement</use>
    </presentation>
  </theory>
  <private for="TwoComplement">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"TwoComplement_E1" Type:"GlobalDef" Origin:"DGExtension"
From:"TwoComplement_E1" Type:"GlobalThm Open Def Open" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="TotalOrder_in_CARDINAL_VGI">
    <presentation for="TotalOrder_in_CARDINAL_VGI">
      <use format="Hets">[TotalOrder_in_CARDINAL,VGI,0]</use>
    </presentation>
    <imports from="Basic/Numbers.omdoc#Nat"/>
  </theory>
  <private for="TotalOrder_in_CARDINAL_VGI">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="TotalOrder_in_CARDINAL_VG">
    <presentation for="TotalOrder_in_CARDINAL_VG">
      <use format="Hets">[TotalOrder_in_CARDINAL,VG,0]</use>
    </presentation>
    <imports from="#TotalOrder_in_CARDINAL_VGI"/>
    <symbol name="WordLength3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="WordLength3">
      <use format="Hets">[WordLength]</use>
    </presentation>
  </theory>
  <private for="TotalOrder_in_CARDINAL_VG">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"TotalOrder_in_CARDINAL_VGI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="TotalOrder_in_CARDINAL_TA">
    <presentation for="TotalOrder_in_CARDINAL_TA">
      <use format="Hets">[TotalOrder_in_CARDINAL,TA,0]</use>
    </presentation>
    <imports from="#CARDINAL_PI"/>
    <symbol name="WordLength14" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="WordLength14">
      <use format="Hets">[WordLength]</use>
    </presentation>
  </theory>
  <private for="TotalOrder_in_CARDINAL_TA">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"CARDINAL_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst CARDINAL"
From:"CARDINAL_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="TotalOrder_in_CARDINAL_T">
    <presentation for="TotalOrder_in_CARDINAL_T">
      <use format="Hets">[TotalOrder_in_CARDINAL,T,0]</use>
    </presentation>
    <imports from="#CARDINAL">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="N0"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="N0"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="N1"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="N1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="N2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="N2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="N3"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="N3"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="N4"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="N4"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="N5"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="N5"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="N6"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="N6"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="N7"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="N7"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="N8"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="N8"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="N9"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="N9"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="WordLength"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="WordLength3"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="__LowerEquals__1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="__Lower__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="__GreaterEquals__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="__Greater__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="__Ast__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="__Ast__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="__AtAt__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="__AtAt__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="__DivisionQuest__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="__DivisionQuest__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="__Excla"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="__Excla"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="__MinusExcla__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="__MinusExcla__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="__MinusQuest__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="__MinusQuest__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="__Plus__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="__Plus__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="__Power__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="__Power__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="__div__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="__div__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="__mod__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="__mod__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="even"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="max"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="max"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="min"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="min"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="odd"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="pre"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="pre"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="CARDINAL" name="suc"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="suc"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <imports from="#TotalOrder_in_CARDINAL_TA"/>
    <imports from="#TotalOrder_in_CARDINAL_VG"/>
    <symbol role="sort" name="CARDINAL3"/>
    <presentation for="CARDINAL3">
      <use format="Hets">[CARDINAL]</use>
    </presentation>
    <symbol name="__Minus__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="CARDINAL3"/>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="CARDINAL3"/>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="CARDINAL3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__2">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="cardToNat2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="CARDINAL3"/>
            <OMS cd="Nat" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="cardToNat2">
      <use format="Hets">[cardToNat]</use>
    </presentation>
    <symbol name="maxCardinal2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="CARDINAL3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="maxCardinal2">
      <use format="Hets">[maxCardinal]</use>
    </presentation>
    <symbol name="maxCardinal2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="maxCardinal2">
      <use format="Hets">[maxCardinal]</use>
    </presentation>
    <symbol name="natToCard2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Nat" name="Nat1"/>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="CARDINAL3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="natToCard2">
      <use format="Hets">[natToCard]</use>
    </presentation>
  </theory>
  <private for="TotalOrder_in_CARDINAL_T">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"TotalOrder" Type:"GlobalThm Open None Open" Origin:"DGView TotalOrder_in_CARDINAL"
From:"TotalOrder_in_CARDINAL_VG" Type:"GlobalDef" Origin:"DGSpecInst CARDINAL"
From:"TotalOrder_in_CARDINAL_TA" Type:"GlobalDef" Origin:"DGFitSpec"
From:"CARDINAL" Type:"GlobalDef" Origin:"DGSpecInst CARDINAL"
]]></data>
  </private>
  <theory xml:id="TotalOrder_in_INTEGER_VGI">
    <presentation for="TotalOrder_in_INTEGER_VGI">
      <use format="Hets">[TotalOrder_in_INTEGER,VGI,0]</use>
    </presentation>
    <imports from="Basic/Numbers.omdoc#Nat"/>
  </theory>
  <private for="TotalOrder_in_INTEGER_VGI">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="TotalOrder_in_INTEGER_VG">
    <presentation for="TotalOrder_in_INTEGER_VG">
      <use format="Hets">[TotalOrder_in_INTEGER,VG,0]</use>
    </presentation>
    <imports from="#TotalOrder_in_INTEGER_VGI"/>
    <symbol name="WordLength7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="WordLength7">
      <use format="Hets">[WordLength]</use>
    </presentation>
  </theory>
  <private for="TotalOrder_in_INTEGER_VG">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"TotalOrder_in_INTEGER_VGI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="TotalOrder_in_INTEGER_TA">
    <presentation for="TotalOrder_in_INTEGER_TA">
      <use format="Hets">[TotalOrder_in_INTEGER,TA,0]</use>
    </presentation>
    <imports from="#INTEGER_PI"/>
    <symbol name="WordLength15" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="WordLength15">
      <use format="Hets">[WordLength]</use>
    </presentation>
  </theory>
  <private for="TotalOrder_in_INTEGER_TA">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"INTEGER_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst INTEGER"
From:"INTEGER_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="TotalOrder_in_INTEGER_T">
    <presentation for="TotalOrder_in_INTEGER_T">
      <use format="Hets">[TotalOrder_in_INTEGER,T,0]</use>
    </presentation>
    <imports from="#INTEGER">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="N0"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="N0"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="N1"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="N1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="N2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="N2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="N3"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="N3"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="N4"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="N4"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="N5"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="N5"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="N6"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="N6"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="N7"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="N7"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="N8"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="N8"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="N9"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="N9"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="WordLength13"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="WordLength7"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="__LowerEquals__1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="__Lower__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="__GreaterEquals__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="__Greater__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="__Ast__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="__Ast__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="__AtAt__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="__AtAt__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="__DivisionQuest__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="__DivisionQuest__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="__Excla"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="__Excla"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="__MinusExcla__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="__MinusExcla__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="__MinusQuest__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="__MinusQuest__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="__Plus__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="__Plus__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="__Power__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="__Power__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="__div__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="__div__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="__mod__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="__mod__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="even"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="max"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="max"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="min"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="min"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="odd"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="pre"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="pre"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="INTEGER" name="suc"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="suc"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <imports from="#TotalOrder_in_INTEGER_TA"/>
    <imports from="#TotalOrder_in_INTEGER_VG"/>
    <symbol role="sort" name="Int2"/>
    <presentation for="Int2">
      <use format="Hets">[Int]</use>
    </presentation>
    <symbol role="sort" name="INTEGER2"/>
    <presentation for="INTEGER2">
      <use format="Hets">[INTEGER]</use>
    </presentation>
    <adt>
      <sortdef name="Int2" type="free">
        <insort for="#Nat1"/>
        <insort for="#Pos"/>
      </sortdef>
    </adt>
    <symbol name="Minus__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="Int2"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="Int2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="Minus__1">
      <use format="Hets">[-,__]</use>
    </presentation>
    <symbol name="Minus__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="INTEGER2"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="INTEGER2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="Minus__1">
      <use format="Hets">[-,__]</use>
    </presentation>
    <symbol name="__Minus__4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="Int2"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="Int2"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="Int2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__4">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__Minus__4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat" name="Nat1"/>
            <OMS cd="Nat" name="Nat1"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="Int2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__4">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__Minus__4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="INTEGER2"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="INTEGER2"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="INTEGER2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__4">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__Division__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="INTEGER2"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="INTEGER2"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="INTEGER2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Division__1">
      <use format="Hets">[__,/,__]</use>
    </presentation>
    <symbol name="__quot__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="INTEGER2"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="INTEGER2"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="INTEGER2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__quot__1">
      <use format="Hets">[__,quot,__]</use>
    </presentation>
    <symbol name="__quot__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="Int2"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="Int2"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="Int2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__quot__1">
      <use format="Hets">[__,quot,__]</use>
    </presentation>
    <symbol name="__rem__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="INTEGER2"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="INTEGER2"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="INTEGER2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__rem__1">
      <use format="Hets">[__,rem,__]</use>
    </presentation>
    <symbol name="__rem__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="Int2"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="Int2"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="Int2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__rem__1">
      <use format="Hets">[__,rem,__]</use>
    </presentation>
    <symbol name="abs1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="Int2"/>
            <OMS cd="Nat" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="abs1">
      <use format="Hets">[abs]</use>
    </presentation>
    <symbol name="abs1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="INTEGER2"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="INTEGER2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="abs1">
      <use format="Hets">[abs]</use>
    </presentation>
    <symbol name="intToInteger1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="Int2"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="INTEGER2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="intToInteger1">
      <use format="Hets">[intToInteger]</use>
    </presentation>
    <symbol name="integerToInt1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="INTEGER2"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="Int2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="integerToInt1">
      <use format="Hets">[integerToInt]</use>
    </presentation>
    <symbol name="maxInteger1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="INTEGER2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="maxInteger1">
      <use format="Hets">[maxInteger]</use>
    </presentation>
    <symbol name="maxInteger1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="Int2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="maxInteger1">
      <use format="Hets">[maxInteger]</use>
    </presentation>
    <symbol name="minInteger1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="INTEGER2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="minInteger1">
      <use format="Hets">[minInteger]</use>
    </presentation>
    <symbol name="minInteger1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="Int2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="minInteger1">
      <use format="Hets">[minInteger]</use>
    </presentation>
    <symbol name="sign1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="Int2"/>
            <OMS cd="TotalOrder_in_INTEGER_T" name="Int2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="sign1">
      <use format="Hets">[sign]</use>
    </presentation>
  </theory>
  <private for="TotalOrder_in_INTEGER_T">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"TotalOrder" Type:"GlobalThm Open None Open" Origin:"DGView TotalOrder_in_INTEGER"
From:"TotalOrder_in_INTEGER_VG" Type:"GlobalDef" Origin:"DGSpecInst INTEGER"
From:"TotalOrder_in_INTEGER_TA" Type:"GlobalDef" Origin:"DGFitSpec"
From:"INTEGER" Type:"GlobalDef" Origin:"DGSpecInst INTEGER"
]]></data>
  </private>
  <theory xml:id="TotalOrder_in_TwoComplement_VGI">
    <presentation for="TotalOrder_in_TwoComplement_VGI">
      <use format="Hets">[TotalOrder_in_TwoComplement,VGI,0]</use>
    </presentation>
    <imports from="Basic/Numbers.omdoc#Nat"/>
  </theory>
  <private for="TotalOrder_in_TwoComplement_VGI">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="TotalOrder_in_TwoComplement_VG">
    <presentation for="TotalOrder_in_TwoComplement_VG">
      <use format="Hets">[TotalOrder_in_TwoComplement,VG,0]</use>
    </presentation>
    <imports from="#TotalOrder_in_TwoComplement_VGI"/>
    <symbol name="WordLength10" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="WordLength10">
      <use format="Hets">[WordLength]</use>
    </presentation>
  </theory>
  <private for="TotalOrder_in_TwoComplement_VG">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"TotalOrder_in_TwoComplement_VGI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="TotalOrder_in_TwoComplement_TA">
    <presentation for="TotalOrder_in_TwoComplement_TA">
      <use format="Hets">[TotalOrder_in_TwoComplement,TA,0]</use>
    </presentation>
    <imports from="#TwoComplement_PI"/>
    <symbol name="WordLength16" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="WordLength16">
      <use format="Hets">[WordLength]</use>
    </presentation>
  </theory>
  <private for="TotalOrder_in_TwoComplement_TA">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"TwoComplement_P" Type:"GlobalThm Open None Open" Origin:"DGSpecInst TwoComplement"
From:"TwoComplement_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="TotalOrder_in_TwoComplement_T">
    <presentation for="TotalOrder_in_TwoComplement_T">
      <use format="Hets">[TotalOrder_in_TwoComplement,T,0]</use>
    </presentation>
    <imports from="#TotalOrder_in_TwoComplement_TA"/>
    <imports from="#TotalOrder_in_TwoComplement_VG"/>
    <imports from="#TwoComplement">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="N0"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="N0"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="N1"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="N1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="N2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="N2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="N3"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="N3"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="N4"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="N4"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="N5"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="N5"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="N6"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="N6"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="N7"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="N7"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="N8"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="N8"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="N9"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="N9"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="WordLength17"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="WordLength10"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="__LowerEquals__1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="__Lower__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="__GreaterEquals__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="__Greater__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="__Ast__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="__Ast__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="__AtAt__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="__AtAt__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="__DivisionQuest__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="__DivisionQuest__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="__Excla"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="__Excla"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="__MinusExcla__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="__MinusExcla__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="__MinusQuest__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="__MinusQuest__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="__Plus__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="__Plus__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="__Power__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="__Power__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="__div__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="__div__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="__mod__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="__mod__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="even"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="max"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="max"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="min"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="min"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="odd"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="pre"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="pre"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TwoComplement" name="suc"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="suc"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <symbol role="sort" name="TwoComplement1"/>
    <presentation for="TwoComplement1">
      <use format="Hets">[TwoComplement]</use>
    </presentation>
    <symbol role="sort" name="Int3"/>
    <presentation for="Int3">
      <use format="Hets">[Int]</use>
    </presentation>
    <adt>
      <sortdef name="Int3" type="free">
        <insort for="#Nat1"/>
        <insort for="#Pos"/>
      </sortdef>
    </adt>
    <symbol name="Minus__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="Int3"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="Int3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="Minus__2">
      <use format="Hets">[-,__]</use>
    </presentation>
    <symbol name="Minus__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="TwoComplement1"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="TwoComplement1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="Minus__2">
      <use format="Hets">[-,__]</use>
    </presentation>
    <symbol name="TCtoInt" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="TwoComplement1"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="Int3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="TCtoInt">
      <use format="Hets">[TCtoInt]</use>
    </presentation>
    <symbol name="__Minus__5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="Int3"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="Int3"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="Int3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__5">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__Minus__5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat" name="Nat1"/>
            <OMS cd="Nat" name="Nat1"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="Int3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__5">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__Minus__5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="TwoComplement1"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="TwoComplement1"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="TwoComplement1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__5">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__Division__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="TwoComplement1"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="TwoComplement1"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="TwoComplement1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Division__2">
      <use format="Hets">[__,/,__]</use>
    </presentation>
    <symbol name="__quot__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="TwoComplement1"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="TwoComplement1"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="TwoComplement1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__quot__2">
      <use format="Hets">[__,quot,__]</use>
    </presentation>
    <symbol name="__quot__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="Int3"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="Int3"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="Int3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__quot__2">
      <use format="Hets">[__,quot,__]</use>
    </presentation>
    <symbol name="__rem__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="TwoComplement1"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="TwoComplement1"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="TwoComplement1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__rem__2">
      <use format="Hets">[__,rem,__]</use>
    </presentation>
    <symbol name="__rem__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="Int3"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="Int3"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="Int3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__rem__2">
      <use format="Hets">[__,rem,__]</use>
    </presentation>
    <symbol name="abs2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="Int3"/>
            <OMS cd="Nat" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="abs2">
      <use format="Hets">[abs]</use>
    </presentation>
    <symbol name="abs2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="TwoComplement1"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="TwoComplement1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="abs2">
      <use format="Hets">[abs]</use>
    </presentation>
    <symbol name="intToTC" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="Int3"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="TwoComplement1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="intToTC">
      <use format="Hets">[intToTC]</use>
    </presentation>
    <symbol name="maxInteger2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="Int3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="maxInteger2">
      <use format="Hets">[maxInteger]</use>
    </presentation>
    <symbol name="maxInteger2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="TwoComplement1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="maxInteger2">
      <use format="Hets">[maxInteger]</use>
    </presentation>
    <symbol name="minInteger2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="Int3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="minInteger2">
      <use format="Hets">[minInteger]</use>
    </presentation>
    <symbol name="minInteger2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="TwoComplement1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="minInteger2">
      <use format="Hets">[minInteger]</use>
    </presentation>
    <symbol name="sign2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="Int3"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="Int3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="sign2">
      <use format="Hets">[sign]</use>
    </presentation>
  </theory>
  <private for="TotalOrder_in_TwoComplement_T">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"TotalOrder" Type:"GlobalThm Open None Open" Origin:"DGView TotalOrder_in_TwoComplement"
From:"TotalOrder_in_TwoComplement_VG" Type:"GlobalDef" Origin:"DGSpecInst TwoComplement"
From:"TotalOrder_in_TwoComplement_TA" Type:"GlobalDef" Origin:"DGFitSpec"
From:"TwoComplement" Type:"GlobalDef" Origin:"DGSpecInst TwoComplement"
]]></data>
  </private>
  <theory xml:id="ExtCARDINAL_PI">
    <presentation for="ExtCARDINAL_PI">
      <use format="Hets">[ExtCARDINAL,PI,0]</use>
    </presentation>
    <imports from="Basic/Numbers.omdoc#Nat"/>
  </theory>
  <private for="ExtCARDINAL_PI">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="ExtCARDINAL_P">
    <presentation for="ExtCARDINAL_P">
      <use format="Hets">[ExtCARDINAL,P,0]</use>
    </presentation>
    <imports from="#ExtCARDINAL_PI"/>
    <symbol name="WordLength5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="WordLength5">
      <use format="Hets">[WordLength]</use>
    </presentation>
  </theory>
  <private for="ExtCARDINAL_P">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"ExtCARDINAL_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="ExtCARDINAL_AA">
    <presentation for="ExtCARDINAL_AA">
      <use format="Hets">[ExtCARDINAL,AA,0]</use>
    </presentation>
    <imports from="#TotalOrder_in_CARDINAL_VGI"/>
    <symbol name="WordLength4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="WordLength4">
      <use format="Hets">[WordLength]</use>
    </presentation>
  </theory>
  <private for="ExtCARDINAL_AA">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"TotalOrder_in_CARDINAL_VG" Type:"GlobalThm Open None Open" Origin:"DGSpecInst ExtTotalOrder"
From:"TotalOrder_in_CARDINAL_VGI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="ExtCARDINAL_A">
    <presentation for="ExtCARDINAL_A">
      <use format="Hets">[ExtCARDINAL,A,0]</use>
    </presentation>
    <imports from="#ExtCARDINAL_AA"/>
    <imports from="#TotalOrder_in_CARDINAL_T">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="N0"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="N0"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="N1"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="N1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="N2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="N2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="N3"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="N3"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="N4"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="N4"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="N5"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="N5"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="N6"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="N6"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="N7"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="N7"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="N8"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="N8"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="N9"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="N9"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="WordLength3"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="WordLength3"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="__LowerEquals__1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="__Lower__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="__GreaterEquals__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="__Greater__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="__Ast__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="__Ast__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="__AtAt__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="__AtAt__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="__DivisionQuest__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="__DivisionQuest__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="__Excla"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="__Excla"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="__MinusExcla__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="__MinusExcla__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="__MinusQuest__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="__MinusQuest__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="__Plus__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="__Plus__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="__Power__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="__Power__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="__div__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="__div__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="__mod__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="__mod__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="even"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="max"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="max"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="min"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="min"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="odd"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="pre"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="pre"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_CARDINAL_T" name="suc"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL_A" name="suc"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
  </theory>
  <private for="ExtCARDINAL_A">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"TotalOrder_in_CARDINAL_T" Type:"GlobalDef" Origin:"DGFitViewA ExtTotalOrder"
From:"ExtCARDINAL_AA" Type:"GlobalDef" Origin:"DGFitView ExtTotalOrder"
]]></data>
  </private>
  <theory xml:id="ExtCARDINAL_AV">
    <presentation for="ExtCARDINAL_AV">
      <use format="Hets">[ExtCARDINAL,AV,0]</use>
    </presentation>
    <imports from="Basic/RelationsAndOrders.omdoc#TotalOrder"/>
  </theory>
  <private for="ExtCARDINAL_AV">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_" Type:"GlobalThm Open None Open" Origin:"DGFitView ExtTotalOrder"
From:"TotalOrder" Type:"GlobalDef" Origin:"DGFitView ExtTotalOrder"
]]></data>
  </private>
  <theory xml:id="ExtCARDINAL">
    <presentation for="ExtCARDINAL">
      <use format="Hets">[ExtCARDINAL,,0]</use>
    </presentation>
    <imports from="#ExtCARDINAL_A"/>
    <imports from="#ExtCARDINAL_P"/>
    <imports from="Basic/RelationsAndOrders.omdoc#ExtTotalOrder">
      <morphism hiding="Elem __&#60;=__ __&#60;__ __&#62;=__ __&#62;__ inf max min sup">
        <requation>
          <OMOBJ>
            <OMS cd="ExtTotalOrder" name="Elem2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL" name="CARDINAL2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="ExtTotalOrder" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtCARDINAL" name="__LowerEquals__2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <symbol role="sort" name="Pos1"/>
    <presentation for="Pos1">
      <use format="Hets">[Pos]</use>
    </presentation>
    <symbol role="sort" name="Nat2"/>
    <presentation for="Nat2">
      <use format="Hets">[Nat]</use>
    </presentation>
    <symbol role="sort" name="CARDINAL2"/>
    <presentation for="CARDINAL2">
      <use format="Hets">[CARDINAL]</use>
    </presentation>
    <adt>
      <sortdef name="Nat2" type="free">
        <insort for="#Pos1"/>
      </sortdef>
    </adt>
    <symbol name="even1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="even1">
      <use format="Hets">[even]</use>
    </presentation>
    <symbol name="odd1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="odd1">
      <use format="Hets">[odd]</use>
    </presentation>
    <symbol name="N01" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtCARDINAL" name="CARDINAL2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N01">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N01" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N01">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N11" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtCARDINAL" name="CARDINAL2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N11">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="N11" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N11">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="N11" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtCARDINAL" name="Pos1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N11">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="N21" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N21">
      <use format="Hets">[2]</use>
    </presentation>
    <symbol name="N31" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N31">
      <use format="Hets">[3]</use>
    </presentation>
    <symbol name="N41" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N41">
      <use format="Hets">[4]</use>
    </presentation>
    <symbol name="N51" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N51">
      <use format="Hets">[5]</use>
    </presentation>
    <symbol name="N61" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N61">
      <use format="Hets">[6]</use>
    </presentation>
    <symbol name="N71" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N71">
      <use format="Hets">[7]</use>
    </presentation>
    <symbol name="N81" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N81">
      <use format="Hets">[8]</use>
    </presentation>
    <symbol name="N91" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N91">
      <use format="Hets">[9]</use>
    </presentation>
    <symbol name="WordLength2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="WordLength2">
      <use format="Hets">[WordLength]</use>
    </presentation>
    <symbol name="__Excla1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Excla1">
      <use format="Hets">[__,!]</use>
    </presentation>
    <symbol name="__Ast__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Ast__1">
      <use format="Hets">[__,*,__]</use>
    </presentation>
    <symbol name="__Ast__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtCARDINAL" name="Pos1"/>
            <OMS cd="ExtCARDINAL" name="Pos1"/>
            <OMS cd="ExtCARDINAL" name="Pos1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Ast__1">
      <use format="Hets">[__,*,__]</use>
    </presentation>
    <symbol name="__Ast__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtCARDINAL" name="CARDINAL2"/>
            <OMS cd="ExtCARDINAL" name="CARDINAL2"/>
            <OMS cd="ExtCARDINAL" name="CARDINAL2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Ast__1">
      <use format="Hets">[__,*,__]</use>
    </presentation>
    <symbol name="__Plus__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__1">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__Plus__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
            <OMS cd="ExtCARDINAL" name="Pos1"/>
            <OMS cd="ExtCARDINAL" name="Pos1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__1">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__Plus__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtCARDINAL" name="Pos1"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
            <OMS cd="ExtCARDINAL" name="Pos1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__1">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__Plus__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtCARDINAL" name="CARDINAL2"/>
            <OMS cd="ExtCARDINAL" name="CARDINAL2"/>
            <OMS cd="ExtCARDINAL" name="CARDINAL2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__1">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__Minus__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtCARDINAL" name="CARDINAL2"/>
            <OMS cd="ExtCARDINAL" name="CARDINAL2"/>
            <OMS cd="ExtCARDINAL" name="CARDINAL2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__1">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__MinusExcla__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__MinusExcla__1">
      <use format="Hets">[__,-!,__]</use>
    </presentation>
    <symbol name="__MinusQuest__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__MinusQuest__1">
      <use format="Hets">[__,-?,__]</use>
    </presentation>
    <symbol name="__DivisionQuest__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__DivisionQuest__1">
      <use format="Hets">[__,/?,__]</use>
    </presentation>
    <symbol name="__AtAt__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__AtAt__1">
      <use format="Hets">[__,@@,__]</use>
    </presentation>
    <symbol name="__Power__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Power__1">
      <use format="Hets">[__,^,__]</use>
    </presentation>
    <symbol name="__div__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtCARDINAL" name="CARDINAL2"/>
            <OMS cd="ExtCARDINAL" name="CARDINAL2"/>
            <OMS cd="ExtCARDINAL" name="CARDINAL2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__div__1">
      <use format="Hets">[__,div,__]</use>
    </presentation>
    <symbol name="__div__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__div__1">
      <use format="Hets">[__,div,__]</use>
    </presentation>
    <symbol name="__mod__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtCARDINAL" name="CARDINAL2"/>
            <OMS cd="ExtCARDINAL" name="CARDINAL2"/>
            <OMS cd="ExtCARDINAL" name="CARDINAL2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__mod__1">
      <use format="Hets">[__,mod,__]</use>
    </presentation>
    <symbol name="__mod__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__mod__1">
      <use format="Hets">[__,mod,__]</use>
    </presentation>
    <symbol name="cardToNat1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtCARDINAL" name="CARDINAL2"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="cardToNat1">
      <use format="Hets">[cardToNat]</use>
    </presentation>
    <symbol name="maxCardinal1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtCARDINAL" name="CARDINAL2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="maxCardinal1">
      <use format="Hets">[maxCardinal]</use>
    </presentation>
    <symbol name="maxCardinal1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="maxCardinal1">
      <use format="Hets">[maxCardinal]</use>
    </presentation>
    <symbol name="natToCard1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
            <OMS cd="ExtCARDINAL" name="CARDINAL2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="natToCard1">
      <use format="Hets">[natToCard]</use>
    </presentation>
    <symbol name="pre1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="pre1">
      <use format="Hets">[pre]</use>
    </presentation>
    <symbol name="suc1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="suc1">
      <use format="Hets">[suc]</use>
    </presentation>
    <symbol name="suc1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtCARDINAL" name="Nat2"/>
            <OMS cd="ExtCARDINAL" name="Pos1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="suc1">
      <use format="Hets">[suc]</use>
    </presentation>
  </theory>
  <private for="ExtCARDINAL">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"ExtTotalOrder" Type:"GlobalDef" Origin:"DGSpecInst ExtTotalOrder"
From:"ExtCARDINAL_A" Type:"GlobalDef" Origin:"DGFitSpec"
From:"ExtCARDINAL_P" Type:"GlobalDef" Origin:"DGSpecInst ExtTotalOrder"
]]></data>
  </private>
  <theory xml:id="ExtINTEGER_PI">
    <presentation for="ExtINTEGER_PI">
      <use format="Hets">[ExtINTEGER,PI,0]</use>
    </presentation>
    <imports from="Basic/Numbers.omdoc#Nat"/>
  </theory>
  <private for="ExtINTEGER_PI">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="ExtINTEGER_P">
    <presentation for="ExtINTEGER_P">
      <use format="Hets">[ExtINTEGER,P,0]</use>
    </presentation>
    <imports from="#ExtINTEGER_PI"/>
    <symbol name="WordLength9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="WordLength9">
      <use format="Hets">[WordLength]</use>
    </presentation>
  </theory>
  <private for="ExtINTEGER_P">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"ExtINTEGER_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="ExtINTEGER_AA">
    <presentation for="ExtINTEGER_AA">
      <use format="Hets">[ExtINTEGER,AA,0]</use>
    </presentation>
    <imports from="#TotalOrder_in_INTEGER_VGI"/>
    <symbol name="WordLength8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="WordLength8">
      <use format="Hets">[WordLength]</use>
    </presentation>
  </theory>
  <private for="ExtINTEGER_AA">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"TotalOrder_in_INTEGER_VG" Type:"GlobalThm Open None Open" Origin:"DGSpecInst ExtTotalOrder"
From:"TotalOrder_in_INTEGER_VGI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="ExtINTEGER_A">
    <presentation for="ExtINTEGER_A">
      <use format="Hets">[ExtINTEGER,A,0]</use>
    </presentation>
    <imports from="#ExtINTEGER_AA"/>
    <imports from="#TotalOrder_in_INTEGER_T">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="N0"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="N0"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="N1"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="N1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="N2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="N2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="N3"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="N3"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="N4"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="N4"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="N5"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="N5"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="N6"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="N6"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="N7"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="N7"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="N8"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="N8"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="N9"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="N9"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="WordLength7"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="WordLength7"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="__LowerEquals__1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="__Lower__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="__GreaterEquals__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="__Greater__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="__Ast__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="__Ast__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="__AtAt__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="__AtAt__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="__DivisionQuest__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="__DivisionQuest__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="__Excla"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="__Excla"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="__MinusExcla__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="__MinusExcla__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="__MinusQuest__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="__MinusQuest__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="__Plus__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="__Plus__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="__Power__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="__Power__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="__div__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="__div__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="__mod__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="__mod__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="even"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="max"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="max"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="min"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="min"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="odd"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="pre"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="pre"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_INTEGER_T" name="suc"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER_A" name="suc"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
  </theory>
  <private for="ExtINTEGER_A">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"TotalOrder_in_INTEGER_T" Type:"GlobalDef" Origin:"DGFitViewA ExtTotalOrder"
From:"ExtINTEGER_AA" Type:"GlobalDef" Origin:"DGFitView ExtTotalOrder"
]]></data>
  </private>
  <theory xml:id="ExtINTEGER_AV">
    <presentation for="ExtINTEGER_AV">
      <use format="Hets">[ExtINTEGER,AV,0]</use>
    </presentation>
    <imports from="Basic/RelationsAndOrders.omdoc#TotalOrder"/>
  </theory>
  <private for="ExtINTEGER_AV">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_" Type:"GlobalThm Open None Open" Origin:"DGFitView ExtTotalOrder"
From:"TotalOrder" Type:"GlobalDef" Origin:"DGFitView ExtTotalOrder"
]]></data>
  </private>
  <theory xml:id="ExtINTEGER">
    <presentation for="ExtINTEGER">
      <use format="Hets">[ExtINTEGER,,0]</use>
    </presentation>
    <imports from="#ExtINTEGER_A"/>
    <imports from="#ExtINTEGER_P"/>
    <imports from="Basic/RelationsAndOrders.omdoc#ExtTotalOrder">
      <morphism hiding="Elem __&#60;=__ __&#60;__ __&#62;=__ __&#62;__ inf max min sup">
        <requation>
          <OMOBJ>
            <OMS cd="ExtTotalOrder" name="Elem2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="ExtTotalOrder" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtINTEGER" name="__LowerEquals__2"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <symbol role="sort" name="Pos2"/>
    <presentation for="Pos2">
      <use format="Hets">[Pos]</use>
    </presentation>
    <symbol role="sort" name="Nat3"/>
    <presentation for="Nat3">
      <use format="Hets">[Nat]</use>
    </presentation>
    <symbol role="sort" name="Int1"/>
    <presentation for="Int1">
      <use format="Hets">[Int]</use>
    </presentation>
    <symbol role="sort" name="INTEGER1"/>
    <presentation for="INTEGER1">
      <use format="Hets">[INTEGER]</use>
    </presentation>
    <adt>
      <sortdef name="Int1" type="free">
        <insort for="#Nat3"/>
        <insort for="#Pos2"/>
      </sortdef>
    </adt>
    <adt>
      <sortdef name="Nat3" type="free">
        <insort for="#Pos2"/>
      </sortdef>
    </adt>
    <symbol name="even2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="even2">
      <use format="Hets">[even]</use>
    </presentation>
    <symbol name="even2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="even2">
      <use format="Hets">[even]</use>
    </presentation>
    <symbol name="odd2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="odd2">
      <use format="Hets">[odd]</use>
    </presentation>
    <symbol name="odd2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="odd2">
      <use format="Hets">[odd]</use>
    </presentation>
    <symbol name="Minus__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="Minus__">
      <use format="Hets">[-,__]</use>
    </presentation>
    <symbol name="Minus__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="Minus__">
      <use format="Hets">[-,__]</use>
    </presentation>
    <symbol name="N02" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N02">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N02" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N02">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N02" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N02">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N12" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N12">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="N12" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N12">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="N12" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N12">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="N12" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Pos2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N12">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="N22" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N22">
      <use format="Hets">[2]</use>
    </presentation>
    <symbol name="N22" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N22">
      <use format="Hets">[2]</use>
    </presentation>
    <symbol name="N32" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N32">
      <use format="Hets">[3]</use>
    </presentation>
    <symbol name="N32" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N32">
      <use format="Hets">[3]</use>
    </presentation>
    <symbol name="N42" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N42">
      <use format="Hets">[4]</use>
    </presentation>
    <symbol name="N42" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N42">
      <use format="Hets">[4]</use>
    </presentation>
    <symbol name="N52" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N52">
      <use format="Hets">[5]</use>
    </presentation>
    <symbol name="N52" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N52">
      <use format="Hets">[5]</use>
    </presentation>
    <symbol name="N62" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N62">
      <use format="Hets">[6]</use>
    </presentation>
    <symbol name="N62" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N62">
      <use format="Hets">[6]</use>
    </presentation>
    <symbol name="N72" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N72">
      <use format="Hets">[7]</use>
    </presentation>
    <symbol name="N72" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N72">
      <use format="Hets">[7]</use>
    </presentation>
    <symbol name="N82" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N82">
      <use format="Hets">[8]</use>
    </presentation>
    <symbol name="N82" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N82">
      <use format="Hets">[8]</use>
    </presentation>
    <symbol name="N92" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N92">
      <use format="Hets">[9]</use>
    </presentation>
    <symbol name="N92" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N92">
      <use format="Hets">[9]</use>
    </presentation>
    <symbol name="WordLength6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="WordLength6">
      <use format="Hets">[WordLength]</use>
    </presentation>
    <symbol name="__Excla2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Excla2">
      <use format="Hets">[__,!]</use>
    </presentation>
    <symbol name="__Ast__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Ast__2">
      <use format="Hets">[__,*,__]</use>
    </presentation>
    <symbol name="__Ast__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Ast__2">
      <use format="Hets">[__,*,__]</use>
    </presentation>
    <symbol name="__Ast__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Pos2"/>
            <OMS cd="ExtINTEGER" name="Pos2"/>
            <OMS cd="ExtINTEGER" name="Pos2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Ast__2">
      <use format="Hets">[__,*,__]</use>
    </presentation>
    <symbol name="__Ast__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Ast__2">
      <use format="Hets">[__,*,__]</use>
    </presentation>
    <symbol name="__Plus__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__2">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__Plus__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__2">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__Plus__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
            <OMS cd="ExtINTEGER" name="Pos2"/>
            <OMS cd="ExtINTEGER" name="Pos2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__2">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__Plus__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Pos2"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
            <OMS cd="ExtINTEGER" name="Pos2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__2">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__Plus__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__2">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__Minus__3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__3">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__Minus__3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__3">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__Minus__3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__3">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <symbol name="__MinusExcla__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__MinusExcla__2">
      <use format="Hets">[__,-!,__]</use>
    </presentation>
    <symbol name="__MinusQuest__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__MinusQuest__2">
      <use format="Hets">[__,-?,__]</use>
    </presentation>
    <symbol name="__Division__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Division__">
      <use format="Hets">[__,/,__]</use>
    </presentation>
    <symbol name="__DivisionQuest__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__DivisionQuest__2">
      <use format="Hets">[__,/?,__]</use>
    </presentation>
    <symbol name="__DivisionQuest__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__DivisionQuest__2">
      <use format="Hets">[__,/?,__]</use>
    </presentation>
    <symbol name="__AtAt__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__AtAt__2">
      <use format="Hets">[__,@@,__]</use>
    </presentation>
    <symbol name="__Power__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Power__2">
      <use format="Hets">[__,^,__]</use>
    </presentation>
    <symbol name="__Power__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Power__2">
      <use format="Hets">[__,^,__]</use>
    </presentation>
    <symbol name="__div__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__div__2">
      <use format="Hets">[__,div,__]</use>
    </presentation>
    <symbol name="__div__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__div__2">
      <use format="Hets">[__,div,__]</use>
    </presentation>
    <symbol name="__div__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__div__2">
      <use format="Hets">[__,div,__]</use>
    </presentation>
    <symbol name="__mod__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__mod__2">
      <use format="Hets">[__,mod,__]</use>
    </presentation>
    <symbol name="__mod__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__mod__2">
      <use format="Hets">[__,mod,__]</use>
    </presentation>
    <symbol name="__mod__2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__mod__2">
      <use format="Hets">[__,mod,__]</use>
    </presentation>
    <symbol name="__quot__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__quot__">
      <use format="Hets">[__,quot,__]</use>
    </presentation>
    <symbol name="__quot__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__quot__">
      <use format="Hets">[__,quot,__]</use>
    </presentation>
    <symbol name="__rem__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__rem__">
      <use format="Hets">[__,rem,__]</use>
    </presentation>
    <symbol name="__rem__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__rem__">
      <use format="Hets">[__,rem,__]</use>
    </presentation>
    <symbol name="abs" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="abs">
      <use format="Hets">[abs]</use>
    </presentation>
    <symbol name="abs" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="abs">
      <use format="Hets">[abs]</use>
    </presentation>
    <symbol name="intToInteger" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="intToInteger">
      <use format="Hets">[intToInteger]</use>
    </presentation>
    <symbol name="integerToInt" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="integerToInt">
      <use format="Hets">[integerToInt]</use>
    </presentation>
    <symbol name="maxInteger" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="maxInteger">
      <use format="Hets">[maxInteger]</use>
    </presentation>
    <symbol name="maxInteger" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="maxInteger">
      <use format="Hets">[maxInteger]</use>
    </presentation>
    <symbol name="minInteger" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="INTEGER1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="minInteger">
      <use format="Hets">[minInteger]</use>
    </presentation>
    <symbol name="minInteger" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="minInteger">
      <use format="Hets">[minInteger]</use>
    </presentation>
    <symbol name="pre2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="pre2">
      <use format="Hets">[pre]</use>
    </presentation>
    <symbol name="sign" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
            <OMS cd="ExtINTEGER" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="sign">
      <use format="Hets">[sign]</use>
    </presentation>
    <symbol name="suc2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="suc2">
      <use format="Hets">[suc]</use>
    </presentation>
    <symbol name="suc2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="ExtINTEGER" name="Nat3"/>
            <OMS cd="ExtINTEGER" name="Pos2"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="suc2">
      <use format="Hets">[suc]</use>
    </presentation>
  </theory>
  <private for="ExtINTEGER">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"ExtTotalOrder" Type:"GlobalDef" Origin:"DGSpecInst ExtTotalOrder"
From:"ExtINTEGER_A" Type:"GlobalDef" Origin:"DGFitSpec"
From:"ExtINTEGER_P" Type:"GlobalDef" Origin:"DGSpecInst ExtTotalOrder"
]]></data>
  </private>
  <theory xml:id="ExtTwoComplement_PI">
    <presentation for="ExtTwoComplement_PI">
      <use format="Hets">[ExtTwoComplement,PI,0]</use>
    </presentation>
    <imports from="Basic/Numbers.omdoc#Nat"/>
  </theory>
  <private for="ExtTwoComplement_PI">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat" Type:"GlobalDef" Origin:"DGUnion"
]]></data>
  </private>
  <theory xml:id="ExtTwoComplement_P">
    <presentation for="ExtTwoComplement_P">
      <use format="Hets">[ExtTwoComplement,P,0]</use>
    </presentation>
    <imports from="#ExtTwoComplement_PI"/>
    <symbol name="WordLength12" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="WordLength12">
      <use format="Hets">[WordLength]</use>
    </presentation>
  </theory>
  <private for="ExtTwoComplement_P">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"ExtTwoComplement_PI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="ExtTwoComplement_AA">
    <presentation for="ExtTwoComplement_AA">
      <use format="Hets">[ExtTwoComplement,AA,0]</use>
    </presentation>
    <imports from="#TotalOrder_in_TwoComplement_VGI"/>
    <symbol name="WordLength11" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="WordLength11">
      <use format="Hets">[WordLength]</use>
    </presentation>
  </theory>
  <private for="ExtTwoComplement_AA">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"TotalOrder_in_TwoComplement_VG" Type:"GlobalThm Open None Open" Origin:"DGSpecInst ExtTotalOrder"
From:"TotalOrder_in_TwoComplement_VGI" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="ExtTwoComplement_A">
    <presentation for="ExtTwoComplement_A">
      <use format="Hets">[ExtTwoComplement,A,0]</use>
    </presentation>
    <imports from="#ExtTwoComplement_AA"/>
    <imports from="#TotalOrder_in_TwoComplement_T">
      <morphism hiding="">
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="N0"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="N0"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="N1"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="N1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="N2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="N2"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="N3"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="N3"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="N4"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="N4"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="N5"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="N5"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="N6"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="N6"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="N7"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="N7"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="N8"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="N8"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="N9"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="N9"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="WordLength10"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="WordLength10"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="__LowerEquals__1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="__&#60;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="__Lower__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="__&#62;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="__GreaterEquals__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="__&#62;__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="__Greater__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="__Ast__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="__Ast__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="__AtAt__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="__AtAt__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="__DivisionQuest__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="__DivisionQuest__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="__Excla"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="__Excla"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="__MinusExcla__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="__MinusExcla__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="__MinusQuest__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="__MinusQuest__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="__Plus__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="__Plus__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="__Power__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="__Power__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="__div__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="__div__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="__mod__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="__mod__"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="even"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="even"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="max"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="max"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="min"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="min"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="odd"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="odd"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="pre"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="pre"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="suc"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement_A" name="suc"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
  </theory>
  <private for="ExtTwoComplement_A">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"TotalOrder_in_TwoComplement_T" Type:"GlobalDef" Origin:"DGFitViewA ExtTotalOrder"
From:"ExtTwoComplement_AA" Type:"GlobalDef" Origin:"DGFitView ExtTotalOrder"
]]></data>
  </private>
  <theory xml:id="ExtTwoComplement_AV">
    <presentation for="ExtTwoComplement_AV">
      <use format="Hets">[ExtTwoComplement,AV,0]</use>
    </presentation>
    <imports from="Basic/RelationsAndOrders.omdoc#TotalOrder"/>
  </theory>
  <private for="ExtTwoComplement_AV">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"AnonNode_" Type:"GlobalThm Open None Open" Origin:"DGFitView ExtTotalOrder"
From:"TotalOrder" Type:"GlobalDef" Origin:"DGFitView ExtTotalOrder"
]]></data>
  </private>
  <theory xml:id="ExtTwoComplement">
    <presentation for="ExtTwoComplement">
      <use format="Hets">[ExtTwoComplement,,0]</use>
    </presentation>
    <imports from="Basic/RelationsAndOrders.omdoc#ExtTotalOrder">
      <morphism hiding="Elem __&#60;=__ __&#60;__ __&#62;=__ __&#62;__ inf max min sup">
        <requation>
          <OMOBJ>
            <OMS cd="ExtTotalOrder" name="Elem2"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement" name="TwoComplement1"/>
          </OMOBJ>
        </requation>
        <requation>
          <OMOBJ>
            <OMS cd="ExtTotalOrder" name="__&#60;=__"/>
          </OMOBJ>
          <OMOBJ>
            <OMS cd="ExtTwoComplement" name="__LowerEquals__1"/>
          </OMOBJ>
        </requation>
      </morphism>
    </imports>
    <imports from="#ExtTwoComplement_A"/>
    <imports from="#ExtTwoComplement_P"/>
    <symbol name="inf1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="TwoComplement1"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="TwoComplement1"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="TwoComplement1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="inf1">
      <use format="Hets">[inf]</use>
    </presentation>
    <symbol name="sup1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="TwoComplement1"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="TwoComplement1"/>
            <OMS cd="TotalOrder_in_TwoComplement_T" name="TwoComplement1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="sup1">
      <use format="Hets">[sup]</use>
    </presentation>
  </theory>
  <private for="ExtTwoComplement">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"ExtTwoComplement_A" Type:"GlobalDef" Origin:"DGFitSpec"
From:"ExtTwoComplement_P" Type:"GlobalDef" Origin:"DGSpecInst ExtTotalOrder"
From:"ExtTotalOrder" Type:"GlobalDef" Origin:"DGSpecInst ExtTotalOrder"
]]></data>
  </private>
</omdoc>
