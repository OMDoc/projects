<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE omdoc PUBLIC "-//OMDoc//DTD OMDoc V1.2//EN" "http://www.tzi.de/~hiben/omdoc/dtd/omdoc.dtd">
<omdoc xml:id="Numbers">
  <theory xml:id="Nat_E2">
    <presentation for="Nat_E2">
      <use format="Hets">[Nat,E,2]</use>
    </presentation>
    <symbol role="sort" name="Nat1"/>
    <presentation for="Nat1">
      <use format="Hets">[Nat]</use>
    </presentation>
    <adt>
      <sortdef name="Nat1" type="free">
        <constructor name="N01"/>
        <constructor name="suc1">
          <argument>
            <type>
              <OMOBJ>
                <OMS cd="Nat_E2" name="Nat1"/>
              </OMOBJ>
            </type>
          </argument>
        </constructor>
      </sortdef>
    </adt>
    <symbol name="__Lower__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Lower__">
      <use format="Hets">[__,&#60;,__]</use>
    </presentation>
    <symbol name="__LowerEquals__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__LowerEquals__">
      <use format="Hets">[__,&#60;=,__]</use>
    </presentation>
    <symbol name="__Greater__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Greater__">
      <use format="Hets">[__,&#62;,__]</use>
    </presentation>
    <symbol name="__GreaterEquals__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__GreaterEquals__">
      <use format="Hets">[__,&#62;=,__]</use>
    </presentation>
    <symbol name="even" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="even">
      <use format="Hets">[even]</use>
    </presentation>
    <symbol name="odd" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="odd">
      <use format="Hets">[odd]</use>
    </presentation>
    <symbol name="N0" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N0">
      <use format="Hets">[0]</use>
    </presentation>
    <symbol name="N1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N1">
      <use format="Hets">[1]</use>
    </presentation>
    <symbol name="N2" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N2">
      <use format="Hets">[2]</use>
    </presentation>
    <symbol name="N3" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N3">
      <use format="Hets">[3]</use>
    </presentation>
    <symbol name="N4" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N4">
      <use format="Hets">[4]</use>
    </presentation>
    <symbol name="N5" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N5">
      <use format="Hets">[5]</use>
    </presentation>
    <symbol name="N6" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N6">
      <use format="Hets">[6]</use>
    </presentation>
    <symbol name="N7" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N7">
      <use format="Hets">[7]</use>
    </presentation>
    <symbol name="N8" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N8">
      <use format="Hets">[8]</use>
    </presentation>
    <symbol name="N9" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="N9">
      <use format="Hets">[9]</use>
    </presentation>
    <symbol name="__Excla" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Excla">
      <use format="Hets">[__,!]</use>
    </presentation>
    <symbol name="__Ast__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Ast__">
      <use format="Hets">[__,*,__]</use>
    </presentation>
    <symbol name="__Plus__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Plus__">
      <use format="Hets">[__,+,__]</use>
    </presentation>
    <symbol name="__MinusExcla__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__MinusExcla__">
      <use format="Hets">[__,-!,__]</use>
    </presentation>
    <symbol name="__MinusQuest__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__MinusQuest__">
      <use format="Hets">[__,-?,__]</use>
    </presentation>
    <symbol name="__DivisionQuest__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__DivisionQuest__">
      <use format="Hets">[__,/?,__]</use>
    </presentation>
    <symbol name="__AtAt__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__AtAt__">
      <use format="Hets">[__,@@,__]</use>
    </presentation>
    <symbol name="__Power__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Power__">
      <use format="Hets">[__,^,__]</use>
    </presentation>
    <symbol name="__div__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__div__">
      <use format="Hets">[__,div,__]</use>
    </presentation>
    <symbol name="__mod__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__mod__">
      <use format="Hets">[__,mod,__]</use>
    </presentation>
    <symbol name="max" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="max">
      <use format="Hets">[max]</use>
    </presentation>
    <symbol name="min" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="min">
      <use format="Hets">[min]</use>
    </presentation>
    <symbol name="pre" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="pre">
      <use format="Hets">[pre]</use>
    </presentation>
    <symbol name="suc" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="suc">
      <use format="Hets">[suc]</use>
    </presentation>
    <axiom name="N1_def_Nat">
      <CMP>
  ops  1: Nat = suc (0);                      %(1_def_Nat)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMS cd="Nat_E2" name="N1"/>
            <OMA>
              <OMS cd="Nat_E2" name="suc"/>
              <OMS cd="Nat_E2" name="N0"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="N1_def_Nat">
      <use format="Hets">1_def_Nat</use>
    </presentation>
    <axiom name="N2_def_Nat">
      <CMP>
       2: Nat = suc (1);                      %(2_def_Nat)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMS cd="Nat_E2" name="N2"/>
            <OMA>
              <OMS cd="Nat_E2" name="suc"/>
              <OMS cd="Nat_E2" name="N1"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="N2_def_Nat">
      <use format="Hets">2_def_Nat</use>
    </presentation>
    <axiom name="N3_def_Nat">
      <CMP>
       3: Nat = suc (2);                      %(3_def_Nat)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMS cd="Nat_E2" name="N3"/>
            <OMA>
              <OMS cd="Nat_E2" name="suc"/>
              <OMS cd="Nat_E2" name="N2"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="N3_def_Nat">
      <use format="Hets">3_def_Nat</use>
    </presentation>
    <axiom name="N4_def_Nat">
      <CMP>
       4: Nat = suc (3);                      %(4_def_Nat)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMS cd="Nat_E2" name="N4"/>
            <OMA>
              <OMS cd="Nat_E2" name="suc"/>
              <OMS cd="Nat_E2" name="N3"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="N4_def_Nat">
      <use format="Hets">4_def_Nat</use>
    </presentation>
    <axiom name="N5_def_Nat">
      <CMP>
       5: Nat = suc (4);                      %(5_def_Nat)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMS cd="Nat_E2" name="N5"/>
            <OMA>
              <OMS cd="Nat_E2" name="suc"/>
              <OMS cd="Nat_E2" name="N4"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="N5_def_Nat">
      <use format="Hets">5_def_Nat</use>
    </presentation>
    <axiom name="N6_def_Nat">
      <CMP>
       6: Nat = suc (5);                      %(6_def_Nat)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMS cd="Nat_E2" name="N6"/>
            <OMA>
              <OMS cd="Nat_E2" name="suc"/>
              <OMS cd="Nat_E2" name="N5"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="N6_def_Nat">
      <use format="Hets">6_def_Nat</use>
    </presentation>
    <axiom name="N7_def_Nat">
      <CMP>
       7: Nat = suc (6);                      %(7_def_Nat)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMS cd="Nat_E2" name="N7"/>
            <OMA>
              <OMS cd="Nat_E2" name="suc"/>
              <OMS cd="Nat_E2" name="N6"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="N7_def_Nat">
      <use format="Hets">7_def_Nat</use>
    </presentation>
    <axiom name="N8_def_Nat">
      <CMP>
       8: Nat = suc (7);                      %(8_def_Nat)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMS cd="Nat_E2" name="N8"/>
            <OMA>
              <OMS cd="Nat_E2" name="suc"/>
              <OMS cd="Nat_E2" name="N7"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="N8_def_Nat">
      <use format="Hets">8_def_Nat</use>
    </presentation>
    <axiom name="N9_def_Nat">
      <CMP>
       9: Nat = suc (8);                      %(9_def_Nat)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMS cd="Nat_E2" name="N9"/>
            <OMA>
              <OMS cd="Nat_E2" name="suc"/>
              <OMS cd="Nat_E2" name="N8"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="N9_def_Nat">
      <use format="Hets">9_def_Nat</use>
    </presentation>
    <axiom name="add_0_Nat">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMS cd="Nat_E2" name="N0"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="add_0_Nat">
      <use format="Hets">add_0_Nat</use>
    </presentation>
    <axiom name="add_suc_Nat">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="suc"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="suc"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Plus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="add_suc_Nat">
      <use format="Hets">add_suc_Nat</use>
    </presentation>
    <axiom name="decimal_def">
      <CMP>
       __ @@ __ (m:Nat;n:Nat): Nat = (m * suc(9)) + n   %(decimal_def)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__AtAt__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMA>
                    <OMS cd="Nat_E2" name="suc"/>
                    <OMS cd="Nat_E2" name="N9"/>
                  </OMA>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="decimal_def">
      <use format="Hets">decimal_def</use>
    </presentation>
    <axiom name="distr1_Nat">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="r"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="s"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="t"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Plus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="r"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="s"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="t"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="r"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="t"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="s"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="t"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="distr1_Nat">
      <use format="Hets">distr1_Nat</use>
    </presentation>
    <axiom name="distr2_Nat">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="r"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="s"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="t"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="t"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat_E2" name="__Plus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="r"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="s"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="t"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="r"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="t"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="s"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="distr2_Nat">
      <use format="Hets">distr2_Nat</use>
    </presentation>
    <axiom name="div_Nat">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="r"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__div__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="r"/>
                </OMATTR>
              </OMA>
              <OMBIND>
                <OMS cd="casl" name="existential"/>
                <OMBVAR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="s"/>
                  </OMATTR>
                </OMBVAR>
                <OMA>
                  <OMS cd="casl" name="conjunction"/>
                  <OMA>
                    <OMS cd="casl" name="strong-equation"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="m"/>
                    </OMATTR>
                    <OMA>
                      <OMS cd="Nat_E2" name="__Plus__"/>
                      <OMA>
                        <OMS cd="Nat_E2" name="__Ast__"/>
                        <OMATTR>
                          <OMATP>
                            <OMS cd="casl" name="type"/>
                            <OMS cd="Nat_E2" name="Nat1"/>
                          </OMATP>
                          <OMV name="n"/>
                        </OMATTR>
                        <OMATTR>
                          <OMATP>
                            <OMS cd="casl" name="type"/>
                            <OMS cd="Nat_E2" name="Nat1"/>
                          </OMATP>
                          <OMV name="r"/>
                        </OMATTR>
                      </OMA>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Nat_E2" name="Nat1"/>
                        </OMATP>
                        <OMV name="s"/>
                      </OMATTR>
                    </OMA>
                  </OMA>
                  <OMA>
                    <OMS cd="casl" name="predication"/>
                    <OMS cd="Nat_E2" name="__Lower__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="s"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="n"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMBIND>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="div_Nat">
      <use format="Hets">div_Nat</use>
    </presentation>
    <axiom name="div_dom_Nat">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__div__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                  <OMS cd="Nat_E2" name="N0"/>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="div_dom_Nat">
      <use format="Hets">div_dom_Nat</use>
    </presentation>
    <axiom name="divide_0_Nat">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__DivisionQuest__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMS cd="Nat_E2" name="N0"/>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="divide_0_Nat">
      <use format="Hets">divide_0_Nat</use>
    </presentation>
    <axiom name="divide_Pos_Nat">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="r"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__Greater__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
                <OMS cd="Nat_E2" name="N0"/>
              </OMA>
              <OMA>
                <OMS cd="casl" name="equivalence"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMA>
                    <OMS cd="Nat_E2" name="__DivisionQuest__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="m"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="n"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="r"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMA>
                    <OMS cd="Nat_E2" name="__Ast__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="r"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="n"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
              <OMS cd="casl" name="false"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="divide_Pos_Nat">
      <use format="Hets">divide_Pos_Nat</use>
    </presentation>
    <axiom name="divide_dom_Nat">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__DivisionQuest__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="neg"/>
                  <OMA>
                    <OMS cd="casl" name="strong-equation"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="n"/>
                    </OMATTR>
                    <OMS cd="Nat_E2" name="N0"/>
                  </OMA>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMA>
                    <OMS cd="Nat_E2" name="__mod__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="m"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="n"/>
                    </OMATTR>
                  </OMA>
                  <OMS cd="Nat_E2" name="N0"/>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="divide_dom_Nat">
      <use format="Hets">divide_dom_Nat</use>
    </presentation>
    <axiom name="even_0_Nat">
      <CMP>
     . even(0)                          %(even_0_Nat)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="predication"/>
            <OMS cd="Nat_E2" name="even"/>
            <OMS cd="Nat_E2" name="N0"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="even_0_Nat">
      <use format="Hets">even_0_Nat</use>
    </presentation>
    <axiom name="even_suc_Nat">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="even"/>
                <OMA>
                  <OMS cd="Nat_E2" name="suc"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="odd"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="even_suc_Nat">
      <use format="Hets">even_suc_Nat</use>
    </presentation>
    <axiom name="factorial_0">
      <CMP>
     . 0! = 1                           %(factorial_0)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMA>
              <OMS cd="Nat_E2" name="__Excla"/>
              <OMS cd="Nat_E2" name="N0"/>
            </OMA>
            <OMS cd="Nat_E2" name="N1"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="factorial_0">
      <use format="Hets">factorial_0</use>
    </presentation>
    <axiom name="factorial_suc">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Excla"/>
                <OMA>
                  <OMS cd="Nat_E2" name="suc"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="suc"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat_E2" name="__Excla"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="factorial_suc">
      <use format="Hets">factorial_suc</use>
    </presentation>
    <axiom name="ga_assoc___Ast__1">
      <CMP>
      __*__: Nat * Nat -&#62; Nat, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="z"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="z"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="z"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_assoc___Ast__1">
      <use format="Hets">ga_assoc___*__</use>
    </presentation>
    <axiom name="ga_assoc___Plus__1">
      <CMP>
  ops __+__: Nat * Nat -&#62; Nat, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="z"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat_E2" name="__Plus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="z"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Plus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="z"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_assoc___Plus__1">
      <use format="Hets">ga_assoc___+__</use>
    </presentation>
    <axiom name="ga_assoc_max1">
      <CMP>
      max:   Nat * Nat -&#62; Nat, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="z"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="max"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat_E2" name="max"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="z"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="max"/>
                <OMA>
                  <OMS cd="Nat_E2" name="max"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="z"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_assoc_max1">
      <use format="Hets">ga_assoc_max</use>
    </presentation>
    <axiom name="ga_assoc_min1">
      <CMP>
      min:   Nat * Nat -&#62; Nat, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="z"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="min"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat_E2" name="min"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="z"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="min"/>
                <OMA>
                  <OMS cd="Nat_E2" name="min"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="z"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_assoc_min1">
      <use format="Hets">ga_assoc_min</use>
    </presentation>
    <axiom name="ga_comm___Ast__1">
      <CMP>
      __*__: Nat * Nat -&#62; Nat, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_comm___Ast__1">
      <use format="Hets">ga_comm___*__</use>
    </presentation>
    <axiom name="ga_comm___Plus__1">
      <CMP>
  ops __+__: Nat * Nat -&#62; Nat, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_comm___Plus__1">
      <use format="Hets">ga_comm___+__</use>
    </presentation>
    <axiom name="ga_comm_max1">
      <CMP>
      max:   Nat * Nat -&#62; Nat, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="max"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="max"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_comm_max1">
      <use format="Hets">ga_comm_max</use>
    </presentation>
    <axiom name="ga_comm_min1">
      <CMP>
      min:   Nat * Nat -&#62; Nat, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="min"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="min"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_comm_min1">
      <use format="Hets">ga_comm_min</use>
    </presentation>
    <axiom name="ga_disjoint_0_suc">
      <CMP>
  free type Nat ::= 0 | suc(pre:? Nat)
  free type Nat ::= 0 | suc(pre:? Nat)
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMS cd="Nat_E2" name="N0"/>
                <OMA>
                  <OMS cd="Nat_E2" name="suc"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_disjoint_0_suc">
      <use format="Hets">ga_disjoint_0_suc</use>
    </presentation>
    <axiom name="ga_injective_suc">
      <CMP>
  free type Nat ::= 0 | suc(pre:? Nat)
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="Y1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Nat_E2" name="suc"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat_E2" name="suc"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="Y1"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="X1"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="Y1"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_injective_suc">
      <use format="Hets">ga_injective_suc</use>
    </presentation>
    <axiom name="ga_left_unit___Ast__1">
      <CMP>
      __*__: Nat * Nat -&#62; Nat, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMS cd="Nat_E2" name="N1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_left_unit___Ast__1">
      <use format="Hets">ga_left_unit___*__</use>
    </presentation>
    <axiom name="ga_left_unit___Plus__1">
      <CMP>
  ops __+__: Nat * Nat -&#62; Nat, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMS cd="Nat_E2" name="N0"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_left_unit___Plus__1">
      <use format="Hets">ga_left_unit___+__</use>
    </presentation>
    <axiom name="ga_left_unit_max">
      <CMP>
      max:   Nat * Nat -&#62; Nat, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="max"/>
                <OMS cd="Nat_E2" name="N0"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_left_unit_max">
      <use format="Hets">ga_left_unit_max</use>
    </presentation>
    <axiom name="ga_right_unit___Ast__1">
      <CMP>
      __*__: Nat * Nat -&#62; Nat, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMS cd="Nat_E2" name="N1"/>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_right_unit___Ast__1">
      <use format="Hets">ga_right_unit___*__</use>
    </presentation>
    <axiom name="ga_right_unit___Plus__1">
      <CMP>
  ops __+__: Nat * Nat -&#62; Nat, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMS cd="Nat_E2" name="N0"/>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_right_unit___Plus__1">
      <use format="Hets">ga_right_unit___+__</use>
    </presentation>
    <axiom name="ga_right_unit_max">
      <CMP>
      max:   Nat * Nat -&#62; Nat, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="max"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMS cd="Nat_E2" name="N0"/>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_right_unit_max">
      <use format="Hets">ga_right_unit_max</use>
    </presentation>
    <axiom name="ga_selector_pre">
      <CMP>
  free type Nat ::= 0 | suc(pre:? Nat)
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="pre"/>
                <OMA>
                  <OMS cd="Nat_E2" name="suc"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="X1"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="X1"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_pre">
      <use format="Hets">ga_selector_pre</use>
    </presentation>
    <axiom name="ga_selector_undef_pre_0">
      <CMP>
  free type Nat ::= 0 | suc(pre:? Nat)
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="neg"/>
            <OMA>
              <OMS cd="casl" name="definedness"/>
              <OMA>
                <OMS cd="Nat_E2" name="pre"/>
                <OMS cd="Nat_E2" name="N0"/>
              </OMA>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_selector_undef_pre_0">
      <use format="Hets">ga_selector_undef_pre_0</use>
    </presentation>
    <axiom name="geq_def_Nat">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__GreaterEquals__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__LowerEquals__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="geq_def_Nat">
      <use format="Hets">geq_def_Nat</use>
    </presentation>
    <axiom name="greater_def_Nat">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__Greater__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__Lower__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="greater_def_Nat">
      <use format="Hets">greater_def_Nat</use>
    </presentation>
    <axiom name="leq_def1_Nat">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="predication"/>
              <OMS cd="Nat_E2" name="__LowerEquals__"/>
              <OMS cd="Nat_E2" name="N0"/>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="leq_def1_Nat">
      <use format="Hets">leq_def1_Nat</use>
    </presentation>
    <axiom name="leq_def2_Nat">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__LowerEquals__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="suc"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
                <OMS cd="Nat_E2" name="N0"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="leq_def2_Nat">
      <use format="Hets">leq_def2_Nat</use>
    </presentation>
    <axiom name="leq_def3_Nat">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__LowerEquals__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="suc"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat_E2" name="suc"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__LowerEquals__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="leq_def3_Nat">
      <use format="Hets">leq_def3_Nat</use>
    </presentation>
    <axiom name="less_def_Nat">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__Lower__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Nat_E2" name="__LowerEquals__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="neg"/>
                  <OMA>
                    <OMS cd="casl" name="strong-equation"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="m"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="n"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="less_def_Nat">
      <use format="Hets">less_def_Nat</use>
    </presentation>
    <axiom name="max_def_Nat">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="max"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="IfThenElse"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Nat_E2" name="__LowerEquals__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="max_def_Nat">
      <use format="Hets">max_def_Nat</use>
    </presentation>
    <axiom name="min_def_Nat">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="min"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="IfThenElse"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Nat_E2" name="__LowerEquals__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="min_def_Nat">
      <use format="Hets">min_def_Nat</use>
    </presentation>
    <axiom name="mod_Nat">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="s"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__mod__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="s"/>
                </OMATTR>
              </OMA>
              <OMBIND>
                <OMS cd="casl" name="existential"/>
                <OMBVAR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="r"/>
                  </OMATTR>
                </OMBVAR>
                <OMA>
                  <OMS cd="casl" name="conjunction"/>
                  <OMA>
                    <OMS cd="casl" name="strong-equation"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="m"/>
                    </OMATTR>
                    <OMA>
                      <OMS cd="Nat_E2" name="__Plus__"/>
                      <OMA>
                        <OMS cd="Nat_E2" name="__Ast__"/>
                        <OMATTR>
                          <OMATP>
                            <OMS cd="casl" name="type"/>
                            <OMS cd="Nat_E2" name="Nat1"/>
                          </OMATP>
                          <OMV name="n"/>
                        </OMATTR>
                        <OMATTR>
                          <OMATP>
                            <OMS cd="casl" name="type"/>
                            <OMS cd="Nat_E2" name="Nat1"/>
                          </OMATP>
                          <OMV name="r"/>
                        </OMATTR>
                      </OMA>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Nat_E2" name="Nat1"/>
                        </OMATP>
                        <OMV name="s"/>
                      </OMATTR>
                    </OMA>
                  </OMA>
                  <OMA>
                    <OMS cd="casl" name="predication"/>
                    <OMS cd="Nat_E2" name="__Lower__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="s"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="n"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMBIND>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="mod_Nat">
      <use format="Hets">mod_Nat</use>
    </presentation>
    <axiom name="mod_dom_Nat">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__mod__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                  <OMS cd="Nat_E2" name="N0"/>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="mod_dom_Nat">
      <use format="Hets">mod_dom_Nat</use>
    </presentation>
    <axiom name="mult_0_Nat">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMS cd="Nat_E2" name="N0"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
              </OMA>
              <OMS cd="Nat_E2" name="N0"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="mult_0_Nat">
      <use format="Hets">mult_0_Nat</use>
    </presentation>
    <axiom name="mult_suc_Nat">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="suc"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="mult_suc_Nat">
      <use format="Hets">mult_suc_Nat</use>
    </presentation>
    <axiom name="odd_def_Nat">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="odd"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Nat_E2" name="even"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="odd_def_Nat">
      <use format="Hets">odd_def_Nat</use>
    </presentation>
    <axiom name="power_0_Nat">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Power__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMS cd="Nat_E2" name="N0"/>
              </OMA>
              <OMS cd="Nat_E2" name="N1"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="power_0_Nat">
      <use format="Hets">power_0_Nat</use>
    </presentation>
    <axiom name="power_suc_Nat">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Power__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat_E2" name="suc"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat_E2" name="__Power__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="power_suc_Nat">
      <use format="Hets">power_suc_Nat</use>
    </presentation>
    <axiom name="subTotal_def1_Nat">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__Greater__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__MinusExcla__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                </OMA>
                <OMS cd="Nat_E2" name="N0"/>
              </OMA>
              <OMS cd="casl" name="false"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="subTotal_def1_Nat">
      <use format="Hets">subTotal_def1_Nat</use>
    </presentation>
    <axiom name="subTotal_def2_Nat">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__LowerEquals__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__MinusExcla__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat_E2" name="__MinusQuest__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMS cd="casl" name="false"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="subTotal_def2_Nat">
      <use format="Hets">subTotal_def2_Nat</use>
    </presentation>
    <axiom name="sub_def_Nat">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="r"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__MinusQuest__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="r"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat_E2" name="__Plus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="r"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="sub_def_Nat">
      <use format="Hets">sub_def_Nat</use>
    </presentation>
    <axiom name="sub_dom_Nat">
      <CMP>
  forall m,n,r,s,t : Nat
     . 0 &#60;= n                           %(leq_def1_Nat)%
     . not suc(n) &#60;= 0                  %(leq_def2_Nat)%
     . suc(m) &#60;= suc(n) &#60;=&#62; m &#60;= n      %(leq_def3_Nat)%
     . m &#62;= n &#60;=&#62; n &#60;= m                %(geq_def_Nat)%
     . m &#60; n  &#60;=&#62; (m &#60;= n /\ not m=n)   %(less_def_Nat)%
     . m &#62; n  &#60;=&#62; n &#60; m                 %(greater_def_Nat)%
     . even(0)                          %(even_0_Nat)%
     . even(suc(m)) &#60;=&#62; odd(m)          %(even_suc_Nat)%
     . odd(m) &#60;=&#62; not even(m)           %(odd_def_Nat)%
     . 0! = 1                           %(factorial_0)%
     . suc(n)! =suc(n)*n!               %(factorial_suc)%
     . 0 + m = m                        %(add_0_Nat)%
     . suc(n) + m = suc(n + m)          %(add_suc_Nat)%
     . 0 * m = 0                        %(mult_0_Nat)%
     . suc(n) * m = (n * m) + m         %(mult_suc_Nat)%
     . m ^ 0 = 1                        %(power_0_Nat)%
     . m ^ suc(n)  = m * m ^ n          %(power_suc_Nat)%
     . min(m,n) = m when m &#60;= n else n  %(min_def_Nat)%
     . max(m,n) = n when m &#60;= n else m  %(max_def_Nat)%
     . n -! m = 0      if m &#62;  n        %(subTotal_def1_Nat)%
     . n -! m = n -? m if m &#60;= n        %(subTotal_def2_Nat)%
     . def(m-?n) &#60;=&#62; m &#62;= n             %(sub_dom_Nat)% %implied 
     . m -? n = r &#60;=&#62; m = r + n         %(sub_def_Nat)%
     . def(m /? n) &#60;=&#62; 
     . not def(m /? 0)                      %(divide_0_Nat)%
     . ( m /? n = r &#60;=&#62; m = r * n ) if n&#62;0  %(divide_Pos_Nat)%
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Nat)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Nat)% %implied 
     . m mod n = s &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Nat)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Nat)% %implied
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__MinusQuest__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__GreaterEquals__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="sub_dom_Nat">
      <use format="Hets">sub_dom_Nat</use>
    </presentation>
  </theory>
  <theory xml:id="Nat_E1">
    <presentation for="Nat_E1">
      <use format="Hets">[Nat,E,1]</use>
    </presentation>
    <imports from="#Nat_E2"/>
    <symbol role="sort" name="Pos"/>
    <presentation for="Pos">
      <use format="Hets">[Pos]</use>
    </presentation>
    <adt>
      <sortdef name="Nat1" type="free">
        <insort for="#Pos"/>
      </sortdef>
    </adt>
    <axiom name="N1_as_Pos_def">
      <CMP>
           1: Pos = suc(0);             %(1_as_Pos_def)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="strong-equation"/>
            <OMS cd="Nat_E2" name="N1"/>
            <OMA>
              <OMS cd="Nat_E2" name="suc"/>
              <OMS cd="Nat_E2" name="N0"/>
            </OMA>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="N1_as_Pos_def">
      <use format="Hets">1_as_Pos_def</use>
    </presentation>
    <axiom name="Pos_def">
      <CMP>
     sort Pos = { p: Nat . p &#62; 0 } %(Pos_def)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="p"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="membership"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="p"/>
                </OMATTR>
                <OMS cd="Nat_E1" name="Pos"/>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__Greater__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="p"/>
                </OMATTR>
                <OMS cd="Nat_E2" name="N0"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Pos_def">
      <use format="Hets">Pos_def</use>
    </presentation>
  </theory>
  <private for="Nat_E1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat" Type:"GlobalThm Open None Open" Origin:"DGExtension"
From:"Nat_E2" Type:"GlobalDef" Origin:"DGExtension"
From:"Nat_E2" Type:"GlobalThm Open Mono Open" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Nat">
    <presentation for="Nat">
      <use format="Hets">[Nat,,0]</use>
    </presentation>
    <imports from="#Nat_E1"/>
    <axiom name="div_mod_Nat">
      <CMP>
     forall m,n,r,s:Nat
     . min(m,0)=0                                  %(min_0)% 
     . m = (m div n) * n + (m mod n) if not n = 0  %(div_mod_Nat)%
     . m ^(r+s) = m^r * m^s                        %(power_Nat)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                  <OMS cd="Nat_E2" name="N0"/>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat_E2" name="__Plus__"/>
                  <OMA>
                    <OMS cd="Nat_E2" name="__Ast__"/>
                    <OMA>
                      <OMS cd="Nat_E2" name="__div__"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Nat_E2" name="Nat1"/>
                        </OMATP>
                        <OMV name="m"/>
                      </OMATTR>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Nat_E2" name="Nat1"/>
                        </OMATP>
                        <OMV name="n"/>
                      </OMATTR>
                    </OMA>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="n"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="Nat_E2" name="__mod__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="m"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="n"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
              <OMS cd="casl" name="false"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="div_mod_Nat">
      <use format="Hets">div_mod_Nat</use>
    </presentation>
    <axiom name="min_0">
      <CMP>
     forall m,n,r,s:Nat
     . min(m,0)=0                                  %(min_0)% 
     . m = (m div n) * n + (m mod n) if not n = 0  %(div_mod_Nat)%
     . m ^(r+s) = m^r * m^s                        %(power_Nat)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="min"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMS cd="Nat_E2" name="N0"/>
              </OMA>
              <OMS cd="Nat_E2" name="N0"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="min_0">
      <use format="Hets">min_0</use>
    </presentation>
    <axiom name="power_Nat">
      <CMP>
     forall m,n,r,s:Nat
     . min(m,0)=0                                  %(min_0)% 
     . m = (m div n) * n + (m mod n) if not n = 0  %(div_mod_Nat)%
     . m ^(r+s) = m^r * m^s                        %(power_Nat)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="r"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="s"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Power__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat_E2" name="__Plus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="r"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="s"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Power__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="r"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat_E2" name="__Power__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="s"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="power_Nat">
      <use format="Hets">power_Nat</use>
    </presentation>
  </theory>
  <private for="Nat">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat_E1" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Int_E2">
    <presentation for="Int_E2">
      <use format="Hets">[Int,E,2]</use>
    </presentation>
    <imports from="#Nat"/>
    <symbol role="sort" name="Int1"/>
    <presentation for="Int1">
      <use format="Hets">[Int]</use>
    </presentation>
    <adt>
      <sortdef name="Int1" type="free">
        <insort for="#Nat1"/>
        <insort for="#Pos"/>
      </sortdef>
    </adt>
    <symbol name="__Minus__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Int_E2" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Minus__">
      <use format="Hets">[__,-,__]</use>
    </presentation>
    <axiom name="Nat2Int_embedding">
      <CMP>
     forall a: Nat . a = a - 0             %(Nat2Int_embedding)%
     forall a: Nat . a = a - 0             %(Nat2Int_embedding)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="a"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="a"/>
              </OMATTR>
              <OMA>
                <OMS cd="Int_E2" name="__Minus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="a"/>
                </OMATTR>
                <OMS cd="Nat_E2" name="N0"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Nat2Int_embedding">
      <use format="Hets">Nat2Int_embedding</use>
    </presentation>
    <axiom name="equality_Int">
      <CMP>
     forall a,b,c,d: Nat
     .  a - b = c - d &#60;=&#62; a + d = c + b    %(equality_Int)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="a"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="b"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="c"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="d"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Int_E2" name="__Minus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="a"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="b"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Int_E2" name="__Minus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="c"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="d"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Plus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="a"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="d"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat_E2" name="__Plus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="c"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="b"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="equality_Int">
      <use format="Hets">equality_Int</use>
    </presentation>
    <axiom name="ga_generated_Int">
      <CMP/>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="sort-gen-ax"/>
            <OMBIND>
              <OMS cd="casl" name="Int"/>
              <OMBVAR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="constraint-indices"/>
                    <OMSTR>-1|-1|</OMSTR>
                  </OMATP>
                  <OMS cd="Int_E2" name="__Minus__"/>
                </OMATTR>
              </OMBVAR>
              <OMS cd="casl" name="Int"/>
            </OMBIND>
            <OMS cd="casl" name="false"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_generated_Int">
      <use format="Hets">ga_generated_Int</use>
    </presentation>
  </theory>
  <private for="Int_E2">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Nat" Type:"GlobalDef" Origin:"DGExtension"
From:"Nat" Type:"GlobalThm Open Mono Open" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Int_E1">
    <presentation for="Int_E1">
      <use format="Hets">[Int,E,1]</use>
    </presentation>
    <imports from="#Int_E2"/>
    <symbol name="Minus__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Int_E2" name="Int1"/>
            <OMS cd="Int_E2" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="Minus__">
      <use format="Hets">[-,__]</use>
    </presentation>
    <symbol name="__quot__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Int_E2" name="Int1"/>
            <OMS cd="Int_E2" name="Int1"/>
            <OMS cd="Int_E2" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__quot__">
      <use format="Hets">[__,quot,__]</use>
    </presentation>
    <symbol name="__rem__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="partial-function"/>
            <OMS cd="Int_E2" name="Int1"/>
            <OMS cd="Int_E2" name="Int1"/>
            <OMS cd="Int_E2" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__rem__">
      <use format="Hets">[__,rem,__]</use>
    </presentation>
    <symbol name="abs" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Int_E2" name="Int1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="abs">
      <use format="Hets">[abs]</use>
    </presentation>
    <symbol name="sign" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Int_E2" name="Int1"/>
            <OMS cd="Int_E2" name="Int1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="sign">
      <use format="Hets">[sign]</use>
    </presentation>
    <axiom name="abs_def_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Int_E1" name="abs"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="IfThenElse"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Nat_E2" name="__Lower__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMS cd="Nat_E2" name="N0"/>
                </OMA>
                <OMA>
                  <OMS cd="Int_E1" name="Minus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="abs_def_Int">
      <use format="Hets">abs_def_Int</use>
    </presentation>
    <axiom name="add_def_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="a"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="b"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="c"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="d"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMA>
                  <OMS cd="Int_E2" name="__Minus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="a"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="b"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Int_E2" name="__Minus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="c"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="d"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Int_E2" name="__Minus__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Plus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="a"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="c"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat_E2" name="__Plus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="b"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="d"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="add_def_Int">
      <use format="Hets">add_def_Int</use>
    </presentation>
    <axiom name="distr1_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="r"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="s"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="t"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Plus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="r"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="s"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="t"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="r"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="t"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="s"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="t"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="distr1_Int">
      <use format="Hets">distr1_Int</use>
    </presentation>
    <axiom name="distr2_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="r"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="s"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="t"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="t"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat_E2" name="__Plus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="r"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="s"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="t"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="r"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="t"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="s"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="distr2_Int">
      <use format="Hets">distr2_Int</use>
    </presentation>
    <axiom name="div_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="r"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__div__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="r"/>
                </OMATTR>
              </OMA>
              <OMBIND>
                <OMS cd="casl" name="existential"/>
                <OMBVAR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="a"/>
                  </OMATTR>
                </OMBVAR>
                <OMA>
                  <OMS cd="casl" name="conjunction"/>
                  <OMA>
                    <OMS cd="casl" name="strong-equation"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="m"/>
                    </OMATTR>
                    <OMA>
                      <OMS cd="Nat_E2" name="__Plus__"/>
                      <OMA>
                        <OMS cd="Nat_E2" name="__Ast__"/>
                        <OMATTR>
                          <OMATP>
                            <OMS cd="casl" name="type"/>
                            <OMS cd="Int_E2" name="Int1"/>
                          </OMATP>
                          <OMV name="n"/>
                        </OMATTR>
                        <OMATTR>
                          <OMATP>
                            <OMS cd="casl" name="type"/>
                            <OMS cd="Int_E2" name="Int1"/>
                          </OMATP>
                          <OMV name="r"/>
                        </OMATTR>
                      </OMA>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Nat_E2" name="Nat1"/>
                        </OMATP>
                        <OMV name="a"/>
                      </OMATTR>
                    </OMA>
                  </OMA>
                  <OMA>
                    <OMS cd="casl" name="predication"/>
                    <OMS cd="Nat_E2" name="__Lower__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="a"/>
                    </OMATTR>
                    <OMA>
                      <OMS cd="Int_E1" name="abs"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Int_E2" name="Int1"/>
                        </OMATP>
                        <OMV name="n"/>
                      </OMATTR>
                    </OMA>
                  </OMA>
                </OMA>
              </OMBIND>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="div_Int">
      <use format="Hets">div_Int</use>
    </presentation>
    <axiom name="div_dom_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__div__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                  <OMS cd="Nat_E2" name="N0"/>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="div_dom_Int">
      <use format="Hets">div_dom_Int</use>
    </presentation>
    <axiom name="divide_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__DivisionQuest__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMA>
                    <OMS cd="Int_E1" name="sign"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="m"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="Int_E1" name="sign"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="n"/>
                    </OMATTR>
                  </OMA>
                </OMA>
                <OMA>
                  <OMS cd="Nat_E2" name="__DivisionQuest__"/>
                  <OMA>
                    <OMS cd="Int_E1" name="abs"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="m"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="Int_E1" name="abs"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="n"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="divide_Int">
      <use format="Hets">divide_Int</use>
    </presentation>
    <axiom name="divide_alt_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="r"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__DivisionQuest__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="r"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="neg"/>
                  <OMA>
                    <OMS cd="casl" name="strong-equation"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="n"/>
                    </OMATTR>
                    <OMS cd="Nat_E2" name="N0"/>
                  </OMA>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMA>
                    <OMS cd="Nat_E2" name="__Ast__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="n"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="r"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="divide_alt_Int">
      <use format="Hets">divide_alt_Int</use>
    </presentation>
    <axiom name="divide_dom2_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__DivisionQuest__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__mod__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
                <OMS cd="Nat_E2" name="N0"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="divide_dom2_Int">
      <use format="Hets">divide_dom2_Int</use>
    </presentation>
    <axiom name="even_def_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="even"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="even"/>
                <OMA>
                  <OMS cd="Int_E1" name="abs"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="even_def_Int">
      <use format="Hets">even_def_Int</use>
    </presentation>
    <axiom name="ga_assoc___Ast__">
      <CMP>
         __*__:   Int * Int -&#62; Int, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="z"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="z"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="z"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_assoc___Ast__">
      <use format="Hets">ga_assoc___*__</use>
    </presentation>
    <axiom name="ga_assoc___Plus__">
      <CMP>
     ops __+__:   Int * Int -&#62; Int, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="z"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat_E2" name="__Plus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="z"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Plus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="z"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_assoc___Plus__">
      <use format="Hets">ga_assoc___+__</use>
    </presentation>
    <axiom name="ga_assoc_max">
      <CMP>
         min,max: Int * Int -&#62; Int, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="z"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="max"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat_E2" name="max"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="z"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="max"/>
                <OMA>
                  <OMS cd="Nat_E2" name="max"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="z"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_assoc_max">
      <use format="Hets">ga_assoc_max</use>
    </presentation>
    <axiom name="ga_assoc_min">
      <CMP>
         min,max: Int * Int -&#62; Int, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="z"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="min"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat_E2" name="min"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="z"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="min"/>
                <OMA>
                  <OMS cd="Nat_E2" name="min"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="z"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_assoc_min">
      <use format="Hets">ga_assoc_min</use>
    </presentation>
    <axiom name="ga_comm___Ast__">
      <CMP>
         __*__:   Int * Int -&#62; Int, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_comm___Ast__">
      <use format="Hets">ga_comm___*__</use>
    </presentation>
    <axiom name="ga_comm___Plus__">
      <CMP>
     ops __+__:   Int * Int -&#62; Int, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_comm___Plus__">
      <use format="Hets">ga_comm___+__</use>
    </presentation>
    <axiom name="ga_comm_max">
      <CMP>
         min,max: Int * Int -&#62; Int, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="max"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="max"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_comm_max">
      <use format="Hets">ga_comm_max</use>
    </presentation>
    <axiom name="ga_comm_min">
      <CMP>
         min,max: Int * Int -&#62; Int, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="min"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="min"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_comm_min">
      <use format="Hets">ga_comm_min</use>
    </presentation>
    <axiom name="ga_left_unit___Ast__">
      <CMP>
         __*__:   Int * Int -&#62; Int, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMS cd="Nat_E2" name="N1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_left_unit___Ast__">
      <use format="Hets">ga_left_unit___*__</use>
    </presentation>
    <axiom name="ga_left_unit___Plus__">
      <CMP>
     ops __+__:   Int * Int -&#62; Int, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMS cd="Nat_E2" name="N0"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_left_unit___Plus__">
      <use format="Hets">ga_left_unit___+__</use>
    </presentation>
    <axiom name="ga_right_unit___Ast__">
      <CMP>
         __*__:   Int * Int -&#62; Int, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMS cd="Nat_E2" name="N1"/>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_right_unit___Ast__">
      <use format="Hets">ga_right_unit___*__</use>
    </presentation>
    <axiom name="ga_right_unit___Plus__">
      <CMP>
     ops __+__:   Int * Int -&#62; Int, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMS cd="Nat_E2" name="N0"/>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_right_unit___Plus__">
      <use format="Hets">ga_right_unit___+__</use>
    </presentation>
    <axiom name="geq_def_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__GreaterEquals__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__LowerEquals__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="geq_def_Int">
      <use format="Hets">geq_def_Int</use>
    </presentation>
    <axiom name="greater_def_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__Greater__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__Lower__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="greater_def_Int">
      <use format="Hets">greater_def_Int</use>
    </presentation>
    <axiom name="leq_def_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__LowerEquals__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="membership"/>
                <OMA>
                  <OMS cd="Int_E2" name="__Minus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                </OMA>
                <OMS cd="Nat_E2" name="Nat1"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="leq_def_Int">
      <use format="Hets">leq_def_Int</use>
    </presentation>
    <axiom name="less_def_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__Lower__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Nat_E2" name="__LowerEquals__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="neg"/>
                  <OMA>
                    <OMS cd="casl" name="strong-equation"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="m"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="n"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="less_def_Int">
      <use format="Hets">less_def_Int</use>
    </presentation>
    <axiom name="max_def_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="max"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="IfThenElse"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Nat_E2" name="__LowerEquals__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="max_def_Int">
      <use format="Hets">max_def_Int</use>
    </presentation>
    <axiom name="min_def_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="min"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="IfThenElse"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Nat_E2" name="__LowerEquals__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="min_def_Int">
      <use format="Hets">min_def_Int</use>
    </presentation>
    <axiom name="mod_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="a"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__mod__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="a"/>
                </OMATTR>
              </OMA>
              <OMBIND>
                <OMS cd="casl" name="existential"/>
                <OMBVAR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="r"/>
                  </OMATTR>
                </OMBVAR>
                <OMA>
                  <OMS cd="casl" name="conjunction"/>
                  <OMA>
                    <OMS cd="casl" name="strong-equation"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="m"/>
                    </OMATTR>
                    <OMA>
                      <OMS cd="Nat_E2" name="__Plus__"/>
                      <OMA>
                        <OMS cd="Nat_E2" name="__Ast__"/>
                        <OMATTR>
                          <OMATP>
                            <OMS cd="casl" name="type"/>
                            <OMS cd="Int_E2" name="Int1"/>
                          </OMATP>
                          <OMV name="n"/>
                        </OMATTR>
                        <OMATTR>
                          <OMATP>
                            <OMS cd="casl" name="type"/>
                            <OMS cd="Int_E2" name="Int1"/>
                          </OMATP>
                          <OMV name="r"/>
                        </OMATTR>
                      </OMA>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Nat_E2" name="Nat1"/>
                        </OMATP>
                        <OMV name="a"/>
                      </OMATTR>
                    </OMA>
                  </OMA>
                  <OMA>
                    <OMS cd="casl" name="predication"/>
                    <OMS cd="Nat_E2" name="__Lower__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="a"/>
                    </OMATTR>
                    <OMA>
                      <OMS cd="Int_E1" name="abs"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Int_E2" name="Int1"/>
                        </OMATP>
                        <OMV name="n"/>
                      </OMATTR>
                    </OMA>
                  </OMA>
                </OMA>
              </OMBIND>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="mod_Int">
      <use format="Hets">mod_Int</use>
    </presentation>
    <axiom name="mod_dom_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__mod__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                  <OMS cd="Nat_E2" name="N0"/>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="mod_dom_Int">
      <use format="Hets">mod_dom_Int</use>
    </presentation>
    <axiom name="mult_def_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="a"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="b"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="c"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="d"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMA>
                  <OMS cd="Int_E2" name="__Minus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="a"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="b"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Int_E2" name="__Minus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="c"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="d"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Int_E2" name="__Minus__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Plus__"/>
                  <OMA>
                    <OMS cd="Nat_E2" name="__Ast__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="a"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="c"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="Nat_E2" name="__Ast__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="b"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="d"/>
                    </OMATTR>
                  </OMA>
                </OMA>
                <OMA>
                  <OMS cd="Nat_E2" name="__Plus__"/>
                  <OMA>
                    <OMS cd="Nat_E2" name="__Ast__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="b"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="c"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="Nat_E2" name="__Ast__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="a"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="d"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="mult_def_Int">
      <use format="Hets">mult_def_Int</use>
    </presentation>
    <axiom name="neg_def_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="a"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="b"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Int_E1" name="Minus__"/>
                <OMA>
                  <OMS cd="Int_E2" name="__Minus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="a"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="b"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Int_E2" name="__Minus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="b"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="a"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="neg_def_Int">
      <use format="Hets">neg_def_Int</use>
    </presentation>
    <axiom name="odd_alt_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="odd"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="odd"/>
                <OMA>
                  <OMS cd="Int_E1" name="abs"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="odd_alt_Int">
      <use format="Hets">odd_alt_Int</use>
    </presentation>
    <axiom name="odd_def_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="odd"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Nat_E2" name="even"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="odd_def_Int">
      <use format="Hets">odd_def_Int</use>
    </presentation>
    <axiom name="power_neg1_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="a"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Power__"/>
                <OMA>
                  <OMS cd="Int_E1" name="Minus__"/>
                  <OMS cd="Nat_E2" name="N1"/>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="a"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="IfThenElse"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Nat_E2" name="even"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="a"/>
                  </OMATTR>
                </OMA>
                <OMS cd="Nat_E2" name="N1"/>
                <OMA>
                  <OMS cd="Int_E1" name="Minus__"/>
                  <OMS cd="Nat_E2" name="N1"/>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="power_neg1_Int">
      <use format="Hets">power_neg1_Int</use>
    </presentation>
    <axiom name="power_others_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="a"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMA>
                    <OMS cd="Int_E1" name="Minus__"/>
                    <OMS cd="Nat_E2" name="N1"/>
                  </OMA>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Power__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="a"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMA>
                    <OMS cd="Nat_E2" name="__Power__"/>
                    <OMA>
                      <OMS cd="Int_E1" name="sign"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Int_E2" name="Int1"/>
                        </OMATP>
                        <OMV name="m"/>
                      </OMATTR>
                    </OMA>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="a"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="Nat_E2" name="__Power__"/>
                    <OMA>
                      <OMS cd="Int_E1" name="abs"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Int_E2" name="Int1"/>
                        </OMATP>
                        <OMV name="m"/>
                      </OMATTR>
                    </OMA>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="a"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
              <OMS cd="casl" name="false"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="power_others_Int">
      <use format="Hets">power_others_Int</use>
    </presentation>
    <axiom name="quot_dom_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="Int_E1" name="__quot__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                  <OMS cd="Nat_E2" name="N0"/>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="quot_dom_Int">
      <use format="Hets">quot_dom_Int</use>
    </presentation>
    <axiom name="quot_neg_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="r"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__Lower__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMS cd="Nat_E2" name="N0"/>
              </OMA>
              <OMA>
                <OMS cd="casl" name="equivalence"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMA>
                    <OMS cd="Int_E1" name="__quot__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="m"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="n"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="r"/>
                  </OMATTR>
                </OMA>
                <OMBIND>
                  <OMS cd="casl" name="existential"/>
                  <OMBVAR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="s"/>
                    </OMATTR>
                  </OMBVAR>
                  <OMA>
                    <OMS cd="casl" name="conjunction"/>
                    <OMA>
                      <OMS cd="casl" name="strong-equation"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Int_E2" name="Int1"/>
                        </OMATP>
                        <OMV name="m"/>
                      </OMATTR>
                      <OMA>
                        <OMS cd="Nat_E2" name="__Plus__"/>
                        <OMA>
                          <OMS cd="Nat_E2" name="__Ast__"/>
                          <OMATTR>
                            <OMATP>
                              <OMS cd="casl" name="type"/>
                              <OMS cd="Int_E2" name="Int1"/>
                            </OMATP>
                            <OMV name="n"/>
                          </OMATTR>
                          <OMATTR>
                            <OMATP>
                              <OMS cd="casl" name="type"/>
                              <OMS cd="Int_E2" name="Int1"/>
                            </OMATP>
                            <OMV name="r"/>
                          </OMATTR>
                        </OMA>
                        <OMATTR>
                          <OMATP>
                            <OMS cd="casl" name="type"/>
                            <OMS cd="Int_E2" name="Int1"/>
                          </OMATP>
                          <OMV name="s"/>
                        </OMATTR>
                      </OMA>
                    </OMA>
                    <OMA>
                      <OMS cd="casl" name="predication"/>
                      <OMS cd="Nat_E2" name="__GreaterEquals__"/>
                      <OMS cd="Nat_E2" name="N0"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Int_E2" name="Int1"/>
                        </OMATP>
                        <OMV name="s"/>
                      </OMATTR>
                    </OMA>
                    <OMA>
                      <OMS cd="casl" name="predication"/>
                      <OMS cd="Nat_E2" name="__Greater__"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Int_E2" name="Int1"/>
                        </OMATP>
                        <OMV name="s"/>
                      </OMATTR>
                      <OMA>
                        <OMS cd="Int_E1" name="Minus__"/>
                        <OMA>
                          <OMS cd="Int_E1" name="abs"/>
                          <OMATTR>
                            <OMATP>
                              <OMS cd="casl" name="type"/>
                              <OMS cd="Int_E2" name="Int1"/>
                            </OMATP>
                            <OMV name="n"/>
                          </OMATTR>
                        </OMA>
                      </OMA>
                    </OMA>
                  </OMA>
                </OMBIND>
              </OMA>
              <OMS cd="casl" name="false"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="quot_neg_Int">
      <use format="Hets">quot_neg_Int</use>
    </presentation>
    <axiom name="quot_nonneg_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="r"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__GreaterEquals__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMS cd="Nat_E2" name="N0"/>
              </OMA>
              <OMA>
                <OMS cd="casl" name="equivalence"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMA>
                    <OMS cd="Int_E1" name="__quot__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="m"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="n"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="r"/>
                  </OMATTR>
                </OMA>
                <OMBIND>
                  <OMS cd="casl" name="existential"/>
                  <OMBVAR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="s"/>
                    </OMATTR>
                  </OMBVAR>
                  <OMA>
                    <OMS cd="casl" name="conjunction"/>
                    <OMA>
                      <OMS cd="casl" name="strong-equation"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Int_E2" name="Int1"/>
                        </OMATP>
                        <OMV name="m"/>
                      </OMATTR>
                      <OMA>
                        <OMS cd="Nat_E2" name="__Plus__"/>
                        <OMA>
                          <OMS cd="Nat_E2" name="__Ast__"/>
                          <OMATTR>
                            <OMATP>
                              <OMS cd="casl" name="type"/>
                              <OMS cd="Int_E2" name="Int1"/>
                            </OMATP>
                            <OMV name="n"/>
                          </OMATTR>
                          <OMATTR>
                            <OMATP>
                              <OMS cd="casl" name="type"/>
                              <OMS cd="Int_E2" name="Int1"/>
                            </OMATP>
                            <OMV name="r"/>
                          </OMATTR>
                        </OMA>
                        <OMATTR>
                          <OMATP>
                            <OMS cd="casl" name="type"/>
                            <OMS cd="Int_E2" name="Int1"/>
                          </OMATP>
                          <OMV name="s"/>
                        </OMATTR>
                      </OMA>
                    </OMA>
                    <OMA>
                      <OMS cd="casl" name="predication"/>
                      <OMS cd="Nat_E2" name="__LowerEquals__"/>
                      <OMS cd="Nat_E2" name="N0"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Int_E2" name="Int1"/>
                        </OMATP>
                        <OMV name="s"/>
                      </OMATTR>
                    </OMA>
                    <OMA>
                      <OMS cd="casl" name="predication"/>
                      <OMS cd="Nat_E2" name="__Lower__"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Int_E2" name="Int1"/>
                        </OMATP>
                        <OMV name="s"/>
                      </OMATTR>
                      <OMA>
                        <OMS cd="Int_E1" name="abs"/>
                        <OMATTR>
                          <OMATP>
                            <OMS cd="casl" name="type"/>
                            <OMS cd="Int_E2" name="Int1"/>
                          </OMATP>
                          <OMV name="n"/>
                        </OMATTR>
                      </OMA>
                    </OMA>
                  </OMA>
                </OMBIND>
              </OMA>
              <OMS cd="casl" name="false"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="quot_nonneg_Int">
      <use format="Hets">quot_nonneg_Int</use>
    </presentation>
    <axiom name="quot_rem_Int1">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="s"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__Lower__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMS cd="Nat_E2" name="N0"/>
              </OMA>
              <OMA>
                <OMS cd="casl" name="equivalence"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMA>
                    <OMS cd="Int_E1" name="__rem__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="m"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="n"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="s"/>
                  </OMATTR>
                </OMA>
                <OMBIND>
                  <OMS cd="casl" name="existential"/>
                  <OMBVAR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="r"/>
                    </OMATTR>
                  </OMBVAR>
                  <OMA>
                    <OMS cd="casl" name="conjunction"/>
                    <OMA>
                      <OMS cd="casl" name="strong-equation"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Int_E2" name="Int1"/>
                        </OMATP>
                        <OMV name="m"/>
                      </OMATTR>
                      <OMA>
                        <OMS cd="Nat_E2" name="__Plus__"/>
                        <OMA>
                          <OMS cd="Nat_E2" name="__Ast__"/>
                          <OMATTR>
                            <OMATP>
                              <OMS cd="casl" name="type"/>
                              <OMS cd="Int_E2" name="Int1"/>
                            </OMATP>
                            <OMV name="n"/>
                          </OMATTR>
                          <OMATTR>
                            <OMATP>
                              <OMS cd="casl" name="type"/>
                              <OMS cd="Int_E2" name="Int1"/>
                            </OMATP>
                            <OMV name="r"/>
                          </OMATTR>
                        </OMA>
                        <OMATTR>
                          <OMATP>
                            <OMS cd="casl" name="type"/>
                            <OMS cd="Int_E2" name="Int1"/>
                          </OMATP>
                          <OMV name="s"/>
                        </OMATTR>
                      </OMA>
                    </OMA>
                    <OMA>
                      <OMS cd="casl" name="predication"/>
                      <OMS cd="Nat_E2" name="__GreaterEquals__"/>
                      <OMS cd="Nat_E2" name="N0"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Int_E2" name="Int1"/>
                        </OMATP>
                        <OMV name="s"/>
                      </OMATTR>
                    </OMA>
                    <OMA>
                      <OMS cd="casl" name="predication"/>
                      <OMS cd="Nat_E2" name="__Greater__"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Int_E2" name="Int1"/>
                        </OMATP>
                        <OMV name="s"/>
                      </OMATTR>
                      <OMA>
                        <OMS cd="Int_E1" name="Minus__"/>
                        <OMA>
                          <OMS cd="Int_E1" name="abs"/>
                          <OMATTR>
                            <OMATP>
                              <OMS cd="casl" name="type"/>
                              <OMS cd="Int_E2" name="Int1"/>
                            </OMATP>
                            <OMV name="n"/>
                          </OMATTR>
                        </OMA>
                      </OMA>
                    </OMA>
                  </OMA>
                </OMBIND>
              </OMA>
              <OMS cd="casl" name="false"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="quot_rem_Int1">
      <use format="Hets">quot_rem_Int</use>
    </presentation>
    <axiom name="rem_dom_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="Int_E1" name="__rem__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                  <OMS cd="Nat_E2" name="N0"/>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="rem_dom_Int">
      <use format="Hets">rem_dom_Int</use>
    </presentation>
    <axiom name="rem_nonneg_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="s"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__GreaterEquals__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMS cd="Nat_E2" name="N0"/>
              </OMA>
              <OMA>
                <OMS cd="casl" name="equivalence"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMA>
                    <OMS cd="Int_E1" name="__rem__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="m"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="n"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="s"/>
                  </OMATTR>
                </OMA>
                <OMBIND>
                  <OMS cd="casl" name="existential"/>
                  <OMBVAR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="r"/>
                    </OMATTR>
                  </OMBVAR>
                  <OMA>
                    <OMS cd="casl" name="conjunction"/>
                    <OMA>
                      <OMS cd="casl" name="strong-equation"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Int_E2" name="Int1"/>
                        </OMATP>
                        <OMV name="m"/>
                      </OMATTR>
                      <OMA>
                        <OMS cd="Nat_E2" name="__Plus__"/>
                        <OMA>
                          <OMS cd="Nat_E2" name="__Ast__"/>
                          <OMATTR>
                            <OMATP>
                              <OMS cd="casl" name="type"/>
                              <OMS cd="Int_E2" name="Int1"/>
                            </OMATP>
                            <OMV name="n"/>
                          </OMATTR>
                          <OMATTR>
                            <OMATP>
                              <OMS cd="casl" name="type"/>
                              <OMS cd="Int_E2" name="Int1"/>
                            </OMATP>
                            <OMV name="r"/>
                          </OMATTR>
                        </OMA>
                        <OMATTR>
                          <OMATP>
                            <OMS cd="casl" name="type"/>
                            <OMS cd="Int_E2" name="Int1"/>
                          </OMATP>
                          <OMV name="s"/>
                        </OMATTR>
                      </OMA>
                    </OMA>
                    <OMA>
                      <OMS cd="casl" name="predication"/>
                      <OMS cd="Nat_E2" name="__LowerEquals__"/>
                      <OMS cd="Nat_E2" name="N0"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Int_E2" name="Int1"/>
                        </OMATP>
                        <OMV name="s"/>
                      </OMATTR>
                    </OMA>
                    <OMA>
                      <OMS cd="casl" name="predication"/>
                      <OMS cd="Nat_E2" name="__Lower__"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Int_E2" name="Int1"/>
                        </OMATP>
                        <OMV name="s"/>
                      </OMATTR>
                      <OMA>
                        <OMS cd="Int_E1" name="abs"/>
                        <OMATTR>
                          <OMATP>
                            <OMS cd="casl" name="type"/>
                            <OMS cd="Int_E2" name="Int1"/>
                          </OMATP>
                          <OMV name="n"/>
                        </OMATTR>
                      </OMA>
                    </OMA>
                  </OMA>
                </OMBIND>
              </OMA>
              <OMS cd="casl" name="false"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="rem_nonneg_Int">
      <use format="Hets">rem_nonneg_Int</use>
    </presentation>
    <axiom name="sign_def_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Int_E1" name="sign"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="IfThenElse"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMS cd="Nat_E2" name="N0"/>
                </OMA>
                <OMS cd="Nat_E2" name="N0"/>
                <OMA>
                  <OMS cd="casl" name="IfThenElse"/>
                  <OMA>
                    <OMS cd="casl" name="predication"/>
                    <OMS cd="Nat_E2" name="__Greater__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="m"/>
                    </OMATTR>
                    <OMS cd="Nat_E2" name="N0"/>
                  </OMA>
                  <OMS cd="Nat_E2" name="N1"/>
                  <OMA>
                    <OMS cd="Int_E1" name="Minus__"/>
                    <OMS cd="Nat_E2" name="N1"/>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="sign_def_Int">
      <use format="Hets">sign_def_Int</use>
    </presentation>
    <axiom name="sub_def_Int">
      <CMP>
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     forall  m,n,r,s,t: Int; a,b,c,d: Nat
     . m &#60;= n &#60;=&#62; n - m in Nat                 %(leq_def_Int)%
     . m &#62;= n &#60;=&#62; n &#60;= m  	               %(geq_def_Int)%
     . m &#60; n &#60;=&#62; (m &#60;= n /\ not m=n)           %(less_def_Int)%
     . m &#62; n &#60;=&#62; n &#60; m   	               %(greater_def_Int)%
     . even(m) &#60;=&#62; even(abs(m))                %(even_def_Int)%
     . odd(m)  &#60;=&#62; not even(m)                 %(odd_def_Int)%
     . odd(m)  &#60;=&#62; odd(abs(m))                 %(odd_alt_Int)%
     . - (a - b) = b - a                       %(neg_def_Int)%
     . sign(m) = 0 when m = 0 
     . abs(m) = - m when m &#60; 0                  
     . (a - b) + (c - d) = (a + c) - (b + d)   %(add_def_Int)%
     . (a - b) * (c - d) = 
     .  m - n = m + ( - n )                    %(sub_def_Int)%
     . min(m,n) = m when m &#60;= n else n         %(min_def_Int)%
     . max(m,n) = n when m &#60;= n else m         %(max_def_Int)%
     . (- 1) ^ a = 1 when even(a) else - 1     %(power_neg1_Int)%
     . m ^ a = sign(m)^a * abs(m)^a  
     . def (m /? n) &#60;=&#62; m mod n = 0            %(divide_dom2_Int)% %implied
     . m /? n = r &#60;=&#62; not n = 0 /\ n * r = m   %(divide_alt_Int)% %implied 
     . m /? n = 
     . def ( m div n ) &#60;=&#62; not n=0             %(div_dom_Int)% %implied 
     . m div n = r &#60;=&#62; 
     . def ( m quot n ) &#60;=&#62; not n=0            %(quot_dom_Int)% %implied 
     . (m quot n = r &#60;=&#62; 
     . (m quot n = r &#60;=&#62; 
     . def ( m rem n ) &#60;=&#62; not n=0             %(rem_dom_Int)% %implied 
     . (m rem n = s &#60;=&#62; 
     . (m rem n = s &#60;=&#62; 
     . def ( m mod n ) &#60;=&#62; not n=0             %(mod_dom_Int)% %implied 
     . m mod n = a &#60;=&#62; 
     . (r + s) * t = (r * t) + (s * t)  %(distr1_Int)% %implied 
     . t * (r + s) = (t * r) + (t * s)  %(distr2_Int)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Int_E2" name="__Minus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Int_E1" name="Minus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="sub_def_Int">
      <use format="Hets">sub_def_Int</use>
    </presentation>
  </theory>
  <private for="Int_E1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Int" Type:"GlobalThm Open None Open" Origin:"DGExtension"
From:"Int_E2" Type:"GlobalDef" Origin:"DGExtension"
From:"Int_E2" Type:"GlobalThm Open Def Open" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Int">
    <presentation for="Int">
      <use format="Hets">[Int,,0]</use>
    </presentation>
    <imports from="#Int_E1"/>
    <axiom name="Int_Nat_sub_compat">
      <CMP>
     forall m,n,r: Int; a,b: Nat
     forall m,n,r: Int; a,b: Nat
     . def(a -? b) =&#62; a -? b = a - b                %(Int_Nat_sub_compat)%
     . m = sign(m) * abs(m)                         %(abs_decomp_Int)%
     . m mod n = m mod abs(n) 			    %(mod_abs_Int)%
     . m = (m div n) * n + (m mod n) if not n = 0   %(div_mod_Int)%
     . abs(m quot n) = abs(m) quot abs(n)           %(quot_abs_Int)%
     . abs(m rem  n) = abs(m) rem  abs(n)           %(rem_abs_Int)%
     . m = (m quot n) * n + (m rem n) if not n = 0  %(quot_rem_Int)%
     . m ^(a+b) = m^a * m^b                         %(power_Int)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="a"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="b"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__MinusQuest__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="a"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="b"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__MinusQuest__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="a"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="b"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Int_E2" name="__Minus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="a"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="b"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMS cd="casl" name="true"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Int_Nat_sub_compat">
      <use format="Hets">Int_Nat_sub_compat</use>
    </presentation>
    <axiom name="abs_decomp_Int">
      <CMP>
     forall m,n,r: Int; a,b: Nat
     forall m,n,r: Int; a,b: Nat
     . def(a -? b) =&#62; a -? b = a - b                %(Int_Nat_sub_compat)%
     . m = sign(m) * abs(m)                         %(abs_decomp_Int)%
     . m mod n = m mod abs(n) 			    %(mod_abs_Int)%
     . m = (m div n) * n + (m mod n) if not n = 0   %(div_mod_Int)%
     . abs(m quot n) = abs(m) quot abs(n)           %(quot_abs_Int)%
     . abs(m rem  n) = abs(m) rem  abs(n)           %(rem_abs_Int)%
     . m = (m quot n) * n + (m rem n) if not n = 0  %(quot_rem_Int)%
     . m ^(a+b) = m^a * m^b                         %(power_Int)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMA>
                  <OMS cd="Int_E1" name="sign"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Int_E1" name="abs"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="abs_decomp_Int">
      <use format="Hets">abs_decomp_Int</use>
    </presentation>
    <axiom name="div_mod_Int">
      <CMP>
     forall m,n,r: Int; a,b: Nat
     forall m,n,r: Int; a,b: Nat
     . def(a -? b) =&#62; a -? b = a - b                %(Int_Nat_sub_compat)%
     . m = sign(m) * abs(m)                         %(abs_decomp_Int)%
     . m mod n = m mod abs(n) 			    %(mod_abs_Int)%
     . m = (m div n) * n + (m mod n) if not n = 0   %(div_mod_Int)%
     . abs(m quot n) = abs(m) quot abs(n)           %(quot_abs_Int)%
     . abs(m rem  n) = abs(m) rem  abs(n)           %(rem_abs_Int)%
     . m = (m quot n) * n + (m rem n) if not n = 0  %(quot_rem_Int)%
     . m ^(a+b) = m^a * m^b                         %(power_Int)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                  <OMS cd="Nat_E2" name="N0"/>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat_E2" name="__Plus__"/>
                  <OMA>
                    <OMS cd="Nat_E2" name="__Ast__"/>
                    <OMA>
                      <OMS cd="Nat_E2" name="__div__"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Int_E2" name="Int1"/>
                        </OMATP>
                        <OMV name="m"/>
                      </OMATTR>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Int_E2" name="Int1"/>
                        </OMATP>
                        <OMV name="n"/>
                      </OMATTR>
                    </OMA>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="n"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="Nat_E2" name="__mod__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="m"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="n"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
              <OMS cd="casl" name="false"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="div_mod_Int">
      <use format="Hets">div_mod_Int</use>
    </presentation>
    <axiom name="mod_abs_Int">
      <CMP>
     forall m,n,r: Int; a,b: Nat
     forall m,n,r: Int; a,b: Nat
     . def(a -? b) =&#62; a -? b = a - b                %(Int_Nat_sub_compat)%
     . m = sign(m) * abs(m)                         %(abs_decomp_Int)%
     . m mod n = m mod abs(n) 			    %(mod_abs_Int)%
     . m = (m div n) * n + (m mod n) if not n = 0   %(div_mod_Int)%
     . abs(m quot n) = abs(m) quot abs(n)           %(quot_abs_Int)%
     . abs(m rem  n) = abs(m) rem  abs(n)           %(rem_abs_Int)%
     . m = (m quot n) * n + (m rem n) if not n = 0  %(quot_rem_Int)%
     . m ^(a+b) = m^a * m^b                         %(power_Int)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__mod__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__mod__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Int_E1" name="abs"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="mod_abs_Int">
      <use format="Hets">mod_abs_Int</use>
    </presentation>
    <axiom name="power_Int">
      <CMP>
     forall m,n,r: Int; a,b: Nat
     forall m,n,r: Int; a,b: Nat
     . def(a -? b) =&#62; a -? b = a - b                %(Int_Nat_sub_compat)%
     . m = sign(m) * abs(m)                         %(abs_decomp_Int)%
     . m mod n = m mod abs(n) 			    %(mod_abs_Int)%
     . m = (m div n) * n + (m mod n) if not n = 0   %(div_mod_Int)%
     . abs(m quot n) = abs(m) quot abs(n)           %(quot_abs_Int)%
     . abs(m rem  n) = abs(m) rem  abs(n)           %(rem_abs_Int)%
     . m = (m quot n) * n + (m rem n) if not n = 0  %(quot_rem_Int)%
     . m ^(a+b) = m^a * m^b                         %(power_Int)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="a"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="b"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Power__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat_E2" name="__Plus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="a"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="b"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Power__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="a"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat_E2" name="__Power__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="b"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="power_Int">
      <use format="Hets">power_Int</use>
    </presentation>
    <axiom name="quot_abs_Int">
      <CMP>
     forall m,n,r: Int; a,b: Nat
     forall m,n,r: Int; a,b: Nat
     . def(a -? b) =&#62; a -? b = a - b                %(Int_Nat_sub_compat)%
     . m = sign(m) * abs(m)                         %(abs_decomp_Int)%
     . m mod n = m mod abs(n) 			    %(mod_abs_Int)%
     . m = (m div n) * n + (m mod n) if not n = 0   %(div_mod_Int)%
     . abs(m quot n) = abs(m) quot abs(n)           %(quot_abs_Int)%
     . abs(m rem  n) = abs(m) rem  abs(n)           %(rem_abs_Int)%
     . m = (m quot n) * n + (m rem n) if not n = 0  %(quot_rem_Int)%
     . m ^(a+b) = m^a * m^b                         %(power_Int)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Int_E1" name="abs"/>
                <OMA>
                  <OMS cd="Int_E1" name="__quot__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Int_E1" name="__quot__"/>
                <OMA>
                  <OMS cd="Int_E1" name="abs"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Int_E1" name="abs"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="quot_abs_Int">
      <use format="Hets">quot_abs_Int</use>
    </presentation>
    <axiom name="quot_rem_Int">
      <CMP>
     forall m,n,r: Int; a,b: Nat
     forall m,n,r: Int; a,b: Nat
     . def(a -? b) =&#62; a -? b = a - b                %(Int_Nat_sub_compat)%
     . m = sign(m) * abs(m)                         %(abs_decomp_Int)%
     . m mod n = m mod abs(n) 			    %(mod_abs_Int)%
     . m = (m div n) * n + (m mod n) if not n = 0   %(div_mod_Int)%
     . abs(m quot n) = abs(m) quot abs(n)           %(quot_abs_Int)%
     . abs(m rem  n) = abs(m) rem  abs(n)           %(rem_abs_Int)%
     . m = (m quot n) * n + (m rem n) if not n = 0  %(quot_rem_Int)%
     . m ^(a+b) = m^a * m^b                         %(power_Int)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                  <OMS cd="Nat_E2" name="N0"/>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat_E2" name="__Plus__"/>
                  <OMA>
                    <OMS cd="Nat_E2" name="__Ast__"/>
                    <OMA>
                      <OMS cd="Int_E1" name="__quot__"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Int_E2" name="Int1"/>
                        </OMATP>
                        <OMV name="m"/>
                      </OMATTR>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Int_E2" name="Int1"/>
                        </OMATP>
                        <OMV name="n"/>
                      </OMATTR>
                    </OMA>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="n"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="Int_E1" name="__rem__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="m"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="n"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
              <OMS cd="casl" name="false"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="quot_rem_Int">
      <use format="Hets">quot_rem_Int</use>
    </presentation>
    <axiom name="rem_abs_Int">
      <CMP>
     forall m,n,r: Int; a,b: Nat
     forall m,n,r: Int; a,b: Nat
     . def(a -? b) =&#62; a -? b = a - b                %(Int_Nat_sub_compat)%
     . m = sign(m) * abs(m)                         %(abs_decomp_Int)%
     . m mod n = m mod abs(n) 			    %(mod_abs_Int)%
     . m = (m div n) * n + (m mod n) if not n = 0   %(div_mod_Int)%
     . abs(m quot n) = abs(m) quot abs(n)           %(quot_abs_Int)%
     . abs(m rem  n) = abs(m) rem  abs(n)           %(rem_abs_Int)%
     . m = (m quot n) * n + (m rem n) if not n = 0  %(quot_rem_Int)%
     . m ^(a+b) = m^a * m^b                         %(power_Int)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Int_E1" name="abs"/>
                <OMA>
                  <OMS cd="Int_E1" name="__rem__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Int_E1" name="__rem__"/>
                <OMA>
                  <OMS cd="Int_E1" name="abs"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Int_E1" name="abs"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="rem_abs_Int">
      <use format="Hets">rem_abs_Int</use>
    </presentation>
  </theory>
  <private for="Int">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Int_E1" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Rat_E2">
    <presentation for="Rat_E2">
      <use format="Hets">[Rat,E,2]</use>
    </presentation>
    <imports from="#Int"/>
    <symbol role="sort" name="Rat1"/>
    <presentation for="Rat1">
      <use format="Hets">[Rat]</use>
    </presentation>
    <adt>
      <sortdef name="Rat1" type="free">
        <insort for="#Int1"/>
        <insort for="#Nat1"/>
        <insort for="#Pos"/>
      </sortdef>
    </adt>
    <symbol name="__Division__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Int_E2" name="Int1"/>
            <OMS cd="Nat_E1" name="Pos"/>
            <OMS cd="Rat_E2" name="Rat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__Division__">
      <use format="Hets">[__,/,__]</use>
    </presentation>
    <axiom name="Int2Rat_embedding">
      <CMP>
     forall i:Int . i = i / 1                   %(Int2Rat_embedding)%
     forall i:Int . i = i / 1                   %(Int2Rat_embedding)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="i"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="i"/>
              </OMATTR>
              <OMA>
                <OMS cd="Rat_E2" name="__Division__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="i"/>
                </OMATTR>
                <OMS cd="Nat_E2" name="N1"/>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="Int2Rat_embedding">
      <use format="Hets">Int2Rat_embedding</use>
    </presentation>
    <axiom name="equality_Rat">
      <CMP>
     forall i,j: Int; p,q: Pos
     forall i,j: Int; p,q: Pos
     . i / p = j / q &#60;=&#62; i*q = j*p              %(equality_Rat)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="i"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="j"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E1" name="Pos"/>
                </OMATP>
                <OMV name="p"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E1" name="Pos"/>
                </OMATP>
                <OMV name="q"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Rat_E2" name="__Division__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="i"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E1" name="Pos"/>
                    </OMATP>
                    <OMV name="p"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Rat_E2" name="__Division__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="j"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E1" name="Pos"/>
                    </OMATP>
                    <OMV name="q"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="i"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E1" name="Pos"/>
                    </OMATP>
                    <OMV name="q"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="j"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E1" name="Pos"/>
                    </OMATP>
                    <OMV name="p"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="equality_Rat">
      <use format="Hets">equality_Rat</use>
    </presentation>
    <axiom name="ga_generated_Rat">
      <CMP/>
      <FMP>
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="sort-gen-ax"/>
            <OMBIND>
              <OMS cd="casl" name="Rat"/>
              <OMBVAR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="constraint-indices"/>
                    <OMSTR>-1|-1|</OMSTR>
                  </OMATP>
                  <OMS cd="Rat_E2" name="__Division__"/>
                </OMATTR>
              </OMBVAR>
              <OMS cd="casl" name="Rat"/>
            </OMBIND>
            <OMS cd="casl" name="false"/>
          </OMA>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_generated_Rat">
      <use format="Hets">ga_generated_Rat</use>
    </presentation>
  </theory>
  <private for="Rat_E2">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Int" Type:"GlobalDef" Origin:"DGExtension"
From:"Int" Type:"GlobalThm Open Mono Open" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Rat_E1">
    <presentation for="Rat_E1">
      <use format="Hets">[Rat,E,1]</use>
    </presentation>
    <imports from="#Rat_E2"/>
    <axiom name="abs_def_Rat">
      <CMP>
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     . (i / p &#60;= j / q &#60;=&#62; i * q &#60;= j * p ) %(leq_def_Rat)%
     . x &#62;= y &#60;=&#62; y &#60;= x                    %(geq_def_Rat)%
     . x &#60; y &#60;=&#62; (x &#60;= y /\ not x=y )       %(less_def_Rat)%
     . x &#62; y &#60;=&#62; y &#60; x                      %(greater_def_Rat)%
     . - (i/p) = (-i)/p                 %(minus_def_Rat)%
     . abs(i / p) = abs(i) / p          %(abs_def_Rat)%
     . (i / p) + (j / q) =	
     . x-y = x + (-y)                   %(sub_def_Rat)%
     . (i / p) * (j / q) = 
     . min(x,y) = x when x &#60;= y else y  %(min_def_Rat)%
     . max(x,y) = y when x &#60;= y else x  %(max_def_Rat)%
     . not def x/0                      %(divide_def1_Rat)%
     . (x/y=z &#60;=&#62; x=z*y) 
     . x ^ 0 = 1                        %(power_0_Rat)%
     . x ^ suc(n) = x * x ^ n           %(power_suc_Rat)%
     . x ^ (-p) = 1 / (x ^ p)           %(power_neg_Rat)%
     . (x + y) * z = (x * z) + (y * z)  %(distr1_Rat)% %implied
     . z * (x + y) = (z * x) + (z * y)  %(distr2_Rat)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E1" name="Pos"/>
                </OMATP>
                <OMV name="p"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="i"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Int_E1" name="abs"/>
                <OMA>
                  <OMS cd="Rat_E2" name="__Division__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="i"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E1" name="Pos"/>
                    </OMATP>
                    <OMV name="p"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Rat_E2" name="__Division__"/>
                <OMA>
                  <OMS cd="Int_E1" name="abs"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="i"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E1" name="Pos"/>
                  </OMATP>
                  <OMV name="p"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="abs_def_Rat">
      <use format="Hets">abs_def_Rat</use>
    </presentation>
    <axiom name="add_def_Rat">
      <CMP>
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     . (i / p &#60;= j / q &#60;=&#62; i * q &#60;= j * p ) %(leq_def_Rat)%
     . x &#62;= y &#60;=&#62; y &#60;= x                    %(geq_def_Rat)%
     . x &#60; y &#60;=&#62; (x &#60;= y /\ not x=y )       %(less_def_Rat)%
     . x &#62; y &#60;=&#62; y &#60; x                      %(greater_def_Rat)%
     . - (i/p) = (-i)/p                 %(minus_def_Rat)%
     . abs(i / p) = abs(i) / p          %(abs_def_Rat)%
     . (i / p) + (j / q) =	
     . x-y = x + (-y)                   %(sub_def_Rat)%
     . (i / p) * (j / q) = 
     . min(x,y) = x when x &#60;= y else y  %(min_def_Rat)%
     . max(x,y) = y when x &#60;= y else x  %(max_def_Rat)%
     . not def x/0                      %(divide_def1_Rat)%
     . (x/y=z &#60;=&#62; x=z*y) 
     . x ^ 0 = 1                        %(power_0_Rat)%
     . x ^ suc(n) = x * x ^ n           %(power_suc_Rat)%
     . x ^ (-p) = 1 / (x ^ p)           %(power_neg_Rat)%
     . (x + y) * z = (x * z) + (y * z)  %(distr1_Rat)% %implied
     . z * (x + y) = (z * x) + (z * y)  %(distr2_Rat)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E1" name="Pos"/>
                </OMATP>
                <OMV name="p"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E1" name="Pos"/>
                </OMATP>
                <OMV name="q"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="i"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="j"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMA>
                  <OMS cd="Rat_E2" name="__Division__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="i"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E1" name="Pos"/>
                    </OMATP>
                    <OMV name="p"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Rat_E2" name="__Division__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="j"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E1" name="Pos"/>
                    </OMATP>
                    <OMV name="q"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Rat_E2" name="__Division__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Plus__"/>
                  <OMA>
                    <OMS cd="Nat_E2" name="__Ast__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="i"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E1" name="Pos"/>
                      </OMATP>
                      <OMV name="q"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="Nat_E2" name="__Ast__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="j"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E1" name="Pos"/>
                      </OMATP>
                      <OMV name="p"/>
                    </OMATTR>
                  </OMA>
                </OMA>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E1" name="Pos"/>
                    </OMATP>
                    <OMV name="p"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E1" name="Pos"/>
                    </OMATP>
                    <OMV name="q"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="add_def_Rat">
      <use format="Hets">add_def_Rat</use>
    </presentation>
    <axiom name="distr1_Rat">
      <CMP>
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     . (i / p &#60;= j / q &#60;=&#62; i * q &#60;= j * p ) %(leq_def_Rat)%
     . x &#62;= y &#60;=&#62; y &#60;= x                    %(geq_def_Rat)%
     . x &#60; y &#60;=&#62; (x &#60;= y /\ not x=y )       %(less_def_Rat)%
     . x &#62; y &#60;=&#62; y &#60; x                      %(greater_def_Rat)%
     . - (i/p) = (-i)/p                 %(minus_def_Rat)%
     . abs(i / p) = abs(i) / p          %(abs_def_Rat)%
     . (i / p) + (j / q) =	
     . x-y = x + (-y)                   %(sub_def_Rat)%
     . (i / p) * (j / q) = 
     . min(x,y) = x when x &#60;= y else y  %(min_def_Rat)%
     . max(x,y) = y when x &#60;= y else x  %(max_def_Rat)%
     . not def x/0                      %(divide_def1_Rat)%
     . (x/y=z &#60;=&#62; x=z*y) 
     . x ^ 0 = 1                        %(power_0_Rat)%
     . x ^ suc(n) = x * x ^ n           %(power_suc_Rat)%
     . x ^ (-p) = 1 / (x ^ p)           %(power_neg_Rat)%
     . (x + y) * z = (x * z) + (y * z)  %(distr1_Rat)% %implied
     . z * (x + y) = (z * x) + (z * y)  %(distr2_Rat)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="z"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Plus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="z"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="z"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="z"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="distr1_Rat">
      <use format="Hets">distr1_Rat</use>
    </presentation>
    <axiom name="distr2_Rat">
      <CMP>
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     . (i / p &#60;= j / q &#60;=&#62; i * q &#60;= j * p ) %(leq_def_Rat)%
     . x &#62;= y &#60;=&#62; y &#60;= x                    %(geq_def_Rat)%
     . x &#60; y &#60;=&#62; (x &#60;= y /\ not x=y )       %(less_def_Rat)%
     . x &#62; y &#60;=&#62; y &#60; x                      %(greater_def_Rat)%
     . - (i/p) = (-i)/p                 %(minus_def_Rat)%
     . abs(i / p) = abs(i) / p          %(abs_def_Rat)%
     . (i / p) + (j / q) =	
     . x-y = x + (-y)                   %(sub_def_Rat)%
     . (i / p) * (j / q) = 
     . min(x,y) = x when x &#60;= y else y  %(min_def_Rat)%
     . max(x,y) = y when x &#60;= y else x  %(max_def_Rat)%
     . not def x/0                      %(divide_def1_Rat)%
     . (x/y=z &#60;=&#62; x=z*y) 
     . x ^ 0 = 1                        %(power_0_Rat)%
     . x ^ suc(n) = x * x ^ n           %(power_suc_Rat)%
     . x ^ (-p) = 1 / (x ^ p)           %(power_neg_Rat)%
     . (x + y) * z = (x * z) + (y * z)  %(distr1_Rat)% %implied
     . z * (x + y) = (z * x) + (z * y)  %(distr2_Rat)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="z"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="z"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat_E2" name="__Plus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="z"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="z"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="distr2_Rat">
      <use format="Hets">distr2_Rat</use>
    </presentation>
    <axiom name="divide_def1_Rat">
      <CMP>
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     . (i / p &#60;= j / q &#60;=&#62; i * q &#60;= j * p ) %(leq_def_Rat)%
     . x &#62;= y &#60;=&#62; y &#60;= x                    %(geq_def_Rat)%
     . x &#60; y &#60;=&#62; (x &#60;= y /\ not x=y )       %(less_def_Rat)%
     . x &#62; y &#60;=&#62; y &#60; x                      %(greater_def_Rat)%
     . - (i/p) = (-i)/p                 %(minus_def_Rat)%
     . abs(i / p) = abs(i) / p          %(abs_def_Rat)%
     . (i / p) + (j / q) =	
     . x-y = x + (-y)                   %(sub_def_Rat)%
     . (i / p) * (j / q) = 
     . min(x,y) = x when x &#60;= y else y  %(min_def_Rat)%
     . max(x,y) = y when x &#60;= y else x  %(max_def_Rat)%
     . not def x/0                      %(divide_def1_Rat)%
     . (x/y=z &#60;=&#62; x=z*y) 
     . x ^ 0 = 1                        %(power_0_Rat)%
     . x ^ suc(n) = x * x ^ n           %(power_suc_Rat)%
     . x ^ (-p) = 1 / (x ^ p)           %(power_neg_Rat)%
     . (x + y) * z = (x * z) + (y * z)  %(distr1_Rat)% %implied
     . z * (x + y) = (z * x) + (z * y)  %(distr2_Rat)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="neg"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="Rat_E2" name="__Division__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMS cd="Nat_E2" name="N0"/>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="divide_def1_Rat">
      <use format="Hets">divide_def1_Rat</use>
    </presentation>
    <axiom name="divide_def2_Rat">
      <CMP>
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     . (i / p &#60;= j / q &#60;=&#62; i * q &#60;= j * p ) %(leq_def_Rat)%
     . x &#62;= y &#60;=&#62; y &#60;= x                    %(geq_def_Rat)%
     . x &#60; y &#60;=&#62; (x &#60;= y /\ not x=y )       %(less_def_Rat)%
     . x &#62; y &#60;=&#62; y &#60; x                      %(greater_def_Rat)%
     . - (i/p) = (-i)/p                 %(minus_def_Rat)%
     . abs(i / p) = abs(i) / p          %(abs_def_Rat)%
     . (i / p) + (j / q) =	
     . x-y = x + (-y)                   %(sub_def_Rat)%
     . (i / p) * (j / q) = 
     . min(x,y) = x when x &#60;= y else y  %(min_def_Rat)%
     . max(x,y) = y when x &#60;= y else x  %(max_def_Rat)%
     . not def x/0                      %(divide_def1_Rat)%
     . (x/y=z &#60;=&#62; x=z*y) 
     . x ^ 0 = 1                        %(power_0_Rat)%
     . x ^ suc(n) = x * x ^ n           %(power_suc_Rat)%
     . x ^ (-p) = 1 / (x ^ p)           %(power_neg_Rat)%
     . (x + y) * z = (x * z) + (y * z)  %(distr1_Rat)% %implied
     . z * (x + y) = (z * x) + (z * y)  %(distr2_Rat)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="z"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMS cd="Nat_E2" name="N0"/>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="equivalence"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMA>
                    <OMS cd="Rat_E2" name="__Division__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Rat_E2" name="Rat1"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Rat_E2" name="Rat1"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="z"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMA>
                    <OMS cd="Nat_E2" name="__Ast__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Rat_E2" name="Rat1"/>
                      </OMATP>
                      <OMV name="z"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Rat_E2" name="Rat1"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
              <OMS cd="casl" name="false"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="divide_def2_Rat">
      <use format="Hets">divide_def2_Rat</use>
    </presentation>
    <axiom name="ga_assoc___Ast__2">
      <CMP>
         __*__:   Rat * Rat -&#62; Rat, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="z"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="z"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="z"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_assoc___Ast__2">
      <use format="Hets">ga_assoc___*__</use>
    </presentation>
    <axiom name="ga_assoc___Plus__2">
      <CMP>
     ops __+__:   Rat * Rat -&#62; Rat, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="z"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat_E2" name="__Plus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="z"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Plus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="z"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_assoc___Plus__2">
      <use format="Hets">ga_assoc___+__</use>
    </presentation>
    <axiom name="ga_assoc_max2">
      <CMP>
         min,max: Rat * Rat -&#62; Rat, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="z"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="max"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat_E2" name="max"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="z"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="max"/>
                <OMA>
                  <OMS cd="Nat_E2" name="max"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="z"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_assoc_max2">
      <use format="Hets">ga_assoc_max</use>
    </presentation>
    <axiom name="ga_assoc_min2">
      <CMP>
         min,max: Rat * Rat -&#62; Rat, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="z"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="min"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat_E2" name="min"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="z"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="min"/>
                <OMA>
                  <OMS cd="Nat_E2" name="min"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="z"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_assoc_min2">
      <use format="Hets">ga_assoc_min</use>
    </presentation>
    <axiom name="ga_comm___Ast__2">
      <CMP>
         __*__:   Rat * Rat -&#62; Rat, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_comm___Ast__2">
      <use format="Hets">ga_comm___*__</use>
    </presentation>
    <axiom name="ga_comm___Plus__2">
      <CMP>
     ops __+__:   Rat * Rat -&#62; Rat, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_comm___Plus__2">
      <use format="Hets">ga_comm___+__</use>
    </presentation>
    <axiom name="ga_comm_max2">
      <CMP>
         min,max: Rat * Rat -&#62; Rat, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="max"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="max"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_comm_max2">
      <use format="Hets">ga_comm_max</use>
    </presentation>
    <axiom name="ga_comm_min2">
      <CMP>
         min,max: Rat * Rat -&#62; Rat, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="min"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="min"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_comm_min2">
      <use format="Hets">ga_comm_min</use>
    </presentation>
    <axiom name="ga_left_unit___Ast__2">
      <CMP>
         __*__:   Rat * Rat -&#62; Rat, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMS cd="Nat_E2" name="N1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_left_unit___Ast__2">
      <use format="Hets">ga_left_unit___*__</use>
    </presentation>
    <axiom name="ga_left_unit___Plus__2">
      <CMP>
     ops __+__:   Rat * Rat -&#62; Rat, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMS cd="Nat_E2" name="N0"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_left_unit___Plus__2">
      <use format="Hets">ga_left_unit___+__</use>
    </presentation>
    <axiom name="ga_right_unit___Ast__2">
      <CMP>
         __*__:   Rat * Rat -&#62; Rat, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMS cd="Nat_E2" name="N1"/>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_right_unit___Ast__2">
      <use format="Hets">ga_right_unit___*__</use>
    </presentation>
    <axiom name="ga_right_unit___Plus__2">
      <CMP>
     ops __+__:   Rat * Rat -&#62; Rat, 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMS cd="Nat_E2" name="N0"/>
              </OMA>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="ga_right_unit___Plus__2">
      <use format="Hets">ga_right_unit___+__</use>
    </presentation>
    <axiom name="geq_def_Rat">
      <CMP>
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     . (i / p &#60;= j / q &#60;=&#62; i * q &#60;= j * p ) %(leq_def_Rat)%
     . x &#62;= y &#60;=&#62; y &#60;= x                    %(geq_def_Rat)%
     . x &#60; y &#60;=&#62; (x &#60;= y /\ not x=y )       %(less_def_Rat)%
     . x &#62; y &#60;=&#62; y &#60; x                      %(greater_def_Rat)%
     . - (i/p) = (-i)/p                 %(minus_def_Rat)%
     . abs(i / p) = abs(i) / p          %(abs_def_Rat)%
     . (i / p) + (j / q) =	
     . x-y = x + (-y)                   %(sub_def_Rat)%
     . (i / p) * (j / q) = 
     . min(x,y) = x when x &#60;= y else y  %(min_def_Rat)%
     . max(x,y) = y when x &#60;= y else x  %(max_def_Rat)%
     . not def x/0                      %(divide_def1_Rat)%
     . (x/y=z &#60;=&#62; x=z*y) 
     . x ^ 0 = 1                        %(power_0_Rat)%
     . x ^ suc(n) = x * x ^ n           %(power_suc_Rat)%
     . x ^ (-p) = 1 / (x ^ p)           %(power_neg_Rat)%
     . (x + y) * z = (x * z) + (y * z)  %(distr1_Rat)% %implied
     . z * (x + y) = (z * x) + (z * y)  %(distr2_Rat)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__GreaterEquals__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__LowerEquals__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="geq_def_Rat">
      <use format="Hets">geq_def_Rat</use>
    </presentation>
    <axiom name="greater_def_Rat">
      <CMP>
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     . (i / p &#60;= j / q &#60;=&#62; i * q &#60;= j * p ) %(leq_def_Rat)%
     . x &#62;= y &#60;=&#62; y &#60;= x                    %(geq_def_Rat)%
     . x &#60; y &#60;=&#62; (x &#60;= y /\ not x=y )       %(less_def_Rat)%
     . x &#62; y &#60;=&#62; y &#60; x                      %(greater_def_Rat)%
     . - (i/p) = (-i)/p                 %(minus_def_Rat)%
     . abs(i / p) = abs(i) / p          %(abs_def_Rat)%
     . (i / p) + (j / q) =	
     . x-y = x + (-y)                   %(sub_def_Rat)%
     . (i / p) * (j / q) = 
     . min(x,y) = x when x &#60;= y else y  %(min_def_Rat)%
     . max(x,y) = y when x &#60;= y else x  %(max_def_Rat)%
     . not def x/0                      %(divide_def1_Rat)%
     . (x/y=z &#60;=&#62; x=z*y) 
     . x ^ 0 = 1                        %(power_0_Rat)%
     . x ^ suc(n) = x * x ^ n           %(power_suc_Rat)%
     . x ^ (-p) = 1 / (x ^ p)           %(power_neg_Rat)%
     . (x + y) * z = (x * z) + (y * z)  %(distr1_Rat)% %implied
     . z * (x + y) = (z * x) + (z * y)  %(distr2_Rat)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__Greater__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__Lower__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="greater_def_Rat">
      <use format="Hets">greater_def_Rat</use>
    </presentation>
    <axiom name="leq_def_Rat">
      <CMP>
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     . (i / p &#60;= j / q &#60;=&#62; i * q &#60;= j * p ) %(leq_def_Rat)%
     . x &#62;= y &#60;=&#62; y &#60;= x                    %(geq_def_Rat)%
     . x &#60; y &#60;=&#62; (x &#60;= y /\ not x=y )       %(less_def_Rat)%
     . x &#62; y &#60;=&#62; y &#60; x                      %(greater_def_Rat)%
     . - (i/p) = (-i)/p                 %(minus_def_Rat)%
     . abs(i / p) = abs(i) / p          %(abs_def_Rat)%
     . (i / p) + (j / q) =	
     . x-y = x + (-y)                   %(sub_def_Rat)%
     . (i / p) * (j / q) = 
     . min(x,y) = x when x &#60;= y else y  %(min_def_Rat)%
     . max(x,y) = y when x &#60;= y else x  %(max_def_Rat)%
     . not def x/0                      %(divide_def1_Rat)%
     . (x/y=z &#60;=&#62; x=z*y) 
     . x ^ 0 = 1                        %(power_0_Rat)%
     . x ^ suc(n) = x * x ^ n           %(power_suc_Rat)%
     . x ^ (-p) = 1 / (x ^ p)           %(power_neg_Rat)%
     . (x + y) * z = (x * z) + (y * z)  %(distr1_Rat)% %implied
     . z * (x + y) = (z * x) + (z * y)  %(distr2_Rat)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E1" name="Pos"/>
                </OMATP>
                <OMV name="p"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E1" name="Pos"/>
                </OMATP>
                <OMV name="q"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="i"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="j"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__LowerEquals__"/>
                <OMA>
                  <OMS cd="Rat_E2" name="__Division__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="i"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E1" name="Pos"/>
                    </OMATP>
                    <OMV name="p"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Rat_E2" name="__Division__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="j"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E1" name="Pos"/>
                    </OMATP>
                    <OMV name="q"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__LowerEquals__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="i"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E1" name="Pos"/>
                    </OMATP>
                    <OMV name="q"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="j"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E1" name="Pos"/>
                    </OMATP>
                    <OMV name="p"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="leq_def_Rat">
      <use format="Hets">leq_def_Rat</use>
    </presentation>
    <axiom name="less_def_Rat">
      <CMP>
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     . (i / p &#60;= j / q &#60;=&#62; i * q &#60;= j * p ) %(leq_def_Rat)%
     . x &#62;= y &#60;=&#62; y &#60;= x                    %(geq_def_Rat)%
     . x &#60; y &#60;=&#62; (x &#60;= y /\ not x=y )       %(less_def_Rat)%
     . x &#62; y &#60;=&#62; y &#60; x                      %(greater_def_Rat)%
     . - (i/p) = (-i)/p                 %(minus_def_Rat)%
     . abs(i / p) = abs(i) / p          %(abs_def_Rat)%
     . (i / p) + (j / q) =	
     . x-y = x + (-y)                   %(sub_def_Rat)%
     . (i / p) * (j / q) = 
     . min(x,y) = x when x &#60;= y else y  %(min_def_Rat)%
     . max(x,y) = y when x &#60;= y else x  %(max_def_Rat)%
     . not def x/0                      %(divide_def1_Rat)%
     . (x/y=z &#60;=&#62; x=z*y) 
     . x ^ 0 = 1                        %(power_0_Rat)%
     . x ^ suc(n) = x * x ^ n           %(power_suc_Rat)%
     . x ^ (-p) = 1 / (x ^ p)           %(power_neg_Rat)%
     . (x + y) * z = (x * z) + (y * z)  %(distr1_Rat)% %implied
     . z * (x + y) = (z * x) + (z * y)  %(distr2_Rat)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="predication"/>
                <OMS cd="Nat_E2" name="__Lower__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="conjunction"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Nat_E2" name="__LowerEquals__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="casl" name="neg"/>
                  <OMA>
                    <OMS cd="casl" name="strong-equation"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Rat_E2" name="Rat1"/>
                      </OMATP>
                      <OMV name="x"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Rat_E2" name="Rat1"/>
                      </OMATP>
                      <OMV name="y"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="less_def_Rat">
      <use format="Hets">less_def_Rat</use>
    </presentation>
    <axiom name="max_def_Rat">
      <CMP>
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     . (i / p &#60;= j / q &#60;=&#62; i * q &#60;= j * p ) %(leq_def_Rat)%
     . x &#62;= y &#60;=&#62; y &#60;= x                    %(geq_def_Rat)%
     . x &#60; y &#60;=&#62; (x &#60;= y /\ not x=y )       %(less_def_Rat)%
     . x &#62; y &#60;=&#62; y &#60; x                      %(greater_def_Rat)%
     . - (i/p) = (-i)/p                 %(minus_def_Rat)%
     . abs(i / p) = abs(i) / p          %(abs_def_Rat)%
     . (i / p) + (j / q) =	
     . x-y = x + (-y)                   %(sub_def_Rat)%
     . (i / p) * (j / q) = 
     . min(x,y) = x when x &#60;= y else y  %(min_def_Rat)%
     . max(x,y) = y when x &#60;= y else x  %(max_def_Rat)%
     . not def x/0                      %(divide_def1_Rat)%
     . (x/y=z &#60;=&#62; x=z*y) 
     . x ^ 0 = 1                        %(power_0_Rat)%
     . x ^ suc(n) = x * x ^ n           %(power_suc_Rat)%
     . x ^ (-p) = 1 / (x ^ p)           %(power_neg_Rat)%
     . (x + y) * z = (x * z) + (y * z)  %(distr1_Rat)% %implied
     . z * (x + y) = (z * x) + (z * y)  %(distr2_Rat)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="max"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="IfThenElse"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Nat_E2" name="__LowerEquals__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="max_def_Rat">
      <use format="Hets">max_def_Rat</use>
    </presentation>
    <axiom name="min_def_Rat">
      <CMP>
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     . (i / p &#60;= j / q &#60;=&#62; i * q &#60;= j * p ) %(leq_def_Rat)%
     . x &#62;= y &#60;=&#62; y &#60;= x                    %(geq_def_Rat)%
     . x &#60; y &#60;=&#62; (x &#60;= y /\ not x=y )       %(less_def_Rat)%
     . x &#62; y &#60;=&#62; y &#60; x                      %(greater_def_Rat)%
     . - (i/p) = (-i)/p                 %(minus_def_Rat)%
     . abs(i / p) = abs(i) / p          %(abs_def_Rat)%
     . (i / p) + (j / q) =	
     . x-y = x + (-y)                   %(sub_def_Rat)%
     . (i / p) * (j / q) = 
     . min(x,y) = x when x &#60;= y else y  %(min_def_Rat)%
     . max(x,y) = y when x &#60;= y else x  %(max_def_Rat)%
     . not def x/0                      %(divide_def1_Rat)%
     . (x/y=z &#60;=&#62; x=z*y) 
     . x ^ 0 = 1                        %(power_0_Rat)%
     . x ^ suc(n) = x * x ^ n           %(power_suc_Rat)%
     . x ^ (-p) = 1 / (x ^ p)           %(power_neg_Rat)%
     . (x + y) * z = (x * z) + (y * z)  %(distr1_Rat)% %implied
     . z * (x + y) = (z * x) + (z * y)  %(distr2_Rat)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="min"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="IfThenElse"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Nat_E2" name="__LowerEquals__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="min_def_Rat">
      <use format="Hets">min_def_Rat</use>
    </presentation>
    <axiom name="minus_def_Rat">
      <CMP>
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     . (i / p &#60;= j / q &#60;=&#62; i * q &#60;= j * p ) %(leq_def_Rat)%
     . x &#62;= y &#60;=&#62; y &#60;= x                    %(geq_def_Rat)%
     . x &#60; y &#60;=&#62; (x &#60;= y /\ not x=y )       %(less_def_Rat)%
     . x &#62; y &#60;=&#62; y &#60; x                      %(greater_def_Rat)%
     . - (i/p) = (-i)/p                 %(minus_def_Rat)%
     . abs(i / p) = abs(i) / p          %(abs_def_Rat)%
     . (i / p) + (j / q) =	
     . x-y = x + (-y)                   %(sub_def_Rat)%
     . (i / p) * (j / q) = 
     . min(x,y) = x when x &#60;= y else y  %(min_def_Rat)%
     . max(x,y) = y when x &#60;= y else x  %(max_def_Rat)%
     . not def x/0                      %(divide_def1_Rat)%
     . (x/y=z &#60;=&#62; x=z*y) 
     . x ^ 0 = 1                        %(power_0_Rat)%
     . x ^ suc(n) = x * x ^ n           %(power_suc_Rat)%
     . x ^ (-p) = 1 / (x ^ p)           %(power_neg_Rat)%
     . (x + y) * z = (x * z) + (y * z)  %(distr1_Rat)% %implied
     . z * (x + y) = (z * x) + (z * y)  %(distr2_Rat)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E1" name="Pos"/>
                </OMATP>
                <OMV name="p"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="i"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Int_E1" name="Minus__"/>
                <OMA>
                  <OMS cd="Rat_E2" name="__Division__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="i"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E1" name="Pos"/>
                    </OMATP>
                    <OMV name="p"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Rat_E2" name="__Division__"/>
                <OMA>
                  <OMS cd="Int_E1" name="Minus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="i"/>
                  </OMATTR>
                </OMA>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E1" name="Pos"/>
                  </OMATP>
                  <OMV name="p"/>
                </OMATTR>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="minus_def_Rat">
      <use format="Hets">minus_def_Rat</use>
    </presentation>
    <axiom name="mult_def_Rat">
      <CMP>
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     . (i / p &#60;= j / q &#60;=&#62; i * q &#60;= j * p ) %(leq_def_Rat)%
     . x &#62;= y &#60;=&#62; y &#60;= x                    %(geq_def_Rat)%
     . x &#60; y &#60;=&#62; (x &#60;= y /\ not x=y )       %(less_def_Rat)%
     . x &#62; y &#60;=&#62; y &#60; x                      %(greater_def_Rat)%
     . - (i/p) = (-i)/p                 %(minus_def_Rat)%
     . abs(i / p) = abs(i) / p          %(abs_def_Rat)%
     . (i / p) + (j / q) =	
     . x-y = x + (-y)                   %(sub_def_Rat)%
     . (i / p) * (j / q) = 
     . min(x,y) = x when x &#60;= y else y  %(min_def_Rat)%
     . max(x,y) = y when x &#60;= y else x  %(max_def_Rat)%
     . not def x/0                      %(divide_def1_Rat)%
     . (x/y=z &#60;=&#62; x=z*y) 
     . x ^ 0 = 1                        %(power_0_Rat)%
     . x ^ suc(n) = x * x ^ n           %(power_suc_Rat)%
     . x ^ (-p) = 1 / (x ^ p)           %(power_neg_Rat)%
     . (x + y) * z = (x * z) + (y * z)  %(distr1_Rat)% %implied
     . z * (x + y) = (z * x) + (z * y)  %(distr2_Rat)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E1" name="Pos"/>
                </OMATP>
                <OMV name="p"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E1" name="Pos"/>
                </OMATP>
                <OMV name="q"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="i"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="j"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMA>
                  <OMS cd="Rat_E2" name="__Division__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="i"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E1" name="Pos"/>
                    </OMATP>
                    <OMV name="p"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Rat_E2" name="__Division__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="j"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E1" name="Pos"/>
                    </OMATP>
                    <OMV name="q"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Rat_E2" name="__Division__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="i"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="j"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E1" name="Pos"/>
                    </OMATP>
                    <OMV name="p"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E1" name="Pos"/>
                    </OMATP>
                    <OMV name="q"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="mult_def_Rat">
      <use format="Hets">mult_def_Rat</use>
    </presentation>
    <axiom name="power_0_Rat">
      <CMP>
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     . (i / p &#60;= j / q &#60;=&#62; i * q &#60;= j * p ) %(leq_def_Rat)%
     . x &#62;= y &#60;=&#62; y &#60;= x                    %(geq_def_Rat)%
     . x &#60; y &#60;=&#62; (x &#60;= y /\ not x=y )       %(less_def_Rat)%
     . x &#62; y &#60;=&#62; y &#60; x                      %(greater_def_Rat)%
     . - (i/p) = (-i)/p                 %(minus_def_Rat)%
     . abs(i / p) = abs(i) / p          %(abs_def_Rat)%
     . (i / p) + (j / q) =	
     . x-y = x + (-y)                   %(sub_def_Rat)%
     . (i / p) * (j / q) = 
     . min(x,y) = x when x &#60;= y else y  %(min_def_Rat)%
     . max(x,y) = y when x &#60;= y else x  %(max_def_Rat)%
     . not def x/0                      %(divide_def1_Rat)%
     . (x/y=z &#60;=&#62; x=z*y) 
     . x ^ 0 = 1                        %(power_0_Rat)%
     . x ^ suc(n) = x * x ^ n           %(power_suc_Rat)%
     . x ^ (-p) = 1 / (x ^ p)           %(power_neg_Rat)%
     . (x + y) * z = (x * z) + (y * z)  %(distr1_Rat)% %implied
     . z * (x + y) = (z * x) + (z * y)  %(distr2_Rat)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Power__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMS cd="Nat_E2" name="N0"/>
              </OMA>
              <OMS cd="Nat_E2" name="N1"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="power_0_Rat">
      <use format="Hets">power_0_Rat</use>
    </presentation>
    <axiom name="power_neg_Rat">
      <CMP>
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     . (i / p &#60;= j / q &#60;=&#62; i * q &#60;= j * p ) %(leq_def_Rat)%
     . x &#62;= y &#60;=&#62; y &#60;= x                    %(geq_def_Rat)%
     . x &#60; y &#60;=&#62; (x &#60;= y /\ not x=y )       %(less_def_Rat)%
     . x &#62; y &#60;=&#62; y &#60; x                      %(greater_def_Rat)%
     . - (i/p) = (-i)/p                 %(minus_def_Rat)%
     . abs(i / p) = abs(i) / p          %(abs_def_Rat)%
     . (i / p) + (j / q) =	
     . x-y = x + (-y)                   %(sub_def_Rat)%
     . (i / p) * (j / q) = 
     . min(x,y) = x when x &#60;= y else y  %(min_def_Rat)%
     . max(x,y) = y when x &#60;= y else x  %(max_def_Rat)%
     . not def x/0                      %(divide_def1_Rat)%
     . (x/y=z &#60;=&#62; x=z*y) 
     . x ^ 0 = 1                        %(power_0_Rat)%
     . x ^ suc(n) = x * x ^ n           %(power_suc_Rat)%
     . x ^ (-p) = 1 / (x ^ p)           %(power_neg_Rat)%
     . (x + y) * z = (x * z) + (y * z)  %(distr1_Rat)% %implied
     . z * (x + y) = (z * x) + (z * y)  %(distr2_Rat)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E1" name="Pos"/>
                </OMATP>
                <OMV name="p"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Power__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Int_E1" name="Minus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E1" name="Pos"/>
                    </OMATP>
                    <OMV name="p"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Rat_E2" name="__Division__"/>
                <OMS cd="Nat_E2" name="N1"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Power__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E1" name="Pos"/>
                    </OMATP>
                    <OMV name="p"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="power_neg_Rat">
      <use format="Hets">power_neg_Rat</use>
    </presentation>
    <axiom name="power_suc_Rat">
      <CMP>
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     . (i / p &#60;= j / q &#60;=&#62; i * q &#60;= j * p ) %(leq_def_Rat)%
     . x &#62;= y &#60;=&#62; y &#60;= x                    %(geq_def_Rat)%
     . x &#60; y &#60;=&#62; (x &#60;= y /\ not x=y )       %(less_def_Rat)%
     . x &#62; y &#60;=&#62; y &#60; x                      %(greater_def_Rat)%
     . - (i/p) = (-i)/p                 %(minus_def_Rat)%
     . abs(i / p) = abs(i) / p          %(abs_def_Rat)%
     . (i / p) + (j / q) =	
     . x-y = x + (-y)                   %(sub_def_Rat)%
     . (i / p) * (j / q) = 
     . min(x,y) = x when x &#60;= y else y  %(min_def_Rat)%
     . max(x,y) = y when x &#60;= y else x  %(max_def_Rat)%
     . not def x/0                      %(divide_def1_Rat)%
     . (x/y=z &#60;=&#62; x=z*y) 
     . x ^ 0 = 1                        %(power_0_Rat)%
     . x ^ suc(n) = x * x ^ n           %(power_suc_Rat)%
     . x ^ (-p) = 1 / (x ^ p)           %(power_neg_Rat)%
     . (x + y) * z = (x * z) + (y * z)  %(distr1_Rat)% %implied
     . z * (x + y) = (z * x) + (z * y)  %(distr2_Rat)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Power__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat_E2" name="suc"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat_E2" name="__Power__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="power_suc_Rat">
      <use format="Hets">power_suc_Rat</use>
    </presentation>
    <axiom name="sub_def_Rat">
      <CMP>
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     forall p,q:Pos; n:Nat; i,j: Int; x,y,z: Rat
     . (i / p &#60;= j / q &#60;=&#62; i * q &#60;= j * p ) %(leq_def_Rat)%
     . x &#62;= y &#60;=&#62; y &#60;= x                    %(geq_def_Rat)%
     . x &#60; y &#60;=&#62; (x &#60;= y /\ not x=y )       %(less_def_Rat)%
     . x &#62; y &#60;=&#62; y &#60; x                      %(greater_def_Rat)%
     . - (i/p) = (-i)/p                 %(minus_def_Rat)%
     . abs(i / p) = abs(i) / p          %(abs_def_Rat)%
     . (i / p) + (j / q) =	
     . x-y = x + (-y)                   %(sub_def_Rat)%
     . (i / p) * (j / q) = 
     . min(x,y) = x when x &#60;= y else y  %(min_def_Rat)%
     . max(x,y) = y when x &#60;= y else x  %(max_def_Rat)%
     . not def x/0                      %(divide_def1_Rat)%
     . (x/y=z &#60;=&#62; x=z*y) 
     . x ^ 0 = 1                        %(power_0_Rat)%
     . x ^ suc(n) = x * x ^ n           %(power_suc_Rat)%
     . x ^ (-p) = 1 / (x ^ p)           %(power_neg_Rat)%
     . (x + y) * z = (x * z) + (y * z)  %(distr1_Rat)% %implied
     . z * (x + y) = (z * x) + (z * y)  %(distr2_Rat)% %implied 
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Int_E2" name="__Minus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="y"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Int_E1" name="Minus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="sub_def_Rat">
      <use format="Hets">sub_def_Rat</use>
    </presentation>
  </theory>
  <private for="Rat_E1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Rat" Type:"GlobalThm Open None Open" Origin:"DGExtension"
From:"Rat_E2" Type:"GlobalDef" Origin:"DGExtension"
From:"Rat_E2" Type:"GlobalThm Open Def Open" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="Rat">
    <presentation for="Rat">
      <use format="Hets">[Rat,,0]</use>
    </presentation>
    <imports from="#Rat_E1"/>
    <axiom name="divide_dom_Rat">
      <CMP>
     forall i,j: Int; p,q:Pos; x,y:Rat
     forall i,j: Int; p,q:Pos; x,y:Rat
     forall i,j: Int; p,q:Pos; x,y:Rat
     . (i / p) - (j / q) = 
     . def (x/y) &#60;=&#62; not y = 0          %(divide_dom_Rat)%
     . (i/p) / (j/q) =
     . x^(i+j) = x^i * x^j              %(power_Rat)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="y"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="equivalence"/>
              <OMA>
                <OMS cd="casl" name="definedness"/>
                <OMA>
                  <OMS cd="Rat_E2" name="__Division__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="y"/>
                  </OMATTR>
                  <OMS cd="Nat_E2" name="N0"/>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="divide_dom_Rat">
      <use format="Hets">divide_dom_Rat</use>
    </presentation>
    <axiom name="divide_rule_Rat">
      <CMP>
     forall i,j: Int; p,q:Pos; x,y:Rat
     forall i,j: Int; p,q:Pos; x,y:Rat
     forall i,j: Int; p,q:Pos; x,y:Rat
     . (i / p) - (j / q) = 
     . def (x/y) &#60;=&#62; not y = 0          %(divide_dom_Rat)%
     . (i/p) / (j/q) =
     . x^(i+j) = x^i * x^j              %(power_Rat)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="i"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="j"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E1" name="Pos"/>
                </OMATP>
                <OMV name="p"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E1" name="Pos"/>
                </OMATP>
                <OMV name="q"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="implication"/>
              <OMA>
                <OMS cd="casl" name="neg"/>
                <OMA>
                  <OMS cd="casl" name="strong-equation"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="j"/>
                  </OMATTR>
                  <OMS cd="Nat_E2" name="N0"/>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="casl" name="strong-equation"/>
                <OMA>
                  <OMS cd="Rat_E2" name="__Division__"/>
                  <OMA>
                    <OMS cd="Rat_E2" name="__Division__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="i"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E1" name="Pos"/>
                      </OMATP>
                      <OMV name="p"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="Rat_E2" name="__Division__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="j"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E1" name="Pos"/>
                      </OMATP>
                      <OMV name="q"/>
                    </OMATTR>
                  </OMA>
                </OMA>
                <OMA>
                  <OMS cd="Rat_E2" name="__Division__"/>
                  <OMA>
                    <OMS cd="Nat_E2" name="__Ast__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="i"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E1" name="Pos"/>
                      </OMATP>
                      <OMV name="q"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="Nat_E2" name="__Ast__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E1" name="Pos"/>
                      </OMATP>
                      <OMV name="p"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="j"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
              <OMS cd="casl" name="false"/>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="divide_rule_Rat">
      <use format="Hets">divide_rule_Rat</use>
    </presentation>
    <axiom name="power_Rat">
      <CMP>
     forall i,j: Int; p,q:Pos; x,y:Rat
     forall i,j: Int; p,q:Pos; x,y:Rat
     forall i,j: Int; p,q:Pos; x,y:Rat
     . (i / p) - (j / q) = 
     . def (x/y) &#60;=&#62; not y = 0          %(divide_dom_Rat)%
     . (i/p) / (j/q) =
     . x^(i+j) = x^i * x^j              %(power_Rat)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="i"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="j"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="x"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Nat_E2" name="__Power__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="x"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat_E2" name="__Plus__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="i"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="j"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMA>
                  <OMS cd="Nat_E2" name="__Power__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="i"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Nat_E2" name="__Power__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Rat_E2" name="Rat1"/>
                    </OMATP>
                    <OMV name="x"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="j"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="power_Rat">
      <use format="Hets">power_Rat</use>
    </presentation>
    <axiom name="sub_rule_Rat">
      <CMP>
     forall i,j: Int; p,q:Pos; x,y:Rat
     forall i,j: Int; p,q:Pos; x,y:Rat
     forall i,j: Int; p,q:Pos; x,y:Rat
     . (i / p) - (j / q) = 
     . def (x/y) &#60;=&#62; not y = 0          %(divide_dom_Rat)%
     . (i/p) / (j/q) =
     . x^(i+j) = x^i * x^j              %(power_Rat)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="i"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="j"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E1" name="Pos"/>
                </OMATP>
                <OMV name="p"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E1" name="Pos"/>
                </OMATP>
                <OMV name="q"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="Int_E2" name="__Minus__"/>
                <OMA>
                  <OMS cd="Rat_E2" name="__Division__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="i"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E1" name="Pos"/>
                    </OMATP>
                    <OMV name="p"/>
                  </OMATTR>
                </OMA>
                <OMA>
                  <OMS cd="Rat_E2" name="__Division__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="j"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E1" name="Pos"/>
                    </OMATP>
                    <OMV name="q"/>
                  </OMATTR>
                </OMA>
              </OMA>
              <OMA>
                <OMS cd="Rat_E2" name="__Division__"/>
                <OMA>
                  <OMS cd="Int_E2" name="__Minus__"/>
                  <OMA>
                    <OMS cd="Nat_E2" name="__Ast__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="i"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E1" name="Pos"/>
                      </OMATP>
                      <OMV name="q"/>
                    </OMATTR>
                  </OMA>
                  <OMA>
                    <OMS cd="Nat_E2" name="__Ast__"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Int_E2" name="Int1"/>
                      </OMATP>
                      <OMV name="j"/>
                    </OMATTR>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E1" name="Pos"/>
                      </OMATP>
                      <OMV name="p"/>
                    </OMATTR>
                  </OMA>
                </OMA>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E1" name="Pos"/>
                    </OMATP>
                    <OMV name="p"/>
                  </OMATTR>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E1" name="Pos"/>
                    </OMATP>
                    <OMV name="q"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="sub_rule_Rat">
      <use format="Hets">sub_rule_Rat</use>
    </presentation>
  </theory>
  <private for="Rat">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Rat_E1" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="DecimalFraction_L">
    <presentation for="DecimalFraction_L">
      <use format="Hets">[DecimalFraction,L,0]</use>
    </presentation>
    <imports from="#Rat"/>
    <symbol name="tenPower" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="tenPower">
      <use format="Hets">[tenPower]</use>
    </presentation>
    <axiom name="tenPower_def">
      <CMP>
     forall n,m: Nat
     . tenPower(n)= 10 when n &#60; 10 else
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="DecimalFraction_L" name="tenPower"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="casl" name="IfThenElse"/>
                <OMA>
                  <OMS cd="casl" name="predication"/>
                  <OMS cd="Nat_E2" name="__Lower__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="n"/>
                  </OMATTR>
                  <OMA>
                    <OMS cd="Nat_E2" name="__AtAt__"/>
                    <OMS cd="Nat_E2" name="N1"/>
                    <OMS cd="Nat_E2" name="N0"/>
                  </OMA>
                </OMA>
                <OMA>
                  <OMS cd="Nat_E2" name="__AtAt__"/>
                  <OMS cd="Nat_E2" name="N1"/>
                  <OMS cd="Nat_E2" name="N0"/>
                </OMA>
                <OMA>
                  <OMS cd="Nat_E2" name="__Ast__"/>
                  <OMA>
                    <OMS cd="Nat_E2" name="__AtAt__"/>
                    <OMS cd="Nat_E2" name="N1"/>
                    <OMS cd="Nat_E2" name="N0"/>
                  </OMA>
                  <OMA>
                    <OMS cd="DecimalFraction_L" name="tenPower"/>
                    <OMA>
                      <OMS cd="Nat_E2" name="__div__"/>
                      <OMATTR>
                        <OMATP>
                          <OMS cd="casl" name="type"/>
                          <OMS cd="Nat_E2" name="Nat1"/>
                        </OMATP>
                        <OMV name="n"/>
                      </OMATTR>
                      <OMA>
                        <OMS cd="Nat_E2" name="__AtAt__"/>
                        <OMS cd="Nat_E2" name="N1"/>
                        <OMS cd="Nat_E2" name="N0"/>
                      </OMA>
                    </OMA>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="tenPower_def">
      <use format="Hets">tenPower_def</use>
    </presentation>
  </theory>
  <private for="DecimalFraction_L">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Rat" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="DecimalFraction_1">
    <presentation for="DecimalFraction_1">
      <use format="Hets">[DecimalFraction,,1]</use>
    </presentation>
    <imports from="#DecimalFraction_L"/>
    <symbol name="__:::__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Rat_E2" name="Rat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__:::__1">
      <use format="Hets">[__,:::,__]</use>
    </presentation>
    <symbol name="__E__1" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Rat_E2" name="Rat1"/>
            <OMS cd="Int_E2" name="Int1"/>
            <OMS cd="Rat_E2" name="Rat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__E__1">
      <use format="Hets">[__,E,__]</use>
    </presentation>
    <axiom name="decfract_def">
      <CMP>
     forall r:Rat; n,m: Nat; p: Pos; i:Int
     forall r:Rat; n,m: Nat; p: Pos; i:Int
     forall r:Rat; n,m: Nat; p: Pos; i:Int
     forall r:Rat; n,m: Nat; p: Pos; i:Int
     . n:::m = n + (m/tenPower(m))             %(decfract_def)%
     . r E i = r * (10 ^ i)                    %(exponent_DecimalFraction)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="n"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Nat_E2" name="Nat1"/>
                </OMATP>
                <OMV name="m"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="DecimalFraction_1" name="__:::__1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="m"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Plus__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Nat_E2" name="Nat1"/>
                  </OMATP>
                  <OMV name="n"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Rat_E2" name="__Division__"/>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Nat_E2" name="Nat1"/>
                    </OMATP>
                    <OMV name="m"/>
                  </OMATTR>
                  <OMA>
                    <OMS cd="DecimalFraction_L" name="tenPower"/>
                    <OMATTR>
                      <OMATP>
                        <OMS cd="casl" name="type"/>
                        <OMS cd="Nat_E2" name="Nat1"/>
                      </OMATP>
                      <OMV name="m"/>
                    </OMATTR>
                  </OMA>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="decfract_def">
      <use format="Hets">decfract_def</use>
    </presentation>
    <axiom name="exponent_DecimalFraction">
      <CMP>
     forall r:Rat; n,m: Nat; p: Pos; i:Int
     forall r:Rat; n,m: Nat; p: Pos; i:Int
     forall r:Rat; n,m: Nat; p: Pos; i:Int
     forall r:Rat; n,m: Nat; p: Pos; i:Int
     . n:::m = n + (m/tenPower(m))             %(decfract_def)%
     . r E i = r * (10 ^ i)                    %(exponent_DecimalFraction)%
</CMP>
      <FMP>
        <OMOBJ>
          <OMBIND>
            <OMS cd="casl" name="universal"/>
            <OMBVAR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Rat_E2" name="Rat1"/>
                </OMATP>
                <OMV name="r"/>
              </OMATTR>
              <OMATTR>
                <OMATP>
                  <OMS cd="casl" name="type"/>
                  <OMS cd="Int_E2" name="Int1"/>
                </OMATP>
                <OMV name="i"/>
              </OMATTR>
            </OMBVAR>
            <OMA>
              <OMS cd="casl" name="strong-equation"/>
              <OMA>
                <OMS cd="DecimalFraction_1" name="__E__1"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="r"/>
                </OMATTR>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Int_E2" name="Int1"/>
                  </OMATP>
                  <OMV name="i"/>
                </OMATTR>
              </OMA>
              <OMA>
                <OMS cd="Nat_E2" name="__Ast__"/>
                <OMATTR>
                  <OMATP>
                    <OMS cd="casl" name="type"/>
                    <OMS cd="Rat_E2" name="Rat1"/>
                  </OMATP>
                  <OMV name="r"/>
                </OMATTR>
                <OMA>
                  <OMS cd="Nat_E2" name="__Power__"/>
                  <OMA>
                    <OMS cd="Nat_E2" name="__AtAt__"/>
                    <OMS cd="Nat_E2" name="N1"/>
                    <OMS cd="Nat_E2" name="N0"/>
                  </OMA>
                  <OMATTR>
                    <OMATP>
                      <OMS cd="casl" name="type"/>
                      <OMS cd="Int_E2" name="Int1"/>
                    </OMATP>
                    <OMV name="i"/>
                  </OMATTR>
                </OMA>
              </OMA>
            </OMA>
          </OMBIND>
        </OMOBJ>
      </FMP>
    </axiom>
    <presentation for="exponent_DecimalFraction">
      <use format="Hets">exponent_DecimalFraction</use>
    </presentation>
  </theory>
  <private for="DecimalFraction_1">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"DecimalFraction_L" Type:"GlobalDef" Origin:"DGExtension"
]]></data>
  </private>
  <theory xml:id="DecimalFraction">
    <presentation for="DecimalFraction">
      <use format="Hets">[DecimalFraction,,0]</use>
    </presentation>
    <imports from="#Rat"/>
    <symbol name="__:::__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Nat_E2" name="Nat1"/>
            <OMS cd="Rat_E2" name="Rat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__:::__">
      <use format="Hets">[__,:::,__]</use>
    </presentation>
    <symbol name="__E__" role="object">
      <type system="casl">
        <OMOBJ>
          <OMA>
            <OMS cd="casl" name="function"/>
            <OMS cd="Rat_E2" name="Rat1"/>
            <OMS cd="Int_E2" name="Int1"/>
            <OMS cd="Rat_E2" name="Rat1"/>
          </OMA>
        </OMOBJ>
      </type>
    </symbol>
    <presentation for="__E__">
      <use format="Hets">[__,E,__]</use>
    </presentation>
  </theory>
  <private for="DecimalFraction">
    <data format="Hets-Imports" pto="Hets"><![CDATA[
From:"Rat" Type:"GlobalThm Open Def Open" Origin:"DGExtension"
From:"DecimalFraction_1" Type:"HidingDef" Origin:"DGLocal"
]]></data>
  </private>
</omdoc>
