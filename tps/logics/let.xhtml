<?xml version="1.0" encoding="UTF-8"?>
<html id="let-omdoc" xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <link rel="stylesheet" type="text/css" href="omdoc-default.css"/>
    <title>Let expressions</title>
  </head>
  <body>
    <div class="dc-titleblock">
      <div class="dc-title">Let expressions</div>
      <div class="dc-authors">Florian Rabe</div>
      <div class="dc-date">2008-07-07</div>
    </div>
    <div class="theory" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:dc="http://purl.org/dc/elements/1.1/">
      <h1 id="let">1. Let Expressions</h1>
      <div class="omdoc-symbol" id="let" role="Symbol" about="#" xml:id="">
        <a class="omdoc" rel="oso:homeTheory" href="#let"/>
        <div class="omdoc-titlebox">
          <span class="omdoc-titleword">Concept</span>let
        </div>The let binder. It takes a variable X with a definedas attribution D and scope S. Its meaning is LET X = D IN S. Accordingly for multiple variables. 
      </div>
      <div class="omdoc-symbol" id="letrec" role="Symbol" about="#" xml:id="">
        <a class="omdoc" rel="oso:homeTheory" href="#let"/>
        <div class="omdoc-titlebox">
          <span class="omdoc-titleword">Concept</span>letrec
        </div>As let, but with recursive definitions. In case of multiple variables, the definitions can be mutually recursive. 
      </div>
      <div class="omdoc-symbol" id="definedas" role="Symbol" about="#" xml:id="">
        <a class="omdoc" rel="oso:homeTheory" href="#let"/>
        <div class="omdoc-titlebox">
          <span class="omdoc-titleword">Concept</span>definedas
        </div>The key used to attribute a definition in a let or letrec binding. 
      </div>
    </div>
  </body>
</html>
