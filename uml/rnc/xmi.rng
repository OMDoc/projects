<?xml version="1.0" encoding="UTF-8"?>
<!-- _______________________________________________________________ -->
<!---->
<!-- XMI is the top-level XML ELEMENT for XMI transfer text -->
<!-- _______________________________________________________________ -->
<grammar xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">

  <start>
    <element name="XMI.content">
      <ref name="attlist.XMI.content"/>
      <ref name="any"/>
    </element>
  </start>
  
  <define name="XMI">
    <element name="XMI">
      <ref name="attlist.XMI"/>
      <optional>
        <ref name="XMI.header"/>
      </optional>
      <optional>
        <ref name="XMI.content"/>
      </optional>
      <zeroOrMore>
        <ref name="XMI.difference"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="XMI.extensions"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.XMI" combine="interleave">
    <optional>
      <attribute name="xmi.version" a:defaultValue="1.1">
        <value type="string" datatypeLibrary="">1.1</value>
      </attribute>
    </optional>
    <optional>
      <attribute name="timestamp"/>
    </optional>
    <optional>
      <attribute name="verified">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- XMI.header contains documentation and identifies the model, -->
  <!-- metamodel, and metametamodel -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.header">
    <element name="XMI.header">
      <ref name="attlist.XMI.header"/>
      <optional>
        <ref name="XMI.documentation"/>
      </optional>
      <zeroOrMore>
        <ref name="XMI.model"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="XMI.metamodel"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="XMI.metametamodel"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="XMI.import"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.XMI.header" combine="interleave">
    <empty/>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- documentation for transfer data -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.documentation">
    <element name="XMI.documentation">
      <ref name="attlist.XMI.documentation"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.owner"/>
          <ref name="XMI.contact"/>
          <ref name="XMI.longDescription"/>
          <ref name="XMI.shortDescription"/>
          <ref name="XMI.exporter"/>
          <ref name="XMI.exporterVersion"/>
          <ref name="XMI.notice"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.XMI.documentation" combine="interleave">
    <empty/>
  </define>
  <define name="XMI.owner">
    <element name="XMI.owner">
      <ref name="attlist.XMI.owner"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.owner" combine="interleave">
    <empty/>
  </define>
  <define name="XMI.contact">
    <element name="XMI.contact">
      <ref name="attlist.XMI.contact"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.contact" combine="interleave">
    <empty/>
  </define>
  <define name="XMI.longDescription">
    <element name="XMI.longDescription">
      <ref name="attlist.XMI.longDescription"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.longDescription" combine="interleave">
    <empty/>
  </define>
  <define name="XMI.shortDescription">
    <element name="XMI.shortDescription">
      <ref name="attlist.XMI.shortDescription"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.shortDescription" combine="interleave">
    <empty/>
  </define>
  <define name="XMI.exporter">
    <element name="XMI.exporter">
      <ref name="attlist.XMI.exporter"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.exporter" combine="interleave">
    <empty/>
  </define>
  <define name="XMI.exporterVersion">
    <element name="XMI.exporterVersion">
      <ref name="attlist.XMI.exporterVersion"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.exporterVersion" combine="interleave">
    <empty/>
  </define>
  <define name="XMI.exporterID">
    <element name="XMI.exporterID">
      <ref name="attlist.XMI.exporterID"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.exporterID" combine="interleave">
    <empty/>
  </define>
  <define name="XMI.notice">
    <element name="XMI.notice">
      <ref name="attlist.XMI.notice"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.notice" combine="interleave">
    <empty/>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- XMI.ELEMENT.att defines the attributes that each XML ELEMENT -->
  <!-- that corresponds to a metamodel class must have to conform to -->
  <!-- the XMI specification. -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.ELEMENT.att">
    <optional>
      <attribute name="xmi.id">
        <data type="ID"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="xmi.label"/>
    </optional>
    <optional>
      <attribute name="xmi.uuid"/>
    </optional>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- XMI.model identifies the model(s) being transferred -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.model">
    <element name="XMI.model">
      <ref name="attlist.XMI.model"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.model" combine="interleave">
    <attribute name="xmi.name"/>
    <optional>
      <attribute name="xmi.version"/>
    </optional>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- XMI.metamodel identifies the metamodel(s) for the transferred -->
  <!-- data -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.metamodel">
    <element name="XMI.metamodel">
      <ref name="attlist.XMI.metamodel"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.metamodel" combine="interleave">
    <attribute name="xmi.name"/>
    <optional>
      <attribute name="xmi.version"/>
    </optional>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- XMI.metametamodel identifies the metametamodel(s) for the -->
  <!-- transferred data -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.metametamodel">
    <element name="XMI.metametamodel">
      <ref name="attlist.XMI.metametamodel"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.metametamodel" combine="interleave">
    <attribute name="xmi.name"/>
    <optional>
      <attribute name="xmi.version"/>
    </optional>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- XMI.import identifies imported metamodel(s) -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.import">
    <element name="XMI.import">
      <ref name="attlist.XMI.import"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.import" combine="interleave">
    <attribute name="xmi.name"/>
    <optional>
      <attribute name="xmi.version"/>
    </optional>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- XMI.content is the actual data being transferred -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.content">
    <element name="XMI.content">
      <ref name="attlist.XMI.content"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.content" combine="interleave">
    <empty/>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- XMI.extensions contains data to transfer that does not conform -->
  <!-- to the metamodel(s) in the header -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.extensions">
    <element name="XMI.extensions">
      <ref name="attlist.XMI.extensions"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.extensions" combine="interleave">
    <attribute name="xmi.extender"/>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- extension contains information related to a specific model -->
  <!-- construct that is not defined in the metamodel(s) in the header -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.extension">
    <element name="XMI.extension">
      <ref name="attlist.XMI.extension"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.extension" combine="interleave">
    <ref name="XMI.ELEMENT.att"/>
    <attribute name="xmi.extender"/>
    <optional>
      <attribute name="xmi.extenderID"/>
    </optional>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- XMI.difference holds XML ELEMENTs representing differences to a -->
  <!-- base model -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.difference">
    <element name="XMI.difference">
      <ref name="attlist.XMI.difference"/>
      <zeroOrMore>
        <choice>
          <ref name="XMI.difference"/>
          <ref name="XMI.delete"/>
          <ref name="XMI.add"/>
          <ref name="XMI.replace"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.XMI.difference" combine="interleave">
    <ref name="XMI.ELEMENT.att"/>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- XMI.delete represents a deletion from a base model -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.delete">
    <element name="XMI.delete">
      <ref name="attlist.XMI.delete"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.XMI.delete" combine="interleave">
    <ref name="XMI.ELEMENT.att"/>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- XMI.add represents an addition to a base model -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.add">
    <element name="XMI.add">
      <ref name="attlist.XMI.add"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.add" combine="interleave">
    <ref name="XMI.ELEMENT.att"/>
    <optional>
      <attribute name="xmi.position" a:defaultValue="-1"/>
    </optional>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- XMI.replace represents the replacement of a model construct -->
  <!-- with another model construct in a base model -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.replace">
    <element name="XMI.replace">
      <ref name="attlist.XMI.replace"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.replace" combine="interleave">
    <ref name="XMI.ELEMENT.att"/>
    <optional>
      <attribute name="xmi.position" a:defaultValue="-1"/>
    </optional>
  </define>
  <!-- _______________________________________________________________ -->
  <!---->
  <!-- XMI.reference may be used to refer to data types not defined in -->
  <!-- the metamodel -->
  <!-- _______________________________________________________________ -->
  <define name="XMI.reference">
    <element name="XMI.reference">
      <ref name="attlist.XMI.reference"/>
      <ref name="any"/>
    </element>
  </define>
  <define name="attlist.XMI.reference" combine="interleave">
    <empty/>
  </define>
  <!-- ========= Data_Types ========= -->
  <define name="AggregationKind">
    <choice>
      <value>none</value>
      <value>aggregate</value>
      <value>composite</value>
    </choice>
  </define>
  <define name="CallConcurrencyKind">
    <choice>
      <value>sequential</value>
      <value>guarded</value>
      <value>concurrent</value>
    </choice>
  </define>
  <define name="ChangeableKind">
    <choice>
      <value>changeable</value>
      <value>frozen</value>
      <value>addOnly</value>
    </choice>
  </define>
  <define name="OrderingKind">
    <choice>
      <value>unordered</value>
      <value>ordered</value>
    </choice>
  </define>
  <define name="ParameterDirectionKind">
    <choice>
      <value>in</value>
      <value>inout</value>
      <value>out</value>
      <value>return</value>
    </choice>
  </define>
  <define name="ScopeKind">
    <choice>
      <value>instance</value>
      <value>classifier</value>
    </choice>
  </define>
  <define name="VisibilityKind">
    <choice>
      <value>public</value>
      <value>protected</value>
      <value>private</value>
      <value>package</value>
    </choice>
  </define>
  <define name="PseudostateKind">
    <choice>
      <value>choice</value>
      <value>deepHistory</value>
      <value>fork</value>
      <value>initial</value>
      <value>join</value>
      <value>junction</value>
      <value>shallowHistory</value>
    </choice>
  </define>
  <!-- ========= Multiplicity ========= -->
  <define name="Multiplicity.range">
    <element name="Multiplicity.range">
      <ref name="attlist.Multiplicity.range"/>
      <zeroOrMore>
        <ref name="MultiplicityRange"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Multiplicity.range" combine="interleave">
    <empty/>
  </define>
  <define name="MultiplicityFeatures">
    <choice>
      <ref name="XMI.extension"/>
      <ref name="Multiplicity.range"/>
    </choice>
  </define>
  <define name="MultiplicityAtts">
    <ref name="XMI.ELEMENT.att"/>
  </define>
  <define name="Multiplicity">
    <element name="Multiplicity">
      <ref name="attlist.Multiplicity"/>
      <zeroOrMore>
        <ref name="MultiplicityFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Multiplicity" combine="interleave">
    <ref name="MultiplicityAtts"/>
  </define>
  <!-- ========= MultiplicityRange ========= -->
  <define name="MultiplicityRange.lower">
    <element name="MultiplicityRange.lower">
      <ref name="attlist.MultiplicityRange.lower"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.MultiplicityRange.lower" combine="interleave">
    <empty/>
  </define>
  <define name="MultiplicityRange.upper">
    <element name="MultiplicityRange.upper">
      <ref name="attlist.MultiplicityRange.upper"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.MultiplicityRange.upper" combine="interleave">
    <empty/>
  </define>
  <define name="MultiplicityRange.multiplicity">
    <element name="MultiplicityRange.multiplicity">
      <ref name="attlist.MultiplicityRange.multiplicity"/>
      <zeroOrMore>
        <ref name="Multiplicity"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.MultiplicityRange.multiplicity" combine="interleave">
    <empty/>
  </define>
  <define name="MultiplicityRangeFeatures">
    <choice>
      <ref name="XMI.extension"/>
      <ref name="MultiplicityRange.lower"/>
      <ref name="MultiplicityRange.upper"/>
      <ref name="MultiplicityRange.multiplicity"/>
    </choice>
  </define>
  <define name="MultiplicityRangeAtts">
    <ref name="XMI.ELEMENT.att"/>
    <optional>
      <attribute name="lower"/>
    </optional>
    <optional>
      <attribute name="upper"/>
    </optional>
    <optional>
      <attribute name="multiplicity">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="MultiplicityRange">
    <element name="MultiplicityRange">
      <ref name="attlist.MultiplicityRange"/>
      <zeroOrMore>
        <ref name="MultiplicityRangeFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.MultiplicityRange" combine="interleave">
    <ref name="MultiplicityRangeAtts"/>
  </define>
  <!-- ========= Expression ========= -->
  <define name="Expression.language">
    <element name="Expression.language">
      <ref name="attlist.Expression.language"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Expression.language" combine="interleave">
    <empty/>
  </define>
  <define name="Expression.body">
    <element name="Expression.body">
      <ref name="attlist.Expression.body"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Expression.body" combine="interleave">
    <empty/>
  </define>
  <define name="ExpressionFeatures">
    <choice>
      <ref name="XMI.extension"/>
      <ref name="Expression.language"/>
      <ref name="Expression.body"/>
    </choice>
  </define>
  <define name="ExpressionAtts">
    <ref name="XMI.ELEMENT.att"/>
    <optional>
      <attribute name="language"/>
    </optional>
    <optional>
      <attribute name="body"/>
    </optional>
  </define>
  <define name="Expression">
    <element name="Expression">
      <ref name="attlist.Expression"/>
      <zeroOrMore>
        <ref name="ExpressionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Expression" combine="interleave">
    <ref name="ExpressionAtts"/>
  </define>
  <!-- ========= BooleanExpression ========= -->
  <define name="BooleanExpressionFeatures">
    <ref name="ExpressionFeatures"/>
  </define>
  <define name="BooleanExpressionAtts">
    <ref name="ExpressionAtts"/>
  </define>
  <define name="BooleanExpression">
    <element name="BooleanExpression">
      <ref name="attlist.BooleanExpression"/>
      <zeroOrMore>
        <ref name="BooleanExpressionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.BooleanExpression" combine="interleave">
    <ref name="BooleanExpressionAtts"/>
  </define>
  <!-- ========= TypeExpression ========= -->
  <define name="TypeExpressionFeatures">
    <ref name="ExpressionFeatures"/>
  </define>
  <define name="TypeExpressionAtts">
    <ref name="ExpressionAtts"/>
  </define>
  <define name="TypeExpression">
    <element name="TypeExpression">
      <ref name="attlist.TypeExpression"/>
      <zeroOrMore>
        <ref name="TypeExpressionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TypeExpression" combine="interleave">
    <ref name="TypeExpressionAtts"/>
  </define>
  <!-- ========= MappingExpression ========= -->
  <define name="MappingExpressionFeatures">
    <ref name="ExpressionFeatures"/>
  </define>
  <define name="MappingExpressionAtts">
    <ref name="ExpressionAtts"/>
  </define>
  <define name="MappingExpression">
    <element name="MappingExpression">
      <ref name="attlist.MappingExpression"/>
      <zeroOrMore>
        <ref name="MappingExpressionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.MappingExpression" combine="interleave">
    <ref name="MappingExpressionAtts"/>
  </define>
  <!-- ========= ProcedureExpression ========= -->
  <define name="ProcedureExpressionFeatures">
    <ref name="ExpressionFeatures"/>
  </define>
  <define name="ProcedureExpressionAtts">
    <ref name="ExpressionAtts"/>
  </define>
  <define name="ProcedureExpression">
    <element name="ProcedureExpression">
      <ref name="attlist.ProcedureExpression"/>
      <zeroOrMore>
        <ref name="ProcedureExpressionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ProcedureExpression" combine="interleave">
    <ref name="ProcedureExpressionAtts"/>
  </define>
  <!-- ========= ObjectSetExpression ========= -->
  <define name="ObjectSetExpressionFeatures">
    <ref name="ExpressionFeatures"/>
  </define>
  <define name="ObjectSetExpressionAtts">
    <ref name="ExpressionAtts"/>
  </define>
  <define name="ObjectSetExpression">
    <element name="ObjectSetExpression">
      <ref name="attlist.ObjectSetExpression"/>
      <zeroOrMore>
        <ref name="ObjectSetExpressionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ObjectSetExpression" combine="interleave">
    <ref name="ObjectSetExpressionAtts"/>
  </define>
  <!-- ========= ActionExpression ========= -->
  <define name="ActionExpressionFeatures">
    <ref name="ExpressionFeatures"/>
  </define>
  <define name="ActionExpressionAtts">
    <ref name="ExpressionAtts"/>
  </define>
  <define name="ActionExpression">
    <element name="ActionExpression">
      <ref name="attlist.ActionExpression"/>
      <zeroOrMore>
        <ref name="ActionExpressionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ActionExpression" combine="interleave">
    <ref name="ActionExpressionAtts"/>
  </define>
  <!-- ========= IterationExpression ========= -->
  <define name="IterationExpressionFeatures">
    <ref name="ExpressionFeatures"/>
  </define>
  <define name="IterationExpressionAtts">
    <ref name="ExpressionAtts"/>
  </define>
  <define name="IterationExpression">
    <element name="IterationExpression">
      <ref name="attlist.IterationExpression"/>
      <zeroOrMore>
        <ref name="IterationExpressionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.IterationExpression" combine="interleave">
    <ref name="IterationExpressionAtts"/>
  </define>
  <!-- ========= TimeExpression ========= -->
  <define name="TimeExpressionFeatures">
    <ref name="ExpressionFeatures"/>
  </define>
  <define name="TimeExpressionAtts">
    <ref name="ExpressionAtts"/>
  </define>
  <define name="TimeExpression">
    <element name="TimeExpression">
      <ref name="attlist.TimeExpression"/>
      <zeroOrMore>
        <ref name="TimeExpressionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TimeExpression" combine="interleave">
    <ref name="TimeExpressionAtts"/>
  </define>
  <!-- ========= ArgListsExpression ========= -->
  <define name="ArgListsExpressionFeatures">
    <ref name="ExpressionFeatures"/>
  </define>
  <define name="ArgListsExpressionAtts">
    <ref name="ExpressionAtts"/>
  </define>
  <define name="ArgListsExpression">
    <element name="ArgListsExpression">
      <ref name="attlist.ArgListsExpression"/>
      <zeroOrMore>
        <ref name="ArgListsExpressionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ArgListsExpression" combine="interleave">
    <ref name="ArgListsExpressionAtts"/>
  </define>
  <!-- ========= Core ========= -->
  <!-- ========= ELEMENT ========= -->
  <define name="ELEMENTFeatures">
    <ref name="XMI.extension"/>
  </define>
  <define name="ELEMENTAtts">
    <ref name="XMI.ELEMENT.att"/>
  </define>
  <define name="ELEMENT">
    <element name="ELEMENT">
      <ref name="attlist.ELEMENT"/>
      <zeroOrMore>
        <ref name="ELEMENTFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ELEMENT" combine="interleave">
    <ref name="ELEMENTAtts"/>
  </define>
  <!-- ========= ModelELEMENT ========= -->
  <define name="ModelELEMENT.name">
    <element name="ModelELEMENT.name">
      <ref name="attlist.ModelELEMENT.name"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ModelELEMENT.name" combine="interleave">
    <empty/>
  </define>
  <define name="ModelELEMENT.visibility">
    <element name="ModelELEMENT.visibility">
      <ref name="attlist.ModelELEMENT.visibility"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.ModelELEMENT.visibility" combine="interleave">
    <attribute name="xmi.value">
      <ref name="VisibilityKind"/>
    </attribute>
  </define>
  <define name="ModelELEMENT.isSpecification">
    <element name="ModelELEMENT.isSpecification">
      <ref name="attlist.ModelELEMENT.isSpecification"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.ModelELEMENT.isSpecification" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="ModelELEMENT.namespace">
    <element name="ModelELEMENT.namespace">
      <ref name="attlist.ModelELEMENT.namespace"/>
      <zeroOrMore>
        <ref name="Namespace"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ModelELEMENT.namespace" combine="interleave">
    <empty/>
  </define>
  <define name="ModelELEMENT.clientDependency">
    <element name="ModelELEMENT.clientDependency">
      <ref name="attlist.ModelELEMENT.clientDependency"/>
      <zeroOrMore>
        <ref name="Dependency"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ModelELEMENT.clientDependency" combine="interleave">
    <empty/>
  </define>
  <define name="ModelELEMENT.constraint">
    <element name="ModelELEMENT.constraint">
      <ref name="attlist.ModelELEMENT.constraint"/>
      <zeroOrMore>
        <ref name="Constraint"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ModelELEMENT.constraint" combine="interleave">
    <empty/>
  </define>
  <define name="ModelELEMENT.targetFlow">
    <element name="ModelELEMENT.targetFlow">
      <ref name="attlist.ModelELEMENT.targetFlow"/>
      <zeroOrMore>
        <ref name="Flow"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ModelELEMENT.targetFlow" combine="interleave">
    <empty/>
  </define>
  <define name="ModelELEMENT.sourceFlow">
    <element name="ModelELEMENT.sourceFlow">
      <ref name="attlist.ModelELEMENT.sourceFlow"/>
      <zeroOrMore>
        <ref name="Flow"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ModelELEMENT.sourceFlow" combine="interleave">
    <empty/>
  </define>
  <define name="ModelELEMENT.comment">
    <element name="ModelELEMENT.comment">
      <ref name="attlist.ModelELEMENT.comment"/>
      <zeroOrMore>
        <ref name="Comment"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ModelELEMENT.comment" combine="interleave">
    <empty/>
  </define>
  <define name="ModelELEMENT.templateParameter">
    <element name="ModelELEMENT.templateParameter">
      <ref name="attlist.ModelELEMENT.templateParameter"/>
      <zeroOrMore>
        <ref name="TemplateParameter"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ModelELEMENT.templateParameter" combine="interleave">
    <empty/>
  </define>
  <define name="ModelELEMENT.stereotype">
    <element name="ModelELEMENT.stereotype">
      <ref name="attlist.ModelELEMENT.stereotype"/>
      <zeroOrMore>
        <ref name="Stereotype"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ModelELEMENT.stereotype" combine="interleave">
    <empty/>
  </define>
  <define name="ModelELEMENT.taggedValue">
    <element name="ModelELEMENT.taggedValue">
      <ref name="attlist.ModelELEMENT.taggedValue"/>
      <zeroOrMore>
        <ref name="TaggedValue"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ModelELEMENT.taggedValue" combine="interleave">
    <empty/>
  </define>
  <define name="ModelELEMENTFeatures">
    <choice>
      <ref name="ELEMENTFeatures"/>
      <ref name="ModelELEMENT.name"/>
      <ref name="ModelELEMENT.visibility"/>
      <ref name="ModelELEMENT.isSpecification"/>
      <ref name="ModelELEMENT.namespace"/>
      <ref name="ModelELEMENT.clientDependency"/>
      <ref name="ModelELEMENT.constraint"/>
      <ref name="ModelELEMENT.targetFlow"/>
      <ref name="ModelELEMENT.sourceFlow"/>
      <ref name="ModelELEMENT.comment"/>
      <ref name="ModelELEMENT.templateParameter"/>
      <ref name="ModelELEMENT.stereotype"/>
      <ref name="ModelELEMENT.taggedValue"/>
    </choice>
  </define>
  <define name="ModelELEMENTAtts">
    <ref name="ELEMENTAtts"/>
    <optional>
      <attribute name="name"/>
    </optional>
    <optional>
      <attribute name="visibility">
        <ref name="VisibilityKind"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="isSpecification">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="namespace">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="clientDependency">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="constraint">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="targetFlow">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="sourceFlow">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="comment">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="stereotype">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="ModelELEMENT">
    <element name="ModelELEMENT">
      <ref name="attlist.ModelELEMENT"/>
      <zeroOrMore>
        <ref name="ModelELEMENTFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ModelELEMENT" combine="interleave">
    <ref name="ModelELEMENTAtts"/>
  </define>
  <!-- ========= GeneralizableELEMENT ========= -->
  <define name="GeneralizableELEMENT.isRoot">
    <element name="GeneralizableELEMENT.isRoot">
      <ref name="attlist.GeneralizableELEMENT.isRoot"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.GeneralizableELEMENT.isRoot" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="GeneralizableELEMENT.isLeaf">
    <element name="GeneralizableELEMENT.isLeaf">
      <ref name="attlist.GeneralizableELEMENT.isLeaf"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.GeneralizableELEMENT.isLeaf" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="GeneralizableELEMENT.isAbstract">
    <element name="GeneralizableELEMENT.isAbstract">
      <ref name="attlist.GeneralizableELEMENT.isAbstract"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.GeneralizableELEMENT.isAbstract" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="GeneralizableELEMENT.generalization">
    <element name="GeneralizableELEMENT.generalization">
      <ref name="attlist.GeneralizableELEMENT.generalization"/>
      <zeroOrMore>
        <ref name="Generalization"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.GeneralizableELEMENT.generalization" combine="interleave">
    <empty/>
  </define>
  <define name="GeneralizableELEMENTFeatures">
    <choice>
      <ref name="ModelELEMENTFeatures"/>
      <ref name="GeneralizableELEMENT.isRoot"/>
      <ref name="GeneralizableELEMENT.isLeaf"/>
      <ref name="GeneralizableELEMENT.isAbstract"/>
      <ref name="GeneralizableELEMENT.generalization"/>
    </choice>
  </define>
  <define name="GeneralizableELEMENTAtts">
    <ref name="ModelELEMENTAtts"/>
    <optional>
      <attribute name="isRoot">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="isLeaf">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="isAbstract">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="generalization">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="GeneralizableELEMENT">
    <element name="GeneralizableELEMENT">
      <ref name="attlist.GeneralizableELEMENT"/>
      <zeroOrMore>
        <ref name="GeneralizableELEMENTFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.GeneralizableELEMENT" combine="interleave">
    <ref name="GeneralizableELEMENTAtts"/>
  </define>
  <!-- ========= Namespace ========= -->
  <define name="Namespace.ownedELEMENT">
    <element name="Namespace.ownedELEMENT">
      <ref name="attlist.Namespace.ownedELEMENT"/>
      <zeroOrMore>
        <choice>
          <ref name="ModelELEMENT"/>
          <ref name="GeneralizableELEMENT"/>
          <ref name="Classifier"/>
          <ref name="Class"/>
          <ref name="AssociationClass"/>
          <ref name="DataType"/>
          <ref name="Primitive"/>
          <ref name="Enumeration"/>
          <ref name="ProgrammingLanguageDataType"/>
          <ref name="Interface"/>
          <ref name="Component"/>
          <ref name="Node"/>
          <ref name="Artifact"/>
          <ref name="Signal"/>
          <ref name="Exception"/>
          <ref name="UseCase"/>
          <ref name="Actor"/>
          <ref name="ClassifierRole"/>
          <ref name="ClassifierInState"/>
          <ref name="Subsystem"/>
          <ref name="Association"/>
          <ref name="AssociationRole"/>
          <ref name="Stereotype"/>
          <ref name="Collaboration"/>
          <ref name="Package"/>
          <ref name="Model"/>
          <ref name="Namespace"/>
          <ref name="Feature"/>
          <ref name="StructuralFeature"/>
          <ref name="Attribute"/>
          <ref name="BehavioralFeature"/>
          <ref name="Operation"/>
          <ref name="Method"/>
          <ref name="Reception"/>
          <ref name="AssociationEnd"/>
          <ref name="AssociationEndRole"/>
          <ref name="Constraint"/>
          <ref name="Relationship"/>
          <ref name="Generalization"/>
          <ref name="Dependency"/>
          <ref name="Abstraction"/>
          <ref name="Usage"/>
          <ref name="Binding"/>
          <ref name="Permission"/>
          <ref name="Flow"/>
          <ref name="Extend"/>
          <ref name="Include"/>
          <ref name="Parameter"/>
          <ref name="Comment"/>
          <ref name="EnumerationLiteral"/>
          <ref name="TagDefinition"/>
          <ref name="TaggedValue"/>
          <ref name="Instance"/>
          <ref name="Object"/>
          <ref name="LinkObject"/>
          <ref name="DataValue"/>
          <ref name="ComponentInstance"/>
          <ref name="NodeInstance"/>
          <ref name="SubsystemInstance"/>
          <ref name="UseCaseInstance"/>
          <ref name="Action"/>
          <ref name="CreateAction"/>
          <ref name="DestroyAction"/>
          <ref name="UninterpretedAction"/>
          <ref name="CallAction"/>
          <ref name="SendAction"/>
          <ref name="ActionSequence"/>
          <ref name="ReturnAction"/>
          <ref name="TerminateAction"/>
          <ref name="AttributeLink"/>
          <ref name="Link"/>
          <ref name="Argument"/>
          <ref name="LinkEnd"/>
          <ref name="Stimulus"/>
          <ref name="ExtensionPoint"/>
          <ref name="StateMachine"/>
          <ref name="ActivityGraph"/>
          <ref name="Event"/>
          <ref name="TimeEvent"/>
          <ref name="CallEvent"/>
          <ref name="SignalEvent"/>
          <ref name="ChangeEvent"/>
          <ref name="StateVertex"/>
          <ref name="State"/>
          <ref name="CompositeState"/>
          <ref name="SubmachineState"/>
          <ref name="SubactivityState"/>
          <ref name="SimpleState"/>
          <ref name="ActionState"/>
          <ref name="CallState"/>
          <ref name="ObjectFlowState"/>
          <ref name="FinalState"/>
          <ref name="Pseudostate"/>
          <ref name="SynchState"/>
          <ref name="StubState"/>
          <ref name="Transition"/>
          <ref name="Guard"/>
          <ref name="Message"/>
          <ref name="Interaction"/>
          <ref name="InteractionInstanceSet"/>
          <ref name="CollaborationInstanceSet"/>
          <ref name="Partition"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Namespace.ownedELEMENT" combine="interleave">
    <empty/>
  </define>
  <define name="NamespaceFeatures">
    <choice>
      <ref name="ModelELEMENTFeatures"/>
      <ref name="Namespace.ownedELEMENT"/>
    </choice>
  </define>
  <define name="NamespaceAtts">
    <ref name="ModelELEMENTAtts"/>
  </define>
  <define name="Namespace">
    <element name="Namespace">
      <ref name="attlist.Namespace"/>
      <zeroOrMore>
        <ref name="NamespaceFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Namespace" combine="interleave">
    <ref name="NamespaceAtts"/>
  </define>
  <!-- ========= Classifier ========= -->
  <define name="Classifier.feature">
    <element name="Classifier.feature">
      <ref name="attlist.Classifier.feature"/>
      <zeroOrMore>
        <choice>
          <ref name="Feature"/>
          <ref name="StructuralFeature"/>
          <ref name="Attribute"/>
          <ref name="BehavioralFeature"/>
          <ref name="Operation"/>
          <ref name="Method"/>
          <ref name="Reception"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Classifier.feature" combine="interleave">
    <empty/>
  </define>
  <define name="Classifier.powertypeRange">
    <element name="Classifier.powertypeRange">
      <ref name="attlist.Classifier.powertypeRange"/>
      <zeroOrMore>
        <ref name="Generalization"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Classifier.powertypeRange" combine="interleave">
    <empty/>
  </define>
  <define name="ClassifierFeatures">
    <choice>
      <ref name="GeneralizableELEMENTFeatures"/>
      <ref name="Namespace.ownedELEMENT"/>
      <ref name="Classifier.feature"/>
      <ref name="Classifier.powertypeRange"/>
    </choice>
  </define>
  <define name="ClassifierAtts">
    <ref name="GeneralizableELEMENTAtts"/>
    <optional>
      <attribute name="powertypeRange">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Classifier">
    <element name="Classifier">
      <ref name="attlist.Classifier"/>
      <zeroOrMore>
        <ref name="ClassifierFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Classifier" combine="interleave">
    <ref name="ClassifierAtts"/>
  </define>
  <!-- ========= Class ========= -->
  <define name="Class.isActive">
    <element name="Class.isActive">
      <ref name="attlist.Class.isActive"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.Class.isActive" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="ClassFeatures">
    <choice>
      <ref name="ClassifierFeatures"/>
      <ref name="Class.isActive"/>
    </choice>
  </define>
  <define name="ClassAtts">
    <ref name="ClassifierAtts"/>
    <optional>
      <attribute name="isActive">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="Class">
    <element name="Class">
      <ref name="attlist.Class"/>
      <zeroOrMore>
        <ref name="ClassFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Class" combine="interleave">
    <ref name="ClassAtts"/>
  </define>
  <!-- ========= DataType ========= -->
  <define name="DataTypeFeatures">
    <ref name="ClassifierFeatures"/>
  </define>
  <define name="DataTypeAtts">
    <ref name="ClassifierAtts"/>
  </define>
  <define name="DataType">
    <element name="DataType">
      <ref name="attlist.DataType"/>
      <zeroOrMore>
        <ref name="DataTypeFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.DataType" combine="interleave">
    <ref name="DataTypeAtts"/>
  </define>
  <!-- ========= Feature ========= -->
  <define name="Feature.ownerScope">
    <element name="Feature.ownerScope">
      <ref name="attlist.Feature.ownerScope"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.Feature.ownerScope" combine="interleave">
    <attribute name="xmi.value">
      <ref name="ScopeKind"/>
    </attribute>
  </define>
  <define name="Feature.owner">
    <element name="Feature.owner">
      <ref name="attlist.Feature.owner"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Feature.owner" combine="interleave">
    <empty/>
  </define>
  <define name="FeatureFeatures">
    <choice>
      <ref name="ModelELEMENTFeatures"/>
      <ref name="Feature.ownerScope"/>
      <ref name="Feature.owner"/>
    </choice>
  </define>
  <define name="FeatureAtts">
    <ref name="ModelELEMENTAtts"/>
    <optional>
      <attribute name="ownerScope">
        <ref name="ScopeKind"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="owner">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Feature">
    <element name="Feature">
      <ref name="attlist.Feature"/>
      <zeroOrMore>
        <ref name="FeatureFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Feature" combine="interleave">
    <ref name="FeatureAtts"/>
  </define>
  <!-- ========= StructuralFeature ========= -->
  <define name="StructuralFeature.multiplicity">
    <element name="StructuralFeature.multiplicity">
      <ref name="attlist.StructuralFeature.multiplicity"/>
      <zeroOrMore>
        <ref name="Multiplicity"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.StructuralFeature.multiplicity" combine="interleave">
    <empty/>
  </define>
  <define name="StructuralFeature.changeability">
    <element name="StructuralFeature.changeability">
      <ref name="attlist.StructuralFeature.changeability"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.StructuralFeature.changeability" combine="interleave">
    <attribute name="xmi.value">
      <ref name="ChangeableKind"/>
    </attribute>
  </define>
  <define name="StructuralFeature.targetScope">
    <element name="StructuralFeature.targetScope">
      <ref name="attlist.StructuralFeature.targetScope"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.StructuralFeature.targetScope" combine="interleave">
    <attribute name="xmi.value">
      <ref name="ScopeKind"/>
    </attribute>
  </define>
  <define name="StructuralFeature.ordering">
    <element name="StructuralFeature.ordering">
      <ref name="attlist.StructuralFeature.ordering"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.StructuralFeature.ordering" combine="interleave">
    <attribute name="xmi.value">
      <ref name="OrderingKind"/>
    </attribute>
  </define>
  <define name="StructuralFeature.type">
    <element name="StructuralFeature.type">
      <ref name="attlist.StructuralFeature.type"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.StructuralFeature.type" combine="interleave">
    <empty/>
  </define>
  <define name="StructuralFeatureFeatures">
    <choice>
      <ref name="FeatureFeatures"/>
      <ref name="StructuralFeature.multiplicity"/>
      <ref name="StructuralFeature.changeability"/>
      <ref name="StructuralFeature.targetScope"/>
      <ref name="StructuralFeature.ordering"/>
      <ref name="StructuralFeature.type"/>
    </choice>
  </define>
  <define name="StructuralFeatureAtts">
    <ref name="FeatureAtts"/>
    <optional>
      <attribute name="changeability">
        <ref name="ChangeableKind"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="targetScope">
        <ref name="ScopeKind"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="ordering">
        <ref name="OrderingKind"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="type">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="StructuralFeature">
    <element name="StructuralFeature">
      <ref name="attlist.StructuralFeature"/>
      <zeroOrMore>
        <ref name="StructuralFeatureFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.StructuralFeature" combine="interleave">
    <ref name="StructuralFeatureAtts"/>
  </define>
  <!-- ========= AssociationEnd ========= -->
  <define name="AssociationEnd.isNavigable">
    <element name="AssociationEnd.isNavigable">
      <ref name="attlist.AssociationEnd.isNavigable"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.AssociationEnd.isNavigable" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="AssociationEnd.ordering">
    <element name="AssociationEnd.ordering">
      <ref name="attlist.AssociationEnd.ordering"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.AssociationEnd.ordering" combine="interleave">
    <attribute name="xmi.value">
      <ref name="OrderingKind"/>
    </attribute>
  </define>
  <define name="AssociationEnd.aggregation">
    <element name="AssociationEnd.aggregation">
      <ref name="attlist.AssociationEnd.aggregation"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.AssociationEnd.aggregation" combine="interleave">
    <attribute name="xmi.value">
      <ref name="AggregationKind"/>
    </attribute>
  </define>
  <define name="AssociationEnd.targetScope">
    <element name="AssociationEnd.targetScope">
      <ref name="attlist.AssociationEnd.targetScope"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.AssociationEnd.targetScope" combine="interleave">
    <attribute name="xmi.value">
      <ref name="ScopeKind"/>
    </attribute>
  </define>
  <define name="AssociationEnd.multiplicity">
    <element name="AssociationEnd.multiplicity">
      <ref name="attlist.AssociationEnd.multiplicity"/>
      <zeroOrMore>
        <ref name="Multiplicity"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationEnd.multiplicity" combine="interleave">
    <empty/>
  </define>
  <define name="AssociationEnd.changeability">
    <element name="AssociationEnd.changeability">
      <ref name="attlist.AssociationEnd.changeability"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.AssociationEnd.changeability" combine="interleave">
    <attribute name="xmi.value">
      <ref name="ChangeableKind"/>
    </attribute>
  </define>
  <define name="AssociationEnd.association">
    <element name="AssociationEnd.association">
      <ref name="attlist.AssociationEnd.association"/>
      <zeroOrMore>
        <ref name="Association"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationEnd.association" combine="interleave">
    <empty/>
  </define>
  <define name="AssociationEnd.qualifier">
    <element name="AssociationEnd.qualifier">
      <ref name="attlist.AssociationEnd.qualifier"/>
      <zeroOrMore>
        <ref name="Attribute"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationEnd.qualifier" combine="interleave">
    <empty/>
  </define>
  <define name="AssociationEnd.participant">
    <element name="AssociationEnd.participant">
      <ref name="attlist.AssociationEnd.participant"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationEnd.participant" combine="interleave">
    <empty/>
  </define>
  <define name="AssociationEnd.specification">
    <element name="AssociationEnd.specification">
      <ref name="attlist.AssociationEnd.specification"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationEnd.specification" combine="interleave">
    <empty/>
  </define>
  <define name="AssociationEndFeatures">
    <choice>
      <ref name="ModelELEMENTFeatures"/>
      <ref name="AssociationEnd.isNavigable"/>
      <ref name="AssociationEnd.ordering"/>
      <ref name="AssociationEnd.aggregation"/>
      <ref name="AssociationEnd.targetScope"/>
      <ref name="AssociationEnd.multiplicity"/>
      <ref name="AssociationEnd.changeability"/>
      <ref name="AssociationEnd.association"/>
      <ref name="AssociationEnd.qualifier"/>
      <ref name="AssociationEnd.participant"/>
      <ref name="AssociationEnd.specification"/>
    </choice>
  </define>
  <define name="AssociationEndAtts">
    <ref name="ModelELEMENTAtts"/>
    <optional>
      <attribute name="isNavigable">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="ordering">
        <ref name="OrderingKind"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="aggregation">
        <ref name="AggregationKind"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="targetScope">
        <ref name="ScopeKind"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="changeability">
        <ref name="ChangeableKind"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="association">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="participant">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="specification">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="AssociationEnd">
    <element name="AssociationEnd">
      <ref name="attlist.AssociationEnd"/>
      <zeroOrMore>
        <ref name="AssociationEndFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationEnd" combine="interleave">
    <ref name="AssociationEndAtts"/>
  </define>
  <!-- ========= Interface ========= -->
  <define name="InterfaceFeatures">
    <ref name="ClassifierFeatures"/>
  </define>
  <define name="InterfaceAtts">
    <ref name="ClassifierAtts"/>
  </define>
  <define name="Interface">
    <element name="Interface">
      <ref name="attlist.Interface"/>
      <zeroOrMore>
        <ref name="InterfaceFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Interface" combine="interleave">
    <ref name="InterfaceAtts"/>
  </define>
  <!-- ========= Constraint ========= -->
  <define name="Constraint.body">
    <element name="Constraint.body">
      <ref name="attlist.Constraint.body"/>
      <zeroOrMore>
        <ref name="BooleanExpression"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Constraint.body" combine="interleave">
    <empty/>
  </define>
  <define name="Constraint.constrainedELEMENT">
    <element name="Constraint.constrainedELEMENT">
      <ref name="attlist.Constraint.constrainedELEMENT"/>
      <zeroOrMore>
        <ref name="ModelELEMENT"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Constraint.constrainedELEMENT" combine="interleave">
    <empty/>
  </define>
  <define name="ConstraintFeatures">
    <choice>
      <ref name="ModelELEMENTFeatures"/>
      <ref name="Constraint.body"/>
      <ref name="Constraint.constrainedELEMENT"/>
    </choice>
  </define>
  <define name="ConstraintAtts">
    <ref name="ModelELEMENTAtts"/>
    <optional>
      <attribute name="constrainedELEMENT">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Constraint">
    <element name="Constraint">
      <ref name="attlist.Constraint"/>
      <zeroOrMore>
        <ref name="ConstraintFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Constraint" combine="interleave">
    <ref name="ConstraintAtts"/>
  </define>
  <!-- ========= Relationship ========= -->
  <define name="RelationshipFeatures">
    <ref name="ModelELEMENTFeatures"/>
  </define>
  <define name="RelationshipAtts">
    <ref name="ModelELEMENTAtts"/>
  </define>
  <define name="Relationship">
    <element name="Relationship">
      <ref name="attlist.Relationship"/>
      <zeroOrMore>
        <ref name="RelationshipFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Relationship" combine="interleave">
    <ref name="RelationshipAtts"/>
  </define>
  <!-- ========= Association ========= -->
  <define name="Association.connection">
    <element name="Association.connection">
      <ref name="attlist.Association.connection"/>
      <zeroOrMore>
        <choice>
          <ref name="AssociationEnd"/>
          <ref name="AssociationEndRole"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Association.connection" combine="interleave">
    <empty/>
  </define>
  <define name="AssociationFeatures">
    <choice>
      <ref name="GeneralizableELEMENTFeatures"/>
      <ref name="Association.connection"/>
    </choice>
  </define>
  <define name="AssociationAtts">
    <ref name="GeneralizableELEMENTAtts"/>
  </define>
  <define name="Association">
    <element name="Association">
      <ref name="attlist.Association"/>
      <zeroOrMore>
        <ref name="AssociationFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Association" combine="interleave">
    <ref name="AssociationAtts"/>
  </define>
  <!-- ========= Attribute ========= -->
  <define name="Attribute.initialValue">
    <element name="Attribute.initialValue">
      <ref name="attlist.Attribute.initialValue"/>
      <zeroOrMore>
        <choice>
          <ref name="Expression"/>
          <ref name="BooleanExpression"/>
          <ref name="TypeExpression"/>
          <ref name="MappingExpression"/>
          <ref name="ProcedureExpression"/>
          <ref name="ObjectSetExpression"/>
          <ref name="ActionExpression"/>
          <ref name="IterationExpression"/>
          <ref name="TimeExpression"/>
          <ref name="ArgListsExpression"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Attribute.initialValue" combine="interleave">
    <empty/>
  </define>
  <define name="Attribute.associationEnd">
    <element name="Attribute.associationEnd">
      <ref name="attlist.Attribute.associationEnd"/>
      <zeroOrMore>
        <ref name="AssociationEnd"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Attribute.associationEnd" combine="interleave">
    <empty/>
  </define>
  <define name="AttributeFeatures">
    <choice>
      <ref name="StructuralFeatureFeatures"/>
      <ref name="Attribute.initialValue"/>
      <ref name="Attribute.associationEnd"/>
    </choice>
  </define>
  <define name="AttributeAtts">
    <ref name="StructuralFeatureAtts"/>
    <optional>
      <attribute name="associationEnd">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Attribute">
    <element name="Attribute">
      <ref name="attlist.Attribute"/>
      <zeroOrMore>
        <ref name="AttributeFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Attribute" combine="interleave">
    <ref name="AttributeAtts"/>
  </define>
  <!-- ========= BehavioralFeature ========= -->
  <define name="BehavioralFeature.isQuery">
    <element name="BehavioralFeature.isQuery">
      <ref name="attlist.BehavioralFeature.isQuery"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.BehavioralFeature.isQuery" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="BehavioralFeature.parameter">
    <element name="BehavioralFeature.parameter">
      <ref name="attlist.BehavioralFeature.parameter"/>
      <zeroOrMore>
        <ref name="Parameter"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.BehavioralFeature.parameter" combine="interleave">
    <empty/>
  </define>
  <define name="BehavioralFeatureFeatures">
    <choice>
      <ref name="FeatureFeatures"/>
      <ref name="BehavioralFeature.isQuery"/>
      <ref name="BehavioralFeature.parameter"/>
    </choice>
  </define>
  <define name="BehavioralFeatureAtts">
    <ref name="FeatureAtts"/>
    <optional>
      <attribute name="isQuery">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="BehavioralFeature">
    <element name="BehavioralFeature">
      <ref name="attlist.BehavioralFeature"/>
      <zeroOrMore>
        <ref name="BehavioralFeatureFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.BehavioralFeature" combine="interleave">
    <ref name="BehavioralFeatureAtts"/>
  </define>
  <!-- ========= Operation ========= -->
  <define name="Operation.concurrency">
    <element name="Operation.concurrency">
      <ref name="attlist.Operation.concurrency"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.Operation.concurrency" combine="interleave">
    <attribute name="xmi.value">
      <ref name="CallConcurrencyKind"/>
    </attribute>
  </define>
  <define name="Operation.isRoot">
    <element name="Operation.isRoot">
      <ref name="attlist.Operation.isRoot"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.Operation.isRoot" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="Operation.isLeaf">
    <element name="Operation.isLeaf">
      <ref name="attlist.Operation.isLeaf"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.Operation.isLeaf" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="Operation.isAbstract">
    <element name="Operation.isAbstract">
      <ref name="attlist.Operation.isAbstract"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.Operation.isAbstract" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="Operation.specification">
    <element name="Operation.specification">
      <ref name="attlist.Operation.specification"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Operation.specification" combine="interleave">
    <empty/>
  </define>
  <define name="OperationFeatures">
    <choice>
      <ref name="BehavioralFeatureFeatures"/>
      <ref name="Operation.concurrency"/>
      <ref name="Operation.isRoot"/>
      <ref name="Operation.isLeaf"/>
      <ref name="Operation.isAbstract"/>
      <ref name="Operation.specification"/>
    </choice>
  </define>
  <define name="OperationAtts">
    <ref name="BehavioralFeatureAtts"/>
    <optional>
      <attribute name="concurrency">
        <ref name="CallConcurrencyKind"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="isRoot">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="isLeaf">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="isAbstract">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="specification"/>
    </optional>
  </define>
  <define name="Operation">
    <element name="Operation">
      <ref name="attlist.Operation"/>
      <zeroOrMore>
        <ref name="OperationFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Operation" combine="interleave">
    <ref name="OperationAtts"/>
  </define>
  <!-- ========= Parameter ========= -->
  <define name="Parameter.defaultValue">
    <element name="Parameter.defaultValue">
      <ref name="attlist.Parameter.defaultValue"/>
      <zeroOrMore>
        <choice>
          <ref name="Expression"/>
          <ref name="BooleanExpression"/>
          <ref name="TypeExpression"/>
          <ref name="MappingExpression"/>
          <ref name="ProcedureExpression"/>
          <ref name="ObjectSetExpression"/>
          <ref name="ActionExpression"/>
          <ref name="IterationExpression"/>
          <ref name="TimeExpression"/>
          <ref name="ArgListsExpression"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Parameter.defaultValue" combine="interleave">
    <empty/>
  </define>
  <define name="Parameter.kind">
    <element name="Parameter.kind">
      <ref name="attlist.Parameter.kind"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.Parameter.kind" combine="interleave">
    <attribute name="xmi.value">
      <ref name="ParameterDirectionKind"/>
    </attribute>
  </define>
  <define name="Parameter.behavioralFeature">
    <element name="Parameter.behavioralFeature">
      <ref name="attlist.Parameter.behavioralFeature"/>
      <zeroOrMore>
        <ref name="BehavioralFeature"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Parameter.behavioralFeature" combine="interleave">
    <empty/>
  </define>
  <define name="Parameter.type">
    <element name="Parameter.type">
      <ref name="attlist.Parameter.type"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Parameter.type" combine="interleave">
    <empty/>
  </define>
  <define name="ParameterFeatures">
    <choice>
      <ref name="ModelELEMENTFeatures"/>
      <ref name="Parameter.defaultValue"/>
      <ref name="Parameter.kind"/>
      <ref name="Parameter.behavioralFeature"/>
      <ref name="Parameter.type"/>
    </choice>
  </define>
  <define name="ParameterAtts">
    <ref name="ModelELEMENTAtts"/>
    <optional>
      <attribute name="kind">
        <ref name="ParameterDirectionKind"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="behavioralFeature">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="type">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Parameter">
    <element name="Parameter">
      <ref name="attlist.Parameter"/>
      <zeroOrMore>
        <ref name="ParameterFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Parameter" combine="interleave">
    <ref name="ParameterAtts"/>
  </define>
  <!-- ========= Method ========= -->
  <define name="Method.body">
    <element name="Method.body">
      <ref name="attlist.Method.body"/>
      <zeroOrMore>
        <ref name="ProcedureExpression"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Method.body" combine="interleave">
    <empty/>
  </define>
  <define name="Method.specification">
    <element name="Method.specification">
      <ref name="attlist.Method.specification"/>
      <zeroOrMore>
        <ref name="Operation"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Method.specification" combine="interleave">
    <empty/>
  </define>
  <define name="MethodFeatures">
    <choice>
      <ref name="BehavioralFeatureFeatures"/>
      <ref name="Method.body"/>
      <ref name="Method.specification"/>
    </choice>
  </define>
  <define name="MethodAtts">
    <ref name="BehavioralFeatureAtts"/>
    <optional>
      <attribute name="specification">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Method">
    <element name="Method">
      <ref name="attlist.Method"/>
      <zeroOrMore>
        <ref name="MethodFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Method" combine="interleave">
    <ref name="MethodAtts"/>
  </define>
  <!-- ========= Generalization ========= -->
  <define name="Generalization.discriminator">
    <element name="Generalization.discriminator">
      <ref name="attlist.Generalization.discriminator"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Generalization.discriminator" combine="interleave">
    <empty/>
  </define>
  <define name="Generalization.child">
    <element name="Generalization.child">
      <ref name="attlist.Generalization.child"/>
      <zeroOrMore>
        <ref name="GeneralizableELEMENT"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Generalization.child" combine="interleave">
    <empty/>
  </define>
  <define name="Generalization.parent">
    <element name="Generalization.parent">
      <ref name="attlist.Generalization.parent"/>
      <zeroOrMore>
        <ref name="GeneralizableELEMENT"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Generalization.parent" combine="interleave">
    <empty/>
  </define>
  <define name="Generalization.powertype">
    <element name="Generalization.powertype">
      <ref name="attlist.Generalization.powertype"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Generalization.powertype" combine="interleave">
    <empty/>
  </define>
  <define name="GeneralizationFeatures">
    <choice>
      <ref name="RelationshipFeatures"/>
      <ref name="Generalization.discriminator"/>
      <ref name="Generalization.child"/>
      <ref name="Generalization.parent"/>
      <ref name="Generalization.powertype"/>
    </choice>
  </define>
  <define name="GeneralizationAtts">
    <ref name="RelationshipAtts"/>
    <optional>
      <attribute name="discriminator"/>
    </optional>
    <optional>
      <attribute name="child">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="parent">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="powertype">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Generalization">
    <element name="Generalization">
      <ref name="attlist.Generalization"/>
      <zeroOrMore>
        <ref name="GeneralizationFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Generalization" combine="interleave">
    <ref name="GeneralizationAtts"/>
  </define>
  <!-- ========= AssociationClass ========= -->
  <define name="AssociationClassFeatures">
    <choice>
      <ref name="AssociationFeatures"/>
      <ref name="Namespace.ownedELEMENT"/>
      <ref name="Classifier.feature"/>
      <ref name="Classifier.powertypeRange"/>
      <ref name="Class.isActive"/>
    </choice>
  </define>
  <define name="AssociationClassAtts">
    <ref name="AssociationAtts"/>
    <optional>
      <attribute name="powertypeRange">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="isActive">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="AssociationClass">
    <element name="AssociationClass">
      <ref name="attlist.AssociationClass"/>
      <zeroOrMore>
        <ref name="AssociationClassFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationClass" combine="interleave">
    <ref name="AssociationClassAtts"/>
  </define>
  <!-- ========= Dependency ========= -->
  <define name="Dependency.client">
    <element name="Dependency.client">
      <ref name="attlist.Dependency.client"/>
      <zeroOrMore>
        <ref name="ModelELEMENT"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Dependency.client" combine="interleave">
    <empty/>
  </define>
  <define name="Dependency.supplier">
    <element name="Dependency.supplier">
      <ref name="attlist.Dependency.supplier"/>
      <zeroOrMore>
        <ref name="ModelELEMENT"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Dependency.supplier" combine="interleave">
    <empty/>
  </define>
  <define name="DependencyFeatures">
    <choice>
      <ref name="RelationshipFeatures"/>
      <ref name="Dependency.client"/>
      <ref name="Dependency.supplier"/>
    </choice>
  </define>
  <define name="DependencyAtts">
    <ref name="RelationshipAtts"/>
    <optional>
      <attribute name="client">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="supplier">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Dependency">
    <element name="Dependency">
      <ref name="attlist.Dependency"/>
      <zeroOrMore>
        <ref name="DependencyFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Dependency" combine="interleave">
    <ref name="DependencyAtts"/>
  </define>
  <!-- ========= Abstraction ========= -->
  <define name="Abstraction.mapping">
    <element name="Abstraction.mapping">
      <ref name="attlist.Abstraction.mapping"/>
      <zeroOrMore>
        <ref name="MappingExpression"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Abstraction.mapping" combine="interleave">
    <empty/>
  </define>
  <define name="AbstractionFeatures">
    <choice>
      <ref name="DependencyFeatures"/>
      <ref name="Abstraction.mapping"/>
    </choice>
  </define>
  <define name="AbstractionAtts">
    <ref name="DependencyAtts"/>
  </define>
  <define name="Abstraction">
    <element name="Abstraction">
      <ref name="attlist.Abstraction"/>
      <zeroOrMore>
        <ref name="AbstractionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Abstraction" combine="interleave">
    <ref name="AbstractionAtts"/>
  </define>
  <!-- ========= PresentationELEMENT ========= -->
  <define name="PresentationELEMENT.subject">
    <element name="PresentationELEMENT.subject">
      <ref name="attlist.PresentationELEMENT.subject"/>
      <zeroOrMore>
        <ref name="ModelELEMENT"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.PresentationELEMENT.subject" combine="interleave">
    <empty/>
  </define>
  <define name="PresentationELEMENTFeatures">
    <choice>
      <ref name="ELEMENTFeatures"/>
      <ref name="PresentationELEMENT.subject"/>
    </choice>
  </define>
  <define name="PresentationELEMENTAtts">
    <ref name="ELEMENTAtts"/>
    <optional>
      <attribute name="subject">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="PresentationELEMENT">
    <element name="PresentationELEMENT">
      <ref name="attlist.PresentationELEMENT"/>
      <zeroOrMore>
        <ref name="PresentationELEMENTFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.PresentationELEMENT" combine="interleave">
    <ref name="PresentationELEMENTAtts"/>
  </define>
  <!-- ========= Usage ========= -->
  <define name="UsageFeatures">
    <ref name="DependencyFeatures"/>
  </define>
  <define name="UsageAtts">
    <ref name="DependencyAtts"/>
  </define>
  <define name="Usage">
    <element name="Usage">
      <ref name="attlist.Usage"/>
      <zeroOrMore>
        <ref name="UsageFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Usage" combine="interleave">
    <ref name="UsageAtts"/>
  </define>
  <!-- ========= Binding ========= -->
  <define name="Binding.argument">
    <element name="Binding.argument">
      <ref name="attlist.Binding.argument"/>
      <zeroOrMore>
        <ref name="TemplateArgument"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Binding.argument" combine="interleave">
    <empty/>
  </define>
  <define name="BindingFeatures">
    <choice>
      <ref name="DependencyFeatures"/>
      <ref name="Binding.argument"/>
    </choice>
  </define>
  <define name="BindingAtts">
    <ref name="DependencyAtts"/>
  </define>
  <define name="Binding">
    <element name="Binding">
      <ref name="attlist.Binding"/>
      <zeroOrMore>
        <ref name="BindingFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Binding" combine="interleave">
    <ref name="BindingAtts"/>
  </define>
  <!-- ========= Component ========= -->
  <define name="Component.deploymentLocation">
    <element name="Component.deploymentLocation">
      <ref name="attlist.Component.deploymentLocation"/>
      <zeroOrMore>
        <ref name="Node"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Component.deploymentLocation" combine="interleave">
    <empty/>
  </define>
  <define name="Component.residentELEMENT">
    <element name="Component.residentELEMENT">
      <ref name="attlist.Component.residentELEMENT"/>
      <zeroOrMore>
        <ref name="ELEMENTResidence"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Component.residentELEMENT" combine="interleave">
    <empty/>
  </define>
  <define name="Component.implementation">
    <element name="Component.implementation">
      <ref name="attlist.Component.implementation"/>
      <zeroOrMore>
        <ref name="Artifact"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Component.implementation" combine="interleave">
    <empty/>
  </define>
  <define name="ComponentFeatures">
    <choice>
      <ref name="ClassifierFeatures"/>
      <ref name="Component.deploymentLocation"/>
      <ref name="Component.residentELEMENT"/>
      <ref name="Component.implementation"/>
    </choice>
  </define>
  <define name="ComponentAtts">
    <ref name="ClassifierAtts"/>
    <optional>
      <attribute name="deploymentLocation">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="implementation">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Component">
    <element name="Component">
      <ref name="attlist.Component"/>
      <zeroOrMore>
        <ref name="ComponentFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Component" combine="interleave">
    <ref name="ComponentAtts"/>
  </define>
  <!-- ========= Node ========= -->
  <define name="Node.deployedComponent">
    <element name="Node.deployedComponent">
      <ref name="attlist.Node.deployedComponent"/>
      <zeroOrMore>
        <ref name="Component"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Node.deployedComponent" combine="interleave">
    <empty/>
  </define>
  <define name="NodeFeatures">
    <choice>
      <ref name="ClassifierFeatures"/>
      <ref name="Node.deployedComponent"/>
    </choice>
  </define>
  <define name="NodeAtts">
    <ref name="ClassifierAtts"/>
    <optional>
      <attribute name="deployedComponent">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Node">
    <element name="Node">
      <ref name="attlist.Node"/>
      <zeroOrMore>
        <ref name="NodeFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Node" combine="interleave">
    <ref name="NodeAtts"/>
  </define>
  <!-- ========= Permission ========= -->
  <define name="PermissionFeatures">
    <ref name="DependencyFeatures"/>
  </define>
  <define name="PermissionAtts">
    <ref name="DependencyAtts"/>
  </define>
  <define name="Permission">
    <element name="Permission">
      <ref name="attlist.Permission"/>
      <zeroOrMore>
        <ref name="PermissionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Permission" combine="interleave">
    <ref name="PermissionAtts"/>
  </define>
  <!-- ========= Comment ========= -->
  <define name="Comment.body">
    <element name="Comment.body">
      <ref name="attlist.Comment.body"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Comment.body" combine="interleave">
    <empty/>
  </define>
  <define name="Comment.annotatedELEMENT">
    <element name="Comment.annotatedELEMENT">
      <ref name="attlist.Comment.annotatedELEMENT"/>
      <zeroOrMore>
        <ref name="ModelELEMENT"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Comment.annotatedELEMENT" combine="interleave">
    <empty/>
  </define>
  <define name="CommentFeatures">
    <choice>
      <ref name="ModelELEMENTFeatures"/>
      <ref name="Comment.body"/>
      <ref name="Comment.annotatedELEMENT"/>
    </choice>
  </define>
  <define name="CommentAtts">
    <ref name="ModelELEMENTAtts"/>
    <optional>
      <attribute name="body"/>
    </optional>
    <optional>
      <attribute name="annotatedELEMENT">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Comment">
    <element name="Comment">
      <ref name="attlist.Comment"/>
      <zeroOrMore>
        <ref name="CommentFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Comment" combine="interleave">
    <ref name="CommentAtts"/>
  </define>
  <!-- ========= Flow ========= -->
  <define name="Flow.target">
    <element name="Flow.target">
      <ref name="attlist.Flow.target"/>
      <zeroOrMore>
        <ref name="ModelELEMENT"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Flow.target" combine="interleave">
    <empty/>
  </define>
  <define name="Flow.source">
    <element name="Flow.source">
      <ref name="attlist.Flow.source"/>
      <zeroOrMore>
        <ref name="ModelELEMENT"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Flow.source" combine="interleave">
    <empty/>
  </define>
  <define name="FlowFeatures">
    <choice>
      <ref name="RelationshipFeatures"/>
      <ref name="Flow.target"/>
      <ref name="Flow.source"/>
    </choice>
  </define>
  <define name="FlowAtts">
    <ref name="RelationshipAtts"/>
    <optional>
      <attribute name="target">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="source">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Flow">
    <element name="Flow">
      <ref name="attlist.Flow"/>
      <zeroOrMore>
        <ref name="FlowFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Flow" combine="interleave">
    <ref name="FlowAtts"/>
  </define>
  <!-- ========= ELEMENTResidence ========= -->
  <define name="ELEMENTResidence.visibility">
    <element name="ELEMENTResidence.visibility">
      <ref name="attlist.ELEMENTResidence.visibility"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.ELEMENTResidence.visibility" combine="interleave">
    <attribute name="xmi.value">
      <ref name="VisibilityKind"/>
    </attribute>
  </define>
  <define name="ELEMENTResidence.resident">
    <element name="ELEMENTResidence.resident">
      <ref name="attlist.ELEMENTResidence.resident"/>
      <zeroOrMore>
        <ref name="ModelELEMENT"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ELEMENTResidence.resident" combine="interleave">
    <empty/>
  </define>
  <define name="ELEMENTResidence.container">
    <element name="ELEMENTResidence.container">
      <ref name="attlist.ELEMENTResidence.container"/>
      <zeroOrMore>
        <ref name="Component"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ELEMENTResidence.container" combine="interleave">
    <empty/>
  </define>
  <define name="ELEMENTResidenceFeatures">
    <choice>
      <ref name="XMI.extension"/>
      <ref name="ELEMENTResidence.visibility"/>
      <ref name="ELEMENTResidence.resident"/>
      <ref name="ELEMENTResidence.container"/>
    </choice>
  </define>
  <define name="ELEMENTResidenceAtts">
    <ref name="XMI.ELEMENT.att"/>
    <optional>
      <attribute name="visibility">
        <ref name="VisibilityKind"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="resident">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="container">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="ELEMENTResidence">
    <element name="ELEMENTResidence">
      <ref name="attlist.ELEMENTResidence"/>
      <zeroOrMore>
        <ref name="ELEMENTResidenceFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ELEMENTResidence" combine="interleave">
    <ref name="ELEMENTResidenceAtts"/>
  </define>
  <!-- ========= TemplateParameter ========= -->
  <define name="TemplateParameter.template">
    <element name="TemplateParameter.template">
      <ref name="attlist.TemplateParameter.template"/>
      <zeroOrMore>
        <ref name="ModelELEMENT"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TemplateParameter.template" combine="interleave">
    <empty/>
  </define>
  <define name="TemplateParameter.parameter">
    <element name="TemplateParameter.parameter">
      <ref name="attlist.TemplateParameter.parameter"/>
      <zeroOrMore>
        <choice>
          <ref name="ModelELEMENT"/>
          <ref name="GeneralizableELEMENT"/>
          <ref name="Classifier"/>
          <ref name="Class"/>
          <ref name="AssociationClass"/>
          <ref name="DataType"/>
          <ref name="Primitive"/>
          <ref name="Enumeration"/>
          <ref name="ProgrammingLanguageDataType"/>
          <ref name="Interface"/>
          <ref name="Component"/>
          <ref name="Node"/>
          <ref name="Artifact"/>
          <ref name="Signal"/>
          <ref name="Exception"/>
          <ref name="UseCase"/>
          <ref name="Actor"/>
          <ref name="ClassifierRole"/>
          <ref name="ClassifierInState"/>
          <ref name="Subsystem"/>
          <ref name="Association"/>
          <ref name="AssociationRole"/>
          <ref name="Stereotype"/>
          <ref name="Collaboration"/>
          <ref name="Package"/>
          <ref name="Model"/>
          <ref name="Namespace"/>
          <ref name="Feature"/>
          <ref name="StructuralFeature"/>
          <ref name="Attribute"/>
          <ref name="BehavioralFeature"/>
          <ref name="Operation"/>
          <ref name="Method"/>
          <ref name="Reception"/>
          <ref name="AssociationEnd"/>
          <ref name="AssociationEndRole"/>
          <ref name="Constraint"/>
          <ref name="Relationship"/>
          <ref name="Generalization"/>
          <ref name="Dependency"/>
          <ref name="Abstraction"/>
          <ref name="Usage"/>
          <ref name="Binding"/>
          <ref name="Permission"/>
          <ref name="Flow"/>
          <ref name="Extend"/>
          <ref name="Include"/>
          <ref name="Parameter"/>
          <ref name="Comment"/>
          <ref name="EnumerationLiteral"/>
          <ref name="TagDefinition"/>
          <ref name="TaggedValue"/>
          <ref name="Instance"/>
          <ref name="Object"/>
          <ref name="LinkObject"/>
          <ref name="DataValue"/>
          <ref name="ComponentInstance"/>
          <ref name="NodeInstance"/>
          <ref name="SubsystemInstance"/>
          <ref name="UseCaseInstance"/>
          <ref name="Action"/>
          <ref name="CreateAction"/>
          <ref name="DestroyAction"/>
          <ref name="UninterpretedAction"/>
          <ref name="CallAction"/>
          <ref name="SendAction"/>
          <ref name="ActionSequence"/>
          <ref name="ReturnAction"/>
          <ref name="TerminateAction"/>
          <ref name="AttributeLink"/>
          <ref name="Link"/>
          <ref name="Argument"/>
          <ref name="LinkEnd"/>
          <ref name="Stimulus"/>
          <ref name="ExtensionPoint"/>
          <ref name="StateMachine"/>
          <ref name="ActivityGraph"/>
          <ref name="Event"/>
          <ref name="TimeEvent"/>
          <ref name="CallEvent"/>
          <ref name="SignalEvent"/>
          <ref name="ChangeEvent"/>
          <ref name="StateVertex"/>
          <ref name="State"/>
          <ref name="CompositeState"/>
          <ref name="SubmachineState"/>
          <ref name="SubactivityState"/>
          <ref name="SimpleState"/>
          <ref name="ActionState"/>
          <ref name="CallState"/>
          <ref name="ObjectFlowState"/>
          <ref name="FinalState"/>
          <ref name="Pseudostate"/>
          <ref name="SynchState"/>
          <ref name="StubState"/>
          <ref name="Transition"/>
          <ref name="Guard"/>
          <ref name="Message"/>
          <ref name="Interaction"/>
          <ref name="InteractionInstanceSet"/>
          <ref name="CollaborationInstanceSet"/>
          <ref name="Partition"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TemplateParameter.parameter" combine="interleave">
    <empty/>
  </define>
  <define name="TemplateParameter.defaultELEMENT">
    <element name="TemplateParameter.defaultELEMENT">
      <ref name="attlist.TemplateParameter.defaultELEMENT"/>
      <zeroOrMore>
        <ref name="ModelELEMENT"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TemplateParameter.defaultELEMENT" combine="interleave">
    <empty/>
  </define>
  <define name="TemplateParameterFeatures">
    <choice>
      <ref name="XMI.extension"/>
      <ref name="TemplateParameter.template"/>
      <ref name="TemplateParameter.parameter"/>
      <ref name="TemplateParameter.defaultELEMENT"/>
    </choice>
  </define>
  <define name="TemplateParameterAtts">
    <ref name="XMI.ELEMENT.att"/>
    <optional>
      <attribute name="template">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="defaultELEMENT">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="TemplateParameter">
    <element name="TemplateParameter">
      <ref name="attlist.TemplateParameter"/>
      <zeroOrMore>
        <ref name="TemplateParameterFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TemplateParameter" combine="interleave">
    <ref name="TemplateParameterAtts"/>
  </define>
  <!-- ========= Primitive ========= -->
  <define name="PrimitiveFeatures">
    <ref name="DataTypeFeatures"/>
  </define>
  <define name="PrimitiveAtts">
    <ref name="DataTypeAtts"/>
  </define>
  <define name="Primitive">
    <element name="Primitive">
      <ref name="attlist.Primitive"/>
      <zeroOrMore>
        <ref name="PrimitiveFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Primitive" combine="interleave">
    <ref name="PrimitiveAtts"/>
  </define>
  <!-- ========= Enumeration ========= -->
  <define name="Enumeration.literal">
    <element name="Enumeration.literal">
      <ref name="attlist.Enumeration.literal"/>
      <zeroOrMore>
        <ref name="EnumerationLiteral"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Enumeration.literal" combine="interleave">
    <empty/>
  </define>
  <define name="EnumerationFeatures">
    <choice>
      <ref name="DataTypeFeatures"/>
      <ref name="Enumeration.literal"/>
    </choice>
  </define>
  <define name="EnumerationAtts">
    <ref name="DataTypeAtts"/>
  </define>
  <define name="Enumeration">
    <element name="Enumeration">
      <ref name="attlist.Enumeration"/>
      <zeroOrMore>
        <ref name="EnumerationFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Enumeration" combine="interleave">
    <ref name="EnumerationAtts"/>
  </define>
  <!-- ========= EnumerationLiteral ========= -->
  <define name="EnumerationLiteral.enumeration">
    <element name="EnumerationLiteral.enumeration">
      <ref name="attlist.EnumerationLiteral.enumeration"/>
      <zeroOrMore>
        <ref name="Enumeration"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.EnumerationLiteral.enumeration" combine="interleave">
    <empty/>
  </define>
  <define name="EnumerationLiteralFeatures">
    <choice>
      <ref name="ModelELEMENTFeatures"/>
      <ref name="EnumerationLiteral.enumeration"/>
    </choice>
  </define>
  <define name="EnumerationLiteralAtts">
    <ref name="ModelELEMENTAtts"/>
    <optional>
      <attribute name="enumeration">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="EnumerationLiteral">
    <element name="EnumerationLiteral">
      <ref name="attlist.EnumerationLiteral"/>
      <zeroOrMore>
        <ref name="EnumerationLiteralFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.EnumerationLiteral" combine="interleave">
    <ref name="EnumerationLiteralAtts"/>
  </define>
  <!-- ========= Stereotype ========= -->
  <define name="Stereotype.icon">
    <element name="Stereotype.icon">
      <ref name="attlist.Stereotype.icon"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Stereotype.icon" combine="interleave">
    <empty/>
  </define>
  <define name="Stereotype.baseClass">
    <element name="Stereotype.baseClass">
      <ref name="attlist.Stereotype.baseClass"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Stereotype.baseClass" combine="interleave">
    <empty/>
  </define>
  <define name="Stereotype.definedTag">
    <element name="Stereotype.definedTag">
      <ref name="attlist.Stereotype.definedTag"/>
      <zeroOrMore>
        <ref name="TagDefinition"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Stereotype.definedTag" combine="interleave">
    <empty/>
  </define>
  <define name="Stereotype.stereotypeConstraint">
    <element name="Stereotype.stereotypeConstraint">
      <ref name="attlist.Stereotype.stereotypeConstraint"/>
      <zeroOrMore>
        <ref name="Constraint"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Stereotype.stereotypeConstraint" combine="interleave">
    <empty/>
  </define>
  <define name="StereotypeFeatures">
    <choice>
      <ref name="GeneralizableELEMENTFeatures"/>
      <ref name="Stereotype.icon"/>
      <ref name="Stereotype.baseClass"/>
      <ref name="Stereotype.definedTag"/>
      <ref name="Stereotype.stereotypeConstraint"/>
    </choice>
  </define>
  <define name="StereotypeAtts">
    <ref name="GeneralizableELEMENTAtts"/>
    <optional>
      <attribute name="icon"/>
    </optional>
  </define>
  <define name="Stereotype">
    <element name="Stereotype">
      <ref name="attlist.Stereotype"/>
      <zeroOrMore>
        <ref name="StereotypeFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Stereotype" combine="interleave">
    <ref name="StereotypeAtts"/>
  </define>
  <!-- ========= TagDefinition ========= -->
  <define name="TagDefinition.tagType">
    <element name="TagDefinition.tagType">
      <ref name="attlist.TagDefinition.tagType"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TagDefinition.tagType" combine="interleave">
    <empty/>
  </define>
  <define name="TagDefinition.multiplicity">
    <element name="TagDefinition.multiplicity">
      <ref name="attlist.TagDefinition.multiplicity"/>
      <zeroOrMore>
        <ref name="Multiplicity"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TagDefinition.multiplicity" combine="interleave">
    <empty/>
  </define>
  <define name="TagDefinition.owner">
    <element name="TagDefinition.owner">
      <ref name="attlist.TagDefinition.owner"/>
      <zeroOrMore>
        <ref name="Stereotype"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TagDefinition.owner" combine="interleave">
    <empty/>
  </define>
  <define name="TagDefinitionFeatures">
    <choice>
      <ref name="ModelELEMENTFeatures"/>
      <ref name="TagDefinition.tagType"/>
      <ref name="TagDefinition.multiplicity"/>
      <ref name="TagDefinition.owner"/>
    </choice>
  </define>
  <define name="TagDefinitionAtts">
    <ref name="ModelELEMENTAtts"/>
    <optional>
      <attribute name="tagType"/>
    </optional>
    <optional>
      <attribute name="owner">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="TagDefinition">
    <element name="TagDefinition">
      <ref name="attlist.TagDefinition"/>
      <zeroOrMore>
        <ref name="TagDefinitionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TagDefinition" combine="interleave">
    <ref name="TagDefinitionAtts"/>
  </define>
  <!-- ========= TaggedValue ========= -->
  <define name="TaggedValue.dataValue">
    <element name="TaggedValue.dataValue">
      <ref name="attlist.TaggedValue.dataValue"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TaggedValue.dataValue" combine="interleave">
    <empty/>
  </define>
  <define name="TaggedValue.modelELEMENT">
    <element name="TaggedValue.modelELEMENT">
      <ref name="attlist.TaggedValue.modelELEMENT"/>
      <zeroOrMore>
        <ref name="ModelELEMENT"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TaggedValue.modelELEMENT" combine="interleave">
    <empty/>
  </define>
  <define name="TaggedValue.type">
    <element name="TaggedValue.type">
      <ref name="attlist.TaggedValue.type"/>
      <zeroOrMore>
        <ref name="TagDefinition"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TaggedValue.type" combine="interleave">
    <empty/>
  </define>
  <define name="TaggedValue.referenceValue">
    <element name="TaggedValue.referenceValue">
      <ref name="attlist.TaggedValue.referenceValue"/>
      <zeroOrMore>
        <ref name="ModelELEMENT"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TaggedValue.referenceValue" combine="interleave">
    <empty/>
  </define>
  <define name="TaggedValueFeatures">
    <choice>
      <ref name="ModelELEMENTFeatures"/>
      <ref name="TaggedValue.dataValue"/>
      <ref name="TaggedValue.modelELEMENT"/>
      <ref name="TaggedValue.type"/>
      <ref name="TaggedValue.referenceValue"/>
    </choice>
  </define>
  <define name="TaggedValueAtts">
    <ref name="ModelELEMENTAtts"/>
    <optional>
      <attribute name="modelELEMENT">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="type">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="referenceValue">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="TaggedValue">
    <element name="TaggedValue">
      <ref name="attlist.TaggedValue"/>
      <zeroOrMore>
        <ref name="TaggedValueFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TaggedValue" combine="interleave">
    <ref name="TaggedValueAtts"/>
  </define>
  <!-- ========= ProgrammingLanguageDataType ========= -->
  <define name="ProgrammingLanguageDataType.expression">
    <element name="ProgrammingLanguageDataType.expression">
      <ref name="attlist.ProgrammingLanguageDataType.expression"/>
      <zeroOrMore>
        <ref name="TypeExpression"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ProgrammingLanguageDataType.expression" combine="interleave">
    <empty/>
  </define>
  <define name="ProgrammingLanguageDataTypeFeatures">
    <choice>
      <ref name="DataTypeFeatures"/>
      <ref name="ProgrammingLanguageDataType.expression"/>
    </choice>
  </define>
  <define name="ProgrammingLanguageDataTypeAtts">
    <ref name="DataTypeAtts"/>
  </define>
  <define name="ProgrammingLanguageDataType">
    <element name="ProgrammingLanguageDataType">
      <ref name="attlist.ProgrammingLanguageDataType"/>
      <zeroOrMore>
        <ref name="ProgrammingLanguageDataTypeFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ProgrammingLanguageDataType" combine="interleave">
    <ref name="ProgrammingLanguageDataTypeAtts"/>
  </define>
  <!-- ========= Artifact ========= -->
  <define name="ArtifactFeatures">
    <ref name="ClassifierFeatures"/>
  </define>
  <define name="ArtifactAtts">
    <ref name="ClassifierAtts"/>
  </define>
  <define name="Artifact">
    <element name="Artifact">
      <ref name="attlist.Artifact"/>
      <zeroOrMore>
        <ref name="ArtifactFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Artifact" combine="interleave">
    <ref name="ArtifactAtts"/>
  </define>
  <!-- ========= TemplateArgument ========= -->
  <define name="TemplateArgument.modelELEMENT">
    <element name="TemplateArgument.modelELEMENT">
      <ref name="attlist.TemplateArgument.modelELEMENT"/>
      <zeroOrMore>
        <ref name="ModelELEMENT"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TemplateArgument.modelELEMENT" combine="interleave">
    <empty/>
  </define>
  <define name="TemplateArgument.binding">
    <element name="TemplateArgument.binding">
      <ref name="attlist.TemplateArgument.binding"/>
      <zeroOrMore>
        <ref name="Binding"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TemplateArgument.binding" combine="interleave">
    <empty/>
  </define>
  <define name="TemplateArgumentFeatures">
    <choice>
      <ref name="XMI.extension"/>
      <ref name="TemplateArgument.modelELEMENT"/>
      <ref name="TemplateArgument.binding"/>
    </choice>
  </define>
  <define name="TemplateArgumentAtts">
    <ref name="XMI.ELEMENT.att"/>
    <optional>
      <attribute name="modelELEMENT">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="binding">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="TemplateArgument">
    <element name="TemplateArgument">
      <ref name="attlist.TemplateArgument"/>
      <zeroOrMore>
        <ref name="TemplateArgumentFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TemplateArgument" combine="interleave">
    <ref name="TemplateArgumentAtts"/>
  </define>
  <!-- ========= Common_Behavior ========= -->
  <!-- ========= Instance ========= -->
  <define name="Instance.classifier">
    <element name="Instance.classifier">
      <ref name="attlist.Instance.classifier"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Instance.classifier" combine="interleave">
    <empty/>
  </define>
  <define name="Instance.linkEnd">
    <element name="Instance.linkEnd">
      <ref name="attlist.Instance.linkEnd"/>
      <zeroOrMore>
        <ref name="LinkEnd"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Instance.linkEnd" combine="interleave">
    <empty/>
  </define>
  <define name="Instance.slot">
    <element name="Instance.slot">
      <ref name="attlist.Instance.slot"/>
      <zeroOrMore>
        <ref name="AttributeLink"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Instance.slot" combine="interleave">
    <empty/>
  </define>
  <define name="Instance.componentInstance">
    <element name="Instance.componentInstance">
      <ref name="attlist.Instance.componentInstance"/>
      <zeroOrMore>
        <ref name="ComponentInstance"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Instance.componentInstance" combine="interleave">
    <empty/>
  </define>
  <define name="Instance.ownedInstance">
    <element name="Instance.ownedInstance">
      <ref name="attlist.Instance.ownedInstance"/>
      <zeroOrMore>
        <choice>
          <ref name="Instance"/>
          <ref name="Object"/>
          <ref name="LinkObject"/>
          <ref name="DataValue"/>
          <ref name="ComponentInstance"/>
          <ref name="NodeInstance"/>
          <ref name="SubsystemInstance"/>
          <ref name="UseCaseInstance"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Instance.ownedInstance" combine="interleave">
    <empty/>
  </define>
  <define name="Instance.ownedLink">
    <element name="Instance.ownedLink">
      <ref name="attlist.Instance.ownedLink"/>
      <zeroOrMore>
        <choice>
          <ref name="Link"/>
          <ref name="LinkObject"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Instance.ownedLink" combine="interleave">
    <empty/>
  </define>
  <define name="InstanceFeatures">
    <choice>
      <ref name="ModelELEMENTFeatures"/>
      <ref name="Instance.classifier"/>
      <ref name="Instance.linkEnd"/>
      <ref name="Instance.slot"/>
      <ref name="Instance.componentInstance"/>
      <ref name="Instance.ownedInstance"/>
      <ref name="Instance.ownedLink"/>
    </choice>
  </define>
  <define name="InstanceAtts">
    <ref name="ModelELEMENTAtts"/>
    <optional>
      <attribute name="classifier">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="linkEnd">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="componentInstance">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Instance">
    <element name="Instance">
      <ref name="attlist.Instance"/>
      <zeroOrMore>
        <ref name="InstanceFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Instance" combine="interleave">
    <ref name="InstanceAtts"/>
  </define>
  <!-- ========= Signal ========= -->
  <define name="SignalFeatures">
    <ref name="ClassifierFeatures"/>
  </define>
  <define name="SignalAtts">
    <ref name="ClassifierAtts"/>
  </define>
  <define name="Signal">
    <element name="Signal">
      <ref name="attlist.Signal"/>
      <zeroOrMore>
        <ref name="SignalFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Signal" combine="interleave">
    <ref name="SignalAtts"/>
  </define>
  <!-- ========= Action ========= -->
  <define name="Action.recurrence">
    <element name="Action.recurrence">
      <ref name="attlist.Action.recurrence"/>
      <zeroOrMore>
        <ref name="IterationExpression"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Action.recurrence" combine="interleave">
    <empty/>
  </define>
  <define name="Action.target">
    <element name="Action.target">
      <ref name="attlist.Action.target"/>
      <zeroOrMore>
        <ref name="ObjectSetExpression"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Action.target" combine="interleave">
    <empty/>
  </define>
  <define name="Action.isAsynchronous">
    <element name="Action.isAsynchronous">
      <ref name="attlist.Action.isAsynchronous"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.Action.isAsynchronous" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="Action.script">
    <element name="Action.script">
      <ref name="attlist.Action.script"/>
      <zeroOrMore>
        <ref name="ActionExpression"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Action.script" combine="interleave">
    <empty/>
  </define>
  <define name="Action.actualArgument">
    <element name="Action.actualArgument">
      <ref name="attlist.Action.actualArgument"/>
      <zeroOrMore>
        <ref name="Argument"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Action.actualArgument" combine="interleave">
    <empty/>
  </define>
  <define name="Action.actionSequence">
    <element name="Action.actionSequence">
      <ref name="attlist.Action.actionSequence"/>
      <zeroOrMore>
        <ref name="ActionSequence"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Action.actionSequence" combine="interleave">
    <empty/>
  </define>
  <define name="ActionFeatures">
    <choice>
      <ref name="ModelELEMENTFeatures"/>
      <ref name="Action.recurrence"/>
      <ref name="Action.target"/>
      <ref name="Action.isAsynchronous"/>
      <ref name="Action.script"/>
      <ref name="Action.actualArgument"/>
      <ref name="Action.actionSequence"/>
    </choice>
  </define>
  <define name="ActionAtts">
    <ref name="ModelELEMENTAtts"/>
    <optional>
      <attribute name="isAsynchronous">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="actionSequence">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Action">
    <element name="Action">
      <ref name="attlist.Action"/>
      <zeroOrMore>
        <ref name="ActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Action" combine="interleave">
    <ref name="ActionAtts"/>
  </define>
  <!-- ========= CreateAction ========= -->
  <define name="CreateAction.instantiation">
    <element name="CreateAction.instantiation">
      <ref name="attlist.CreateAction.instantiation"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CreateAction.instantiation" combine="interleave">
    <empty/>
  </define>
  <define name="CreateActionFeatures">
    <choice>
      <ref name="ActionFeatures"/>
      <ref name="CreateAction.instantiation"/>
    </choice>
  </define>
  <define name="CreateActionAtts">
    <ref name="ActionAtts"/>
    <optional>
      <attribute name="instantiation">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="CreateAction">
    <element name="CreateAction">
      <ref name="attlist.CreateAction"/>
      <zeroOrMore>
        <ref name="CreateActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CreateAction" combine="interleave">
    <ref name="CreateActionAtts"/>
  </define>
  <!-- ========= DestroyAction ========= -->
  <define name="DestroyActionFeatures">
    <ref name="ActionFeatures"/>
  </define>
  <define name="DestroyActionAtts">
    <ref name="ActionAtts"/>
  </define>
  <define name="DestroyAction">
    <element name="DestroyAction">
      <ref name="attlist.DestroyAction"/>
      <zeroOrMore>
        <ref name="DestroyActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.DestroyAction" combine="interleave">
    <ref name="DestroyActionAtts"/>
  </define>
  <!-- ========= UninterpretedAction ========= -->
  <define name="UninterpretedActionFeatures">
    <ref name="ActionFeatures"/>
  </define>
  <define name="UninterpretedActionAtts">
    <ref name="ActionAtts"/>
  </define>
  <define name="UninterpretedAction">
    <element name="UninterpretedAction">
      <ref name="attlist.UninterpretedAction"/>
      <zeroOrMore>
        <ref name="UninterpretedActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.UninterpretedAction" combine="interleave">
    <ref name="UninterpretedActionAtts"/>
  </define>
  <!-- ========= AttributeLink ========= -->
  <define name="AttributeLink.attribute">
    <element name="AttributeLink.attribute">
      <ref name="attlist.AttributeLink.attribute"/>
      <zeroOrMore>
        <ref name="Attribute"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AttributeLink.attribute" combine="interleave">
    <empty/>
  </define>
  <define name="AttributeLink.value">
    <element name="AttributeLink.value">
      <ref name="attlist.AttributeLink.value"/>
      <zeroOrMore>
        <ref name="Instance"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AttributeLink.value" combine="interleave">
    <empty/>
  </define>
  <define name="AttributeLink.instance">
    <element name="AttributeLink.instance">
      <ref name="attlist.AttributeLink.instance"/>
      <zeroOrMore>
        <ref name="Instance"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AttributeLink.instance" combine="interleave">
    <empty/>
  </define>
  <define name="AttributeLink.linkEnd">
    <element name="AttributeLink.linkEnd">
      <ref name="attlist.AttributeLink.linkEnd"/>
      <zeroOrMore>
        <ref name="LinkEnd"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AttributeLink.linkEnd" combine="interleave">
    <empty/>
  </define>
  <define name="AttributeLinkFeatures">
    <choice>
      <ref name="ModelELEMENTFeatures"/>
      <ref name="AttributeLink.attribute"/>
      <ref name="AttributeLink.value"/>
      <ref name="AttributeLink.instance"/>
      <ref name="AttributeLink.linkEnd"/>
    </choice>
  </define>
  <define name="AttributeLinkAtts">
    <ref name="ModelELEMENTAtts"/>
    <optional>
      <attribute name="attribute">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="value">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="instance">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="linkEnd">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="AttributeLink">
    <element name="AttributeLink">
      <ref name="attlist.AttributeLink"/>
      <zeroOrMore>
        <ref name="AttributeLinkFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AttributeLink" combine="interleave">
    <ref name="AttributeLinkAtts"/>
  </define>
  <!-- ========= Object ========= -->
  <define name="ObjectFeatures">
    <ref name="InstanceFeatures"/>
  </define>
  <define name="ObjectAtts">
    <ref name="InstanceAtts"/>
  </define>
  <define name="Object">
    <element name="Object">
      <ref name="attlist.Object"/>
      <zeroOrMore>
        <ref name="ObjectFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Object" combine="interleave">
    <ref name="ObjectAtts"/>
  </define>
  <!-- ========= Link ========= -->
  <define name="Link.association">
    <element name="Link.association">
      <ref name="attlist.Link.association"/>
      <zeroOrMore>
        <ref name="Association"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Link.association" combine="interleave">
    <empty/>
  </define>
  <define name="Link.connection">
    <element name="Link.connection">
      <ref name="attlist.Link.connection"/>
      <zeroOrMore>
        <ref name="LinkEnd"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Link.connection" combine="interleave">
    <empty/>
  </define>
  <define name="LinkFeatures">
    <choice>
      <ref name="ModelELEMENTFeatures"/>
      <ref name="Link.association"/>
      <ref name="Link.connection"/>
    </choice>
  </define>
  <define name="LinkAtts">
    <ref name="ModelELEMENTAtts"/>
    <optional>
      <attribute name="association">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Link">
    <element name="Link">
      <ref name="attlist.Link"/>
      <zeroOrMore>
        <ref name="LinkFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Link" combine="interleave">
    <ref name="LinkAtts"/>
  </define>
  <!-- ========= LinkObject ========= -->
  <define name="LinkObjectFeatures">
    <choice>
      <ref name="ObjectFeatures"/>
      <ref name="Link.association"/>
      <ref name="Link.connection"/>
    </choice>
  </define>
  <define name="LinkObjectAtts">
    <ref name="ObjectAtts"/>
    <optional>
      <attribute name="association">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="LinkObject">
    <element name="LinkObject">
      <ref name="attlist.LinkObject"/>
      <zeroOrMore>
        <ref name="LinkObjectFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.LinkObject" combine="interleave">
    <ref name="LinkObjectAtts"/>
  </define>
  <!-- ========= DataValue ========= -->
  <define name="DataValueFeatures">
    <ref name="InstanceFeatures"/>
  </define>
  <define name="DataValueAtts">
    <ref name="InstanceAtts"/>
  </define>
  <define name="DataValue">
    <element name="DataValue">
      <ref name="attlist.DataValue"/>
      <zeroOrMore>
        <ref name="DataValueFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.DataValue" combine="interleave">
    <ref name="DataValueAtts"/>
  </define>
  <!-- ========= CallAction ========= -->
  <define name="CallAction.operation">
    <element name="CallAction.operation">
      <ref name="attlist.CallAction.operation"/>
      <zeroOrMore>
        <ref name="Operation"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CallAction.operation" combine="interleave">
    <empty/>
  </define>
  <define name="CallActionFeatures">
    <choice>
      <ref name="ActionFeatures"/>
      <ref name="CallAction.operation"/>
    </choice>
  </define>
  <define name="CallActionAtts">
    <ref name="ActionAtts"/>
    <optional>
      <attribute name="operation">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="CallAction">
    <element name="CallAction">
      <ref name="attlist.CallAction"/>
      <zeroOrMore>
        <ref name="CallActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CallAction" combine="interleave">
    <ref name="CallActionAtts"/>
  </define>
  <!-- ========= SendAction ========= -->
  <define name="SendAction.signal">
    <element name="SendAction.signal">
      <ref name="attlist.SendAction.signal"/>
      <zeroOrMore>
        <ref name="Signal"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.SendAction.signal" combine="interleave">
    <empty/>
  </define>
  <define name="SendActionFeatures">
    <choice>
      <ref name="ActionFeatures"/>
      <ref name="SendAction.signal"/>
    </choice>
  </define>
  <define name="SendActionAtts">
    <ref name="ActionAtts"/>
    <optional>
      <attribute name="signal">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="SendAction">
    <element name="SendAction">
      <ref name="attlist.SendAction"/>
      <zeroOrMore>
        <ref name="SendActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.SendAction" combine="interleave">
    <ref name="SendActionAtts"/>
  </define>
  <!-- ========= ActionSequence ========= -->
  <define name="ActionSequence.action">
    <element name="ActionSequence.action">
      <ref name="attlist.ActionSequence.action"/>
      <zeroOrMore>
        <choice>
          <ref name="Action"/>
          <ref name="CreateAction"/>
          <ref name="DestroyAction"/>
          <ref name="UninterpretedAction"/>
          <ref name="CallAction"/>
          <ref name="SendAction"/>
          <ref name="ActionSequence"/>
          <ref name="ReturnAction"/>
          <ref name="TerminateAction"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ActionSequence.action" combine="interleave">
    <empty/>
  </define>
  <define name="ActionSequenceFeatures">
    <choice>
      <ref name="ActionFeatures"/>
      <ref name="ActionSequence.action"/>
    </choice>
  </define>
  <define name="ActionSequenceAtts">
    <ref name="ActionAtts"/>
  </define>
  <define name="ActionSequence">
    <element name="ActionSequence">
      <ref name="attlist.ActionSequence"/>
      <zeroOrMore>
        <ref name="ActionSequenceFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ActionSequence" combine="interleave">
    <ref name="ActionSequenceAtts"/>
  </define>
  <!-- ========= Argument ========= -->
  <define name="Argument.value">
    <element name="Argument.value">
      <ref name="attlist.Argument.value"/>
      <zeroOrMore>
        <choice>
          <ref name="Expression"/>
          <ref name="BooleanExpression"/>
          <ref name="TypeExpression"/>
          <ref name="MappingExpression"/>
          <ref name="ProcedureExpression"/>
          <ref name="ObjectSetExpression"/>
          <ref name="ActionExpression"/>
          <ref name="IterationExpression"/>
          <ref name="TimeExpression"/>
          <ref name="ArgListsExpression"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Argument.value" combine="interleave">
    <empty/>
  </define>
  <define name="Argument.action">
    <element name="Argument.action">
      <ref name="attlist.Argument.action"/>
      <zeroOrMore>
        <ref name="Action"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Argument.action" combine="interleave">
    <empty/>
  </define>
  <define name="ArgumentFeatures">
    <choice>
      <ref name="ModelELEMENTFeatures"/>
      <ref name="Argument.value"/>
      <ref name="Argument.action"/>
    </choice>
  </define>
  <define name="ArgumentAtts">
    <ref name="ModelELEMENTAtts"/>
    <optional>
      <attribute name="action">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Argument">
    <element name="Argument">
      <ref name="attlist.Argument"/>
      <zeroOrMore>
        <ref name="ArgumentFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Argument" combine="interleave">
    <ref name="ArgumentAtts"/>
  </define>
  <!-- ========= Reception ========= -->
  <define name="Reception.specification">
    <element name="Reception.specification">
      <ref name="attlist.Reception.specification"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Reception.specification" combine="interleave">
    <empty/>
  </define>
  <define name="Reception.isRoot">
    <element name="Reception.isRoot">
      <ref name="attlist.Reception.isRoot"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.Reception.isRoot" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="Reception.isLeaf">
    <element name="Reception.isLeaf">
      <ref name="attlist.Reception.isLeaf"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.Reception.isLeaf" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="Reception.isAbstract">
    <element name="Reception.isAbstract">
      <ref name="attlist.Reception.isAbstract"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.Reception.isAbstract" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="Reception.signal">
    <element name="Reception.signal">
      <ref name="attlist.Reception.signal"/>
      <zeroOrMore>
        <ref name="Signal"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Reception.signal" combine="interleave">
    <empty/>
  </define>
  <define name="ReceptionFeatures">
    <choice>
      <ref name="BehavioralFeatureFeatures"/>
      <ref name="Reception.specification"/>
      <ref name="Reception.isRoot"/>
      <ref name="Reception.isLeaf"/>
      <ref name="Reception.isAbstract"/>
      <ref name="Reception.signal"/>
    </choice>
  </define>
  <define name="ReceptionAtts">
    <ref name="BehavioralFeatureAtts"/>
    <optional>
      <attribute name="specification"/>
    </optional>
    <optional>
      <attribute name="isRoot">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="isLeaf">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="isAbstract">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="signal">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Reception">
    <element name="Reception">
      <ref name="attlist.Reception"/>
      <zeroOrMore>
        <ref name="ReceptionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Reception" combine="interleave">
    <ref name="ReceptionAtts"/>
  </define>
  <!-- ========= LinkEnd ========= -->
  <define name="LinkEnd.instance">
    <element name="LinkEnd.instance">
      <ref name="attlist.LinkEnd.instance"/>
      <zeroOrMore>
        <ref name="Instance"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.LinkEnd.instance" combine="interleave">
    <empty/>
  </define>
  <define name="LinkEnd.link">
    <element name="LinkEnd.link">
      <ref name="attlist.LinkEnd.link"/>
      <zeroOrMore>
        <ref name="Link"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.LinkEnd.link" combine="interleave">
    <empty/>
  </define>
  <define name="LinkEnd.associationEnd">
    <element name="LinkEnd.associationEnd">
      <ref name="attlist.LinkEnd.associationEnd"/>
      <zeroOrMore>
        <ref name="AssociationEnd"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.LinkEnd.associationEnd" combine="interleave">
    <empty/>
  </define>
  <define name="LinkEnd.qualifiedValue">
    <element name="LinkEnd.qualifiedValue">
      <ref name="attlist.LinkEnd.qualifiedValue"/>
      <zeroOrMore>
        <ref name="AttributeLink"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.LinkEnd.qualifiedValue" combine="interleave">
    <empty/>
  </define>
  <define name="LinkEndFeatures">
    <choice>
      <ref name="ModelELEMENTFeatures"/>
      <ref name="LinkEnd.instance"/>
      <ref name="LinkEnd.link"/>
      <ref name="LinkEnd.associationEnd"/>
      <ref name="LinkEnd.qualifiedValue"/>
    </choice>
  </define>
  <define name="LinkEndAtts">
    <ref name="ModelELEMENTAtts"/>
    <optional>
      <attribute name="instance">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="link">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="associationEnd">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="LinkEnd">
    <element name="LinkEnd">
      <ref name="attlist.LinkEnd"/>
      <zeroOrMore>
        <ref name="LinkEndFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.LinkEnd" combine="interleave">
    <ref name="LinkEndAtts"/>
  </define>
  <!-- ========= ReturnAction ========= -->
  <define name="ReturnActionFeatures">
    <ref name="ActionFeatures"/>
  </define>
  <define name="ReturnActionAtts">
    <ref name="ActionAtts"/>
  </define>
  <define name="ReturnAction">
    <element name="ReturnAction">
      <ref name="attlist.ReturnAction"/>
      <zeroOrMore>
        <ref name="ReturnActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ReturnAction" combine="interleave">
    <ref name="ReturnActionAtts"/>
  </define>
  <!-- ========= TerminateAction ========= -->
  <define name="TerminateActionFeatures">
    <ref name="ActionFeatures"/>
  </define>
  <define name="TerminateActionAtts">
    <ref name="ActionAtts"/>
  </define>
  <define name="TerminateAction">
    <element name="TerminateAction">
      <ref name="attlist.TerminateAction"/>
      <zeroOrMore>
        <ref name="TerminateActionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TerminateAction" combine="interleave">
    <ref name="TerminateActionAtts"/>
  </define>
  <!-- ========= Stimulus ========= -->
  <define name="Stimulus.argument">
    <element name="Stimulus.argument">
      <ref name="attlist.Stimulus.argument"/>
      <zeroOrMore>
        <ref name="Instance"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Stimulus.argument" combine="interleave">
    <empty/>
  </define>
  <define name="Stimulus.sender">
    <element name="Stimulus.sender">
      <ref name="attlist.Stimulus.sender"/>
      <zeroOrMore>
        <ref name="Instance"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Stimulus.sender" combine="interleave">
    <empty/>
  </define>
  <define name="Stimulus.receiver">
    <element name="Stimulus.receiver">
      <ref name="attlist.Stimulus.receiver"/>
      <zeroOrMore>
        <ref name="Instance"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Stimulus.receiver" combine="interleave">
    <empty/>
  </define>
  <define name="Stimulus.communicationLink">
    <element name="Stimulus.communicationLink">
      <ref name="attlist.Stimulus.communicationLink"/>
      <zeroOrMore>
        <ref name="Link"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Stimulus.communicationLink" combine="interleave">
    <empty/>
  </define>
  <define name="Stimulus.dispatchAction">
    <element name="Stimulus.dispatchAction">
      <ref name="attlist.Stimulus.dispatchAction"/>
      <zeroOrMore>
        <ref name="Action"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Stimulus.dispatchAction" combine="interleave">
    <empty/>
  </define>
  <define name="StimulusFeatures">
    <choice>
      <ref name="ModelELEMENTFeatures"/>
      <ref name="Stimulus.argument"/>
      <ref name="Stimulus.sender"/>
      <ref name="Stimulus.receiver"/>
      <ref name="Stimulus.communicationLink"/>
      <ref name="Stimulus.dispatchAction"/>
    </choice>
  </define>
  <define name="StimulusAtts">
    <ref name="ModelELEMENTAtts"/>
    <optional>
      <attribute name="argument">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="sender">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="receiver">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="communicationLink">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="dispatchAction">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Stimulus">
    <element name="Stimulus">
      <ref name="attlist.Stimulus"/>
      <zeroOrMore>
        <ref name="StimulusFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Stimulus" combine="interleave">
    <ref name="StimulusAtts"/>
  </define>
  <!-- ========= Exception ========= -->
  <define name="ExceptionFeatures">
    <ref name="SignalFeatures"/>
  </define>
  <define name="ExceptionAtts">
    <ref name="SignalAtts"/>
  </define>
  <define name="Exception">
    <element name="Exception">
      <ref name="attlist.Exception"/>
      <zeroOrMore>
        <ref name="ExceptionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Exception" combine="interleave">
    <ref name="ExceptionAtts"/>
  </define>
  <!-- ========= ComponentInstance ========= -->
  <define name="ComponentInstance.nodeInstance">
    <element name="ComponentInstance.nodeInstance">
      <ref name="attlist.ComponentInstance.nodeInstance"/>
      <zeroOrMore>
        <ref name="NodeInstance"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ComponentInstance.nodeInstance" combine="interleave">
    <empty/>
  </define>
  <define name="ComponentInstance.resident">
    <element name="ComponentInstance.resident">
      <ref name="attlist.ComponentInstance.resident"/>
      <zeroOrMore>
        <ref name="Instance"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ComponentInstance.resident" combine="interleave">
    <empty/>
  </define>
  <define name="ComponentInstanceFeatures">
    <choice>
      <ref name="InstanceFeatures"/>
      <ref name="ComponentInstance.nodeInstance"/>
      <ref name="ComponentInstance.resident"/>
    </choice>
  </define>
  <define name="ComponentInstanceAtts">
    <ref name="InstanceAtts"/>
    <optional>
      <attribute name="nodeInstance">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="resident">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="ComponentInstance">
    <element name="ComponentInstance">
      <ref name="attlist.ComponentInstance"/>
      <zeroOrMore>
        <ref name="ComponentInstanceFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ComponentInstance" combine="interleave">
    <ref name="ComponentInstanceAtts"/>
  </define>
  <!-- ========= NodeInstance ========= -->
  <define name="NodeInstance.resident">
    <element name="NodeInstance.resident">
      <ref name="attlist.NodeInstance.resident"/>
      <zeroOrMore>
        <ref name="ComponentInstance"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.NodeInstance.resident" combine="interleave">
    <empty/>
  </define>
  <define name="NodeInstanceFeatures">
    <choice>
      <ref name="InstanceFeatures"/>
      <ref name="NodeInstance.resident"/>
    </choice>
  </define>
  <define name="NodeInstanceAtts">
    <ref name="InstanceAtts"/>
    <optional>
      <attribute name="resident">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="NodeInstance">
    <element name="NodeInstance">
      <ref name="attlist.NodeInstance"/>
      <zeroOrMore>
        <ref name="NodeInstanceFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.NodeInstance" combine="interleave">
    <ref name="NodeInstanceAtts"/>
  </define>
  <!-- ========= SubsystemInstance ========= -->
  <define name="SubsystemInstanceFeatures">
    <ref name="InstanceFeatures"/>
  </define>
  <define name="SubsystemInstanceAtts">
    <ref name="InstanceAtts"/>
  </define>
  <define name="SubsystemInstance">
    <element name="SubsystemInstance">
      <ref name="attlist.SubsystemInstance"/>
      <zeroOrMore>
        <ref name="SubsystemInstanceFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.SubsystemInstance" combine="interleave">
    <ref name="SubsystemInstanceAtts"/>
  </define>
  <!-- ========= A_context_raisedSignal ========= -->
  <define name="A_context_raisedSignal.context">
    <element name="A_context_raisedSignal.context">
      <ref name="attlist.A_context_raisedSignal.context"/>
      <optional>
        <ref name="BehavioralFeature"/>
      </optional>
    </element>
  </define>
  <define name="attlist.A_context_raisedSignal.context" combine="interleave">
    <empty/>
  </define>
  <define name="A_context_raisedSignal.raisedSignal">
    <element name="A_context_raisedSignal.raisedSignal">
      <ref name="attlist.A_context_raisedSignal.raisedSignal"/>
      <optional>
        <ref name="Signal"/>
      </optional>
    </element>
  </define>
  <define name="attlist.A_context_raisedSignal.raisedSignal" combine="interleave">
    <empty/>
  </define>
  <define name="A_context_raisedSignal">
    <element name="A_context_raisedSignal">
      <ref name="attlist.A_context_raisedSignal"/>
      <zeroOrMore>
        <choice>
          <ref name="A_context_raisedSignal.context"/>
          <ref name="A_context_raisedSignal.raisedSignal"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.A_context_raisedSignal" combine="interleave">
    <ref name="XMI.ELEMENT.att"/>
    <optional>
      <attribute name="context">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="raisedSignal">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <!-- ========= Use_Cases ========= -->
  <!-- ========= UseCase ========= -->
  <define name="UseCase.extend">
    <element name="UseCase.extend">
      <ref name="attlist.UseCase.extend"/>
      <zeroOrMore>
        <ref name="Extend"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.UseCase.extend" combine="interleave">
    <empty/>
  </define>
  <define name="UseCase.include">
    <element name="UseCase.include">
      <ref name="attlist.UseCase.include"/>
      <zeroOrMore>
        <ref name="Include"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.UseCase.include" combine="interleave">
    <empty/>
  </define>
  <define name="UseCase.extensionPoint">
    <element name="UseCase.extensionPoint">
      <ref name="attlist.UseCase.extensionPoint"/>
      <zeroOrMore>
        <ref name="ExtensionPoint"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.UseCase.extensionPoint" combine="interleave">
    <empty/>
  </define>
  <define name="UseCaseFeatures">
    <choice>
      <ref name="ClassifierFeatures"/>
      <ref name="UseCase.extend"/>
      <ref name="UseCase.include"/>
      <ref name="UseCase.extensionPoint"/>
    </choice>
  </define>
  <define name="UseCaseAtts">
    <ref name="ClassifierAtts"/>
    <optional>
      <attribute name="extend">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="include">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="UseCase">
    <element name="UseCase">
      <ref name="attlist.UseCase"/>
      <zeroOrMore>
        <ref name="UseCaseFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.UseCase" combine="interleave">
    <ref name="UseCaseAtts"/>
  </define>
  <!-- ========= Actor ========= -->
  <define name="ActorFeatures">
    <ref name="ClassifierFeatures"/>
  </define>
  <define name="ActorAtts">
    <ref name="ClassifierAtts"/>
  </define>
  <define name="Actor">
    <element name="Actor">
      <ref name="attlist.Actor"/>
      <zeroOrMore>
        <ref name="ActorFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Actor" combine="interleave">
    <ref name="ActorAtts"/>
  </define>
  <!-- ========= UseCaseInstance ========= -->
  <define name="UseCaseInstanceFeatures">
    <ref name="InstanceFeatures"/>
  </define>
  <define name="UseCaseInstanceAtts">
    <ref name="InstanceAtts"/>
  </define>
  <define name="UseCaseInstance">
    <element name="UseCaseInstance">
      <ref name="attlist.UseCaseInstance"/>
      <zeroOrMore>
        <ref name="UseCaseInstanceFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.UseCaseInstance" combine="interleave">
    <ref name="UseCaseInstanceAtts"/>
  </define>
  <!-- ========= Extend ========= -->
  <define name="Extend.condition">
    <element name="Extend.condition">
      <ref name="attlist.Extend.condition"/>
      <zeroOrMore>
        <ref name="BooleanExpression"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Extend.condition" combine="interleave">
    <empty/>
  </define>
  <define name="Extend.base">
    <element name="Extend.base">
      <ref name="attlist.Extend.base"/>
      <zeroOrMore>
        <ref name="UseCase"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Extend.base" combine="interleave">
    <empty/>
  </define>
  <define name="Extend.extension">
    <element name="Extend.extension">
      <ref name="attlist.Extend.extension"/>
      <zeroOrMore>
        <ref name="UseCase"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Extend.extension" combine="interleave">
    <empty/>
  </define>
  <define name="Extend.extensionPoint">
    <element name="Extend.extensionPoint">
      <ref name="attlist.Extend.extensionPoint"/>
      <zeroOrMore>
        <ref name="ExtensionPoint"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Extend.extensionPoint" combine="interleave">
    <empty/>
  </define>
  <define name="ExtendFeatures">
    <choice>
      <ref name="RelationshipFeatures"/>
      <ref name="Extend.condition"/>
      <ref name="Extend.base"/>
      <ref name="Extend.extension"/>
      <ref name="Extend.extensionPoint"/>
    </choice>
  </define>
  <define name="ExtendAtts">
    <ref name="RelationshipAtts"/>
    <optional>
      <attribute name="base">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="extension">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="extensionPoint">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Extend">
    <element name="Extend">
      <ref name="attlist.Extend"/>
      <zeroOrMore>
        <ref name="ExtendFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Extend" combine="interleave">
    <ref name="ExtendAtts"/>
  </define>
  <!-- ========= Include ========= -->
  <define name="Include.addition">
    <element name="Include.addition">
      <ref name="attlist.Include.addition"/>
      <zeroOrMore>
        <ref name="UseCase"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Include.addition" combine="interleave">
    <empty/>
  </define>
  <define name="Include.base">
    <element name="Include.base">
      <ref name="attlist.Include.base"/>
      <zeroOrMore>
        <ref name="UseCase"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Include.base" combine="interleave">
    <empty/>
  </define>
  <define name="IncludeFeatures">
    <choice>
      <ref name="RelationshipFeatures"/>
      <ref name="Include.addition"/>
      <ref name="Include.base"/>
    </choice>
  </define>
  <define name="IncludeAtts">
    <ref name="RelationshipAtts"/>
    <optional>
      <attribute name="addition">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="base">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Include">
    <element name="Include">
      <ref name="attlist.Include"/>
      <zeroOrMore>
        <ref name="IncludeFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Include" combine="interleave">
    <ref name="IncludeAtts"/>
  </define>
  <!-- ========= ExtensionPoint ========= -->
  <define name="ExtensionPoint.location">
    <element name="ExtensionPoint.location">
      <ref name="attlist.ExtensionPoint.location"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ExtensionPoint.location" combine="interleave">
    <empty/>
  </define>
  <define name="ExtensionPoint.useCase">
    <element name="ExtensionPoint.useCase">
      <ref name="attlist.ExtensionPoint.useCase"/>
      <zeroOrMore>
        <ref name="UseCase"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ExtensionPoint.useCase" combine="interleave">
    <empty/>
  </define>
  <define name="ExtensionPointFeatures">
    <choice>
      <ref name="ModelELEMENTFeatures"/>
      <ref name="ExtensionPoint.location"/>
      <ref name="ExtensionPoint.useCase"/>
    </choice>
  </define>
  <define name="ExtensionPointAtts">
    <ref name="ModelELEMENTAtts"/>
    <optional>
      <attribute name="location"/>
    </optional>
    <optional>
      <attribute name="useCase">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="ExtensionPoint">
    <element name="ExtensionPoint">
      <ref name="attlist.ExtensionPoint"/>
      <zeroOrMore>
        <ref name="ExtensionPointFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ExtensionPoint" combine="interleave">
    <ref name="ExtensionPointAtts"/>
  </define>
  <!-- ========= State_Machines ========= -->
  <!-- ========= StateMachine ========= -->
  <define name="StateMachine.context">
    <element name="StateMachine.context">
      <ref name="attlist.StateMachine.context"/>
      <zeroOrMore>
        <ref name="ModelELEMENT"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.StateMachine.context" combine="interleave">
    <empty/>
  </define>
  <define name="StateMachine.top">
    <element name="StateMachine.top">
      <ref name="attlist.StateMachine.top"/>
      <zeroOrMore>
        <choice>
          <ref name="State"/>
          <ref name="CompositeState"/>
          <ref name="SubmachineState"/>
          <ref name="SubactivityState"/>
          <ref name="SimpleState"/>
          <ref name="ActionState"/>
          <ref name="CallState"/>
          <ref name="ObjectFlowState"/>
          <ref name="FinalState"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.StateMachine.top" combine="interleave">
    <empty/>
  </define>
  <define name="StateMachine.transitions">
    <element name="StateMachine.transitions">
      <ref name="attlist.StateMachine.transitions"/>
      <zeroOrMore>
        <ref name="Transition"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.StateMachine.transitions" combine="interleave">
    <empty/>
  </define>
  <define name="StateMachine.submachineState">
    <element name="StateMachine.submachineState">
      <ref name="attlist.StateMachine.submachineState"/>
      <zeroOrMore>
        <ref name="SubmachineState"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.StateMachine.submachineState" combine="interleave">
    <empty/>
  </define>
  <define name="StateMachineFeatures">
    <choice>
      <ref name="ModelELEMENTFeatures"/>
      <ref name="StateMachine.context"/>
      <ref name="StateMachine.top"/>
      <ref name="StateMachine.transitions"/>
      <ref name="StateMachine.submachineState"/>
    </choice>
  </define>
  <define name="StateMachineAtts">
    <ref name="ModelELEMENTAtts"/>
    <optional>
      <attribute name="context">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="submachineState">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="StateMachine">
    <element name="StateMachine">
      <ref name="attlist.StateMachine"/>
      <zeroOrMore>
        <ref name="StateMachineFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.StateMachine" combine="interleave">
    <ref name="StateMachineAtts"/>
  </define>
  <!-- ========= Event ========= -->
  <define name="Event.parameter">
    <element name="Event.parameter">
      <ref name="attlist.Event.parameter"/>
      <zeroOrMore>
        <ref name="Parameter"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Event.parameter" combine="interleave">
    <empty/>
  </define>
  <define name="EventFeatures">
    <choice>
      <ref name="ModelELEMENTFeatures"/>
      <ref name="Event.parameter"/>
    </choice>
  </define>
  <define name="EventAtts">
    <ref name="ModelELEMENTAtts"/>
  </define>
  <define name="Event">
    <element name="Event">
      <ref name="attlist.Event"/>
      <zeroOrMore>
        <ref name="EventFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Event" combine="interleave">
    <ref name="EventAtts"/>
  </define>
  <!-- ========= StateVertex ========= -->
  <define name="StateVertex.container">
    <element name="StateVertex.container">
      <ref name="attlist.StateVertex.container"/>
      <zeroOrMore>
        <ref name="CompositeState"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.StateVertex.container" combine="interleave">
    <empty/>
  </define>
  <define name="StateVertex.outgoing">
    <element name="StateVertex.outgoing">
      <ref name="attlist.StateVertex.outgoing"/>
      <zeroOrMore>
        <ref name="Transition"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.StateVertex.outgoing" combine="interleave">
    <empty/>
  </define>
  <define name="StateVertex.incoming">
    <element name="StateVertex.incoming">
      <ref name="attlist.StateVertex.incoming"/>
      <zeroOrMore>
        <ref name="Transition"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.StateVertex.incoming" combine="interleave">
    <empty/>
  </define>
  <define name="StateVertexFeatures">
    <choice>
      <ref name="ModelELEMENTFeatures"/>
      <ref name="StateVertex.container"/>
      <ref name="StateVertex.outgoing"/>
      <ref name="StateVertex.incoming"/>
    </choice>
  </define>
  <define name="StateVertexAtts">
    <ref name="ModelELEMENTAtts"/>
    <optional>
      <attribute name="container">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="outgoing">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="incoming">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="StateVertex">
    <element name="StateVertex">
      <ref name="attlist.StateVertex"/>
      <zeroOrMore>
        <ref name="StateVertexFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.StateVertex" combine="interleave">
    <ref name="StateVertexAtts"/>
  </define>
  <!-- ========= State ========= -->
  <define name="State.entry">
    <element name="State.entry">
      <ref name="attlist.State.entry"/>
      <zeroOrMore>
        <choice>
          <ref name="Action"/>
          <ref name="CreateAction"/>
          <ref name="DestroyAction"/>
          <ref name="UninterpretedAction"/>
          <ref name="CallAction"/>
          <ref name="SendAction"/>
          <ref name="ActionSequence"/>
          <ref name="ReturnAction"/>
          <ref name="TerminateAction"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.State.entry" combine="interleave">
    <empty/>
  </define>
  <define name="State.exit">
    <element name="State.exit">
      <ref name="attlist.State.exit"/>
      <zeroOrMore>
        <choice>
          <ref name="Action"/>
          <ref name="CreateAction"/>
          <ref name="DestroyAction"/>
          <ref name="UninterpretedAction"/>
          <ref name="CallAction"/>
          <ref name="SendAction"/>
          <ref name="ActionSequence"/>
          <ref name="ReturnAction"/>
          <ref name="TerminateAction"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.State.exit" combine="interleave">
    <empty/>
  </define>
  <define name="State.deferrableEvent">
    <element name="State.deferrableEvent">
      <ref name="attlist.State.deferrableEvent"/>
      <zeroOrMore>
        <ref name="Event"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.State.deferrableEvent" combine="interleave">
    <empty/>
  </define>
  <define name="State.internalTransition">
    <element name="State.internalTransition">
      <ref name="attlist.State.internalTransition"/>
      <zeroOrMore>
        <ref name="Transition"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.State.internalTransition" combine="interleave">
    <empty/>
  </define>
  <define name="State.doActivity">
    <element name="State.doActivity">
      <ref name="attlist.State.doActivity"/>
      <zeroOrMore>
        <choice>
          <ref name="Action"/>
          <ref name="CreateAction"/>
          <ref name="DestroyAction"/>
          <ref name="UninterpretedAction"/>
          <ref name="CallAction"/>
          <ref name="SendAction"/>
          <ref name="ActionSequence"/>
          <ref name="ReturnAction"/>
          <ref name="TerminateAction"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.State.doActivity" combine="interleave">
    <empty/>
  </define>
  <define name="State.stateMachine">
    <element name="State.stateMachine">
      <ref name="attlist.State.stateMachine"/>
      <zeroOrMore>
        <ref name="StateMachine"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.State.stateMachine" combine="interleave">
    <empty/>
  </define>
  <define name="StateFeatures">
    <choice>
      <ref name="StateVertexFeatures"/>
      <ref name="State.entry"/>
      <ref name="State.exit"/>
      <ref name="State.deferrableEvent"/>
      <ref name="State.internalTransition"/>
      <ref name="State.doActivity"/>
      <ref name="State.stateMachine"/>
    </choice>
  </define>
  <define name="StateAtts">
    <ref name="StateVertexAtts"/>
    <optional>
      <attribute name="deferrableEvent">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="stateMachine">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="State">
    <element name="State">
      <ref name="attlist.State"/>
      <zeroOrMore>
        <ref name="StateFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.State" combine="interleave">
    <ref name="StateAtts"/>
  </define>
  <!-- ========= TimeEvent ========= -->
  <define name="TimeEvent.when">
    <element name="TimeEvent.when">
      <ref name="attlist.TimeEvent.when"/>
      <zeroOrMore>
        <ref name="TimeExpression"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TimeEvent.when" combine="interleave">
    <empty/>
  </define>
  <define name="TimeEventFeatures">
    <choice>
      <ref name="EventFeatures"/>
      <ref name="TimeEvent.when"/>
    </choice>
  </define>
  <define name="TimeEventAtts">
    <ref name="EventAtts"/>
  </define>
  <define name="TimeEvent">
    <element name="TimeEvent">
      <ref name="attlist.TimeEvent"/>
      <zeroOrMore>
        <ref name="TimeEventFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.TimeEvent" combine="interleave">
    <ref name="TimeEventAtts"/>
  </define>
  <!-- ========= CallEvent ========= -->
  <define name="CallEvent.operation">
    <element name="CallEvent.operation">
      <ref name="attlist.CallEvent.operation"/>
      <zeroOrMore>
        <ref name="Operation"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CallEvent.operation" combine="interleave">
    <empty/>
  </define>
  <define name="CallEventFeatures">
    <choice>
      <ref name="EventFeatures"/>
      <ref name="CallEvent.operation"/>
    </choice>
  </define>
  <define name="CallEventAtts">
    <ref name="EventAtts"/>
    <optional>
      <attribute name="operation">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="CallEvent">
    <element name="CallEvent">
      <ref name="attlist.CallEvent"/>
      <zeroOrMore>
        <ref name="CallEventFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CallEvent" combine="interleave">
    <ref name="CallEventAtts"/>
  </define>
  <!-- ========= SignalEvent ========= -->
  <define name="SignalEvent.signal">
    <element name="SignalEvent.signal">
      <ref name="attlist.SignalEvent.signal"/>
      <zeroOrMore>
        <ref name="Signal"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.SignalEvent.signal" combine="interleave">
    <empty/>
  </define>
  <define name="SignalEventFeatures">
    <choice>
      <ref name="EventFeatures"/>
      <ref name="SignalEvent.signal"/>
    </choice>
  </define>
  <define name="SignalEventAtts">
    <ref name="EventAtts"/>
    <optional>
      <attribute name="signal">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="SignalEvent">
    <element name="SignalEvent">
      <ref name="attlist.SignalEvent"/>
      <zeroOrMore>
        <ref name="SignalEventFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.SignalEvent" combine="interleave">
    <ref name="SignalEventAtts"/>
  </define>
  <!-- ========= Transition ========= -->
  <define name="Transition.guard">
    <element name="Transition.guard">
      <ref name="attlist.Transition.guard"/>
      <zeroOrMore>
        <ref name="Guard"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Transition.guard" combine="interleave">
    <empty/>
  </define>
  <define name="Transition.effect">
    <element name="Transition.effect">
      <ref name="attlist.Transition.effect"/>
      <zeroOrMore>
        <choice>
          <ref name="Action"/>
          <ref name="CreateAction"/>
          <ref name="DestroyAction"/>
          <ref name="UninterpretedAction"/>
          <ref name="CallAction"/>
          <ref name="SendAction"/>
          <ref name="ActionSequence"/>
          <ref name="ReturnAction"/>
          <ref name="TerminateAction"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Transition.effect" combine="interleave">
    <empty/>
  </define>
  <define name="Transition.trigger">
    <element name="Transition.trigger">
      <ref name="attlist.Transition.trigger"/>
      <zeroOrMore>
        <ref name="Event"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Transition.trigger" combine="interleave">
    <empty/>
  </define>
  <define name="Transition.source">
    <element name="Transition.source">
      <ref name="attlist.Transition.source"/>
      <zeroOrMore>
        <ref name="StateVertex"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Transition.source" combine="interleave">
    <empty/>
  </define>
  <define name="Transition.target">
    <element name="Transition.target">
      <ref name="attlist.Transition.target"/>
      <zeroOrMore>
        <ref name="StateVertex"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Transition.target" combine="interleave">
    <empty/>
  </define>
  <define name="Transition.stateMachine">
    <element name="Transition.stateMachine">
      <ref name="attlist.Transition.stateMachine"/>
      <zeroOrMore>
        <ref name="StateMachine"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Transition.stateMachine" combine="interleave">
    <empty/>
  </define>
  <define name="TransitionFeatures">
    <choice>
      <ref name="ModelELEMENTFeatures"/>
      <ref name="Transition.guard"/>
      <ref name="Transition.effect"/>
      <ref name="Transition.trigger"/>
      <ref name="Transition.source"/>
      <ref name="Transition.target"/>
      <ref name="Transition.stateMachine"/>
    </choice>
  </define>
  <define name="TransitionAtts">
    <ref name="ModelELEMENTAtts"/>
    <optional>
      <attribute name="trigger">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="source">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="target">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="stateMachine">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Transition">
    <element name="Transition">
      <ref name="attlist.Transition"/>
      <zeroOrMore>
        <ref name="TransitionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Transition" combine="interleave">
    <ref name="TransitionAtts"/>
  </define>
  <!-- ========= CompositeState ========= -->
  <define name="CompositeState.isConcurrent">
    <element name="CompositeState.isConcurrent">
      <ref name="attlist.CompositeState.isConcurrent"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.CompositeState.isConcurrent" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="CompositeState.subvertex">
    <element name="CompositeState.subvertex">
      <ref name="attlist.CompositeState.subvertex"/>
      <zeroOrMore>
        <choice>
          <ref name="StateVertex"/>
          <ref name="State"/>
          <ref name="CompositeState"/>
          <ref name="SubmachineState"/>
          <ref name="SubactivityState"/>
          <ref name="SimpleState"/>
          <ref name="ActionState"/>
          <ref name="CallState"/>
          <ref name="ObjectFlowState"/>
          <ref name="FinalState"/>
          <ref name="Pseudostate"/>
          <ref name="SynchState"/>
          <ref name="StubState"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CompositeState.subvertex" combine="interleave">
    <empty/>
  </define>
  <define name="CompositeStateFeatures">
    <choice>
      <ref name="StateFeatures"/>
      <ref name="CompositeState.isConcurrent"/>
      <ref name="CompositeState.subvertex"/>
    </choice>
  </define>
  <define name="CompositeStateAtts">
    <ref name="StateAtts"/>
    <optional>
      <attribute name="isConcurrent">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="CompositeState">
    <element name="CompositeState">
      <ref name="attlist.CompositeState"/>
      <zeroOrMore>
        <ref name="CompositeStateFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CompositeState" combine="interleave">
    <ref name="CompositeStateAtts"/>
  </define>
  <!-- ========= ChangeEvent ========= -->
  <define name="ChangeEvent.changeExpression">
    <element name="ChangeEvent.changeExpression">
      <ref name="attlist.ChangeEvent.changeExpression"/>
      <zeroOrMore>
        <ref name="BooleanExpression"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ChangeEvent.changeExpression" combine="interleave">
    <empty/>
  </define>
  <define name="ChangeEventFeatures">
    <choice>
      <ref name="EventFeatures"/>
      <ref name="ChangeEvent.changeExpression"/>
    </choice>
  </define>
  <define name="ChangeEventAtts">
    <ref name="EventAtts"/>
  </define>
  <define name="ChangeEvent">
    <element name="ChangeEvent">
      <ref name="attlist.ChangeEvent"/>
      <zeroOrMore>
        <ref name="ChangeEventFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ChangeEvent" combine="interleave">
    <ref name="ChangeEventAtts"/>
  </define>
  <!-- ========= Guard ========= -->
  <define name="Guard.expression">
    <element name="Guard.expression">
      <ref name="attlist.Guard.expression"/>
      <zeroOrMore>
        <ref name="BooleanExpression"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Guard.expression" combine="interleave">
    <empty/>
  </define>
  <define name="Guard.transition">
    <element name="Guard.transition">
      <ref name="attlist.Guard.transition"/>
      <zeroOrMore>
        <ref name="Transition"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Guard.transition" combine="interleave">
    <empty/>
  </define>
  <define name="GuardFeatures">
    <choice>
      <ref name="ModelELEMENTFeatures"/>
      <ref name="Guard.expression"/>
      <ref name="Guard.transition"/>
    </choice>
  </define>
  <define name="GuardAtts">
    <ref name="ModelELEMENTAtts"/>
    <optional>
      <attribute name="transition">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Guard">
    <element name="Guard">
      <ref name="attlist.Guard"/>
      <zeroOrMore>
        <ref name="GuardFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Guard" combine="interleave">
    <ref name="GuardAtts"/>
  </define>
  <!-- ========= Pseudostate ========= -->
  <define name="Pseudostate.kind">
    <element name="Pseudostate.kind">
      <ref name="attlist.Pseudostate.kind"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.Pseudostate.kind" combine="interleave">
    <attribute name="xmi.value">
      <ref name="PseudostateKind"/>
    </attribute>
  </define>
  <define name="PseudostateFeatures">
    <choice>
      <ref name="StateVertexFeatures"/>
      <ref name="Pseudostate.kind"/>
    </choice>
  </define>
  <define name="PseudostateAtts">
    <ref name="StateVertexAtts"/>
    <optional>
      <attribute name="kind">
        <ref name="PseudostateKind"/>
      </attribute>
    </optional>
  </define>
  <define name="Pseudostate">
    <element name="Pseudostate">
      <ref name="attlist.Pseudostate"/>
      <zeroOrMore>
        <ref name="PseudostateFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Pseudostate" combine="interleave">
    <ref name="PseudostateAtts"/>
  </define>
  <!-- ========= SimpleState ========= -->
  <define name="SimpleStateFeatures">
    <ref name="StateFeatures"/>
  </define>
  <define name="SimpleStateAtts">
    <ref name="StateAtts"/>
  </define>
  <define name="SimpleState">
    <element name="SimpleState">
      <ref name="attlist.SimpleState"/>
      <zeroOrMore>
        <ref name="SimpleStateFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.SimpleState" combine="interleave">
    <ref name="SimpleStateAtts"/>
  </define>
  <!-- ========= SubmachineState ========= -->
  <define name="SubmachineState.submachine">
    <element name="SubmachineState.submachine">
      <ref name="attlist.SubmachineState.submachine"/>
      <zeroOrMore>
        <ref name="StateMachine"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.SubmachineState.submachine" combine="interleave">
    <empty/>
  </define>
  <define name="SubmachineStateFeatures">
    <choice>
      <ref name="CompositeStateFeatures"/>
      <ref name="SubmachineState.submachine"/>
    </choice>
  </define>
  <define name="SubmachineStateAtts">
    <ref name="CompositeStateAtts"/>
    <optional>
      <attribute name="submachine">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="SubmachineState">
    <element name="SubmachineState">
      <ref name="attlist.SubmachineState"/>
      <zeroOrMore>
        <ref name="SubmachineStateFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.SubmachineState" combine="interleave">
    <ref name="SubmachineStateAtts"/>
  </define>
  <!-- ========= SynchState ========= -->
  <define name="SynchState.bound">
    <element name="SynchState.bound">
      <ref name="attlist.SynchState.bound"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.SynchState.bound" combine="interleave">
    <empty/>
  </define>
  <define name="SynchStateFeatures">
    <choice>
      <ref name="StateVertexFeatures"/>
      <ref name="SynchState.bound"/>
    </choice>
  </define>
  <define name="SynchStateAtts">
    <ref name="StateVertexAtts"/>
    <optional>
      <attribute name="bound"/>
    </optional>
  </define>
  <define name="SynchState">
    <element name="SynchState">
      <ref name="attlist.SynchState"/>
      <zeroOrMore>
        <ref name="SynchStateFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.SynchState" combine="interleave">
    <ref name="SynchStateAtts"/>
  </define>
  <!-- ========= StubState ========= -->
  <define name="StubState.referenceState">
    <element name="StubState.referenceState">
      <ref name="attlist.StubState.referenceState"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.StubState.referenceState" combine="interleave">
    <empty/>
  </define>
  <define name="StubStateFeatures">
    <choice>
      <ref name="StateVertexFeatures"/>
      <ref name="StubState.referenceState"/>
    </choice>
  </define>
  <define name="StubStateAtts">
    <ref name="StateVertexAtts"/>
    <optional>
      <attribute name="referenceState"/>
    </optional>
  </define>
  <define name="StubState">
    <element name="StubState">
      <ref name="attlist.StubState"/>
      <zeroOrMore>
        <ref name="StubStateFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.StubState" combine="interleave">
    <ref name="StubStateAtts"/>
  </define>
  <!-- ========= FinalState ========= -->
  <define name="FinalStateFeatures">
    <ref name="StateFeatures"/>
  </define>
  <define name="FinalStateAtts">
    <ref name="StateAtts"/>
  </define>
  <define name="FinalState">
    <element name="FinalState">
      <ref name="attlist.FinalState"/>
      <zeroOrMore>
        <ref name="FinalStateFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.FinalState" combine="interleave">
    <ref name="FinalStateAtts"/>
  </define>
  <!-- ========= Collaborations ========= -->
  <!-- ========= Collaboration ========= -->
  <define name="Collaboration.interaction">
    <element name="Collaboration.interaction">
      <ref name="attlist.Collaboration.interaction"/>
      <zeroOrMore>
        <ref name="Interaction"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Collaboration.interaction" combine="interleave">
    <empty/>
  </define>
  <define name="Collaboration.representedClassifier">
    <element name="Collaboration.representedClassifier">
      <ref name="attlist.Collaboration.representedClassifier"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Collaboration.representedClassifier" combine="interleave">
    <empty/>
  </define>
  <define name="Collaboration.representedOperation">
    <element name="Collaboration.representedOperation">
      <ref name="attlist.Collaboration.representedOperation"/>
      <zeroOrMore>
        <ref name="Operation"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Collaboration.representedOperation" combine="interleave">
    <empty/>
  </define>
  <define name="Collaboration.constrainingELEMENT">
    <element name="Collaboration.constrainingELEMENT">
      <ref name="attlist.Collaboration.constrainingELEMENT"/>
      <zeroOrMore>
        <ref name="ModelELEMENT"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Collaboration.constrainingELEMENT" combine="interleave">
    <empty/>
  </define>
  <define name="Collaboration.usedCollaboration">
    <element name="Collaboration.usedCollaboration">
      <ref name="attlist.Collaboration.usedCollaboration"/>
      <zeroOrMore>
        <ref name="Collaboration"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Collaboration.usedCollaboration" combine="interleave">
    <empty/>
  </define>
  <define name="CollaborationFeatures">
    <choice>
      <ref name="GeneralizableELEMENTFeatures"/>
      <ref name="Namespace.ownedELEMENT"/>
      <ref name="Collaboration.interaction"/>
      <ref name="Collaboration.representedClassifier"/>
      <ref name="Collaboration.representedOperation"/>
      <ref name="Collaboration.constrainingELEMENT"/>
      <ref name="Collaboration.usedCollaboration"/>
    </choice>
  </define>
  <define name="CollaborationAtts">
    <ref name="GeneralizableELEMENTAtts"/>
    <optional>
      <attribute name="representedClassifier">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="representedOperation">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="constrainingELEMENT">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="usedCollaboration">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Collaboration">
    <element name="Collaboration">
      <ref name="attlist.Collaboration"/>
      <zeroOrMore>
        <ref name="CollaborationFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Collaboration" combine="interleave">
    <ref name="CollaborationAtts"/>
  </define>
  <!-- ========= ClassifierRole ========= -->
  <define name="ClassifierRole.multiplicity">
    <element name="ClassifierRole.multiplicity">
      <ref name="attlist.ClassifierRole.multiplicity"/>
      <zeroOrMore>
        <ref name="Multiplicity"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ClassifierRole.multiplicity" combine="interleave">
    <empty/>
  </define>
  <define name="ClassifierRole.base">
    <element name="ClassifierRole.base">
      <ref name="attlist.ClassifierRole.base"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ClassifierRole.base" combine="interleave">
    <empty/>
  </define>
  <define name="ClassifierRole.availableFeature">
    <element name="ClassifierRole.availableFeature">
      <ref name="attlist.ClassifierRole.availableFeature"/>
      <zeroOrMore>
        <ref name="Feature"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ClassifierRole.availableFeature" combine="interleave">
    <empty/>
  </define>
  <define name="ClassifierRole.availableContents">
    <element name="ClassifierRole.availableContents">
      <ref name="attlist.ClassifierRole.availableContents"/>
      <zeroOrMore>
        <ref name="ModelELEMENT"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ClassifierRole.availableContents" combine="interleave">
    <empty/>
  </define>
  <define name="ClassifierRole.conformingInstance">
    <element name="ClassifierRole.conformingInstance">
      <ref name="attlist.ClassifierRole.conformingInstance"/>
      <zeroOrMore>
        <ref name="Instance"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ClassifierRole.conformingInstance" combine="interleave">
    <empty/>
  </define>
  <define name="ClassifierRoleFeatures">
    <choice>
      <ref name="ClassifierFeatures"/>
      <ref name="ClassifierRole.multiplicity"/>
      <ref name="ClassifierRole.base"/>
      <ref name="ClassifierRole.availableFeature"/>
      <ref name="ClassifierRole.availableContents"/>
      <ref name="ClassifierRole.conformingInstance"/>
    </choice>
  </define>
  <define name="ClassifierRoleAtts">
    <ref name="ClassifierAtts"/>
    <optional>
      <attribute name="base">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="availableFeature">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="availableContents">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="conformingInstance">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="ClassifierRole">
    <element name="ClassifierRole">
      <ref name="attlist.ClassifierRole"/>
      <zeroOrMore>
        <ref name="ClassifierRoleFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ClassifierRole" combine="interleave">
    <ref name="ClassifierRoleAtts"/>
  </define>
  <!-- ========= AssociationRole ========= -->
  <define name="AssociationRole.multiplicity">
    <element name="AssociationRole.multiplicity">
      <ref name="attlist.AssociationRole.multiplicity"/>
      <zeroOrMore>
        <ref name="Multiplicity"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationRole.multiplicity" combine="interleave">
    <empty/>
  </define>
  <define name="AssociationRole.base">
    <element name="AssociationRole.base">
      <ref name="attlist.AssociationRole.base"/>
      <zeroOrMore>
        <ref name="Association"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationRole.base" combine="interleave">
    <empty/>
  </define>
  <define name="AssociationRole.message">
    <element name="AssociationRole.message">
      <ref name="attlist.AssociationRole.message"/>
      <zeroOrMore>
        <ref name="Message"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationRole.message" combine="interleave">
    <empty/>
  </define>
  <define name="AssociationRole.conformingLink">
    <element name="AssociationRole.conformingLink">
      <ref name="attlist.AssociationRole.conformingLink"/>
      <zeroOrMore>
        <ref name="Link"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationRole.conformingLink" combine="interleave">
    <empty/>
  </define>
  <define name="AssociationRoleFeatures">
    <choice>
      <ref name="AssociationFeatures"/>
      <ref name="AssociationRole.multiplicity"/>
      <ref name="AssociationRole.base"/>
      <ref name="AssociationRole.message"/>
      <ref name="AssociationRole.conformingLink"/>
    </choice>
  </define>
  <define name="AssociationRoleAtts">
    <ref name="AssociationAtts"/>
    <optional>
      <attribute name="base">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="message">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="conformingLink">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="AssociationRole">
    <element name="AssociationRole">
      <ref name="attlist.AssociationRole"/>
      <zeroOrMore>
        <ref name="AssociationRoleFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationRole" combine="interleave">
    <ref name="AssociationRoleAtts"/>
  </define>
  <!-- ========= AssociationEndRole ========= -->
  <define name="AssociationEndRole.collaborationMultiplicity">
    <element name="AssociationEndRole.collaborationMultiplicity">
      <ref name="attlist.AssociationEndRole.collaborationMultiplicity"/>
      <zeroOrMore>
        <ref name="Multiplicity"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationEndRole.collaborationMultiplicity" combine="interleave">
    <empty/>
  </define>
  <define name="AssociationEndRole.base">
    <element name="AssociationEndRole.base">
      <ref name="attlist.AssociationEndRole.base"/>
      <zeroOrMore>
        <ref name="AssociationEnd"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationEndRole.base" combine="interleave">
    <empty/>
  </define>
  <define name="AssociationEndRole.availableQualifier">
    <element name="AssociationEndRole.availableQualifier">
      <ref name="attlist.AssociationEndRole.availableQualifier"/>
      <zeroOrMore>
        <ref name="Attribute"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationEndRole.availableQualifier" combine="interleave">
    <empty/>
  </define>
  <define name="AssociationEndRoleFeatures">
    <choice>
      <ref name="AssociationEndFeatures"/>
      <ref name="AssociationEndRole.collaborationMultiplicity"/>
      <ref name="AssociationEndRole.base"/>
      <ref name="AssociationEndRole.availableQualifier"/>
    </choice>
  </define>
  <define name="AssociationEndRoleAtts">
    <ref name="AssociationEndAtts"/>
    <optional>
      <attribute name="base">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="availableQualifier">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="AssociationEndRole">
    <element name="AssociationEndRole">
      <ref name="attlist.AssociationEndRole"/>
      <zeroOrMore>
        <ref name="AssociationEndRoleFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.AssociationEndRole" combine="interleave">
    <ref name="AssociationEndRoleAtts"/>
  </define>
  <!-- ========= Message ========= -->
  <define name="Message.interaction">
    <element name="Message.interaction">
      <ref name="attlist.Message.interaction"/>
      <zeroOrMore>
        <ref name="Interaction"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Message.interaction" combine="interleave">
    <empty/>
  </define>
  <define name="Message.activator">
    <element name="Message.activator">
      <ref name="attlist.Message.activator"/>
      <zeroOrMore>
        <ref name="Message"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Message.activator" combine="interleave">
    <empty/>
  </define>
  <define name="Message.sender">
    <element name="Message.sender">
      <ref name="attlist.Message.sender"/>
      <zeroOrMore>
        <ref name="ClassifierRole"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Message.sender" combine="interleave">
    <empty/>
  </define>
  <define name="Message.receiver">
    <element name="Message.receiver">
      <ref name="attlist.Message.receiver"/>
      <zeroOrMore>
        <ref name="ClassifierRole"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Message.receiver" combine="interleave">
    <empty/>
  </define>
  <define name="Message.predecessor">
    <element name="Message.predecessor">
      <ref name="attlist.Message.predecessor"/>
      <zeroOrMore>
        <ref name="Message"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Message.predecessor" combine="interleave">
    <empty/>
  </define>
  <define name="Message.communicationConnection">
    <element name="Message.communicationConnection">
      <ref name="attlist.Message.communicationConnection"/>
      <zeroOrMore>
        <ref name="AssociationRole"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Message.communicationConnection" combine="interleave">
    <empty/>
  </define>
  <define name="Message.action">
    <element name="Message.action">
      <ref name="attlist.Message.action"/>
      <zeroOrMore>
        <ref name="Action"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Message.action" combine="interleave">
    <empty/>
  </define>
  <define name="Message.conformingStimulus">
    <element name="Message.conformingStimulus">
      <ref name="attlist.Message.conformingStimulus"/>
      <zeroOrMore>
        <ref name="Stimulus"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Message.conformingStimulus" combine="interleave">
    <empty/>
  </define>
  <define name="MessageFeatures">
    <choice>
      <ref name="ModelELEMENTFeatures"/>
      <ref name="Message.interaction"/>
      <ref name="Message.activator"/>
      <ref name="Message.sender"/>
      <ref name="Message.receiver"/>
      <ref name="Message.predecessor"/>
      <ref name="Message.communicationConnection"/>
      <ref name="Message.action"/>
      <ref name="Message.conformingStimulus"/>
    </choice>
  </define>
  <define name="MessageAtts">
    <ref name="ModelELEMENTAtts"/>
    <optional>
      <attribute name="interaction">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="activator">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="sender">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="receiver">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="predecessor">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="communicationConnection">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="action">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="conformingStimulus">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Message">
    <element name="Message">
      <ref name="attlist.Message"/>
      <zeroOrMore>
        <ref name="MessageFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Message" combine="interleave">
    <ref name="MessageAtts"/>
  </define>
  <!-- ========= Interaction ========= -->
  <define name="Interaction.message">
    <element name="Interaction.message">
      <ref name="attlist.Interaction.message"/>
      <zeroOrMore>
        <ref name="Message"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Interaction.message" combine="interleave">
    <empty/>
  </define>
  <define name="Interaction.context">
    <element name="Interaction.context">
      <ref name="attlist.Interaction.context"/>
      <zeroOrMore>
        <ref name="Collaboration"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Interaction.context" combine="interleave">
    <empty/>
  </define>
  <define name="InteractionFeatures">
    <choice>
      <ref name="ModelELEMENTFeatures"/>
      <ref name="Interaction.message"/>
      <ref name="Interaction.context"/>
    </choice>
  </define>
  <define name="InteractionAtts">
    <ref name="ModelELEMENTAtts"/>
    <optional>
      <attribute name="context">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Interaction">
    <element name="Interaction">
      <ref name="attlist.Interaction"/>
      <zeroOrMore>
        <ref name="InteractionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Interaction" combine="interleave">
    <ref name="InteractionAtts"/>
  </define>
  <!-- ========= InteractionInstanceSet ========= -->
  <define name="InteractionInstanceSet.context">
    <element name="InteractionInstanceSet.context">
      <ref name="attlist.InteractionInstanceSet.context"/>
      <zeroOrMore>
        <ref name="CollaborationInstanceSet"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.InteractionInstanceSet.context" combine="interleave">
    <empty/>
  </define>
  <define name="InteractionInstanceSet.interaction">
    <element name="InteractionInstanceSet.interaction">
      <ref name="attlist.InteractionInstanceSet.interaction"/>
      <zeroOrMore>
        <ref name="Interaction"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.InteractionInstanceSet.interaction" combine="interleave">
    <empty/>
  </define>
  <define name="InteractionInstanceSet.participatingStimulus">
    <element name="InteractionInstanceSet.participatingStimulus">
      <ref name="attlist.InteractionInstanceSet.participatingStimulus"/>
      <zeroOrMore>
        <ref name="Stimulus"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.InteractionInstanceSet.participatingStimulus" combine="interleave">
    <empty/>
  </define>
  <define name="InteractionInstanceSetFeatures">
    <choice>
      <ref name="ModelELEMENTFeatures"/>
      <ref name="InteractionInstanceSet.context"/>
      <ref name="InteractionInstanceSet.interaction"/>
      <ref name="InteractionInstanceSet.participatingStimulus"/>
    </choice>
  </define>
  <define name="InteractionInstanceSetAtts">
    <ref name="ModelELEMENTAtts"/>
    <optional>
      <attribute name="context">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="interaction">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="participatingStimulus">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="InteractionInstanceSet">
    <element name="InteractionInstanceSet">
      <ref name="attlist.InteractionInstanceSet"/>
      <zeroOrMore>
        <ref name="InteractionInstanceSetFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.InteractionInstanceSet" combine="interleave">
    <ref name="InteractionInstanceSetAtts"/>
  </define>
  <!-- ========= CollaborationInstanceSet ========= -->
  <define name="CollaborationInstanceSet.interactionInstanceSet">
    <element name="CollaborationInstanceSet.interactionInstanceSet">
      <ref name="attlist.CollaborationInstanceSet.interactionInstanceSet"/>
      <zeroOrMore>
        <ref name="InteractionInstanceSet"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CollaborationInstanceSet.interactionInstanceSet" combine="interleave">
    <empty/>
  </define>
  <define name="CollaborationInstanceSet.collaboration">
    <element name="CollaborationInstanceSet.collaboration">
      <ref name="attlist.CollaborationInstanceSet.collaboration"/>
      <zeroOrMore>
        <ref name="Collaboration"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CollaborationInstanceSet.collaboration" combine="interleave">
    <empty/>
  </define>
  <define name="CollaborationInstanceSet.participatingInstance">
    <element name="CollaborationInstanceSet.participatingInstance">
      <ref name="attlist.CollaborationInstanceSet.participatingInstance"/>
      <zeroOrMore>
        <ref name="Instance"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CollaborationInstanceSet.participatingInstance" combine="interleave">
    <empty/>
  </define>
  <define name="CollaborationInstanceSet.participatingLink">
    <element name="CollaborationInstanceSet.participatingLink">
      <ref name="attlist.CollaborationInstanceSet.participatingLink"/>
      <zeroOrMore>
        <ref name="Link"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CollaborationInstanceSet.participatingLink" combine="interleave">
    <empty/>
  </define>
  <define name="CollaborationInstanceSet.constrainingELEMENT">
    <element name="CollaborationInstanceSet.constrainingELEMENT">
      <ref name="attlist.CollaborationInstanceSet.constrainingELEMENT"/>
      <zeroOrMore>
        <ref name="ModelELEMENT"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CollaborationInstanceSet.constrainingELEMENT" combine="interleave">
    <empty/>
  </define>
  <define name="CollaborationInstanceSetFeatures">
    <choice>
      <ref name="ModelELEMENTFeatures"/>
      <ref name="CollaborationInstanceSet.interactionInstanceSet"/>
      <ref name="CollaborationInstanceSet.collaboration"/>
      <ref name="CollaborationInstanceSet.participatingInstance"/>
      <ref name="CollaborationInstanceSet.participatingLink"/>
      <ref name="CollaborationInstanceSet.constrainingELEMENT"/>
    </choice>
  </define>
  <define name="CollaborationInstanceSetAtts">
    <ref name="ModelELEMENTAtts"/>
    <optional>
      <attribute name="collaboration">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="participatingInstance">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="participatingLink">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="constrainingELEMENT">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="CollaborationInstanceSet">
    <element name="CollaborationInstanceSet">
      <ref name="attlist.CollaborationInstanceSet"/>
      <zeroOrMore>
        <ref name="CollaborationInstanceSetFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CollaborationInstanceSet" combine="interleave">
    <ref name="CollaborationInstanceSetAtts"/>
  </define>
  <!-- ========= Activity_Graphs ========= -->
  <!-- ========= ActivityGraph ========= -->
  <define name="ActivityGraph.partition">
    <element name="ActivityGraph.partition">
      <ref name="attlist.ActivityGraph.partition"/>
      <zeroOrMore>
        <ref name="Partition"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ActivityGraph.partition" combine="interleave">
    <empty/>
  </define>
  <define name="ActivityGraphFeatures">
    <choice>
      <ref name="StateMachineFeatures"/>
      <ref name="ActivityGraph.partition"/>
    </choice>
  </define>
  <define name="ActivityGraphAtts">
    <ref name="StateMachineAtts"/>
  </define>
  <define name="ActivityGraph">
    <element name="ActivityGraph">
      <ref name="attlist.ActivityGraph"/>
      <zeroOrMore>
        <ref name="ActivityGraphFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ActivityGraph" combine="interleave">
    <ref name="ActivityGraphAtts"/>
  </define>
  <!-- ========= Partition ========= -->
  <define name="Partition.contents">
    <element name="Partition.contents">
      <ref name="attlist.Partition.contents"/>
      <zeroOrMore>
        <ref name="ModelELEMENT"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Partition.contents" combine="interleave">
    <empty/>
  </define>
  <define name="Partition.activityGraph">
    <element name="Partition.activityGraph">
      <ref name="attlist.Partition.activityGraph"/>
      <zeroOrMore>
        <ref name="ActivityGraph"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Partition.activityGraph" combine="interleave">
    <empty/>
  </define>
  <define name="PartitionFeatures">
    <choice>
      <ref name="ModelELEMENTFeatures"/>
      <ref name="Partition.contents"/>
      <ref name="Partition.activityGraph"/>
    </choice>
  </define>
  <define name="PartitionAtts">
    <ref name="ModelELEMENTAtts"/>
    <optional>
      <attribute name="contents">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="activityGraph">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="Partition">
    <element name="Partition">
      <ref name="attlist.Partition"/>
      <zeroOrMore>
        <ref name="PartitionFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Partition" combine="interleave">
    <ref name="PartitionAtts"/>
  </define>
  <!-- ========= SubactivityState ========= -->
  <define name="SubactivityState.isDynamic">
    <element name="SubactivityState.isDynamic">
      <ref name="attlist.SubactivityState.isDynamic"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.SubactivityState.isDynamic" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="SubactivityState.dynamicArguments">
    <element name="SubactivityState.dynamicArguments">
      <ref name="attlist.SubactivityState.dynamicArguments"/>
      <zeroOrMore>
        <ref name="ArgListsExpression"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.SubactivityState.dynamicArguments" combine="interleave">
    <empty/>
  </define>
  <define name="SubactivityState.dynamicMultiplicity">
    <element name="SubactivityState.dynamicMultiplicity">
      <ref name="attlist.SubactivityState.dynamicMultiplicity"/>
      <zeroOrMore>
        <ref name="Multiplicity"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.SubactivityState.dynamicMultiplicity" combine="interleave">
    <empty/>
  </define>
  <define name="SubactivityStateFeatures">
    <choice>
      <ref name="SubmachineStateFeatures"/>
      <ref name="SubactivityState.isDynamic"/>
      <ref name="SubactivityState.dynamicArguments"/>
      <ref name="SubactivityState.dynamicMultiplicity"/>
    </choice>
  </define>
  <define name="SubactivityStateAtts">
    <ref name="SubmachineStateAtts"/>
    <optional>
      <attribute name="isDynamic">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="SubactivityState">
    <element name="SubactivityState">
      <ref name="attlist.SubactivityState"/>
      <zeroOrMore>
        <ref name="SubactivityStateFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.SubactivityState" combine="interleave">
    <ref name="SubactivityStateAtts"/>
  </define>
  <!-- ========= ActionState ========= -->
  <define name="ActionState.isDynamic">
    <element name="ActionState.isDynamic">
      <ref name="attlist.ActionState.isDynamic"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.ActionState.isDynamic" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="ActionState.dynamicArguments">
    <element name="ActionState.dynamicArguments">
      <ref name="attlist.ActionState.dynamicArguments"/>
      <zeroOrMore>
        <ref name="ArgListsExpression"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ActionState.dynamicArguments" combine="interleave">
    <empty/>
  </define>
  <define name="ActionState.dynamicMultiplicity">
    <element name="ActionState.dynamicMultiplicity">
      <ref name="attlist.ActionState.dynamicMultiplicity"/>
      <zeroOrMore>
        <ref name="Multiplicity"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ActionState.dynamicMultiplicity" combine="interleave">
    <empty/>
  </define>
  <define name="ActionStateFeatures">
    <choice>
      <ref name="SimpleStateFeatures"/>
      <ref name="ActionState.isDynamic"/>
      <ref name="ActionState.dynamicArguments"/>
      <ref name="ActionState.dynamicMultiplicity"/>
    </choice>
  </define>
  <define name="ActionStateAtts">
    <ref name="SimpleStateAtts"/>
    <optional>
      <attribute name="isDynamic">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="ActionState">
    <element name="ActionState">
      <ref name="attlist.ActionState"/>
      <zeroOrMore>
        <ref name="ActionStateFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ActionState" combine="interleave">
    <ref name="ActionStateAtts"/>
  </define>
  <!-- ========= CallState ========= -->
  <define name="CallStateFeatures">
    <ref name="ActionStateFeatures"/>
  </define>
  <define name="CallStateAtts">
    <ref name="ActionStateAtts"/>
  </define>
  <define name="CallState">
    <element name="CallState">
      <ref name="attlist.CallState"/>
      <zeroOrMore>
        <ref name="CallStateFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.CallState" combine="interleave">
    <ref name="CallStateAtts"/>
  </define>
  <!-- ========= ObjectFlowState ========= -->
  <define name="ObjectFlowState.isSynch">
    <element name="ObjectFlowState.isSynch">
      <ref name="attlist.ObjectFlowState.isSynch"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.ObjectFlowState.isSynch" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="ObjectFlowState.parameter">
    <element name="ObjectFlowState.parameter">
      <ref name="attlist.ObjectFlowState.parameter"/>
      <zeroOrMore>
        <ref name="Parameter"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ObjectFlowState.parameter" combine="interleave">
    <empty/>
  </define>
  <define name="ObjectFlowState.type">
    <element name="ObjectFlowState.type">
      <ref name="attlist.ObjectFlowState.type"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ObjectFlowState.type" combine="interleave">
    <empty/>
  </define>
  <define name="ObjectFlowStateFeatures">
    <choice>
      <ref name="SimpleStateFeatures"/>
      <ref name="ObjectFlowState.isSynch"/>
      <ref name="ObjectFlowState.parameter"/>
      <ref name="ObjectFlowState.type"/>
    </choice>
  </define>
  <define name="ObjectFlowStateAtts">
    <ref name="SimpleStateAtts"/>
    <optional>
      <attribute name="isSynch">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="parameter">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="type">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="ObjectFlowState">
    <element name="ObjectFlowState">
      <ref name="attlist.ObjectFlowState"/>
      <zeroOrMore>
        <ref name="ObjectFlowStateFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ObjectFlowState" combine="interleave">
    <ref name="ObjectFlowStateAtts"/>
  </define>
  <!-- ========= ClassifierInState ========= -->
  <define name="ClassifierInState.type">
    <element name="ClassifierInState.type">
      <ref name="attlist.ClassifierInState.type"/>
      <zeroOrMore>
        <ref name="Classifier"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ClassifierInState.type" combine="interleave">
    <empty/>
  </define>
  <define name="ClassifierInState.inState">
    <element name="ClassifierInState.inState">
      <ref name="attlist.ClassifierInState.inState"/>
      <zeroOrMore>
        <ref name="State"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ClassifierInState.inState" combine="interleave">
    <empty/>
  </define>
  <define name="ClassifierInStateFeatures">
    <choice>
      <ref name="ClassifierFeatures"/>
      <ref name="ClassifierInState.type"/>
      <ref name="ClassifierInState.inState"/>
    </choice>
  </define>
  <define name="ClassifierInStateAtts">
    <ref name="ClassifierAtts"/>
    <optional>
      <attribute name="type">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="inState">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="ClassifierInState">
    <element name="ClassifierInState">
      <ref name="attlist.ClassifierInState"/>
      <zeroOrMore>
        <ref name="ClassifierInStateFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ClassifierInState" combine="interleave">
    <ref name="ClassifierInStateAtts"/>
  </define>
  <!-- ========= Model_Management ========= -->
  <!-- ========= Package ========= -->
  <define name="Package.ELEMENTImport">
    <element name="Package.ELEMENTImport">
      <ref name="attlist.Package.ELEMENTImport"/>
      <zeroOrMore>
        <ref name="ELEMENTImport"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Package.ELEMENTImport" combine="interleave">
    <empty/>
  </define>
  <define name="PackageFeatures">
    <choice>
      <ref name="GeneralizableELEMENTFeatures"/>
      <ref name="Namespace.ownedELEMENT"/>
      <ref name="Package.ELEMENTImport"/>
    </choice>
  </define>
  <define name="PackageAtts">
    <ref name="GeneralizableELEMENTAtts"/>
  </define>
  <define name="Package">
    <element name="Package">
      <ref name="attlist.Package"/>
      <zeroOrMore>
        <ref name="PackageFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Package" combine="interleave">
    <ref name="PackageAtts"/>
  </define>
  <!-- ========= Model ========= -->
  <define name="ModelFeatures">
    <ref name="PackageFeatures"/>
  </define>
  <define name="ModelAtts">
    <ref name="PackageAtts"/>
  </define>
  <define name="Model">
    <element name="Model">
      <ref name="attlist.Model"/>
      <zeroOrMore>
        <ref name="ModelFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Model" combine="interleave">
    <ref name="ModelAtts"/>
  </define>
  <!-- ========= Subsystem ========= -->
  <define name="Subsystem.isInstantiable">
    <element name="Subsystem.isInstantiable">
      <ref name="attlist.Subsystem.isInstantiable"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.Subsystem.isInstantiable" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="SubsystemFeatures">
    <choice>
      <ref name="PackageFeatures"/>
      <ref name="Classifier.feature"/>
      <ref name="Classifier.powertypeRange"/>
      <ref name="Subsystem.isInstantiable"/>
    </choice>
  </define>
  <define name="SubsystemAtts">
    <ref name="PackageAtts"/>
    <optional>
      <attribute name="powertypeRange">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="isInstantiable">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="Subsystem">
    <element name="Subsystem">
      <ref name="attlist.Subsystem"/>
      <zeroOrMore>
        <ref name="SubsystemFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.Subsystem" combine="interleave">
    <ref name="SubsystemAtts"/>
  </define>
  <!-- ========= ELEMENTImport ========= -->
  <define name="ELEMENTImport.visibility">
    <element name="ELEMENTImport.visibility">
      <ref name="attlist.ELEMENTImport.visibility"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.ELEMENTImport.visibility" combine="interleave">
    <attribute name="xmi.value">
      <ref name="VisibilityKind"/>
    </attribute>
  </define>
  <define name="ELEMENTImport.alias">
    <element name="ELEMENTImport.alias">
      <ref name="attlist.ELEMENTImport.alias"/>
      <zeroOrMore>
        <choice>
          <text/>
          <ref name="XMI.reference"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ELEMENTImport.alias" combine="interleave">
    <empty/>
  </define>
  <define name="ELEMENTImport.isSpecification">
    <element name="ELEMENTImport.isSpecification">
      <ref name="attlist.ELEMENTImport.isSpecification"/>
      <empty/>
    </element>
  </define>
  <define name="attlist.ELEMENTImport.isSpecification" combine="interleave">
    <attribute name="xmi.value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="ELEMENTImport.package">
    <element name="ELEMENTImport.package">
      <ref name="attlist.ELEMENTImport.package"/>
      <zeroOrMore>
        <ref name="Package"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ELEMENTImport.package" combine="interleave">
    <empty/>
  </define>
  <define name="ELEMENTImport.importedELEMENT">
    <element name="ELEMENTImport.importedELEMENT">
      <ref name="attlist.ELEMENTImport.importedELEMENT"/>
      <zeroOrMore>
        <ref name="ModelELEMENT"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ELEMENTImport.importedELEMENT" combine="interleave">
    <empty/>
  </define>
  <define name="ELEMENTImportFeatures">
    <choice>
      <ref name="XMI.extension"/>
      <ref name="ELEMENTImport.visibility"/>
      <ref name="ELEMENTImport.alias"/>
      <ref name="ELEMENTImport.isSpecification"/>
      <ref name="ELEMENTImport.package"/>
      <ref name="ELEMENTImport.importedELEMENT"/>
    </choice>
  </define>
  <define name="ELEMENTImportAtts">
    <ref name="XMI.ELEMENT.att"/>
    <optional>
      <attribute name="visibility">
        <ref name="VisibilityKind"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="alias"/>
    </optional>
    <optional>
      <attribute name="isSpecification">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="package">
        <data type="IDREFS"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="importedELEMENT">
        <data type="IDREFS"/>
      </attribute>
    </optional>
  </define>
  <define name="ELEMENTImport">
    <element name="ELEMENTImport">
      <ref name="attlist.ELEMENTImport"/>
      <zeroOrMore>
        <ref name="ELEMENTImportFeatures"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.ELEMENTImport" combine="interleave">
    <ref name="ELEMENTImportAtts"/>
  </define>
  <define name="any">
    <zeroOrMore>
      <choice>
        <element>
          <anyName/>
          <zeroOrMore>
            <attribute>
              <anyName/>
            </attribute>
          </zeroOrMore>
          <ref name="any"/>
        </element>
        <text/>
      </choice>
    </zeroOrMore>
  </define>
</grammar>
<!-- ========= UML ========= -->
