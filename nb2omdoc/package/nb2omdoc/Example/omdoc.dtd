<!--
   An XML Document Type Definition for the Open Mathematical documents
   in the OMDoc format (Version 1.1)
   Initial Version: Michael Kohlhase 1999-09-07
   URL: http://www.mathweb.org/omdoc/omdoc.dtd (current released version)
   URL: http://www.mathweb.org/omdoc/dtd/omdoc.dtd (current experimental)
   URL: http://www.mathweb.org/omdoc/dtd/omdoc*.dtd (old)
   This DTD is still experimental, it is intended as a basis for discussion.
   Comments are welcome! (send mail to kohlhase@mathweb.org)
   See the documentation and examples at http://www.mathweb.org/omdoc mainly
   [1] http://www.matwheb.org/omdoc/omdoc.{ps,pdf}
   (c) 1999-2002 Michael Kohlhase, released under the GNU Public License
-->

<!-- ====================== ENTITIES ======================= --> 
<!-- we define some entities for modularization, these can be 
     re-defined in  the local subset of the DTD. -->

<!-- we allow OpenMath objects as mathematical objects -->
<!ENTITY % mobj "OMOBJ">

<!ENTITY % omdocns "xmlns CDATA #FIXED 'http://www.mathweb.org/omdoc'
                    xmlns:xsi CDATA 'http://www.w3.org/2001/XMLSchema-instance' 
                    xsi:schemaLocation CDATA 'http://www.mathweb.org/omdoc
                                              http://www.mathweb.org/omdoc/xsd/omdoc.xsd'">
<!-- this namespace declaration also needs to go into all the elements 
     that do not inherit from the top-level omdoc elements 
     e.g. those in %inCMP; -->

<!ENTITY % theoryNSD "">
<!-- the namespace declaration attributes to be added to the omdoc element
     this entity should be redefined in the internal subset -->

<!-- what goes into a CMP element -->
<!ENTITY % alsoinCMP "">
<!ENTITY % inCMP "#PCDATA|%mobj;|omlet|with|ref|ignore%alsoinCMP;">
<!-- Persons in Dublin Core Metadata -->
<!ENTITY % DCperson "(#PCDATA)">
<!-- the date format in Dublin Core -->
<!ENTITY % DCdate "(#PCDATA)">
<!-- the identifier format for Dublin Core -->
<!ENTITY % DCident "(#PCDATA)">
<!-- the rest of Dublin Core content -->
<!ENTITY % DCrest "ANY">
<!-- any form of extra metadata -->
<!ENTITY % extrameta "EMPTY">

<!-- then define a couple of useful abbreviations, these are not 
     intended for re-definition.  -->

<!ENTITY % midmatter "mid CDATA #IMPLIED">
<!-- attribute mid is an URIref, pointing to the MBase identifier 
     of the element -->


<!-- we do not define the id attribute to be of type ID as one 
     would expect,since we only want them to be unique in a theory, 
     and we want still to be able to concatenate OMDoc files -->
<!ENTITY % idmatter "id CDATA #REQUIRED 
                     style NMTOKEN #IMPLIED
                     %midmatter;">
<!ENTITY % idimatter "id CDATA #IMPLIED 
                      style NMTOKEN #IMPLIED
                      %midmatter;">

<!ENTITY % idgmatter "%idmatter; generated-by CDATA #IMPLIED">
<!ENTITY % idrefmatter "%idmatter; for CDATA #REQUIRED">
<!-- attribute for is an URIref -->

<!ENTITY % insymbolmatter '%idmatter;
                           kind (type|sort|object) "object"
          		   scope (global|local) "global"'>

<!--    The current XML-recommendation doesn't yet support the 
        three-letter short names for languages (ISO 693-2). So 
        the following section will be using the two-letter 
        (ISO 693-1) encoding for the languages.

	en : English,	de : German,	fr : French,
	la : Latin, 	it : Italian, 	nl : Dutch,
	ru : Russian,	pl : Polish,	es : Spanish,
	tr : Turkish,	zh : Chinese,	ja : Japanese,
	ko : Korean     ...                     -->
<!ENTITY % ISO639 "(aa|ab|af|am|ar|as|ay|az|ba|be|bg|bh|bi|bn|bo|br|ca|co|
                    cs|cy|da|de|dz|el|en|eo|es|et|eu|fa|fi|fj|fo|fr|fy|ga|
                    gd|gl|gn|gu|ha|he|hi|hr|hu|hy|ia|ie|ik|id|is|it|iu|ja|
                    jv|ka|kk|kl|km|kn|ko|ks|ku|ky|la|ln|lo|lt|lv|mg|mi|mk|
                    ml|mn|mo|mr|ms|mt|my|na|ne|nl|no|oc|om|or|pa|pl|ps|pt|
                    qu|rm|rn|ro|ru|rw|sa|sd|sg|sh|si|sk|sl|sm|sn|so|sq|sr|
                    ss|st|su|sv|sw|ta|te|tg|th|ti|tk|tl|tn|to|tr|ts|tt|tw|
                    ug|uk|ur|uz|vi|vo|wo|xh|yi|yo|za|zh|zu)">

<!ENTITY % langmatter "xml:lang %ISO639; 'en'">

<!ENTITY % frommatter	 "%idmatter; from CDATA #REQUIRED">
<!ENTITY % fromtomatter	 "%frommatter; to CDATA #REQUIRED">  
<!-- attributes 'to' and 'from' are URIref -->

<!ENTITY % otheromtexttype "">
<!ENTITY % omtexttype "abstract|introduction|conclusion|thesis|
                       antithesis|elaboration|motivation|evidence
                       |note|annote%otheromtexttype;">

<!ENTITY % otheromgrouptype "">
<!ENTITY % omgrouptype "enumeration|sequence|itemize|narrative|
                        dataset|labeled-dataset|
                        theory-collection%otheromgrouptype;">

<!ENTITY % cm "metadata?,CMP*">
<!ENTITY % cfm	 "(metadata?,symbol*,CMP*,FMP?)">
<!ENTITY % otherassertiontype "">
<!ENTITY % assertiontype "(theorem|lemma|corollary|conjecture|
                           false-conjecture|obligation|postulate|
                           formula|assumption|proposition
                           %otherassertiontype;)">
<!ENTITY % otherdefinitiontype "">
<!ENTITY % definitiontype "(simple|inductive|implicit|recursive|obj
                           %otherdefinitiontype;)">

<!ENTITY % intheory-mathitem "type|assertion|alternative|example|proof|proofobject">
<!ENTITY % other-mathitem "theory-inclusion|decomposition|axiom-inclusion">
<!ENTITY % auxitem "exercise|solution|omlet|private|code|presentation|omstyle">
<!ENTITY % onlyintheoryitem "symbol|axiom|definition|adt|imports|inclusion">
<!ENTITY % otheromdocitem "">
<!ENTITY % intheory-omdocitem "omtext|%intheory-mathitem;|%auxitem;|theory|omgroup|ignore|ref
                      %otheromdocitem;">
<!ENTITY % omdocitem "%intheory-omdocitem;|%other-mathitem;">
<!ENTITY % intheoryitem "%onlyintheoryitem;|%intheory-omdocitem;">

<!-- ============= Document Structure [1; sec 2.2] ================ --> 

<!ELEMENT omdoc (metadata?,catalogue?,(%omdocitem;)+)>
<!ATTLIST omdoc %idmatter; %omdocns; %theoryNSD;
                type (%omgrouptype;) #IMPLIED
		catalogue CDATA #IMPLIED
		version CDATA #FIXED "1.1">

<!ELEMENT catalogue (loc)*>

<!ELEMENT loc EMPTY>
<!ATTLIST loc theory NMTOKEN #REQUIRED
              omdoc CDATA #IMPLIED
              cd CDATA #IMPLIED>
<!-- omdoc attributes omdoc and cd are URIRefs pointing to the omdoc 
     and/or the OpenMath content dictionary defining this theory -->

<!ELEMENT omtext (metadata?,CMP+,FMP?)>
<!ATTLIST omtext %idmatter;
                 type (%omtexttype;) #IMPLIED
                 for CDATA #IMPLIED>  
<!-- attribute 'for' is a URIref, to %omdocitem;s 
     it is needed by the 'type' attribute-->
                     
<!ELEMENT CMP (%inCMP;)*>
<!ATTLIST CMP %langmatter;>

<!ELEMENT with (%inCMP;)*>
<!ATTLIST with id ID #IMPLIED
               style NMTOKEN #IMPLIED 
               %omdocns;>
<!-- identifies a text passage and 
     allows to attatch style information to it -->

<!-- grouping defines the structure of a document-->
<!ELEMENT omgroup (metadata?,(%intheoryitem;)*)>
<!ATTLIST omgroup %idimatter;
                  type (%omgrouptype;) #IMPLIED>

<!-- co-referencing  allows to use elements with an 
     'id' attribute multiple times -->
<!ELEMENT ref EMPTY>
<!ATTLIST ref xref CDATA #REQUIRED
   	      type NMTOKEN "include">
<!-- the types supported (there may be more over time) are 
     - 'include' (the default) for in-text replacement 
     - 'cite' for a reference with a generated label -->

<!-- ======= math Statements [1; sec 3.1] =================== --> 

<!ELEMENT symbol (metadata?, CMP*,(commonname|type|selector)*)>
<!ATTLIST symbol %insymbolmatter;
                 generated-by CDATA #IMPLIED>

<!ELEMENT commonname (%inCMP;)*>
<!ATTLIST commonname %langmatter;
                     %midmatter;>

<!ELEMENT type (CMP*,%mobj;)>
<!ATTLIST type %idimatter; 
               for CDATA #IMPLIED
               system NMTOKEN #REQUIRED>

<!ELEMENT FMP ((assumption*,conclusion*)|%mobj;)> 
<!ATTLIST FMP logic NMTOKEN #IMPLIED
              %midmatter;>
<!-- If FMP contains a %mobj; then this is the assertion, 
     if it contains (assumption*,conclusion*), then it is a 
     logical sequent (A1,...,An |- C1,...,Cm): 
     all the Ai entail one of the Ci -->

<!ELEMENT assumption (CMP*,(%mobj;)?)>
<!ATTLIST assumption %idmatter;>

<!ELEMENT conclusion (CMP*,(%mobj;)?)>
<!ATTLIST conclusion %idmatter;>

<!ELEMENT axiom %cfm;>
<!ATTLIST axiom %idgmatter;>

<!-- Definitions contain CMPs,  FMPs and concept specifications. 
     The latter define the set of concepts defined in this element. 
     They can be reached under this name in the content dictionary 
     of the name specified in the theory attribute of the definition. 
   -->

<!ELEMENT definition (metadata?,CMP*,(FMP|requation+|%mobj;)?,
                      measure?,ordering?)>
<!ATTLIST definition just-by CDATA #IMPLIED
                     type  %definitiontype; "simple"
                     generated-by CDATA #IMPLIED
		     %idrefmatter;>
 <!-- attribute just-by is an URIref points to an assertion -->

<!ELEMENT requation (pattern,value)>
<!ATTLIST requation %idimatter;>

<!ELEMENT pattern (%mobj;)>
<!ELEMENT value (%mobj;)>

<!ELEMENT measure (%mobj;)>
<!ATTLIST measure %midmatter;>

<!ELEMENT ordering (%mobj;)>
<!ATTLIST ordering %midmatter;>

<!-- adts are abstract data types, they are short forms for 
      groups of symbols and their definitions, therefore, 
      they have much the same attributes. -->

<!ELEMENT adt (metadata?,commonname*,CMP*,sortdef+)>
<!ATTLIST adt type (loose|generated|free) "loose"
              %idmatter;>

<!ELEMENT sortdef (commonname*,(constructor|insort)*)>
<!ATTLIST sortdef %idmatter;
    		  scope (global|local) "global">

<!ELEMENT insort EMPTY>
<!ATTLIST insort for CDATA #REQUIRED>
<!-- for is a reference to a sort symbol element  -->

<!ELEMENT constructor (commonname*,argument*,recognizer?)>
<!ATTLIST constructor %insymbolmatter;>

<!ELEMENT recognizer (commonname)*>
<!ATTLIST recognizer %insymbolmatter;>

<!ELEMENT argument (selector?)>
<!ATTLIST argument sort CDATA #REQUIRED>
<!-- sort is a reference to a sort symbol element  -->

<!ELEMENT selector (commonname)*>
<!ATTLIST selector %insymbolmatter;
                   total (yes|no) "no">

<!ELEMENT assertion %cfm;>
<!ATTLIST assertion %idgmatter;
                    theory NMTOKEN #IMPLIED
                    type %assertiontype; "conjecture"
                    proofs CDATA #IMPLIED>
<!-- the %assertiontype; has no formal meaning yet, it is solely 
     for human consumption. The 'generated-by' is for 
     theory-interpretations, which can  generate assertions. 
     'proofs' is a list of URIRefs -->
     
<!ELEMENT alternative (metadata?,CMP*,(FMP|requation*|%mobj;))>
<!ATTLIST alternative theory NMTOKEN #REQUIRED
                      type  %definitiontype; "simple"
                      generated-by CDATA #IMPLIED
                      just-by CDATA #IMPLIED           
                      entailed-by CDATA #REQUIRED      
                      entails CDATA #REQUIRED          
                      entailed-by-thm CDATA #REQUIRED  
                      entails-thm CDATA #REQUIRED      
                      %idrefmatter;>
<!-- the CDATA attributes are URIrefs
     just-by, points to the theorem justifying well-definedness
     entailed-by, entails, point to other (equivalent definitions
     entailed-by-thm, entails-thm point to the theorems justifying
     the entailment relation -->


<!-- OMDoc proofs consist of sequences of steps. The 'for' attribute  
     specifies the assertion  it is for. -->

<!ELEMENT proof (metadata?,symbol*,CMP*,
                 (metacomment|derive|hypothesis)*,conclude)>
<!ATTLIST proof theory NMTOKEN #IMPLIED
                %idrefmatter;>

<!ELEMENT proofobject (%cm;,%mobj;)>
<!ATTLIST proofobject theory NMTOKEN #IMPLIED
                      %idrefmatter;>

<!ELEMENT metacomment (CMP*)>
<!ATTLIST metacomment %idimatter;>

<!ENTITY % justmatter "method?,premise*,(proof|proofobject)?">

<!ELEMENT derive (CMP*,FMP?,%justmatter;)>
<!ATTLIST derive %idmatter;>

<!ELEMENT conclude (CMP*,%justmatter;)>
<!ATTLIST conclude %idimatter;>

<!ELEMENT hypothesis (symbol*,CMP*,FMP?)>
<!ATTLIST hypothesis %idmatter;
                     discharged-in CDATA #REQUIRED>
<!-- the 'discharged-in' attribute points to the 'derive' or 
     'conclude' element that discharges this hypothesis. 
     The intended semantics is that the hypothesis will be 
     local in the subtree rooted at that. -->

<!ELEMENT method ((%mobj;)*)>
<!ATTLIST method xref CDATA #REQUIRED>
<!-- 'xref' is a pointer to the element defining the method -->

<!ELEMENT premise EMPTY>
<!ATTLIST premise xref CDATA #REQUIRED
                  rank CDATA "0">
<!-- The rank of a premise specifies its importance in the 
     inference rule. Rank 0 (the default) is a real premise, 
     whereas positive rank signifies sideconditions of 
     varying degree. -->

<!ELEMENT example (metadata?,symbol*,CMP*,(%mobj;)?)>
<!ATTLIST example type (for|against) #IMPLIED
                  assertion CDATA #IMPLIED 
                  %idrefmatter;>
<!-- attributes assertion is an URIref -->

<!-- =========== Theories [1; sec 3.2] ==================== --> 

<!ELEMENT theory (metadata?,commonname*,CMP*, (%intheoryitem;)*)>
<!ATTLIST theory id ID #REQUIRED
                 style NMTOKEN #IMPLIED>
<!-- theory identifiers should be unique per document -->

<!ELEMENT imports (CMP*,morphism?)>
<!ATTLIST imports %frommatter;
                  hiding CDATA #IMPLIED
                  type (local|global) "global">
<!-- hiding is a list of references to symbol ids -->

<!ELEMENT morphism (requation*)>
<!ATTLIST morphism %idimatter;
                   base CDATA #IMPLIED> 
<!-- base points to some other morphism it extends -->

<!ELEMENT inclusion EMPTY>
<!ATTLIST inclusion via CDATA #REQUIRED 
                    %midmatter;>
<!-- via points to a theory-inclusion -->

<!ELEMENT theory-inclusion (%cfm;,morphism?)>
<!ATTLIST theory-inclusion %fromtomatter;>
<!-- attribute by is a whitespace-separated  list of URIref -->

<!ELEMENT decomposition EMPTY>
<!ATTLIST decomposition %idrefmatter;
                        links CDATA #REQUIRED>            
<!-- attribute 'for' points to a 'theory-inclusion', which this 
     element justifies; attribute 'links' is an URIrefs, points to a 
     list of axiom-inlcusions and theory-inclusions -->

<!ELEMENT axiom-inclusion (%cfm;,morphism?,(path-just|obligation*))>
<!ATTLIST axiom-inclusion %fromtomatter;>

<!ELEMENT path-just EMPTY>
<!ATTLIST path-just local CDATA #REQUIRED     
                    globals CDATA #REQUIRED  
                    %midmatter;>              
<!-- attribute 'local' is an URIref, points to axiom-inclusion
               'globals' is an URIrefs, points to a list of 
                         theory-inclusions -->

<!ELEMENT obligation EMPTY>
<!ATTLIST obligation induced-by CDATA #REQUIRED
                     assertion CDATA #REQUIRED  
                     %midmatter;>
<!-- attribute 'assertion' is a URIref, points to  an assertion
     that is the proof obligation induced by the axiom or definition 
     specified by 'induced-by. -->

<!-- ========== Auxiliary Elements [1; sec 3.3] ==================== --> 

<!ELEMENT exercise (%cfm;,hint?,(solution*|mc*))>
<!ATTLIST exercise %idrefmatter;>

<!ELEMENT hint %cfm;>
<!ATTLIST hint %idimatter;>

<!ELEMENT solution (%cm;,(FMP|proof))>
<!ATTLIST solution for CDATA #IMPLIED
		   %idimatter;>

<!ELEMENT mc (symbol*,choice,hint?,answer)>
<!ATTLIST mc %idimatter;>

<!ELEMENT choice %cfm;>
<!ATTLIST choice %idimatter;>

<!ELEMENT answer %cfm;>
<!ATTLIST answer verdict (true|false) #REQUIRED
                 %idimatter;>

<!ELEMENT omlet (%inCMP;)*>
<!ATTLIST omlet %idimatter;
	        action NMTOKEN #IMPLIED
	        type NMTOKEN #IMPLIED
	        data CDATA #IMPLIED
	        argstr CDATA #IMPLIED
		function CDATA #IMPLIED
                width CDATA #IMPLIED
		height CDATA #IMPLIED
                %omdocns;> 
<!-- atribute action specifies the action to be taken when activated,
     attribute data is a URIref to data in a private element
     attribute argstr is a string of arguments supplied to the function 
     attribute function is an URIref, points to a code element 
     attribute width/height for screen display -->

<!ENTITY % privmatter "%idmatter;
                  for CDATA #IMPLIED
                  theory CDATA #IMPLIED
                  pto NMTOKENS #IMPLIED
                  pto-version NMTOKENS #IMPLIED
		  type NMTOKEN #IMPLIED
                  requires CDATA #IMPLIED">

<!ELEMENT private (metadata?,data+)>
<!ATTLIST private %privmatter;
                  replaces CDATA #IMPLIED>
<!-- 'replaces is a URIref to the omdoc elements that are replaced by the 
     system-specific information in this element -->

<!ELEMENT code (metadata?,data+,input?,output?,effect?)>
<!ATTLIST code %privmatter;
   	       classid CDATA #IMPLIED
	       codebase CDATA #IMPLIED>

<!ELEMENT input (CMP*,FMP*)>
<!ATTLIST input %midmatter;>

<!ELEMENT output (CMP*,FMP*)>
<!ATTLIST output %midmatter;>

<!ELEMENT effect (CMP*,FMP*)>
<!ATTLIST effect %midmatter;>

<!ELEMENT data ANY>
<!ATTLIST data %midmatter;
               format CDATA #IMPLIED
               href CDATA #IMPLIED
               size CDATA #IMPLIED>

<!-- this element can be used in lieu of a comment, it is read 
     by the style sheet, (comments are not) and can therefore 
     be transformed by them -->
<!ELEMENT ignore ANY>
<!ATTLIST ignore type NMTOKEN #IMPLIED
                 comment CDATA #IMPLIED>

<!-- =========== Presentation [1; sec 3.5] ===================== --> 

<!ENTITY % crossreftype "(no|yes|brackets|separator|lbrack|rbrack|all)">
<!ENTITY % fixitytype "(prefix|infix|postfix|assoc)">

<!ENTITY % stylematter "%idimatter; xref CDATA #IMPLIED">
 
<!ENTITY % formatmatter "format CDATA #REQUIRED
                         requires CDATA #IMPLIED
                         xml:lang CDATA #IMPLIED">

<!ELEMENT presentation (use|xslt|style)*>
<!ATTLIST presentation %stylematter;
                       for CDATA #REQUIRED
                       parent (OMA|OMBIND|OMATTR) #IMPLIED
                       fixity %fixitytype; "prefix"
                       lbrack CDATA "("
                       rbrack CDATA ")"
                       separator CDATA ","
                       bracket-style (lisp|math) "math"
		       precedence NMTOKEN #IMPLIED
		       crossref-symbol  %crossreftype; "yes"
                       theory CDATA #IMPLIED>

<!ELEMENT use (#PCDATA)>
<!ATTLIST use %formatmatter;
              bracket-style (lisp|math) #IMPLIED
              fixity %fixitytype; #IMPLIED
              lbrack CDATA #IMPLIED
              rbrack CDATA #IMPLIED
              larg-group CDATA #IMPLIED
              rarg-group CDATA #IMPLIED
              separator CDATA #IMPLIED
              element CDATA #IMPLIED
              attributes CDATA #IMPLIED
	      crossref-symbol %crossreftype; #IMPLIED>
<!-- the attributes in the <use> element overwrite those in the 
     <presentation> element, therefore, they do not have defaults -->

<!ELEMENT omstyle (xslt|style)*>
<!ATTLIST omstyle %stylematter;
                  for CDATA #IMPLIED
                  element CDATA #REQUIRED>

<!ELEMENT xslt (#PCDATA)>
<!ATTLIST xslt %formatmatter;>
<!-- this element contains xslt in a CDATA section -->

<!ELEMENT style (element|text|recurse|value-of)*>
<!ATTLIST style %formatmatter;>
<!-- this element contains mock xslt expressed in the elements below -->

<!ELEMENT element (attribute|element|text|recurse|value-of)*>
<!ATTLIST element name NMTOKEN #REQUIRED>

<!ELEMENT attribute (#PCDATA|value-of|text)*>
<!ATTLIST attribute name NMTOKEN #REQUIRED>

<!ELEMENT text (#PCDATA)>

<!ELEMENT value-of EMPTY>
<!ATTLIST value-of select CDATA #REQUIRED>

<!ELEMENT recurse EMPTY>
<!ATTLIST recurse select CDATA #IMPLIED>


<!-- ============= Variant OpenMath [1; sec 2.6] ================ --> 

<!--  Now comes a NON-STANDARD (experimental) variant of the 
      OpenMath Object DTD omobj.dtd (see http://www.openmath.org) 

      It is extended with coreferences! (by adding the xlink 
      %idxref; attributes to all open math elements). 
      In particular, it adds the attributes id and xref to 
      OMOBJ OMA OMBIND and OMATTR

      These extensions are licensed by the OpenMath Standard that 
      says that any extension, from which valid OpenMath can be 
      directly be generated is allowed.

      Note that this makes it less restrictive for OMA, OMS and 
      OMV than the original. Maybe this can be changed in a 
      future version by using XML schema. -->

<!ENTITY % omel "OMS|OMV|OMI|OMB|OMSTR|OMF|OMA|OMBIND|OME|OMATTR">
<!ENTITY % idxref "%midmatter; 
                   style NMTOKEN #IMPLIED
                   id ID #IMPLIED 
                   xref IDREF #IMPLIED">  
<!-- attribute xref is an IDREF not an URIref, since we want to 
     allow structure sharing in one document, but not long-distance -->  

<!-- symbol, original OM, links make no sense -->
<!ELEMENT OMS EMPTY>
<!ATTLIST OMS name CDATA #REQUIRED 
              cd CDATA #REQUIRED
              style NMTOKEN #IMPLIED>

<!-- variable original OM, links make no sense -->
<!ELEMENT OMV EMPTY>
<!ATTLIST OMV name CDATA #REQUIRED
              style NMTOKEN #IMPLIED>

<!-- integer; links make sense, since integers can be big -->
<!ELEMENT OMI (#PCDATA)>
<!ATTLIST OMI %idxref;>

<!-- byte array; links make sense, since byte arrays can be big -->
<!ELEMENT OMB (#PCDATA) >
<!ATTLIST OMB %idxref;>

<!-- string; links make sense, since strings can be big -->
<!ELEMENT OMSTR (#PCDATA) >
<!ATTLIST OMSTR %idxref;>

<!-- floating point; links make sense, since Integers can be big -->
<!ELEMENT OMF EMPTY>
<!ATTLIST OMF dec CDATA #IMPLIED
              hex CDATA #IMPLIED
	      %idxref;>

<!-- apply constructor; links make sense, no copied substructure -->
<!ELEMENT OMA (%omel;)*>
<!ATTLIST OMA %idxref;>

<!-- binding constructor & variable; links make sense, 
     no copied substructure -->
<!ELEMENT OMBIND ((%omel;), OMBVAR, (%omel;))? >
<!ATTLIST OMBIND %idxref;>

<!-- bound variables, original OM, links make no sense -->
<!ELEMENT OMBVAR (OMV|OMATTR)+>

<!-- error; original OM, links make no sense -->
<!ELEMENT OME (OMS, (%omel;)* ) >

<!-- attribution constructor & attribute pair constructor -->
<!ELEMENT OMATTR (OMATP, (%omel;))? >
<!ATTLIST OMATTR %idxref;>

<!ELEMENT OMATP (OMS, (%omel;))+ >

<!-- OM object constructor; links make sense to avoid copying 
     substructure -->
<!ELEMENT OMOBJ (%omel;)? >
<!ATTLIST OMOBJ xmlns CDATA #FIXED 'http://www.openmath.org/OpenMath'
                %idxref;>

<!-- ======= Dublin Core Metadata [1; sec 2.2.2 & app C] ======== --> 

<!-- OMDoc Metadata comes in two forms: 
     1) Bibliographic Metadata corresponding to the model of the
        Dublin Metadata initiative (http://purl.org/DC) 
     2) other, mostly guided by the intuitions of the MBase system 
  -->

<!ENTITY % dcelement "Contributor | Creator | Subject | Title  
                    | Description | Publisher | Date | Type | Format 
                    | Identifier | Source | Language | Relation | Rights">

<!ENTITY % dcns "xmlns CDATA #FIXED 'http://purl.org/DC'">
<!ENTITY % dcidi "%dcns; %idimatter;">
<!ENTITY % dcrole "%dcidi;  %langmatter;
           role (aut|ant|clb|edt|ths|trc|trl) 'aut'">
<!ENTITY % dclang "%dcns; %langmatter;">

<!ELEMENT metadata ((%dcelement;)*,extradata?)>
<!ATTLIST metadata %idimatter; inherits CDATA #IMPLIED>

<!-- first the Dublin Core Metadata model of the
     Dublin Metadata initiative (http://purl.org/dc) -->

<!ELEMENT Contributor %DCperson;><!ATTLIST Contributor %dcrole;>
<!ELEMENT Creator %DCperson;><!ATTLIST Creator %dcrole;>
<!ELEMENT Title (%inCMP;)*><!ATTLIST Title %dclang;>
<!ELEMENT Subject (%inCMP;)*><!ATTLIST Subject %dclang;>
<!ELEMENT Description (%inCMP;)*><!ATTLIST Description %dclang;>
<!ELEMENT Publisher %DCrest;><!ATTLIST Publisher %dcidi;>
<!ELEMENT Type %DCrest;><!ATTLIST Type %dcns;>
<!ELEMENT Format %DCrest;><!ATTLIST Format %dcns;>
<!ELEMENT Source %DCrest;><!ATTLIST Source %dcns;>
<!ELEMENT Language %DCrest;><!ATTLIST Language %dcns;>
<!ELEMENT Relation %DCrest;><!ATTLIST Relation %dcns;>
<!ELEMENT Rights %DCrest;><!ATTLIST Rights %dcns;>

<!ELEMENT Date %DCdate;>
<!ATTLIST Date %dcns; action NMTOKEN #IMPLIED who IDREF #IMPLIED>

<!ELEMENT Identifier %DCident;>
<!ATTLIST Identifier %dcns; scheme NMTOKEN "ISBN">

<!-- other metadata that is not bibliographic can be included in the 
     <extradata> element, declare any needed XML elements in the 
     internal subset of the DTD declaration --> 
<!ELEMENT extradata %extrameta;> 

<!-- =============== omdoc.dtd ends here  ==================== -->
